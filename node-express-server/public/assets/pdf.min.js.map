{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","deprecated","details","Window","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","error","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","shadow","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","static","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","options","dots","tryConvertEncoding","stringToUTF8String","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","WorkerGlobalScope","self","console","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","replaceInvisible","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","utf8StringToString","unescape","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","InvisibleCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","r","g","b","m1","m2","p","m","d","p1","p2","p3","p4","transpose","a","c","first","sx","sy","rect1","rect2","compare","orderedX","sort","orderedY","result","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","mt","j","jlen","escape","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","baseHref","params","rangeTransport","worker","href","location","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","idCounters","doc","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_this$_transport","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","stats","streamTypes","fontTypes","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","set","annotations","annotation","_jsActionsPromise","getPageJSActions","_this$_transport$_htm","children","render","canvasContext","viewport","annotationMode","AnnotationMode","imageLayer","canvasFactory","background","backgroundColorToReplace","optionalContentConfigPromise","annotationCanvasMap","_arguments$","_arguments$2","arguments","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","RenderingIntentFlag","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","getXfa","xfa","XfaText","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","streamReader","setTimeout","curCacheKey","curIntentState","delete","LoopbackPort","_listeners","_deferred","postMessage","event","cloneValue","object","structuredClone","transfers","cloned","WeakMap","fallbackCloneValue","byteOffset","val","desc","_value$hasOwnProperty","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","_document$currentScri","pdfjsFilePath","wrapper","_workerPorts","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","WorkerMessageHandler","workerHandler","has","_globalThis$pdfjsWork","_setupFakeWorkerGlobal","loader","mainWorkerMessageHandler","eval","docStats","pageCache","pagePromises","metadataPromise","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","AnnotationStorage","isOpList","lastModified","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","_loadingTask$onProgre","_loadingTask$onProgre2","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","_loadingTask$onProgre3","exportedData","_globalThis$FontInspe","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","_imageData$data","pageProxy","MAX_IMAGE_SIZE_TO_STORE","_loadingTask$onProgre4","freeze","featureId","_this$loadingTask$onU","_this$loadingTask","call","cachedPromise","_this$_fullReader","serializable","results","OptionalContentConfig","_this$_fullReader2","_this$_fullReader3","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","_globalThis$StepperMa","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","_this$_document","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_timeStamp","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","isDefaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","intersect","Infinity","getClippedPathBoundingBox","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","layerBox","layerOffsetX","layerOffsetY","layerWidth","layerHeight","genericComposeSMask","maskCtx","subtype","backdrop","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","chunkSize","row","chunkHeight","getImageSmoothingEnabled","interpolate","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","inverseTransform","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","normalizeRect","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","checkSMaskState","inSMaskMode","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","mirrorContextOperations","_removeMirroring","bezierCurveTo","beginPath","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","__originalResetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","cp1x","cp1y","cp2x","cp2y","compose","dirtyBox","clearRect","startX","startY","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","draw","needRestore","paths","pendingTextPaths","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","strokeStyle","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","currentCtx","group","isolated","knockout","currentTransform","canvasBounds","scaleX","scaleY","groupCtx","startTransformInverse","imageSmoothingEnabled","currentMtx","getAxialAlignedBoundingBox","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","colorStop","ownerBBox","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","maxSize","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_this$_fullRequestRea","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","output","walk","node","_node$attributes","child","_scripting_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","titleObj","modificationDate","contentsObj","richText","hideWrapper","_renderQuadrilaterals","quadrilateral","className","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","platform","isWin","isMac","isTooltipOnly","resetForm","actions","Action","_linkService$addLinkA","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","_this$linkService$eve","eventBus","dispatch","detail","onclick","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","valueAsString","Event","_this$linkService$eve2","_parameters$data$titl","_parameters$data$cont","_parameters$data$rich","hasPopup","toLowerCase","JSON","alternativeText","title","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","_this$linkService$eve3","eventName","valueGetter","shiftKey","modifier","_this$linkService$eve4","checked","_setEventListeners","_this$data$actions","getter","_setBackgroundColor","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","storedData","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","readOnly","defaultFieldValue","blurListener","_this$data$actions2","activeElement","selRange","selStart","selEnd","_this$linkService$eve5","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","_this$linkService$eve6","Keystroke","_this$linkService$eve7","change","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","checkbox","curChecked","buttonValue","radio","emitMessage","pdfButtonValue","fieldvalue","fontSizeStyle","selectElement","combo","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","multipleSelection","selected","indices","editable","_this$linkService$eve8","changeEx","keyDown","_parameters$data$titl2","_parameters$data$cont2","_parameters$data$rich2","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","_this$richText","_this$contentsObj","hideElement","BACKGROUND_ENLIGHT","dir","dateObject","stringify","toLocaleDateString","toLocaleTimeString","contents","_formatContents","XfaLayer","xfaHtml","html","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","_parameters$data$titl3","_parameters$data$cont3","_parameters$data$rich3","_parameters$data$titl4","_parameters$data$cont4","_parameters$data$rich4","append","_parameters$data$titl5","_parameters$data$cont5","_parameters$data$rich5","borderWidth","square","_parameters$data$titl6","_parameters$data$cont6","_parameters$data$rich6","circle","_parameters$data$titl7","_parameters$data$cont7","_parameters$data$rich7","containerClassName","svgElementName","coordinate","vertices","polyline","_parameters$data$titl8","_parameters$data$cont8","_parameters$data$rich8","_parameters$data$titl9","_parameters$data$cont9","_parameters$data$rich9","inkList","inkLists","_parameters$data$titl10","_parameters$data$cont10","_parameters$data$rich10","_parameters$data$titl11","_parameters$data$cont11","_parameters$data$rich11","_parameters$data$titl12","_parameters$data$cont12","_parameters$data$rich12","_parameters$data$titl13","_parameters$data$cont13","_parameters$data$rich13","_parameters$data$titl14","_parameters$data$cont14","_parameters$data$rich14","_this$linkService$eve9","content","file","_this$data$titleObj","_this$data$contentsOb","_download","_this$downloadManager","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","registerAcroformAnnotations","rendered","renderedElement","setAnnotationCanvasMap","ownMatrix","elements","ownTransform","firstChild","makeColorComp","G","components","RGB_HTML","CMYK_RGB","xfaOn","xfaOff","attributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","setupStorage","rootHtml","setAttributes","stack","rootDiv","textDivs","_child$attributes","parent","childHtml","xmlns","el","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","expand","_viewport","expanded","expandBounds","boxes","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","_current$txtElement","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","_pendingRequest$onPro","_pendingRequest$onErr","xhrStatus","expectedStatus","_pendingRequest$onErr2","getArrayBuffer","rangeHeader","_pendingRequest$onErr3","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_this$onProgress","_requestId","onClosed","_close","_this$onClosed","_this$onProgress2","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nconst PixelsPerInch = {\n  CSS: 96.0,\n  PDF: 72.0,\n\n  /** @type {number} */\n  get PDF_TO_CSS_UNITS() {\n    return shadow(this, \"PDF_TO_CSS_UNITS\", this.CSS / this.PDF);\n  },\n};\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLAnchorElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function (error) {\n      Window['ngxConsole'].log(error);\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  Window['ngxConsole'].log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    if (typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope) {\n      console.log(`Info: ${msg}`);\n    } else if (Window && Window['ngxConsole']) {\n      Window['ngxConsole'].log(`Info: ${msg}`);\n    } else {\n      console.log(`Info: ${msg}`);\n    }\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    if (typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope) {\n      console.log(`Warning: ${msg}`);\n    } else if (Window && Window[\"ngxConsole\"]) {\n      Window[\"ngxConsole\"].log(`Warning: ${msg}`);\n    } else {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00+/g;\nconst InvisibleCharactersRegExp = /[\\x01-\\x1F]/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str, replaceInvisible = false) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  if (replaceInvisible) {\n    str = str.replace(InvisibleCharactersRegExp, \" \");\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const baseHref = src.baseHref;\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            // #929/#813 modified by ngx-extended-pdf-viewer\n            // to restore the drag'n'drop functionality\n            if (baseHref) {\n              params[key] = new URL(value, window.location.origin + baseHref).href;\n            } else {\n              params[key] = new URL(value, window.location).href;\n            }\n            // #929/#813 end of modification\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static get idCounters() {\n    return shadow(this, \"idCounters\", { doc: 0 });\n  }\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.idCounters.doc++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n\n      Object.defineProperty(this, \"getStats\", {\n        value: async () => {\n          deprecated(\n            \"`PDFDocumentProxy.getStats`, \" +\n              \"please use the `PDFDocumentProxy.stats`-getter instead.\"\n          );\n          return this.stats || { streamTypes: {}, fontTypes: {} };\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @type {PDFDocumentStats | null} The current statistics about document\n   *   structures, or `null` when no statistics exists.\n   */\n  get stats() {\n    return this._transport.stats;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    backgroundColorToReplace = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n        backgroundColorToReplace,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(object) {\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        globalThis.structuredClone\n      ) {\n        return globalThis.structuredClone(object, transfers);\n      }\n\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      function fallbackCloneValue(value) {\n        if (\n          typeof value === \"function\" ||\n          typeof value === \"symbol\" ||\n          value instanceof URL\n        ) {\n          throw new Error(\n            `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n          );\n        }\n\n        if (typeof value !== \"object\" || value === null) {\n          return value;\n        }\n        if (cloned.has(value)) {\n          // already cloned the object\n          return cloned.get(value);\n        }\n        let buffer, result;\n        if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n          // We found object with ArrayBuffer (typed array).\n          if (transfers?.includes(buffer)) {\n            result = new value.constructor(\n              buffer,\n              value.byteOffset,\n              value.byteLength\n            );\n          } else {\n            result = new value.constructor(value);\n          }\n          cloned.set(value, result);\n          return result;\n        }\n        if (value instanceof Map) {\n          result = new Map();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const [key, val] of value) {\n            result.set(key, fallbackCloneValue(val));\n          }\n          return result;\n        }\n        if (value instanceof Set) {\n          result = new Set();\n          cloned.set(value, result); // Adding to cache now for cyclic references.\n          for (const val of value) {\n            result.add(fallbackCloneValue(val));\n          }\n          return result;\n        }\n        result = Array.isArray(value) ? [] : Object.create(null);\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        // Cloning all value and object properties, however ignoring properties\n        // defined via getter.\n        for (const i in value) {\n          let desc,\n            p = value;\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n            p = Object.getPrototypeOf(p);\n          }\n          if (typeof desc.value === \"undefined\") {\n            continue;\n          }\n          if (typeof desc.value === \"function\") {\n            if (i === 'cMapUrl') {\n              result[i] = cloneValue(desc.value());\n            } else if (!value.hasOwnProperty?.(i)) {\n              continue;\n            }\n          }\n          result[i] = fallbackCloneValue(desc.value);\n        }\n        return result;\n      }\n\n      const cloned = new WeakMap();\n      return fallbackCloneValue(object);\n    }\n\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static get _workerPorts() {\n    return shadow(this, \"_workerPorts\", new WeakMap());\n  }\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker._workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker._workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array([255]);\n          // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n          // typed array. Also, checking if we can use transfers.\n          try {\n            messageHandler.send(\"test\", testObj, [testObj.buffer]);\n          } catch (ex) {\n            warn(\"Cannot use postMessage transfers.\");\n            testObj[0] = 0;\n            messageHandler.send(\"test\", testObj);\n          }\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker._workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this._workerPorts.has(params.port)) {\n      return this._workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #docStats = null;\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let lastModified = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        lastModified = this.annotationStorage.lastModified;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${lastModified}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      // Ensure that a `PDFDocumentProxy.stats` call-site cannot accidentally\n      // modify this internal data.\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes),\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      ref,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return (this.#metadataPromise ||= this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      }));\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static get canvasInUse() {\n    return shadow(this, \"canvasInUse\", new WeakSet());\n  }\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background, backgroundColorToReplace} =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n      backgroundColorToReplace,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    window.ngxZone.runOutsideAngular(() => {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    });\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._timeStamp = Date.now();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          // ngx-extended-pdf-viewer #1054 consider values from\n          // window.getFormValues as default value\n          this.setValue(key, undefined, obj, undefined, true); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    if (obj === undefined) {\n      return defaultValue;\n    }\n    return Object.assign(defaultValue, obj);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718, #1054 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined, isDefaultValue = false) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      // #1054 modified by ngx-extended-pdf-viewer\n      if (!isDefaultValue) {\n        modified = true;\n      }\n      // #1054 end of modification by ngx-extended-pdf-viewer\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._timeStamp = Date.now();\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get lastModified() {\n    return this._timeStamp.toString();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and shedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    this.updatePathMinMax(transform, box[0], box[1]);\n    this.updatePathMinMax(transform, box[2], box[3]);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n    let destPos = 3; // alpha component offset\n    for (let j = 0; j < thisChunkHeight; j++) {\n      let elem,\n        mask = 0;\n      for (let k = 0; k < width; k++) {\n        if (!mask) {\n          elem = src[srcPos++];\n          mask = 128;\n        }\n        dest[destPos] = elem & mask ? 0 : 255;\n        destPos += 4;\n        mask >>= 1;\n      }\n    }\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = \"#000000\";\n  ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null, // #916 modified by ngx-extended-pdf-viewer\n    backgroundColorToReplace = null, // #916 modified by ngx-extended-pdf-viewer\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    this.ctx.save();\n    // #916 modified by ngx-extended-pdf-viewer\n    if (typeof background === \"function\") {\n      background({ context: this.ctx, width, height });\n    } else {\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.background = background;\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n    this.ctx.restore();\n    this.backgroundColorToReplace = backgroundColorToReplace;\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n    this._combinedScaleFactor = Math.hypot(\n      this.baseTransform[0],\n      this.baseTransform[2]\n    );\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n//        console.log(this[fnId].toString().split(\"\\n\")[0]); // useful for debugging\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.current.activeSMask !== null) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const maskCanvas = this.cachedCanvases.getCanvas(\n      \"maskCanvas\",\n      width,\n      height\n    );\n    const maskCtx = maskCanvas.context;\n    putBinaryImageMask(maskCtx, img);\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n    const objToCanvas = ctx.mozCurrentTransform;\n    let maskToCanvas = Util.transform(objToCanvas, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.ceil(rect[2] - rect[0]);\n    const drawnHeight = Math.ceil(rect[3] - rect[1]);\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const fillCtx = fillCanvas.context;\n    // The offset will be the top-left cordinate mask.\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n    // Pre-scale if needed to improve image smoothing.\n    const scaled = this._scaleImage(\n      maskCanvas.canvas,\n      fillCtx.mozCurrentTransformInverse\n    );\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n    fillCtx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.img.width,\n      scaled.img.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = !!this.suspendedCtx;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.suspendedCtx) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.suspendedCtx) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.current.activeSMask = null;\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    this.ctx.save();\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.current.activeSMask) {\n      this.endSMaskMode();\n    }\n\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      this.ctx.restore();\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, xw, yh);\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          current.updatePathMinMax(ctx.mozCurrentTransform, x, y);\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            ctx.mozCurrentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        const lineWidth = this.getSinglePixelWidth();\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        // Prevent drawing too thin lines by enforcing a minimum line width.\n        ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n        ctx.stroke();\n        ctx.restore();\n      } else {\n        const lineWidth = this.getSinglePixelWidth();\n        if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n          // The current transform will transform a square pixel into a\n          // parallelogram where both heights are lower than 1 and not equal.\n          ctx.save();\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n        }\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    // #916 modified by ngx-extended-pdf-viewer\n    let draw = true;\n    let fillColor = this.current.fillColor;\n\n    if (this.backgroundColorToReplace) {\n      if (fillColor === this.backgroundColorToReplace) {\n        if (this.background && typeof this.background !== 'function') {\n          fillColor = this.background;\n        } else {\n          // do not draw the color\n          draw = false;\n        }\n      }\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n\n\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    // #916 modified by ngx-extended-pdf-viewer\n    if (draw) {\n      if (this.contentVisible && intersect !== null) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n      // #916 end of modification by ngx-extended-pdf-viewer\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n        }\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (resetLineWidthToOne) {\n          ctx.save();\n          ctx.moveTo(x, y);\n          ctx.resetTransform();\n          ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          ctx.strokeText(character, 0, 0);\n          ctx.restore();\n        } else {\n          ctx.strokeText(character, x, y);\n        }\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    let resetLineWidthToOne = false;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        this._cachedGetSinglePixelWidth = null;\n        lineWidth = this.getSinglePixelWidth();\n        resetLineWidthToOne = lineWidth < 0;\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (isNum(glyph)) {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(\n            character,\n            scaledX,\n            scaledY,\n            patternTransform,\n            resetLineWidthToOne\n          );\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (isNum(glyph)) {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    // #916 modified by ngx-extended-pdf-viewer\n    let color = Util.makeHexColor(r, g, b);\n    if (this.backgroundColorToReplace) {\n      if (color === this.backgroundColorToReplace) {\n        if (this.background && typeof this.background !== 'function') {\n          color = this.background;\n        } else {\n          // let's hope the fill() function is called,\n          // because it checks whether the color is to be rendered\n\t\t  // this.ctx.globalAlpha = 0; // old approach with side effects\n        }\n      }\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[0],\n        bbox[1]\n      );\n      this.current.updatePathMinMax(\n        this.ctx.mozCurrentTransform,\n        bbox[2],\n        bbox[3]\n      );\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    const suspendedCtx = this.suspendedCtx;\n    if (this.current.activeSMask) {\n      this.suspendedCtx = null;\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push({\n      ctx: currentCtx,\n      suspendedCtx,\n    });\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const { ctx, suspendedCtx } = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (suspendedCtx) {\n      this.suspendedCtx = suspendedCtx;\n    }\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        canvas.style.width = `calc(${width}px * var(--viewport-scale-factor))`;\n        canvas.style.height = `calc(${height}px * var(--viewport-scale-factor))`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const width = img.width,\n      height = img.height;\n\n    const glyph = this.processingType3;\n\n    if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n      if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n        glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n      } else {\n        glyph.compiled = null;\n      }\n    }\n\n    if (glyph?.compiled) {\n      glyph.compiled(ctx);\n      return;\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    imgData,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(imgData);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = objId.startsWith(\"g_\")\n      ? this.commonObjs.get(objId)\n      : this.objs.get(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n    ctx.drawImage(\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: width / ctx.mozCurrentTransformInverse[0],\n        height: height / ctx.mozCurrentTransformInverse[3],\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      ctx.drawImage(\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (this.pendingClip === EO_CLIP) {\n        ctx.clip(\"evenodd\");\n      } else {\n        ctx.clip();\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (this._cachedGetSinglePixelWidth === null) {\n      // If transform is [a b] then a pixel (square) is transformed\n      //                 [c d]\n      // into a parallelogram: its area is the abs value of the determinant.\n      // This parallelogram has 2 heights:\n      //  - Area / |col_1|;\n      //  - Area / |col_2|.\n      // so in order to get a height of at least 1, pixel height\n      // must be computed as followed:\n      //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n      // This is equivalent to:\n      //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n      const m = this.ctx.mozCurrentTransform;\n\n      const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n      const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n      const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n      const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n      if (sqNorm1 !== sqNorm2 && this._combinedScaleFactor * pixelHeight > 1) {\n        // The parallelogram isn't a square and at least one height\n        // is lower than 1 so the resulting line width must be 1\n        // but it cannot be achieved with one scale: when scaling a pixel\n        // we'll get a rectangle (see issue #12295).\n        // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n        // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n        // then we'll get a rectangle 1x1e5 which is wrong.\n        // In this case, we must reset the transform, set linewidth to 1\n        // and then stroke.\n        this._cachedGetSinglePixelWidth = -(\n          this._combinedScaleFactor * pixelHeight\n        );\n      } else if (absDet > Number.EPSILON) {\n        this._cachedGetSinglePixelWidth = pixelHeight;\n      } else {\n        // Matrix is non-invertible.\n        this._cachedGetSinglePixelWidth = 1;\n      }\n    }\n\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  warn,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      throw new Error(\n        'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n      );\n    }\n    warn('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n    return reason;\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPageProxy} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"LinkAnnotationElement.render - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value, valueAsString: value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id,  this.data.fieldName, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue || \"\";\n        element.value = elementData.userValue = defaultValue;\n        delete elementData.formattedValue;\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, `${this.data.fieldName}/${this.data.exportValue}`, { // #718 modified by ngx-extended-pdf-viewer\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id,\n          this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n          { value: curChecked });\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: checked\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, this.data.fieldName, {\n          value: false,\n          emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n        });\n      }\n      storage.setValue(id, this.data.fieldName, {\n        value: checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(\n                radio.id,\n                fieldName, // #718 / #868 modified by ngx-extended-pdf-viewer\n                { value: curChecked }\n              );\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const fieldvalue = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = fieldvalue; // #718 modified by ngx-extended-pdf-viewer\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    // #958 modified by ngx-extended-pdf-viewer\n    if (window.registerAcroformAnnotations) {\n      window.registerAcroformAnnotations(sortedAnnotations);\n    }\n    // #958 end of modification by ngx-extended-pdf-viewer\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { warn } from \"../shared/util.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      if (\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        !linkService.addLinkAttributes\n      ) {\n        warn(\n          \"XfaLayer.setAttribute - missing `addLinkAttributes`-method on the `linkService`-instance.\"\n        );\n      }\n      linkService.addLinkAttributes?.(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the Window['ngxConsole'].\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          const scale = textDivProperties.canvasWidth / width;\n          if (this._enhanceTextSelection) {\n            textDivProperties.scale = scale;\n          }\n          transform = `scaleX(${scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./shared/util.js\":\n  AnnotationMode,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}