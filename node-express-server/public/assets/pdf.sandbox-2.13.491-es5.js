/**
 * @licstart The following is the entire license notice for the
 * Javascript code in this page
 *
 * Copyright 2022 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @licend The above is the entire license notice for the
 * Javascript code in this page
 */

(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("pdfjs-dist/build/pdf.sandbox", [], factory);
	else if(typeof exports === 'object')
		exports["pdfjs-dist/build/pdf.sandbox"] = factory();
	else
		root["pdfjs-dist/build/pdf.sandbox"] = root.pdfjsSandbox = factory();
})(this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {

"use strict";
Object.defineProperty(exports, "__esModule", ({value:true}));exports["default"]=void 0;__w_pdfjs_require__(2);__w_pdfjs_require__(109);__w_pdfjs_require__(119);__w_pdfjs_require__(125);__w_pdfjs_require__(147);__w_pdfjs_require__(148);__w_pdfjs_require__(153);__w_pdfjs_require__(154);__w_pdfjs_require__(155);__w_pdfjs_require__(156);__w_pdfjs_require__(157);__w_pdfjs_require__(158);__w_pdfjs_require__(159);var Module=(()=>{var _scriptDir=typeof document!=='undefined'&&document.currentScript?document.currentScript.src:undefined;return function(Module){Module=Module||{};var b;b||(b=typeof Module!=='undefined'?Module:{});var h=Object.assign,n,q;b.ready=new Promise(function(a,c){n=a;q=c;});var r=h({},b),t="";"undefined"!==typeof document&&document.currentScript&&(t=document.currentScript.src);_scriptDir&&(t=_scriptDir);0!==t.indexOf("blob:")?t=t.substr(0,t.replace(/[?#].*/,"").lastIndexOf("/")+1):t="";var aa=b.print||console.log.bind(console),u=b.printErr||console.warn.bind(console);h(b,r);r=null;var v;b.wasmBinary&&(v=b.wasmBinary);var noExitRuntime=b.noExitRuntime||!0;"object"!==typeof WebAssembly&&x("no native wasm support detected");var y,z=!1;function A(a,c,d,e){var f={string:function(l){var p=0;if(null!==l&&void 0!==l&&0!==l){var T=(l.length<<2)+1;p=B(T);C(l,D,p,T);}return p;},array:function(l){var p=B(l.length);E.set(l,p);return p;}};a=b["_"+a];var g=[],k=0;if(e)for(var m=0;m<e.length;m++){var w=f[d[m]];w?(0===k&&(k=F()),g[m]=w(e[m])):g[m]=e[m];}d=a.apply(null,g);return d=function(l){0!==k&&G(k);return"string"===c?H(l):"boolean"===c?!!l:l;}(d);}var I="undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0;function J(a,c,d){var e=c+d;for(d=c;a[d]&&!(d>=e);)++d;if(16<d-c&&a.subarray&&I)return I.decode(a.subarray(c,d));for(e="";c<d;){var f=a[c++];if(f&128){var g=a[c++]&63;if(192==(f&224))e+=String.fromCharCode((f&31)<<6|g);else{var k=a[c++]&63;f=224==(f&240)?(f&15)<<12|g<<6|k:(f&7)<<18|g<<12|k<<6|a[c++]&63;65536>f?e+=String.fromCharCode(f):(f-=65536,e+=String.fromCharCode(55296|f>>10,56320|f&1023));}}else e+=String.fromCharCode(f);}return e;}function H(a){return a?J(D,a,void 0):"";}function C(a,c,d,e){if(0<e){e=d+e-1;for(var f=0;f<a.length;++f){var g=a.charCodeAt(f);if(55296<=g&&57343>=g){var k=a.charCodeAt(++f);g=65536+((g&1023)<<10)|k&1023;}if(127>=g){if(d>=e)break;c[d++]=g;}else{if(2047>=g){if(d+1>=e)break;c[d++]=192|g>>6;}else{if(65535>=g){if(d+2>=e)break;c[d++]=224|g>>12;}else{if(d+3>=e)break;c[d++]=240|g>>18;c[d++]=128|g>>12&63;}c[d++]=128|g>>6&63;}c[d++]=128|g&63;}}c[d]=0;}}function K(a){for(var c=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++c:c=2047>=e?c+2:65535>=e?c+3:c+4;}return c;}function L(a){var c=K(a)+1,d=M(c);d&&C(a,E,d,c);return d;}var ba,E,D,N;function ca(){var a=y.buffer;ba=a;b.HEAP8=E=new Int8Array(a);b.HEAP16=new Int16Array(a);b.HEAP32=N=new Int32Array(a);b.HEAPU8=D=new Uint8Array(a);b.HEAPU16=new Uint16Array(a);b.HEAPU32=new Uint32Array(a);b.HEAPF32=new Float32Array(a);b.HEAPF64=new Float64Array(a);}var O,da=[],ea=[],fa=[];function ha(){var a=b.preRun.shift();da.unshift(a);}var P=0,Q=null,R=null;b.preloadedImages={};b.preloadedAudios={};function x(a){if(b.onAbort)b.onAbort(a);a="Aborted("+a+")";u(a);z=!0;a=new WebAssembly.RuntimeError(a+". Build with -s ASSERTIONS=1 for more info.");q(a);throw a;}function S(a){return a.startsWith("data:application/octet-stream;base64,");}var U;U="data:application/octet-stream;base64,";if(!S(U)){var ia=U;U=b.locateFile?b.locateFile(ia,t):t+ia;}function ja(){var a=U;try{if(a==U&&v)return new Uint8Array(v);if(S(a))try{var c=ka(a.slice(37)),d=new Uint8Array(c.length);for(a=0;a<c.length;++a)d[a]=c.charCodeAt(a);var e=d;}catch(g){throw Error("Converting base64 string to bytes failed.");}else e=void 0;var f=e;if(f)return f;throw"both async and sync fetching of the wasm failed";}catch(g){x(g);}}function la(){return v||"function"!==typeof fetch?Promise.resolve().then(function(){return ja();}):fetch(U,{credentials:"same-origin"}).then(function(a){if(!a.ok)throw"failed to load wasm binary file at '"+U+"'";return a.arrayBuffer();}).catch(function(){return ja();});}function V(a){for(;0<a.length;){var c=a.shift();if("function"==typeof c)c(b);else{var d=c.B;"number"===typeof d?void 0===c.A?O.get(d)():O.get(d)(c.A):d(void 0===c.A?null:c.A);}}}function W(a){var c=K(a)+1,d=M(c);C(a,D,d,c);return d;}function ma(){}var na=[null,[],[]];function oa(){function a(k){return(k=k.toTimeString().match(/\(([A-Za-z ]+)\)$/))?k[1]:"GMT";}var c=new Date().getFullYear(),d=new Date(c,0,1),e=new Date(c,6,1);c=d.getTimezoneOffset();var f=e.getTimezoneOffset(),g=Math.max(c,f);N[pa()>>2]=60*g;N[qa()>>2]=Number(c!=f);d=a(d);e=a(e);d=L(d);e=L(e);f<c?(N[X()>>2]=d,N[X()+4>>2]=e):(N[X()>>2]=e,N[X()+4>>2]=d);}var ra;ma=(a,c,d)=>{a=H(a);c=null!==c?JSON.parse(H(c)):[];try{const e=b.externalCall(a,c);return e?W(e):null;}catch(e){return b.HEAPU8[d]=1,W(e.message);}};var ka="function"===typeof atob?atob:function(a){var c="",d=0;a=a.replace(/[^A-Za-z0-9\+\/=]/g,"");do{var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));var f="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));var g="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));var k="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(a.charAt(d++));e=e<<2|f>>4;f=(f&15)<<4|g>>2;var m=(g&3)<<6|k;c+=String.fromCharCode(e);64!==g&&(c+=String.fromCharCode(f));64!==k&&(c+=String.fromCharCode(m));}while(d<a.length);return c;},sa={a:function(a,c,d,e){x("Assertion failed: "+H(a)+", at: "+[c?H(c):"unknown filename",d,e?H(e):"unknown function"]);},b:function(){x("");},g:ma,f:function(a,c){a=H(a);let d;try{d=window.JSON.parse(a);}catch(e){d=a;}0!==c?window.alert(a):window.console.log("DUMP",d);},e:function(a){var c=D.length;a>>>=0;if(2147483648<a)return!1;for(var d=1;4>=d;d*=2){var e=c*(1+.2/d);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{y.grow(Math.min(2147483648,e)-ba.byteLength+65535>>>16);ca();var f=1;break a;}catch(g){}f=void 0;}if(f)return!0;}return!1;},d:function(a,c,d,e){for(var f=0,g=0;g<d;g++){var k=N[c>>2],m=N[c+4>>2];c+=8;for(var w=0;w<m;w++){var l=D[k+w],p=na[a];0===l||10===l?((1===a?aa:u)(J(p,0)),p.length=0):p.push(l);}f+=m;}N[e>>2]=f;return 0;},c:function(a){var c=Date.now();N[a>>2]=c/1E3|0;N[a+4>>2]=c%1E3*1E3|0;return 0;},h:function(a,c){ra||(ra=!0,oa());a=new Date(1E3*N[a>>2]);N[c>>2]=a.getSeconds();N[c+4>>2]=a.getMinutes();N[c+8>>2]=a.getHours();N[c+12>>2]=a.getDate();N[c+16>>2]=a.getMonth();N[c+20>>2]=a.getFullYear()-1900;N[c+24>>2]=a.getDay();var d=new Date(a.getFullYear(),0,1);N[c+28>>2]=(a.getTime()-d.getTime())/864E5|0;N[c+36>>2]=-(60*a.getTimezoneOffset());var e=new Date(a.getFullYear(),6,1).getTimezoneOffset();d=d.getTimezoneOffset();a=(e!=d&&a.getTimezoneOffset()==Math.min(d,e))|0;N[c+32>>2]=a;a=N[X()+(a?4:0)>>2];N[c+40>>2]=a;return c;},i:function(a){a=H(a);window.console.log(a);},j:function(a,c,d,e){a=H(a);c=H(c);d=H(d);d="Quickjs -- ".concat(a,": ").concat(c,"\n").concat(d);0!==e?window.alert(d):window.console.error(d);}};(function(){function a(f){b.asm=f.exports;y=b.asm.k;ca();O=b.asm.t;ea.unshift(b.asm.l);P--;b.monitorRunDependencies&&b.monitorRunDependencies(P);0==P&&(null!==Q&&(clearInterval(Q),Q=null),R&&(f=R,R=null,f()));}function c(f){a(f.instance);}function d(f){return la().then(function(g){return WebAssembly.instantiate(g,e);}).then(function(g){return g;}).then(f,function(g){u("failed to asynchronously prepare wasm: "+g);x(g);});}var e={a:sa};P++;b.monitorRunDependencies&&b.monitorRunDependencies(P);if(b.instantiateWasm)try{return b.instantiateWasm(e,a);}catch(f){return u("Module.instantiateWasm callback failed with error: "+f),!1;}(function(){return v||"function"!==typeof WebAssembly.instantiateStreaming||S(U)||"function"!==typeof fetch?d(c):fetch(U,{credentials:"same-origin"}).then(function(f){return WebAssembly.instantiateStreaming(f,e).then(c,function(g){u("wasm streaming compile failed: "+g);u("falling back to ArrayBuffer instantiation");return d(c);});});})().catch(q);return{};})();b.___wasm_call_ctors=function(){return(b.___wasm_call_ctors=b.asm.l).apply(null,arguments);};b._evalInSandbox=function(){return(b._evalInSandbox=b.asm.m).apply(null,arguments);};b._nukeSandbox=function(){return(b._nukeSandbox=b.asm.n).apply(null,arguments);};b._init=function(){return(b._init=b.asm.o).apply(null,arguments);};b._commFun=function(){return(b._commFun=b.asm.p).apply(null,arguments);};b._dumpMemoryUse=function(){return(b._dumpMemoryUse=b.asm.q).apply(null,arguments);};var M=b._malloc=function(){return(M=b._malloc=b.asm.r).apply(null,arguments);};b._free=function(){return(b._free=b.asm.s).apply(null,arguments);};var X=b.__get_tzname=function(){return(X=b.__get_tzname=b.asm.u).apply(null,arguments);},qa=b.__get_daylight=function(){return(qa=b.__get_daylight=b.asm.v).apply(null,arguments);},pa=b.__get_timezone=function(){return(pa=b.__get_timezone=b.asm.w).apply(null,arguments);},F=b.stackSave=function(){return(F=b.stackSave=b.asm.x).apply(null,arguments);},G=b.stackRestore=function(){return(G=b.stackRestore=b.asm.y).apply(null,arguments);},B=b.stackAlloc=function(){return(B=b.stackAlloc=b.asm.z).apply(null,arguments);};b.ccall=A;b.cwrap=function(a,c,d,e){d=d||[];var f=d.every(function(g){return"number"===g;});return"string"!==c&&f&&!e?b["_"+a]:function(){return A(a,c,d,arguments,e);};};b.stringToNewUTF8=W;var Y;R=function ta(){Y||Z();Y||(R=ta);};function Z(){function a(){if(!Y&&(Y=!0,b.calledRun=!0,!z)){V(ea);n(b);if(b.onRuntimeInitialized)b.onRuntimeInitialized();if(b.postRun)for("function"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();fa.unshift(c);}V(fa);}}if(!(0<P)){if(b.preRun)for("function"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)ha();V(da);0<P||(b.setStatus?(b.setStatus("Running..."),setTimeout(function(){setTimeout(function(){b.setStatus("");},1);a();},1)):a());}}b.run=Z;if(b.preInit)for("function"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.pop()();Z();return Module.ready;};})();var _default=Module;exports["default"]=_default;

/***/ }),
/* 2 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

__w_pdfjs_require__(3);
__w_pdfjs_require__(95);
__w_pdfjs_require__(104);
__w_pdfjs_require__(105);
__w_pdfjs_require__(106);
__w_pdfjs_require__(107);

/***/ }),
/* 3 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var IS_PURE = __w_pdfjs_require__(35);
var IS_NODE = __w_pdfjs_require__(66);
var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var redefine = __w_pdfjs_require__(47);
var redefineAll = __w_pdfjs_require__(67);
var setPrototypeOf = __w_pdfjs_require__(68);
var setToStringTag = __w_pdfjs_require__(70);
var setSpecies = __w_pdfjs_require__(71);
var aCallable = __w_pdfjs_require__(30);
var isCallable = __w_pdfjs_require__(21);
var isObject = __w_pdfjs_require__(20);
var anInstance = __w_pdfjs_require__(72);
var speciesConstructor = __w_pdfjs_require__(73);
var task = (__w_pdfjs_require__(78).set);
var microtask = __w_pdfjs_require__(85);
var hostReportErrors = __w_pdfjs_require__(88);
var perform = __w_pdfjs_require__(89);
var Queue = __w_pdfjs_require__(90);
var InternalStateModule = __w_pdfjs_require__(49);
var NativePromiseConstructor = __w_pdfjs_require__(91);
var PromiseConstructorDetection = __w_pdfjs_require__(92);
var newPromiseCapabilityModule = __w_pdfjs_require__(94);
var PROMISE = 'Promise';
var FORCED_PROMISE_CONSTRUCTOR = PromiseConstructorDetection.CONSTRUCTOR;
var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var setInternalState = InternalStateModule.set;
var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
var PromiseConstructor = NativePromiseConstructor;
var PromisePrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;
var isThenable = function (it) {
 var then;
 return isObject(it) && isCallable(then = it.then) ? then : false;
};
var callReaction = function (reaction, state) {
 var value = state.value;
 var ok = state.state == FULFILLED;
 var handler = ok ? reaction.ok : reaction.fail;
 var resolve = reaction.resolve;
 var reject = reaction.reject;
 var domain = reaction.domain;
 var result, then, exited;
 try {
  if (handler) {
   if (!ok) {
    if (state.rejection === UNHANDLED)
     onHandleUnhandled(state);
    state.rejection = HANDLED;
   }
   if (handler === true)
    result = value;
   else {
    if (domain)
     domain.enter();
    result = handler(value);
    if (domain) {
     domain.exit();
     exited = true;
    }
   }
   if (result === reaction.promise) {
    reject(TypeError('Promise-chain cycle'));
   } else if (then = isThenable(result)) {
    call(then, result, resolve, reject);
   } else
    resolve(result);
  } else
   reject(value);
 } catch (error) {
  if (domain && !exited)
   domain.exit();
  reject(error);
 }
};
var notify = function (state, isReject) {
 if (state.notified)
  return;
 state.notified = true;
 microtask(function () {
  var reactions = state.reactions;
  var reaction;
  while (reaction = reactions.get()) {
   callReaction(reaction, state);
  }
  state.notified = false;
  if (isReject && !state.rejection)
   onUnhandled(state);
 });
};
var dispatchEvent = function (name, promise, reason) {
 var event, handler;
 if (DISPATCH_EVENT) {
  event = document.createEvent('Event');
  event.promise = promise;
  event.reason = reason;
  event.initEvent(name, false, true);
  global.dispatchEvent(event);
 } else
  event = {
   promise: promise,
   reason: reason
  };
 if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global['on' + name]))
  handler(event);
 else if (name === UNHANDLED_REJECTION)
  hostReportErrors('Unhandled promise rejection', reason);
};
var onUnhandled = function (state) {
 call(task, global, function () {
  var promise = state.facade;
  var value = state.value;
  var IS_UNHANDLED = isUnhandled(state);
  var result;
  if (IS_UNHANDLED) {
   result = perform(function () {
    if (IS_NODE) {
     process.emit('unhandledRejection', value, promise);
    } else
     dispatchEvent(UNHANDLED_REJECTION, promise, value);
   });
   state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
   if (result.error)
    throw result.value;
  }
 });
};
var isUnhandled = function (state) {
 return state.rejection !== HANDLED && !state.parent;
};
var onHandleUnhandled = function (state) {
 call(task, global, function () {
  var promise = state.facade;
  if (IS_NODE) {
   process.emit('rejectionHandled', promise);
  } else
   dispatchEvent(REJECTION_HANDLED, promise, state.value);
 });
};
var bind = function (fn, state, unwrap) {
 return function (value) {
  fn(state, value, unwrap);
 };
};
var internalReject = function (state, value, unwrap) {
 if (state.done)
  return;
 state.done = true;
 if (unwrap)
  state = unwrap;
 state.value = value;
 state.state = REJECTED;
 notify(state, true);
};
var internalResolve = function (state, value, unwrap) {
 if (state.done)
  return;
 state.done = true;
 if (unwrap)
  state = unwrap;
 try {
  if (state.facade === value)
   throw TypeError("Promise can't be resolved itself");
  var then = isThenable(value);
  if (then) {
   microtask(function () {
    var wrapper = { done: false };
    try {
     call(then, value, bind(internalResolve, wrapper, state), bind(internalReject, wrapper, state));
    } catch (error) {
     internalReject(wrapper, error, state);
    }
   });
  } else {
   state.value = value;
   state.state = FULFILLED;
   notify(state, false);
  }
 } catch (error) {
  internalReject({ done: false }, error, state);
 }
};
if (FORCED_PROMISE_CONSTRUCTOR) {
 PromiseConstructor = function Promise(executor) {
  anInstance(this, PromisePrototype);
  aCallable(executor);
  call(Internal, this);
  var state = getInternalPromiseState(this);
  try {
   executor(bind(internalResolve, state), bind(internalReject, state));
  } catch (error) {
   internalReject(state, error);
  }
 };
 PromisePrototype = PromiseConstructor.prototype;
 Internal = function Promise(executor) {
  setInternalState(this, {
   type: PROMISE,
   done: false,
   notified: false,
   parent: false,
   reactions: new Queue(),
   rejection: false,
   state: PENDING,
   value: undefined
  });
 };
 Internal.prototype = redefineAll(PromisePrototype, {
  then: function then(onFulfilled, onRejected) {
   var state = getInternalPromiseState(this);
   var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
   state.parent = true;
   reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
   reaction.fail = isCallable(onRejected) && onRejected;
   reaction.domain = IS_NODE ? process.domain : undefined;
   if (state.state == PENDING)
    state.reactions.add(reaction);
   else
    microtask(function () {
     callReaction(reaction, state);
    });
   return reaction.promise;
  }
 });
 OwnPromiseCapability = function () {
  var promise = new Internal();
  var state = getInternalPromiseState(promise);
  this.promise = promise;
  this.resolve = bind(internalResolve, state);
  this.reject = bind(internalReject, state);
 };
 newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
  return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
 };
 if (!IS_PURE && isCallable(NativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {
  nativeThen = NativePromisePrototype.then;
  if (!NATIVE_PROMISE_SUBCLASSING) {
   redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
    var that = this;
    return new PromiseConstructor(function (resolve, reject) {
     call(nativeThen, that, resolve, reject);
    }).then(onFulfilled, onRejected);
   }, { unsafe: true });
  }
  try {
   delete NativePromisePrototype.constructor;
  } catch (error) {
  }
  if (setPrototypeOf) {
   setPrototypeOf(NativePromisePrototype, PromisePrototype);
  }
 }
}
$({
 global: true,
 wrap: true,
 forced: FORCED_PROMISE_CONSTRUCTOR
}, { Promise: PromiseConstructor });
setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

/***/ }),
/* 4 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var getOwnPropertyDescriptor = (__w_pdfjs_require__(6).f);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var redefine = __w_pdfjs_require__(47);
var setGlobal = __w_pdfjs_require__(37);
var copyConstructorProperties = __w_pdfjs_require__(54);
var isForced = __w_pdfjs_require__(65);
module.exports = function (options, source) {
 var TARGET = options.target;
 var GLOBAL = options.global;
 var STATIC = options.stat;
 var FORCED, target, key, targetProperty, sourceProperty, descriptor;
 if (GLOBAL) {
  target = global;
 } else if (STATIC) {
  target = global[TARGET] || setGlobal(TARGET, {});
 } else {
  target = (global[TARGET] || {}).prototype;
 }
 if (target)
  for (key in source) {
   sourceProperty = source[key];
   if (options.noTargetGet) {
    descriptor = getOwnPropertyDescriptor(target, key);
    targetProperty = descriptor && descriptor.value;
   } else
    targetProperty = target[key];
   FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
   if (!FORCED && targetProperty !== undefined) {
    if (typeof sourceProperty == typeof targetProperty)
     continue;
    copyConstructorProperties(sourceProperty, targetProperty);
   }
   if (options.sham || targetProperty && targetProperty.sham) {
    createNonEnumerableProperty(sourceProperty, 'sham', true);
   }
   redefine(target, key, sourceProperty, options);
  }
};

/***/ }),
/* 5 */
/***/ ((module) => {

var check = function (it) {
 return it && it.Math == Math && it;
};
module.exports = check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || check(typeof self == 'object' && self) || check(typeof global == 'object' && global) || (function () {
 return this;
}()) || Function('return this')();

/***/ }),
/* 6 */
/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {

var DESCRIPTORS = __w_pdfjs_require__(7);
var call = __w_pdfjs_require__(9);
var propertyIsEnumerableModule = __w_pdfjs_require__(11);
var createPropertyDescriptor = __w_pdfjs_require__(12);
var toIndexedObject = __w_pdfjs_require__(13);
var toPropertyKey = __w_pdfjs_require__(18);
var hasOwn = __w_pdfjs_require__(38);
var IE8_DOM_DEFINE = __w_pdfjs_require__(41);
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
 O = toIndexedObject(O);
 P = toPropertyKey(P);
 if (IE8_DOM_DEFINE)
  try {
   return $getOwnPropertyDescriptor(O, P);
  } catch (error) {
  }
 if (hasOwn(O, P))
  return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};

/***/ }),
/* 7 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
module.exports = !fails(function () {
 return Object.defineProperty({}, 1, {
  get: function () {
   return 7;
  }
 })[1] != 7;
});

/***/ }),
/* 8 */
/***/ ((module) => {

module.exports = function (exec) {
 try {
  return !!exec();
 } catch (error) {
  return true;
 }
};

/***/ }),
/* 9 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var NATIVE_BIND = __w_pdfjs_require__(10);
var call = Function.prototype.call;
module.exports = NATIVE_BIND ? call.bind(call) : function () {
 return call.apply(call, arguments);
};

/***/ }),
/* 10 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
module.exports = !fails(function () {
 var test = function () {
 }.bind();
 return typeof test != 'function' || test.hasOwnProperty('prototype');
});

/***/ }),
/* 11 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
 var descriptor = getOwnPropertyDescriptor(this, V);
 return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

/***/ }),
/* 12 */
/***/ ((module) => {

module.exports = function (bitmap, value) {
 return {
  enumerable: !(bitmap & 1),
  configurable: !(bitmap & 2),
  writable: !(bitmap & 4),
  value: value
 };
};

/***/ }),
/* 13 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var IndexedObject = __w_pdfjs_require__(14);
var requireObjectCoercible = __w_pdfjs_require__(17);
module.exports = function (it) {
 return IndexedObject(requireObjectCoercible(it));
};

/***/ }),
/* 14 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var uncurryThis = __w_pdfjs_require__(15);
var fails = __w_pdfjs_require__(8);
var classof = __w_pdfjs_require__(16);
var Object = global.Object;
var split = uncurryThis(''.split);
module.exports = fails(function () {
 return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
 return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;

/***/ }),
/* 15 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var NATIVE_BIND = __w_pdfjs_require__(10);
var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var uncurryThis = NATIVE_BIND && bind.bind(call, call);
module.exports = NATIVE_BIND ? function (fn) {
 return fn && uncurryThis(fn);
} : function (fn) {
 return fn && function () {
  return call.apply(fn, arguments);
 };
};

/***/ }),
/* 16 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);
module.exports = function (it) {
 return stringSlice(toString(it), 8, -1);
};

/***/ }),
/* 17 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var TypeError = global.TypeError;
module.exports = function (it) {
 if (it == undefined)
  throw TypeError("Can't call method on " + it);
 return it;
};

/***/ }),
/* 18 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var toPrimitive = __w_pdfjs_require__(19);
var isSymbol = __w_pdfjs_require__(22);
module.exports = function (argument) {
 var key = toPrimitive(argument, 'string');
 return isSymbol(key) ? key : key + '';
};

/***/ }),
/* 19 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var isObject = __w_pdfjs_require__(20);
var isSymbol = __w_pdfjs_require__(22);
var getMethod = __w_pdfjs_require__(29);
var ordinaryToPrimitive = __w_pdfjs_require__(32);
var wellKnownSymbol = __w_pdfjs_require__(33);
var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
module.exports = function (input, pref) {
 if (!isObject(input) || isSymbol(input))
  return input;
 var exoticToPrim = getMethod(input, TO_PRIMITIVE);
 var result;
 if (exoticToPrim) {
  if (pref === undefined)
   pref = 'default';
  result = call(exoticToPrim, input, pref);
  if (!isObject(result) || isSymbol(result))
   return result;
  throw TypeError("Can't convert object to primitive value");
 }
 if (pref === undefined)
  pref = 'number';
 return ordinaryToPrimitive(input, pref);
};

/***/ }),
/* 20 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var isCallable = __w_pdfjs_require__(21);
module.exports = function (it) {
 return typeof it == 'object' ? it !== null : isCallable(it);
};

/***/ }),
/* 21 */
/***/ ((module) => {

module.exports = function (argument) {
 return typeof argument == 'function';
};

/***/ }),
/* 22 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var getBuiltIn = __w_pdfjs_require__(23);
var isCallable = __w_pdfjs_require__(21);
var isPrototypeOf = __w_pdfjs_require__(24);
var USE_SYMBOL_AS_UID = __w_pdfjs_require__(25);
var Object = global.Object;
module.exports = USE_SYMBOL_AS_UID ? function (it) {
 return typeof it == 'symbol';
} : function (it) {
 var $Symbol = getBuiltIn('Symbol');
 return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};

/***/ }),
/* 23 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isCallable = __w_pdfjs_require__(21);
var aFunction = function (argument) {
 return isCallable(argument) ? argument : undefined;
};
module.exports = function (namespace, method) {
 return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};

/***/ }),
/* 24 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
module.exports = uncurryThis({}.isPrototypeOf);

/***/ }),
/* 25 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var NATIVE_SYMBOL = __w_pdfjs_require__(26);
module.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == 'symbol';

/***/ }),
/* 26 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var V8_VERSION = __w_pdfjs_require__(27);
var fails = __w_pdfjs_require__(8);
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
 var symbol = Symbol();
 return !String(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/***/ }),
/* 27 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var userAgent = __w_pdfjs_require__(28);
var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;
if (v8) {
 match = v8.split('.');
 version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}
if (!version && userAgent) {
 match = userAgent.match(/Edge\/(\d+)/);
 if (!match || match[1] >= 74) {
  match = userAgent.match(/Chrome\/(\d+)/);
  if (match)
   version = +match[1];
 }
}
module.exports = version;

/***/ }),
/* 28 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var getBuiltIn = __w_pdfjs_require__(23);
module.exports = getBuiltIn('navigator', 'userAgent') || '';

/***/ }),
/* 29 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var aCallable = __w_pdfjs_require__(30);
module.exports = function (V, P) {
 var func = V[P];
 return func == null ? undefined : aCallable(func);
};

/***/ }),
/* 30 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isCallable = __w_pdfjs_require__(21);
var tryToString = __w_pdfjs_require__(31);
var TypeError = global.TypeError;
module.exports = function (argument) {
 if (isCallable(argument))
  return argument;
 throw TypeError(tryToString(argument) + ' is not a function');
};

/***/ }),
/* 31 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var String = global.String;
module.exports = function (argument) {
 try {
  return String(argument);
 } catch (error) {
  return 'Object';
 }
};

/***/ }),
/* 32 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var isCallable = __w_pdfjs_require__(21);
var isObject = __w_pdfjs_require__(20);
var TypeError = global.TypeError;
module.exports = function (input, pref) {
 var fn, val;
 if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
  return val;
 if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))
  return val;
 if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
  return val;
 throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 33 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var shared = __w_pdfjs_require__(34);
var hasOwn = __w_pdfjs_require__(38);
var uid = __w_pdfjs_require__(40);
var NATIVE_SYMBOL = __w_pdfjs_require__(26);
var USE_SYMBOL_AS_UID = __w_pdfjs_require__(25);
var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;
module.exports = function (name) {
 if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
  var description = 'Symbol.' + name;
  if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
   WellKnownSymbolsStore[name] = Symbol[name];
  } else if (USE_SYMBOL_AS_UID && symbolFor) {
   WellKnownSymbolsStore[name] = symbolFor(description);
  } else {
   WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
  }
 }
 return WellKnownSymbolsStore[name];
};

/***/ }),
/* 34 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var IS_PURE = __w_pdfjs_require__(35);
var store = __w_pdfjs_require__(36);
(module.exports = function (key, value) {
 return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
 version: '3.22.0',
 mode: IS_PURE ? 'pure' : 'global',
 copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',
 license: 'https://github.com/zloirock/core-js/blob/v3.22.0/LICENSE',
 source: 'https://github.com/zloirock/core-js'
});

/***/ }),
/* 35 */
/***/ ((module) => {

module.exports = false;

/***/ }),
/* 36 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var setGlobal = __w_pdfjs_require__(37);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});
module.exports = store;

/***/ }),
/* 37 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var defineProperty = Object.defineProperty;
module.exports = function (key, value) {
 try {
  defineProperty(global, key, {
   value: value,
   configurable: true,
   writable: true
  });
 } catch (error) {
  global[key] = value;
 }
 return value;
};

/***/ }),
/* 38 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var toObject = __w_pdfjs_require__(39);
var hasOwnProperty = uncurryThis({}.hasOwnProperty);
module.exports = Object.hasOwn || function hasOwn(it, key) {
 return hasOwnProperty(toObject(it), key);
};

/***/ }),
/* 39 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var requireObjectCoercible = __w_pdfjs_require__(17);
var Object = global.Object;
module.exports = function (argument) {
 return Object(requireObjectCoercible(argument));
};

/***/ }),
/* 40 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);
module.exports = function (key) {
 return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};

/***/ }),
/* 41 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var DESCRIPTORS = __w_pdfjs_require__(7);
var fails = __w_pdfjs_require__(8);
var createElement = __w_pdfjs_require__(42);
module.exports = !DESCRIPTORS && !fails(function () {
 return Object.defineProperty(createElement('div'), 'a', {
  get: function () {
   return 7;
  }
 }).a != 7;
});

/***/ }),
/* 42 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isObject = __w_pdfjs_require__(20);
var document = global.document;
var EXISTS = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
 return EXISTS ? document.createElement(it) : {};
};

/***/ }),
/* 43 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var DESCRIPTORS = __w_pdfjs_require__(7);
var definePropertyModule = __w_pdfjs_require__(44);
var createPropertyDescriptor = __w_pdfjs_require__(12);
module.exports = DESCRIPTORS ? function (object, key, value) {
 return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
 object[key] = value;
 return object;
};

/***/ }),
/* 44 */
/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var DESCRIPTORS = __w_pdfjs_require__(7);
var IE8_DOM_DEFINE = __w_pdfjs_require__(41);
var V8_PROTOTYPE_DEFINE_BUG = __w_pdfjs_require__(45);
var anObject = __w_pdfjs_require__(46);
var toPropertyKey = __w_pdfjs_require__(18);
var TypeError = global.TypeError;
var $defineProperty = Object.defineProperty;
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
 anObject(O);
 P = toPropertyKey(P);
 anObject(Attributes);
 if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
  var current = $getOwnPropertyDescriptor(O, P);
  if (current && current[WRITABLE]) {
   O[P] = Attributes.value;
   Attributes = {
    configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
    enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
    writable: false
   };
  }
 }
 return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
 anObject(O);
 P = toPropertyKey(P);
 anObject(Attributes);
 if (IE8_DOM_DEFINE)
  try {
   return $defineProperty(O, P, Attributes);
  } catch (error) {
  }
 if ('get' in Attributes || 'set' in Attributes)
  throw TypeError('Accessors not supported');
 if ('value' in Attributes)
  O[P] = Attributes.value;
 return O;
};

/***/ }),
/* 45 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var DESCRIPTORS = __w_pdfjs_require__(7);
var fails = __w_pdfjs_require__(8);
module.exports = DESCRIPTORS && fails(function () {
 return Object.defineProperty(function () {
 }, 'prototype', {
  value: 42,
  writable: false
 }).prototype != 42;
});

/***/ }),
/* 46 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isObject = __w_pdfjs_require__(20);
var String = global.String;
var TypeError = global.TypeError;
module.exports = function (argument) {
 if (isObject(argument))
  return argument;
 throw TypeError(String(argument) + ' is not an object');
};

/***/ }),
/* 47 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isCallable = __w_pdfjs_require__(21);
var hasOwn = __w_pdfjs_require__(38);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var setGlobal = __w_pdfjs_require__(37);
var inspectSource = __w_pdfjs_require__(48);
var InternalStateModule = __w_pdfjs_require__(49);
var CONFIGURABLE_FUNCTION_NAME = (__w_pdfjs_require__(53).CONFIGURABLE);
var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');
(module.exports = function (O, key, value, options) {
 var unsafe = options ? !!options.unsafe : false;
 var simple = options ? !!options.enumerable : false;
 var noTargetGet = options ? !!options.noTargetGet : false;
 var name = options && options.name !== undefined ? options.name : key;
 var state;
 if (isCallable(value)) {
  if (String(name).slice(0, 7) === 'Symbol(') {
   name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (!hasOwn(value, 'name') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {
   createNonEnumerableProperty(value, 'name', name);
  }
  state = enforceInternalState(value);
  if (!state.source) {
   state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
  }
 }
 if (O === global) {
  if (simple)
   O[key] = value;
  else
   setGlobal(key, value);
  return;
 } else if (!unsafe) {
  delete O[key];
 } else if (!noTargetGet && O[key]) {
  simple = true;
 }
 if (simple)
  O[key] = value;
 else
  createNonEnumerableProperty(O, key, value);
})(Function.prototype, 'toString', function toString() {
 return isCallable(this) && getInternalState(this).source || inspectSource(this);
});

/***/ }),
/* 48 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var isCallable = __w_pdfjs_require__(21);
var store = __w_pdfjs_require__(36);
var functionToString = uncurryThis(Function.toString);
if (!isCallable(store.inspectSource)) {
 store.inspectSource = function (it) {
  return functionToString(it);
 };
}
module.exports = store.inspectSource;

/***/ }),
/* 49 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var NATIVE_WEAK_MAP = __w_pdfjs_require__(50);
var global = __w_pdfjs_require__(5);
var uncurryThis = __w_pdfjs_require__(15);
var isObject = __w_pdfjs_require__(20);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var hasOwn = __w_pdfjs_require__(38);
var shared = __w_pdfjs_require__(36);
var sharedKey = __w_pdfjs_require__(51);
var hiddenKeys = __w_pdfjs_require__(52);
var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;
var enforce = function (it) {
 return has(it) ? get(it) : set(it, {});
};
var getterFor = function (TYPE) {
 return function (it) {
  var state;
  if (!isObject(it) || (state = get(it)).type !== TYPE) {
   throw TypeError('Incompatible receiver, ' + TYPE + ' required');
  }
  return state;
 };
};
if (NATIVE_WEAK_MAP || shared.state) {
 var store = shared.state || (shared.state = new WeakMap());
 var wmget = uncurryThis(store.get);
 var wmhas = uncurryThis(store.has);
 var wmset = uncurryThis(store.set);
 set = function (it, metadata) {
  if (wmhas(store, it))
   throw new TypeError(OBJECT_ALREADY_INITIALIZED);
  metadata.facade = it;
  wmset(store, it, metadata);
  return metadata;
 };
 get = function (it) {
  return wmget(store, it) || {};
 };
 has = function (it) {
  return wmhas(store, it);
 };
} else {
 var STATE = sharedKey('state');
 hiddenKeys[STATE] = true;
 set = function (it, metadata) {
  if (hasOwn(it, STATE))
   throw new TypeError(OBJECT_ALREADY_INITIALIZED);
  metadata.facade = it;
  createNonEnumerableProperty(it, STATE, metadata);
  return metadata;
 };
 get = function (it) {
  return hasOwn(it, STATE) ? it[STATE] : {};
 };
 has = function (it) {
  return hasOwn(it, STATE);
 };
}
module.exports = {
 set: set,
 get: get,
 has: has,
 enforce: enforce,
 getterFor: getterFor
};

/***/ }),
/* 50 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isCallable = __w_pdfjs_require__(21);
var inspectSource = __w_pdfjs_require__(48);
var WeakMap = global.WeakMap;
module.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));

/***/ }),
/* 51 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var shared = __w_pdfjs_require__(34);
var uid = __w_pdfjs_require__(40);
var keys = shared('keys');
module.exports = function (key) {
 return keys[key] || (keys[key] = uid(key));
};

/***/ }),
/* 52 */
/***/ ((module) => {

module.exports = {};

/***/ }),
/* 53 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var DESCRIPTORS = __w_pdfjs_require__(7);
var hasOwn = __w_pdfjs_require__(38);
var FunctionPrototype = Function.prototype;
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
var EXISTS = hasOwn(FunctionPrototype, 'name');
var PROPER = EXISTS && function something() {
}.name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable);
module.exports = {
 EXISTS: EXISTS,
 PROPER: PROPER,
 CONFIGURABLE: CONFIGURABLE
};

/***/ }),
/* 54 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var hasOwn = __w_pdfjs_require__(38);
var ownKeys = __w_pdfjs_require__(55);
var getOwnPropertyDescriptorModule = __w_pdfjs_require__(6);
var definePropertyModule = __w_pdfjs_require__(44);
module.exports = function (target, source, exceptions) {
 var keys = ownKeys(source);
 var defineProperty = definePropertyModule.f;
 var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
 for (var i = 0; i < keys.length; i++) {
  var key = keys[i];
  if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
   defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
 }
};

/***/ }),
/* 55 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var getBuiltIn = __w_pdfjs_require__(23);
var uncurryThis = __w_pdfjs_require__(15);
var getOwnPropertyNamesModule = __w_pdfjs_require__(56);
var getOwnPropertySymbolsModule = __w_pdfjs_require__(64);
var anObject = __w_pdfjs_require__(46);
var concat = uncurryThis([].concat);
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
 var keys = getOwnPropertyNamesModule.f(anObject(it));
 var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
 return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};

/***/ }),
/* 56 */
/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {

var internalObjectKeys = __w_pdfjs_require__(57);
var enumBugKeys = __w_pdfjs_require__(63);
var hiddenKeys = enumBugKeys.concat('length', 'prototype');
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
 return internalObjectKeys(O, hiddenKeys);
};

/***/ }),
/* 57 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var hasOwn = __w_pdfjs_require__(38);
var toIndexedObject = __w_pdfjs_require__(13);
var indexOf = (__w_pdfjs_require__(58).indexOf);
var hiddenKeys = __w_pdfjs_require__(52);
var push = uncurryThis([].push);
module.exports = function (object, names) {
 var O = toIndexedObject(object);
 var i = 0;
 var result = [];
 var key;
 for (key in O)
  !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
 while (names.length > i)
  if (hasOwn(O, key = names[i++])) {
   ~indexOf(result, key) || push(result, key);
  }
 return result;
};

/***/ }),
/* 58 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var toIndexedObject = __w_pdfjs_require__(13);
var toAbsoluteIndex = __w_pdfjs_require__(59);
var lengthOfArrayLike = __w_pdfjs_require__(61);
var createMethod = function (IS_INCLUDES) {
 return function ($this, el, fromIndex) {
  var O = toIndexedObject($this);
  var length = lengthOfArrayLike(O);
  var index = toAbsoluteIndex(fromIndex, length);
  var value;
  if (IS_INCLUDES && el != el)
   while (length > index) {
    value = O[index++];
    if (value != value)
     return true;
   }
  else
   for (; length > index; index++) {
    if ((IS_INCLUDES || index in O) && O[index] === el)
     return IS_INCLUDES || index || 0;
   }
  return !IS_INCLUDES && -1;
 };
};
module.exports = {
 includes: createMethod(true),
 indexOf: createMethod(false)
};

/***/ }),
/* 59 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var toIntegerOrInfinity = __w_pdfjs_require__(60);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
 var integer = toIntegerOrInfinity(index);
 return integer < 0 ? max(integer + length, 0) : min(integer, length);
};

/***/ }),
/* 60 */
/***/ ((module) => {

var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (argument) {
 var number = +argument;
 return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);
};

/***/ }),
/* 61 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var toLength = __w_pdfjs_require__(62);
module.exports = function (obj) {
 return toLength(obj.length);
};

/***/ }),
/* 62 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var toIntegerOrInfinity = __w_pdfjs_require__(60);
var min = Math.min;
module.exports = function (argument) {
 return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0;
};

/***/ }),
/* 63 */
/***/ ((module) => {

module.exports = [
 'constructor',
 'hasOwnProperty',
 'isPrototypeOf',
 'propertyIsEnumerable',
 'toLocaleString',
 'toString',
 'valueOf'
];

/***/ }),
/* 64 */
/***/ ((__unused_webpack_module, exports) => {

exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 65 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
var isCallable = __w_pdfjs_require__(21);
var replacement = /#|\.prototype\./;
var isForced = function (feature, detection) {
 var value = data[normalize(feature)];
 return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
};
var normalize = isForced.normalize = function (string) {
 return String(string).replace(replacement, '.').toLowerCase();
};
var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
module.exports = isForced;

/***/ }),
/* 66 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var classof = __w_pdfjs_require__(16);
var global = __w_pdfjs_require__(5);
module.exports = classof(global.process) == 'process';

/***/ }),
/* 67 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var redefine = __w_pdfjs_require__(47);
module.exports = function (target, src, options) {
 for (var key in src)
  redefine(target, key, src[key], options);
 return target;
};

/***/ }),
/* 68 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var anObject = __w_pdfjs_require__(46);
var aPossiblePrototype = __w_pdfjs_require__(69);
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? (function () {
 var CORRECT_SETTER = false;
 var test = {};
 var setter;
 try {
  setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
  setter(test, []);
  CORRECT_SETTER = test instanceof Array;
 } catch (error) {
 }
 return function setPrototypeOf(O, proto) {
  anObject(O);
  aPossiblePrototype(proto);
  if (CORRECT_SETTER)
   setter(O, proto);
  else
   O.__proto__ = proto;
  return O;
 };
}()) : undefined);

/***/ }),
/* 69 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isCallable = __w_pdfjs_require__(21);
var String = global.String;
var TypeError = global.TypeError;
module.exports = function (argument) {
 if (typeof argument == 'object' || isCallable(argument))
  return argument;
 throw TypeError("Can't set " + String(argument) + ' as a prototype');
};

/***/ }),
/* 70 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var defineProperty = (__w_pdfjs_require__(44).f);
var hasOwn = __w_pdfjs_require__(38);
var wellKnownSymbol = __w_pdfjs_require__(33);
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
module.exports = function (target, TAG, STATIC) {
 if (target && !STATIC)
  target = target.prototype;
 if (target && !hasOwn(target, TO_STRING_TAG)) {
  defineProperty(target, TO_STRING_TAG, {
   configurable: true,
   value: TAG
  });
 }
};

/***/ }),
/* 71 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var getBuiltIn = __w_pdfjs_require__(23);
var definePropertyModule = __w_pdfjs_require__(44);
var wellKnownSymbol = __w_pdfjs_require__(33);
var DESCRIPTORS = __w_pdfjs_require__(7);
var SPECIES = wellKnownSymbol('species');
module.exports = function (CONSTRUCTOR_NAME) {
 var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
 var defineProperty = definePropertyModule.f;
 if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
  defineProperty(Constructor, SPECIES, {
   configurable: true,
   get: function () {
    return this;
   }
  });
 }
};

/***/ }),
/* 72 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isPrototypeOf = __w_pdfjs_require__(24);
var TypeError = global.TypeError;
module.exports = function (it, Prototype) {
 if (isPrototypeOf(Prototype, it))
  return it;
 throw TypeError('Incorrect invocation');
};

/***/ }),
/* 73 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var anObject = __w_pdfjs_require__(46);
var aConstructor = __w_pdfjs_require__(74);
var wellKnownSymbol = __w_pdfjs_require__(33);
var SPECIES = wellKnownSymbol('species');
module.exports = function (O, defaultConstructor) {
 var C = anObject(O).constructor;
 var S;
 return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);
};

/***/ }),
/* 74 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isConstructor = __w_pdfjs_require__(75);
var tryToString = __w_pdfjs_require__(31);
var TypeError = global.TypeError;
module.exports = function (argument) {
 if (isConstructor(argument))
  return argument;
 throw TypeError(tryToString(argument) + ' is not a constructor');
};

/***/ }),
/* 75 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var fails = __w_pdfjs_require__(8);
var isCallable = __w_pdfjs_require__(21);
var classof = __w_pdfjs_require__(76);
var getBuiltIn = __w_pdfjs_require__(23);
var inspectSource = __w_pdfjs_require__(48);
var noop = function () {
};
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
var isConstructorModern = function isConstructor(argument) {
 if (!isCallable(argument))
  return false;
 try {
  construct(noop, empty, argument);
  return true;
 } catch (error) {
  return false;
 }
};
var isConstructorLegacy = function isConstructor(argument) {
 if (!isCallable(argument))
  return false;
 switch (classof(argument)) {
 case 'AsyncFunction':
 case 'GeneratorFunction':
 case 'AsyncGeneratorFunction':
  return false;
 }
 try {
  return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
 } catch (error) {
  return true;
 }
};
isConstructorLegacy.sham = true;
module.exports = !construct || fails(function () {
 var called;
 return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
  called = true;
 }) || called;
}) ? isConstructorLegacy : isConstructorModern;

/***/ }),
/* 76 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var TO_STRING_TAG_SUPPORT = __w_pdfjs_require__(77);
var isCallable = __w_pdfjs_require__(21);
var classofRaw = __w_pdfjs_require__(16);
var wellKnownSymbol = __w_pdfjs_require__(33);
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Object = global.Object;
var CORRECT_ARGUMENTS = classofRaw((function () {
 return arguments;
}())) == 'Arguments';
var tryGet = function (it, key) {
 try {
  return it[key];
 } catch (error) {
 }
};
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
 var O, tag, result;
 return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};

/***/ }),
/* 77 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var wellKnownSymbol = __w_pdfjs_require__(33);
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};
test[TO_STRING_TAG] = 'z';
module.exports = String(test) === '[object z]';

/***/ }),
/* 78 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var apply = __w_pdfjs_require__(79);
var bind = __w_pdfjs_require__(80);
var isCallable = __w_pdfjs_require__(21);
var hasOwn = __w_pdfjs_require__(38);
var fails = __w_pdfjs_require__(8);
var html = __w_pdfjs_require__(81);
var arraySlice = __w_pdfjs_require__(82);
var createElement = __w_pdfjs_require__(42);
var validateArgumentsLength = __w_pdfjs_require__(83);
var IS_IOS = __w_pdfjs_require__(84);
var IS_NODE = __w_pdfjs_require__(66);
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var location, defer, channel, port;
try {
 location = global.location;
} catch (error) {
}
var run = function (id) {
 if (hasOwn(queue, id)) {
  var fn = queue[id];
  delete queue[id];
  fn();
 }
};
var runner = function (id) {
 return function () {
  run(id);
 };
};
var listener = function (event) {
 run(event.data);
};
var post = function (id) {
 global.postMessage(String(id), location.protocol + '//' + location.host);
};
if (!set || !clear) {
 set = function setImmediate(handler) {
  validateArgumentsLength(arguments.length, 1);
  var fn = isCallable(handler) ? handler : Function(handler);
  var args = arraySlice(arguments, 1);
  queue[++counter] = function () {
   apply(fn, undefined, args);
  };
  defer(counter);
  return counter;
 };
 clear = function clearImmediate(id) {
  delete queue[id];
 };
 if (IS_NODE) {
  defer = function (id) {
   process.nextTick(runner(id));
  };
 } else if (Dispatch && Dispatch.now) {
  defer = function (id) {
   Dispatch.now(runner(id));
  };
 } else if (MessageChannel && !IS_IOS) {
  channel = new MessageChannel();
  port = channel.port2;
  channel.port1.onmessage = listener;
  defer = bind(port.postMessage, port);
 } else if (global.addEventListener && isCallable(global.postMessage) && !global.importScripts && location && location.protocol !== 'file:' && !fails(post)) {
  defer = post;
  global.addEventListener('message', listener, false);
 } else if (ONREADYSTATECHANGE in createElement('script')) {
  defer = function (id) {
   html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
    html.removeChild(this);
    run(id);
   };
  };
 } else {
  defer = function (id) {
   setTimeout(runner(id), 0);
  };
 }
}
module.exports = {
 set: set,
 clear: clear
};

/***/ }),
/* 79 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var NATIVE_BIND = __w_pdfjs_require__(10);
var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
 return call.apply(apply, arguments);
});

/***/ }),
/* 80 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var aCallable = __w_pdfjs_require__(30);
var NATIVE_BIND = __w_pdfjs_require__(10);
var bind = uncurryThis(uncurryThis.bind);
module.exports = function (fn, that) {
 aCallable(fn);
 return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function () {
  return fn.apply(that, arguments);
 };
};

/***/ }),
/* 81 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var getBuiltIn = __w_pdfjs_require__(23);
module.exports = getBuiltIn('document', 'documentElement');

/***/ }),
/* 82 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
module.exports = uncurryThis([].slice);

/***/ }),
/* 83 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var TypeError = global.TypeError;
module.exports = function (passed, required) {
 if (passed < required)
  throw TypeError('Not enough arguments');
 return passed;
};

/***/ }),
/* 84 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var userAgent = __w_pdfjs_require__(28);
module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);

/***/ }),
/* 85 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var bind = __w_pdfjs_require__(80);
var getOwnPropertyDescriptor = (__w_pdfjs_require__(6).f);
var macrotask = (__w_pdfjs_require__(78).set);
var IS_IOS = __w_pdfjs_require__(84);
var IS_IOS_PEBBLE = __w_pdfjs_require__(86);
var IS_WEBOS_WEBKIT = __w_pdfjs_require__(87);
var IS_NODE = __w_pdfjs_require__(66);
var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
var flush, head, last, notify, toggle, node, promise, then;
if (!queueMicrotask) {
 flush = function () {
  var parent, fn;
  if (IS_NODE && (parent = process.domain))
   parent.exit();
  while (head) {
   fn = head.fn;
   head = head.next;
   try {
    fn();
   } catch (error) {
    if (head)
     notify();
    else
     last = undefined;
    throw error;
   }
  }
  last = undefined;
  if (parent)
   parent.enter();
 };
 if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
  toggle = true;
  node = document.createTextNode('');
  new MutationObserver(flush).observe(node, { characterData: true });
  notify = function () {
   node.data = toggle = !toggle;
  };
 } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
  promise = Promise.resolve(undefined);
  promise.constructor = Promise;
  then = bind(promise.then, promise);
  notify = function () {
   then(flush);
  };
 } else if (IS_NODE) {
  notify = function () {
   process.nextTick(flush);
  };
 } else {
  macrotask = bind(macrotask, global);
  notify = function () {
   macrotask(flush);
  };
 }
}
module.exports = queueMicrotask || function (fn) {
 var task = {
  fn: fn,
  next: undefined
 };
 if (last)
  last.next = task;
 if (!head) {
  head = task;
  notify();
 }
 last = task;
};

/***/ }),
/* 86 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var userAgent = __w_pdfjs_require__(28);
var global = __w_pdfjs_require__(5);
module.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;

/***/ }),
/* 87 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var userAgent = __w_pdfjs_require__(28);
module.exports = /web0s(?!.*chrome)/i.test(userAgent);

/***/ }),
/* 88 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
module.exports = function (a, b) {
 var console = global.console;
 if (console && console.error) {
  arguments.length == 1 ? console.error(a) : console.error(a, b);
 }
};

/***/ }),
/* 89 */
/***/ ((module) => {

module.exports = function (exec) {
 try {
  return {
   error: false,
   value: exec()
  };
 } catch (error) {
  return {
   error: true,
   value: error
  };
 }
};

/***/ }),
/* 90 */
/***/ ((module) => {

var Queue = function () {
 this.head = null;
 this.tail = null;
};
Queue.prototype = {
 add: function (item) {
  var entry = {
   item: item,
   next: null
  };
  if (this.head)
   this.tail.next = entry;
  else
   this.head = entry;
  this.tail = entry;
 },
 get: function () {
  var entry = this.head;
  if (entry) {
   this.head = entry.next;
   if (this.tail === entry)
    this.tail = null;
   return entry.item;
  }
 }
};
module.exports = Queue;

/***/ }),
/* 91 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
module.exports = global.Promise;

/***/ }),
/* 92 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var NativePromiseConstructor = __w_pdfjs_require__(91);
var isCallable = __w_pdfjs_require__(21);
var isForced = __w_pdfjs_require__(65);
var inspectSource = __w_pdfjs_require__(48);
var wellKnownSymbol = __w_pdfjs_require__(33);
var IS_BROWSER = __w_pdfjs_require__(93);
var IS_PURE = __w_pdfjs_require__(35);
var V8_VERSION = __w_pdfjs_require__(27);
var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
var SPECIES = wellKnownSymbol('species');
var SUBCLASSING = false;
var NATIVE_PROMISE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);
var FORCED_PROMISE_CONSTRUCTOR = isForced('Promise', function () {
 var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);
 var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);
 if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66)
  return true;
 if (IS_PURE && !(NativePromisePrototype['catch'] && NativePromisePrototype['finally']))
  return true;
 if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE))
  return false;
 var promise = new NativePromiseConstructor(function (resolve) {
  resolve(1);
 });
 var FakePromise = function (exec) {
  exec(function () {
  }, function () {
  });
 };
 var constructor = promise.constructor = {};
 constructor[SPECIES] = FakePromise;
 SUBCLASSING = promise.then(function () {
 }) instanceof FakePromise;
 if (!SUBCLASSING)
  return true;
 return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_PROMISE_REJECTION_EVENT;
});
module.exports = {
 CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
 REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
 SUBCLASSING: SUBCLASSING
};

/***/ }),
/* 93 */
/***/ ((module) => {

module.exports = typeof window == 'object' && typeof Deno != 'object';

/***/ }),
/* 94 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var aCallable = __w_pdfjs_require__(30);
var PromiseCapability = function (C) {
 var resolve, reject;
 this.promise = new C(function ($$resolve, $$reject) {
  if (resolve !== undefined || reject !== undefined)
   throw TypeError('Bad Promise constructor');
  resolve = $$resolve;
  reject = $$reject;
 });
 this.resolve = aCallable(resolve);
 this.reject = aCallable(reject);
};
module.exports.f = function (C) {
 return new PromiseCapability(C);
};

/***/ }),
/* 95 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var call = __w_pdfjs_require__(9);
var aCallable = __w_pdfjs_require__(30);
var newPromiseCapabilityModule = __w_pdfjs_require__(94);
var perform = __w_pdfjs_require__(89);
var iterate = __w_pdfjs_require__(96);
var PROMISE_STATICS_INCORRECT_ITERATION = __w_pdfjs_require__(102);
$({
 target: 'Promise',
 stat: true,
 forced: PROMISE_STATICS_INCORRECT_ITERATION
}, {
 all: function all(iterable) {
  var C = this;
  var capability = newPromiseCapabilityModule.f(C);
  var resolve = capability.resolve;
  var reject = capability.reject;
  var result = perform(function () {
   var $promiseResolve = aCallable(C.resolve);
   var values = [];
   var counter = 0;
   var remaining = 1;
   iterate(iterable, function (promise) {
    var index = counter++;
    var alreadyCalled = false;
    remaining++;
    call($promiseResolve, C, promise).then(function (value) {
     if (alreadyCalled)
      return;
     alreadyCalled = true;
     values[index] = value;
     --remaining || resolve(values);
    }, reject);
   });
   --remaining || resolve(values);
  });
  if (result.error)
   reject(result.value);
  return capability.promise;
 }
});

/***/ }),
/* 96 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var bind = __w_pdfjs_require__(80);
var call = __w_pdfjs_require__(9);
var anObject = __w_pdfjs_require__(46);
var tryToString = __w_pdfjs_require__(31);
var isArrayIteratorMethod = __w_pdfjs_require__(97);
var lengthOfArrayLike = __w_pdfjs_require__(61);
var isPrototypeOf = __w_pdfjs_require__(24);
var getIterator = __w_pdfjs_require__(99);
var getIteratorMethod = __w_pdfjs_require__(100);
var iteratorClose = __w_pdfjs_require__(101);
var TypeError = global.TypeError;
var Result = function (stopped, result) {
 this.stopped = stopped;
 this.result = result;
};
var ResultPrototype = Result.prototype;
module.exports = function (iterable, unboundFunction, options) {
 var that = options && options.that;
 var AS_ENTRIES = !!(options && options.AS_ENTRIES);
 var IS_ITERATOR = !!(options && options.IS_ITERATOR);
 var INTERRUPTED = !!(options && options.INTERRUPTED);
 var fn = bind(unboundFunction, that);
 var iterator, iterFn, index, length, result, next, step;
 var stop = function (condition) {
  if (iterator)
   iteratorClose(iterator, 'normal', condition);
  return new Result(true, condition);
 };
 var callFn = function (value) {
  if (AS_ENTRIES) {
   anObject(value);
   return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
  }
  return INTERRUPTED ? fn(value, stop) : fn(value);
 };
 if (IS_ITERATOR) {
  iterator = iterable;
 } else {
  iterFn = getIteratorMethod(iterable);
  if (!iterFn)
   throw TypeError(tryToString(iterable) + ' is not iterable');
  if (isArrayIteratorMethod(iterFn)) {
   for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
    result = callFn(iterable[index]);
    if (result && isPrototypeOf(ResultPrototype, result))
     return result;
   }
   return new Result(false);
  }
  iterator = getIterator(iterable, iterFn);
 }
 next = iterator.next;
 while (!(step = call(next, iterator)).done) {
  try {
   result = callFn(step.value);
  } catch (error) {
   iteratorClose(iterator, 'throw', error);
  }
  if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result))
   return result;
 }
 return new Result(false);
};

/***/ }),
/* 97 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var wellKnownSymbol = __w_pdfjs_require__(33);
var Iterators = __w_pdfjs_require__(98);
var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;
module.exports = function (it) {
 return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};

/***/ }),
/* 98 */
/***/ ((module) => {

module.exports = {};

/***/ }),
/* 99 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var aCallable = __w_pdfjs_require__(30);
var anObject = __w_pdfjs_require__(46);
var tryToString = __w_pdfjs_require__(31);
var getIteratorMethod = __w_pdfjs_require__(100);
var TypeError = global.TypeError;
module.exports = function (argument, usingIterator) {
 var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
 if (aCallable(iteratorMethod))
  return anObject(call(iteratorMethod, argument));
 throw TypeError(tryToString(argument) + ' is not iterable');
};

/***/ }),
/* 100 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var classof = __w_pdfjs_require__(76);
var getMethod = __w_pdfjs_require__(29);
var Iterators = __w_pdfjs_require__(98);
var wellKnownSymbol = __w_pdfjs_require__(33);
var ITERATOR = wellKnownSymbol('iterator');
module.exports = function (it) {
 if (it != undefined)
  return getMethod(it, ITERATOR) || getMethod(it, '@@iterator') || Iterators[classof(it)];
};

/***/ }),
/* 101 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var call = __w_pdfjs_require__(9);
var anObject = __w_pdfjs_require__(46);
var getMethod = __w_pdfjs_require__(29);
module.exports = function (iterator, kind, value) {
 var innerResult, innerError;
 anObject(iterator);
 try {
  innerResult = getMethod(iterator, 'return');
  if (!innerResult) {
   if (kind === 'throw')
    throw value;
   return value;
  }
  innerResult = call(innerResult, iterator);
 } catch (error) {
  innerError = true;
  innerResult = error;
 }
 if (kind === 'throw')
  throw value;
 if (innerError)
  throw innerResult;
 anObject(innerResult);
 return value;
};

/***/ }),
/* 102 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var NativePromiseConstructor = __w_pdfjs_require__(91);
var checkCorrectnessOfIteration = __w_pdfjs_require__(103);
var FORCED_PROMISE_CONSTRUCTOR = (__w_pdfjs_require__(92).CONSTRUCTOR);
module.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function (iterable) {
 NativePromiseConstructor.all(iterable).then(undefined, function () {
 });
});

/***/ }),
/* 103 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var wellKnownSymbol = __w_pdfjs_require__(33);
var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;
try {
 var called = 0;
 var iteratorWithReturn = {
  next: function () {
   return { done: !!called++ };
  },
  'return': function () {
   SAFE_CLOSING = true;
  }
 };
 iteratorWithReturn[ITERATOR] = function () {
  return this;
 };
 Array.from(iteratorWithReturn, function () {
  throw 2;
 });
} catch (error) {
}
module.exports = function (exec, SKIP_CLOSING) {
 if (!SKIP_CLOSING && !SAFE_CLOSING)
  return false;
 var ITERATION_SUPPORT = false;
 try {
  var object = {};
  object[ITERATOR] = function () {
   return {
    next: function () {
     return { done: ITERATION_SUPPORT = true };
    }
   };
  };
  exec(object);
 } catch (error) {
 }
 return ITERATION_SUPPORT;
};

/***/ }),
/* 104 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var IS_PURE = __w_pdfjs_require__(35);
var FORCED_PROMISE_CONSTRUCTOR = (__w_pdfjs_require__(92).CONSTRUCTOR);
var NativePromiseConstructor = __w_pdfjs_require__(91);
var getBuiltIn = __w_pdfjs_require__(23);
var isCallable = __w_pdfjs_require__(21);
var redefine = __w_pdfjs_require__(47);
var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
$({
 target: 'Promise',
 proto: true,
 forced: FORCED_PROMISE_CONSTRUCTOR,
 real: true
}, {
 'catch': function (onRejected) {
  return this.then(undefined, onRejected);
 }
});
if (!IS_PURE && isCallable(NativePromiseConstructor)) {
 var method = getBuiltIn('Promise').prototype['catch'];
 if (NativePromisePrototype['catch'] !== method) {
  redefine(NativePromisePrototype, 'catch', method, { unsafe: true });
 }
}

/***/ }),
/* 105 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var call = __w_pdfjs_require__(9);
var aCallable = __w_pdfjs_require__(30);
var newPromiseCapabilityModule = __w_pdfjs_require__(94);
var perform = __w_pdfjs_require__(89);
var iterate = __w_pdfjs_require__(96);
var PROMISE_STATICS_INCORRECT_ITERATION = __w_pdfjs_require__(102);
$({
 target: 'Promise',
 stat: true,
 forced: PROMISE_STATICS_INCORRECT_ITERATION
}, {
 race: function race(iterable) {
  var C = this;
  var capability = newPromiseCapabilityModule.f(C);
  var reject = capability.reject;
  var result = perform(function () {
   var $promiseResolve = aCallable(C.resolve);
   iterate(iterable, function (promise) {
    call($promiseResolve, C, promise).then(capability.resolve, reject);
   });
  });
  if (result.error)
   reject(result.value);
  return capability.promise;
 }
});

/***/ }),
/* 106 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var call = __w_pdfjs_require__(9);
var newPromiseCapabilityModule = __w_pdfjs_require__(94);
var FORCED_PROMISE_CONSTRUCTOR = (__w_pdfjs_require__(92).CONSTRUCTOR);
$({
 target: 'Promise',
 stat: true,
 forced: FORCED_PROMISE_CONSTRUCTOR
}, {
 reject: function reject(r) {
  var capability = newPromiseCapabilityModule.f(this);
  call(capability.reject, undefined, r);
  return capability.promise;
 }
});

/***/ }),
/* 107 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var getBuiltIn = __w_pdfjs_require__(23);
var IS_PURE = __w_pdfjs_require__(35);
var NativePromiseConstructor = __w_pdfjs_require__(91);
var FORCED_PROMISE_CONSTRUCTOR = (__w_pdfjs_require__(92).CONSTRUCTOR);
var promiseResolve = __w_pdfjs_require__(108);
var PromiseConstructorWrapper = getBuiltIn('Promise');
var CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;
$({
 target: 'Promise',
 stat: true,
 forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR
}, {
 resolve: function resolve(x) {
  return promiseResolve(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor : this, x);
 }
});

/***/ }),
/* 108 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var anObject = __w_pdfjs_require__(46);
var isObject = __w_pdfjs_require__(20);
var newPromiseCapability = __w_pdfjs_require__(94);
module.exports = function (C, x) {
 anObject(C);
 if (isObject(x) && x.constructor === C)
  return x;
 var promiseCapability = newPromiseCapability.f(C);
 var resolve = promiseCapability.resolve;
 resolve(x);
 return promiseCapability.promise;
};

/***/ }),
/* 109 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var exec = __w_pdfjs_require__(110);
$({
 target: 'RegExp',
 proto: true,
 forced: /./.exec !== exec
}, { exec: exec });

/***/ }),
/* 110 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var call = __w_pdfjs_require__(9);
var uncurryThis = __w_pdfjs_require__(15);
var toString = __w_pdfjs_require__(111);
var regexpFlags = __w_pdfjs_require__(112);
var stickyHelpers = __w_pdfjs_require__(113);
var shared = __w_pdfjs_require__(34);
var create = __w_pdfjs_require__(114);
var getInternalState = (__w_pdfjs_require__(49).get);
var UNSUPPORTED_DOT_ALL = __w_pdfjs_require__(117);
var UNSUPPORTED_NCG = __w_pdfjs_require__(118);
var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var UPDATES_LAST_INDEX_WRONG = (function () {
 var re1 = /a/;
 var re2 = /b*/g;
 call(nativeExec, re1, 'a');
 call(nativeExec, re2, 'a');
 return re1.lastIndex !== 0 || re2.lastIndex !== 0;
}());
var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;
var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
if (PATCH) {
 patchedExec = function exec(string) {
  var re = this;
  var state = getInternalState(re);
  var str = toString(string);
  var raw = state.raw;
  var result, reCopy, lastIndex, match, i, object, group;
  if (raw) {
   raw.lastIndex = re.lastIndex;
   result = call(patchedExec, raw, str);
   re.lastIndex = raw.lastIndex;
   return result;
  }
  var groups = state.groups;
  var sticky = UNSUPPORTED_Y && re.sticky;
  var flags = call(regexpFlags, re);
  var source = re.source;
  var charsAdded = 0;
  var strCopy = str;
  if (sticky) {
   flags = replace(flags, 'y', '');
   if (indexOf(flags, 'g') === -1) {
    flags += 'g';
   }
   strCopy = stringSlice(str, re.lastIndex);
   if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
    source = '(?: ' + source + ')';
    strCopy = ' ' + strCopy;
    charsAdded++;
   }
   reCopy = new RegExp('^(?:' + source + ')', flags);
  }
  if (NPCG_INCLUDED) {
   reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
  }
  if (UPDATES_LAST_INDEX_WRONG)
   lastIndex = re.lastIndex;
  match = call(nativeExec, sticky ? reCopy : re, strCopy);
  if (sticky) {
   if (match) {
    match.input = stringSlice(match.input, charsAdded);
    match[0] = stringSlice(match[0], charsAdded);
    match.index = re.lastIndex;
    re.lastIndex += match[0].length;
   } else
    re.lastIndex = 0;
  } else if (UPDATES_LAST_INDEX_WRONG && match) {
   re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
  }
  if (NPCG_INCLUDED && match && match.length > 1) {
   call(nativeReplace, match[0], reCopy, function () {
    for (i = 1; i < arguments.length - 2; i++) {
     if (arguments[i] === undefined)
      match[i] = undefined;
    }
   });
  }
  if (match && groups) {
   match.groups = object = create(null);
   for (i = 0; i < groups.length; i++) {
    group = groups[i];
    object[group[0]] = match[group[1]];
   }
  }
  return match;
 };
}
module.exports = patchedExec;

/***/ }),
/* 111 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var classof = __w_pdfjs_require__(76);
var String = global.String;
module.exports = function (argument) {
 if (classof(argument) === 'Symbol')
  throw TypeError('Cannot convert a Symbol value to a string');
 return String(argument);
};

/***/ }),
/* 112 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var anObject = __w_pdfjs_require__(46);
module.exports = function () {
 var that = anObject(this);
 var result = '';
 if (that.global)
  result += 'g';
 if (that.ignoreCase)
  result += 'i';
 if (that.multiline)
  result += 'm';
 if (that.dotAll)
  result += 's';
 if (that.unicode)
  result += 'u';
 if (that.sticky)
  result += 'y';
 return result;
};

/***/ }),
/* 113 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
var global = __w_pdfjs_require__(5);
var $RegExp = global.RegExp;
var UNSUPPORTED_Y = fails(function () {
 var re = $RegExp('a', 'y');
 re.lastIndex = 2;
 return re.exec('abcd') != null;
});
var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
 return !$RegExp('a', 'y').sticky;
});
var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
 var re = $RegExp('^r', 'gy');
 re.lastIndex = 2;
 return re.exec('str') != null;
});
module.exports = {
 BROKEN_CARET: BROKEN_CARET,
 MISSED_STICKY: MISSED_STICKY,
 UNSUPPORTED_Y: UNSUPPORTED_Y
};

/***/ }),
/* 114 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var anObject = __w_pdfjs_require__(46);
var definePropertiesModule = __w_pdfjs_require__(115);
var enumBugKeys = __w_pdfjs_require__(63);
var hiddenKeys = __w_pdfjs_require__(52);
var html = __w_pdfjs_require__(81);
var documentCreateElement = __w_pdfjs_require__(42);
var sharedKey = __w_pdfjs_require__(51);
var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');
var EmptyConstructor = function () {
};
var scriptTag = function (content) {
 return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};
var NullProtoObjectViaActiveX = function (activeXDocument) {
 activeXDocument.write(scriptTag(''));
 activeXDocument.close();
 var temp = activeXDocument.parentWindow.Object;
 activeXDocument = null;
 return temp;
};
var NullProtoObjectViaIFrame = function () {
 var iframe = documentCreateElement('iframe');
 var JS = 'java' + SCRIPT + ':';
 var iframeDocument;
 iframe.style.display = 'none';
 html.appendChild(iframe);
 iframe.src = String(JS);
 iframeDocument = iframe.contentWindow.document;
 iframeDocument.open();
 iframeDocument.write(scriptTag('document.F=Object'));
 iframeDocument.close();
 return iframeDocument.F;
};
var activeXDocument;
var NullProtoObject = function () {
 try {
  activeXDocument = new ActiveXObject('htmlfile');
 } catch (error) {
 }
 NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
 var length = enumBugKeys.length;
 while (length--)
  delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
 return NullProtoObject();
};
hiddenKeys[IE_PROTO] = true;
module.exports = Object.create || function create(O, Properties) {
 var result;
 if (O !== null) {
  EmptyConstructor[PROTOTYPE] = anObject(O);
  result = new EmptyConstructor();
  EmptyConstructor[PROTOTYPE] = null;
  result[IE_PROTO] = O;
 } else
  result = NullProtoObject();
 return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};

/***/ }),
/* 115 */
/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {

var DESCRIPTORS = __w_pdfjs_require__(7);
var V8_PROTOTYPE_DEFINE_BUG = __w_pdfjs_require__(45);
var definePropertyModule = __w_pdfjs_require__(44);
var anObject = __w_pdfjs_require__(46);
var toIndexedObject = __w_pdfjs_require__(13);
var objectKeys = __w_pdfjs_require__(116);
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
 anObject(O);
 var props = toIndexedObject(Properties);
 var keys = objectKeys(Properties);
 var length = keys.length;
 var index = 0;
 var key;
 while (length > index)
  definePropertyModule.f(O, key = keys[index++], props[key]);
 return O;
};

/***/ }),
/* 116 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var internalObjectKeys = __w_pdfjs_require__(57);
var enumBugKeys = __w_pdfjs_require__(63);
module.exports = Object.keys || function keys(O) {
 return internalObjectKeys(O, enumBugKeys);
};

/***/ }),
/* 117 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
var global = __w_pdfjs_require__(5);
var $RegExp = global.RegExp;
module.exports = fails(function () {
 var re = $RegExp('.', 's');
 return !(re.dotAll && re.exec('\n') && re.flags === 's');
});

/***/ }),
/* 118 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
var global = __w_pdfjs_require__(5);
var $RegExp = global.RegExp;
module.exports = fails(function () {
 var re = $RegExp('(?<a>b)', 'g');
 return re.exec('b').groups.a !== 'b' || 'b'.replace(re, '$<a>c') !== 'bc';
});

/***/ }),
/* 119 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var apply = __w_pdfjs_require__(79);
var call = __w_pdfjs_require__(9);
var uncurryThis = __w_pdfjs_require__(15);
var fixRegExpWellKnownSymbolLogic = __w_pdfjs_require__(120);
var fails = __w_pdfjs_require__(8);
var anObject = __w_pdfjs_require__(46);
var isCallable = __w_pdfjs_require__(21);
var toIntegerOrInfinity = __w_pdfjs_require__(60);
var toLength = __w_pdfjs_require__(62);
var toString = __w_pdfjs_require__(111);
var requireObjectCoercible = __w_pdfjs_require__(17);
var advanceStringIndex = __w_pdfjs_require__(121);
var getMethod = __w_pdfjs_require__(29);
var getSubstitution = __w_pdfjs_require__(123);
var regExpExec = __w_pdfjs_require__(124);
var wellKnownSymbol = __w_pdfjs_require__(33);
var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);
var maybeToString = function (it) {
 return it === undefined ? it : String(it);
};
var REPLACE_KEEPS_$0 = (function () {
 return 'a'.replace(/./, '$0') === '$0';
}());
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
 if (/./[REPLACE]) {
  return /./[REPLACE]('a', '$0') === '';
 }
 return false;
}());
var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
 var re = /./;
 re.exec = function () {
  var result = [];
  result.groups = { a: '7' };
  return result;
 };
 return ''.replace(re, '$<a>') !== '7';
});
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
 var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';
 return [
  function replace(searchValue, replaceValue) {
   var O = requireObjectCoercible(this);
   var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);
   return replacer ? call(replacer, searchValue, O, replaceValue) : call(nativeReplace, toString(O), searchValue, replaceValue);
  },
  function (string, replaceValue) {
   var rx = anObject(this);
   var S = toString(string);
   if (typeof replaceValue == 'string' && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, '$<') === -1) {
    var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
    if (res.done)
     return res.value;
   }
   var functionalReplace = isCallable(replaceValue);
   if (!functionalReplace)
    replaceValue = toString(replaceValue);
   var global = rx.global;
   if (global) {
    var fullUnicode = rx.unicode;
    rx.lastIndex = 0;
   }
   var results = [];
   while (true) {
    var result = regExpExec(rx, S);
    if (result === null)
     break;
    push(results, result);
    if (!global)
     break;
    var matchStr = toString(result[0]);
    if (matchStr === '')
     rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
   }
   var accumulatedResult = '';
   var nextSourcePosition = 0;
   for (var i = 0; i < results.length; i++) {
    result = results[i];
    var matched = toString(result[0]);
    var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
    var captures = [];
    for (var j = 1; j < result.length; j++)
     push(captures, maybeToString(result[j]));
    var namedCaptures = result.groups;
    if (functionalReplace) {
     var replacerArgs = concat([matched], captures, position, S);
     if (namedCaptures !== undefined)
      push(replacerArgs, namedCaptures);
     var replacement = toString(apply(replaceValue, undefined, replacerArgs));
    } else {
     replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
    }
    if (position >= nextSourcePosition) {
     accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
     nextSourcePosition = position + matched.length;
    }
   }
   return accumulatedResult + stringSlice(S, nextSourcePosition);
  }
 ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

/***/ }),
/* 120 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

__w_pdfjs_require__(109);
var uncurryThis = __w_pdfjs_require__(15);
var redefine = __w_pdfjs_require__(47);
var regexpExec = __w_pdfjs_require__(110);
var fails = __w_pdfjs_require__(8);
var wellKnownSymbol = __w_pdfjs_require__(33);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;
module.exports = function (KEY, exec, FORCED, SHAM) {
 var SYMBOL = wellKnownSymbol(KEY);
 var DELEGATES_TO_SYMBOL = !fails(function () {
  var O = {};
  O[SYMBOL] = function () {
   return 7;
  };
  return ''[KEY](O) != 7;
 });
 var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
  var execCalled = false;
  var re = /a/;
  if (KEY === 'split') {
   re = {};
   re.constructor = {};
   re.constructor[SPECIES] = function () {
    return re;
   };
   re.flags = '';
   re[SYMBOL] = /./[SYMBOL];
  }
  re.exec = function () {
   execCalled = true;
   return null;
  };
  re[SYMBOL]('');
  return !execCalled;
 });
 if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {
  var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
  var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
   var uncurriedNativeMethod = uncurryThis(nativeMethod);
   var $exec = regexp.exec;
   if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
    if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
     return {
      done: true,
      value: uncurriedNativeRegExpMethod(regexp, str, arg2)
     };
    }
    return {
     done: true,
     value: uncurriedNativeMethod(str, regexp, arg2)
    };
   }
   return { done: false };
  });
  redefine(String.prototype, KEY, methods[0]);
  redefine(RegExpPrototype, SYMBOL, methods[1]);
 }
 if (SHAM)
  createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};

/***/ }),
/* 121 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var charAt = (__w_pdfjs_require__(122).charAt);
module.exports = function (S, index, unicode) {
 return index + (unicode ? charAt(S, index).length : 1);
};

/***/ }),
/* 122 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var toIntegerOrInfinity = __w_pdfjs_require__(60);
var toString = __w_pdfjs_require__(111);
var requireObjectCoercible = __w_pdfjs_require__(17);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);
var createMethod = function (CONVERT_TO_STRING) {
 return function ($this, pos) {
  var S = toString(requireObjectCoercible($this));
  var position = toIntegerOrInfinity(pos);
  var size = S.length;
  var first, second;
  if (position < 0 || position >= size)
   return CONVERT_TO_STRING ? '' : undefined;
  first = charCodeAt(S, position);
  return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
 };
};
module.exports = {
 codeAt: createMethod(false),
 charAt: createMethod(true)
};

/***/ }),
/* 123 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var uncurryThis = __w_pdfjs_require__(15);
var toObject = __w_pdfjs_require__(39);
var floor = Math.floor;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
 var tailPos = position + matched.length;
 var m = captures.length;
 var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
 if (namedCaptures !== undefined) {
  namedCaptures = toObject(namedCaptures);
  symbols = SUBSTITUTION_SYMBOLS;
 }
 return replace(replacement, symbols, function (match, ch) {
  var capture;
  switch (charAt(ch, 0)) {
  case '$':
   return '$';
  case '&':
   return matched;
  case '`':
   return stringSlice(str, 0, position);
  case "'":
   return stringSlice(str, tailPos);
  case '<':
   capture = namedCaptures[stringSlice(ch, 1, -1)];
   break;
  default:
   var n = +ch;
   if (n === 0)
    return match;
   if (n > m) {
    var f = floor(n / 10);
    if (f === 0)
     return match;
    if (f <= m)
     return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
    return match;
   }
   capture = captures[n - 1];
  }
  return capture === undefined ? '' : capture;
 });
};

/***/ }),
/* 124 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var anObject = __w_pdfjs_require__(46);
var isCallable = __w_pdfjs_require__(21);
var classof = __w_pdfjs_require__(16);
var regexpExec = __w_pdfjs_require__(110);
var TypeError = global.TypeError;
module.exports = function (R, S) {
 var exec = R.exec;
 if (isCallable(exec)) {
  var result = call(exec, R, S);
  if (result !== null)
   anObject(result);
  return result;
 }
 if (classof(R) === 'RegExp')
  return call(regexpExec, R, S);
 throw TypeError('RegExp#exec called on incompatible receiver');
};

/***/ }),
/* 125 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Int8', function (init) {
 return function Int8Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 126 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var DESCRIPTORS = __w_pdfjs_require__(7);
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __w_pdfjs_require__(127);
var ArrayBufferViewCore = __w_pdfjs_require__(128);
var ArrayBufferModule = __w_pdfjs_require__(132);
var anInstance = __w_pdfjs_require__(72);
var createPropertyDescriptor = __w_pdfjs_require__(12);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var isIntegralNumber = __w_pdfjs_require__(138);
var toLength = __w_pdfjs_require__(62);
var toIndex = __w_pdfjs_require__(133);
var toOffset = __w_pdfjs_require__(139);
var toPropertyKey = __w_pdfjs_require__(18);
var hasOwn = __w_pdfjs_require__(38);
var classof = __w_pdfjs_require__(76);
var isObject = __w_pdfjs_require__(20);
var isSymbol = __w_pdfjs_require__(22);
var create = __w_pdfjs_require__(114);
var isPrototypeOf = __w_pdfjs_require__(24);
var setPrototypeOf = __w_pdfjs_require__(68);
var getOwnPropertyNames = (__w_pdfjs_require__(56).f);
var typedArrayFrom = __w_pdfjs_require__(141);
var forEach = (__w_pdfjs_require__(142).forEach);
var setSpecies = __w_pdfjs_require__(71);
var definePropertyModule = __w_pdfjs_require__(44);
var getOwnPropertyDescriptorModule = __w_pdfjs_require__(6);
var InternalStateModule = __w_pdfjs_require__(49);
var inheritIfRequired = __w_pdfjs_require__(146);
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var round = Math.round;
var RangeError = global.RangeError;
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var ArrayBufferPrototype = ArrayBuffer.prototype;
var DataView = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray = ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';
var fromList = function (C, list) {
 aTypedArrayConstructor(C);
 var index = 0;
 var length = list.length;
 var result = new C(length);
 while (length > index)
  result[index] = list[index++];
 return result;
};
var addGetter = function (it, key) {
 nativeDefineProperty(it, key, {
  get: function () {
   return getInternalState(this)[key];
  }
 });
};
var isArrayBuffer = function (it) {
 var klass;
 return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
};
var isTypedArrayIndex = function (target, key) {
 return isTypedArray(target) && !isSymbol(key) && key in target && isIntegralNumber(+key) && key >= 0;
};
var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
 key = toPropertyKey(key);
 return isTypedArrayIndex(target, key) ? createPropertyDescriptor(2, target[key]) : nativeGetOwnPropertyDescriptor(target, key);
};
var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
 key = toPropertyKey(key);
 if (isTypedArrayIndex(target, key) && isObject(descriptor) && hasOwn(descriptor, 'value') && !hasOwn(descriptor, 'get') && !hasOwn(descriptor, 'set') && !descriptor.configurable && (!hasOwn(descriptor, 'writable') || descriptor.writable) && (!hasOwn(descriptor, 'enumerable') || descriptor.enumerable)) {
  target[key] = descriptor.value;
  return target;
 }
 return nativeDefineProperty(target, key, descriptor);
};
if (DESCRIPTORS) {
 if (!NATIVE_ARRAY_BUFFER_VIEWS) {
  getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
  definePropertyModule.f = wrappedDefineProperty;
  addGetter(TypedArrayPrototype, 'buffer');
  addGetter(TypedArrayPrototype, 'byteOffset');
  addGetter(TypedArrayPrototype, 'byteLength');
  addGetter(TypedArrayPrototype, 'length');
 }
 $({
  target: 'Object',
  stat: true,
  forced: !NATIVE_ARRAY_BUFFER_VIEWS
 }, {
  getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
  defineProperty: wrappedDefineProperty
 });
 module.exports = function (TYPE, wrapper, CLAMPED) {
  var BYTES = TYPE.match(/\d+$/)[0] / 8;
  var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
  var GETTER = 'get' + TYPE;
  var SETTER = 'set' + TYPE;
  var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
  var TypedArrayConstructor = NativeTypedArrayConstructor;
  var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
  var exported = {};
  var getter = function (that, index) {
   var data = getInternalState(that);
   return data.view[GETTER](index * BYTES + data.byteOffset, true);
  };
  var setter = function (that, index, value) {
   var data = getInternalState(that);
   if (CLAMPED)
    value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
   data.view[SETTER](index * BYTES + data.byteOffset, value, true);
  };
  var addElement = function (that, index) {
   nativeDefineProperty(that, index, {
    get: function () {
     return getter(this, index);
    },
    set: function (value) {
     return setter(this, index, value);
    },
    enumerable: true
   });
  };
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
   TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
    anInstance(that, TypedArrayConstructorPrototype);
    var index = 0;
    var byteOffset = 0;
    var buffer, byteLength, length;
    if (!isObject(data)) {
     length = toIndex(data);
     byteLength = length * BYTES;
     buffer = new ArrayBuffer(byteLength);
    } else if (isArrayBuffer(data)) {
     buffer = data;
     byteOffset = toOffset(offset, BYTES);
     var $len = data.byteLength;
     if ($length === undefined) {
      if ($len % BYTES)
       throw RangeError(WRONG_LENGTH);
      byteLength = $len - byteOffset;
      if (byteLength < 0)
       throw RangeError(WRONG_LENGTH);
     } else {
      byteLength = toLength($length) * BYTES;
      if (byteLength + byteOffset > $len)
       throw RangeError(WRONG_LENGTH);
     }
     length = byteLength / BYTES;
    } else if (isTypedArray(data)) {
     return fromList(TypedArrayConstructor, data);
    } else {
     return call(typedArrayFrom, TypedArrayConstructor, data);
    }
    setInternalState(that, {
     buffer: buffer,
     byteOffset: byteOffset,
     byteLength: byteLength,
     length: length,
     view: new DataView(buffer)
    });
    while (index < length)
     addElement(that, index++);
   });
   if (setPrototypeOf)
    setPrototypeOf(TypedArrayConstructor, TypedArray);
   TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
  } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
   TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
    anInstance(dummy, TypedArrayConstructorPrototype);
    return inheritIfRequired((function () {
     if (!isObject(data))
      return new NativeTypedArrayConstructor(toIndex(data));
     if (isArrayBuffer(data))
      return $length !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length) : typedArrayOffset !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data);
     if (isTypedArray(data))
      return fromList(TypedArrayConstructor, data);
     return call(typedArrayFrom, TypedArrayConstructor, data);
    }()), dummy, TypedArrayConstructor);
   });
   if (setPrototypeOf)
    setPrototypeOf(TypedArrayConstructor, TypedArray);
   forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
    if (!(key in TypedArrayConstructor)) {
     createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
    }
   });
   TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
  }
  if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
   createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
  }
  createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);
  if (TYPED_ARRAY_TAG) {
   createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
  }
  exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;
  $({
   global: true,
   forced: TypedArrayConstructor != NativeTypedArrayConstructor,
   sham: !NATIVE_ARRAY_BUFFER_VIEWS
  }, exported);
  if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
   createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
  }
  if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
   createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
  }
  setSpecies(CONSTRUCTOR_NAME);
 };
} else
 module.exports = function () {
 };

/***/ }),
/* 127 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var fails = __w_pdfjs_require__(8);
var checkCorrectnessOfIteration = __w_pdfjs_require__(103);
var NATIVE_ARRAY_BUFFER_VIEWS = (__w_pdfjs_require__(128).NATIVE_ARRAY_BUFFER_VIEWS);
var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;
module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
 Int8Array(1);
}) || !fails(function () {
 new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
 new Int8Array();
 new Int8Array(null);
 new Int8Array(1.5);
 new Int8Array(iterable);
}, true) || fails(function () {
 return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});

/***/ }),
/* 128 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var NATIVE_ARRAY_BUFFER = __w_pdfjs_require__(129);
var DESCRIPTORS = __w_pdfjs_require__(7);
var global = __w_pdfjs_require__(5);
var isCallable = __w_pdfjs_require__(21);
var isObject = __w_pdfjs_require__(20);
var hasOwn = __w_pdfjs_require__(38);
var classof = __w_pdfjs_require__(76);
var tryToString = __w_pdfjs_require__(31);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var redefine = __w_pdfjs_require__(47);
var defineProperty = (__w_pdfjs_require__(44).f);
var isPrototypeOf = __w_pdfjs_require__(24);
var getPrototypeOf = __w_pdfjs_require__(130);
var setPrototypeOf = __w_pdfjs_require__(68);
var wellKnownSymbol = __w_pdfjs_require__(33);
var uid = __w_pdfjs_require__(40);
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var TypeError = global.TypeError;
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');
var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQUIRED = false;
var NAME, Constructor, Prototype;
var TypedArrayConstructorsList = {
 Int8Array: 1,
 Uint8Array: 1,
 Uint8ClampedArray: 1,
 Int16Array: 2,
 Uint16Array: 2,
 Int32Array: 4,
 Uint32Array: 4,
 Float32Array: 4,
 Float64Array: 8
};
var BigIntArrayConstructorsList = {
 BigInt64Array: 8,
 BigUint64Array: 8
};
var isView = function isView(it) {
 if (!isObject(it))
  return false;
 var klass = classof(it);
 return klass === 'DataView' || hasOwn(TypedArrayConstructorsList, klass) || hasOwn(BigIntArrayConstructorsList, klass);
};
var isTypedArray = function (it) {
 if (!isObject(it))
  return false;
 var klass = classof(it);
 return hasOwn(TypedArrayConstructorsList, klass) || hasOwn(BigIntArrayConstructorsList, klass);
};
var aTypedArray = function (it) {
 if (isTypedArray(it))
  return it;
 throw TypeError('Target is not a typed array');
};
var aTypedArrayConstructor = function (C) {
 if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C)))
  return C;
 throw TypeError(tryToString(C) + ' is not a typed array constructor');
};
var exportTypedArrayMethod = function (KEY, property, forced, options) {
 if (!DESCRIPTORS)
  return;
 if (forced)
  for (var ARRAY in TypedArrayConstructorsList) {
   var TypedArrayConstructor = global[ARRAY];
   if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY))
    try {
     delete TypedArrayConstructor.prototype[KEY];
    } catch (error) {
     try {
      TypedArrayConstructor.prototype[KEY] = property;
     } catch (error2) {
     }
    }
  }
 if (!TypedArrayPrototype[KEY] || forced) {
  redefine(TypedArrayPrototype, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);
 }
};
var exportTypedArrayStaticMethod = function (KEY, property, forced) {
 var ARRAY, TypedArrayConstructor;
 if (!DESCRIPTORS)
  return;
 if (setPrototypeOf) {
  if (forced)
   for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY))
     try {
      delete TypedArrayConstructor[KEY];
     } catch (error) {
     }
   }
  if (!TypedArray[KEY] || forced) {
   try {
    return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
   } catch (error) {
   }
  } else
   return;
 }
 for (ARRAY in TypedArrayConstructorsList) {
  TypedArrayConstructor = global[ARRAY];
  if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
   redefine(TypedArrayConstructor, KEY, property);
  }
 }
};
for (NAME in TypedArrayConstructorsList) {
 Constructor = global[NAME];
 Prototype = Constructor && Constructor.prototype;
 if (Prototype)
  createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
 else
  NATIVE_ARRAY_BUFFER_VIEWS = false;
}
for (NAME in BigIntArrayConstructorsList) {
 Constructor = global[NAME];
 Prototype = Constructor && Constructor.prototype;
 if (Prototype)
  createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
}
if (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {
 TypedArray = function TypedArray() {
  throw TypeError('Incorrect invocation');
 };
 if (NATIVE_ARRAY_BUFFER_VIEWS)
  for (NAME in TypedArrayConstructorsList) {
   if (global[NAME])
    setPrototypeOf(global[NAME], TypedArray);
  }
}
if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
 TypedArrayPrototype = TypedArray.prototype;
 if (NATIVE_ARRAY_BUFFER_VIEWS)
  for (NAME in TypedArrayConstructorsList) {
   if (global[NAME])
    setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
}
if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
 setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}
if (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {
 TYPED_ARRAY_TAG_REQUIRED = true;
 defineProperty(TypedArrayPrototype, TO_STRING_TAG, {
  get: function () {
   return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
  }
 });
 for (NAME in TypedArrayConstructorsList)
  if (global[NAME]) {
   createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
  }
}
module.exports = {
 NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
 TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,
 TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,
 aTypedArray: aTypedArray,
 aTypedArrayConstructor: aTypedArrayConstructor,
 exportTypedArrayMethod: exportTypedArrayMethod,
 exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
 isView: isView,
 isTypedArray: isTypedArray,
 TypedArray: TypedArray,
 TypedArrayPrototype: TypedArrayPrototype
};

/***/ }),
/* 129 */
/***/ ((module) => {

module.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';

/***/ }),
/* 130 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var hasOwn = __w_pdfjs_require__(38);
var isCallable = __w_pdfjs_require__(21);
var toObject = __w_pdfjs_require__(39);
var sharedKey = __w_pdfjs_require__(51);
var CORRECT_PROTOTYPE_GETTER = __w_pdfjs_require__(131);
var IE_PROTO = sharedKey('IE_PROTO');
var Object = global.Object;
var ObjectPrototype = Object.prototype;
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
 var object = toObject(O);
 if (hasOwn(object, IE_PROTO))
  return object[IE_PROTO];
 var constructor = object.constructor;
 if (isCallable(constructor) && object instanceof constructor) {
  return constructor.prototype;
 }
 return object instanceof Object ? ObjectPrototype : null;
};

/***/ }),
/* 131 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var fails = __w_pdfjs_require__(8);
module.exports = !fails(function () {
 function F() {
 }
 F.prototype.constructor = null;
 return Object.getPrototypeOf(new F()) !== F.prototype;
});

/***/ }),
/* 132 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var global = __w_pdfjs_require__(5);
var uncurryThis = __w_pdfjs_require__(15);
var DESCRIPTORS = __w_pdfjs_require__(7);
var NATIVE_ARRAY_BUFFER = __w_pdfjs_require__(129);
var FunctionName = __w_pdfjs_require__(53);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var redefineAll = __w_pdfjs_require__(67);
var fails = __w_pdfjs_require__(8);
var anInstance = __w_pdfjs_require__(72);
var toIntegerOrInfinity = __w_pdfjs_require__(60);
var toLength = __w_pdfjs_require__(62);
var toIndex = __w_pdfjs_require__(133);
var IEEE754 = __w_pdfjs_require__(134);
var getPrototypeOf = __w_pdfjs_require__(130);
var setPrototypeOf = __w_pdfjs_require__(68);
var getOwnPropertyNames = (__w_pdfjs_require__(56).f);
var defineProperty = (__w_pdfjs_require__(44).f);
var arrayFill = __w_pdfjs_require__(135);
var arraySlice = __w_pdfjs_require__(136);
var setToStringTag = __w_pdfjs_require__(70);
var InternalStateModule = __w_pdfjs_require__(49);
var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var ArrayBufferPrototype = $ArrayBuffer && $ArrayBuffer[PROTOTYPE];
var $DataView = global[DATA_VIEW];
var DataViewPrototype = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype = Object.prototype;
var Array = global.Array;
var RangeError = global.RangeError;
var fill = uncurryThis(arrayFill);
var reverse = uncurryThis([].reverse);
var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;
var packInt8 = function (number) {
 return [number & 0xFF];
};
var packInt16 = function (number) {
 return [
  number & 0xFF,
  number >> 8 & 0xFF
 ];
};
var packInt32 = function (number) {
 return [
  number & 0xFF,
  number >> 8 & 0xFF,
  number >> 16 & 0xFF,
  number >> 24 & 0xFF
 ];
};
var unpackInt32 = function (buffer) {
 return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};
var packFloat32 = function (number) {
 return packIEEE754(number, 23, 4);
};
var packFloat64 = function (number) {
 return packIEEE754(number, 52, 8);
};
var addGetter = function (Constructor, key) {
 defineProperty(Constructor[PROTOTYPE], key, {
  get: function () {
   return getInternalState(this)[key];
  }
 });
};
var get = function (view, count, index, isLittleEndian) {
 var intIndex = toIndex(index);
 var store = getInternalState(view);
 if (intIndex + count > store.byteLength)
  throw RangeError(WRONG_INDEX);
 var bytes = getInternalState(store.buffer).bytes;
 var start = intIndex + store.byteOffset;
 var pack = arraySlice(bytes, start, start + count);
 return isLittleEndian ? pack : reverse(pack);
};
var set = function (view, count, index, conversion, value, isLittleEndian) {
 var intIndex = toIndex(index);
 var store = getInternalState(view);
 if (intIndex + count > store.byteLength)
  throw RangeError(WRONG_INDEX);
 var bytes = getInternalState(store.buffer).bytes;
 var start = intIndex + store.byteOffset;
 var pack = conversion(+value);
 for (var i = 0; i < count; i++)
  bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};
if (!NATIVE_ARRAY_BUFFER) {
 $ArrayBuffer = function ArrayBuffer(length) {
  anInstance(this, ArrayBufferPrototype);
  var byteLength = toIndex(length);
  setInternalState(this, {
   bytes: fill(Array(byteLength), 0),
   byteLength: byteLength
  });
  if (!DESCRIPTORS)
   this.byteLength = byteLength;
 };
 ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE];
 $DataView = function DataView(buffer, byteOffset, byteLength) {
  anInstance(this, DataViewPrototype);
  anInstance(buffer, ArrayBufferPrototype);
  var bufferLength = getInternalState(buffer).byteLength;
  var offset = toIntegerOrInfinity(byteOffset);
  if (offset < 0 || offset > bufferLength)
   throw RangeError('Wrong offset');
  byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
  if (offset + byteLength > bufferLength)
   throw RangeError(WRONG_LENGTH);
  setInternalState(this, {
   buffer: buffer,
   byteLength: byteLength,
   byteOffset: offset
  });
  if (!DESCRIPTORS) {
   this.buffer = buffer;
   this.byteLength = byteLength;
   this.byteOffset = offset;
  }
 };
 DataViewPrototype = $DataView[PROTOTYPE];
 if (DESCRIPTORS) {
  addGetter($ArrayBuffer, 'byteLength');
  addGetter($DataView, 'buffer');
  addGetter($DataView, 'byteLength');
  addGetter($DataView, 'byteOffset');
 }
 redefineAll(DataViewPrototype, {
  getInt8: function getInt8(byteOffset) {
   return get(this, 1, byteOffset)[0] << 24 >> 24;
  },
  getUint8: function getUint8(byteOffset) {
   return get(this, 1, byteOffset)[0];
  },
  getInt16: function getInt16(byteOffset) {
   var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
   return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
  },
  getUint16: function getUint16(byteOffset) {
   var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
   return bytes[1] << 8 | bytes[0];
  },
  getInt32: function getInt32(byteOffset) {
   return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
  },
  getUint32: function getUint32(byteOffset) {
   return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
  },
  getFloat32: function getFloat32(byteOffset) {
   return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
  },
  getFloat64: function getFloat64(byteOffset) {
   return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
  },
  setInt8: function setInt8(byteOffset, value) {
   set(this, 1, byteOffset, packInt8, value);
  },
  setUint8: function setUint8(byteOffset, value) {
   set(this, 1, byteOffset, packInt8, value);
  },
  setInt16: function setInt16(byteOffset, value) {
   set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
  },
  setUint16: function setUint16(byteOffset, value) {
   set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
  },
  setInt32: function setInt32(byteOffset, value) {
   set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
  },
  setUint32: function setUint32(byteOffset, value) {
   set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
  },
  setFloat32: function setFloat32(byteOffset, value) {
   set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
  },
  setFloat64: function setFloat64(byteOffset, value) {
   set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
  }
 });
} else {
 var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;
 if (!fails(function () {
   NativeArrayBuffer(1);
  }) || !fails(function () {
   new NativeArrayBuffer(-1);
  }) || fails(function () {
   new NativeArrayBuffer();
   new NativeArrayBuffer(1.5);
   new NativeArrayBuffer(NaN);
   return INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
  })) {
  $ArrayBuffer = function ArrayBuffer(length) {
   anInstance(this, ArrayBufferPrototype);
   return new NativeArrayBuffer(toIndex(length));
  };
  $ArrayBuffer[PROTOTYPE] = ArrayBufferPrototype;
  for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
   if (!((key = keys[j++]) in $ArrayBuffer)) {
    createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
   }
  }
  ArrayBufferPrototype.constructor = $ArrayBuffer;
 } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
  createNonEnumerableProperty(NativeArrayBuffer, 'name', ARRAY_BUFFER);
 }
 if (setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
  setPrototypeOf(DataViewPrototype, ObjectPrototype);
 }
 var testView = new $DataView(new $ArrayBuffer(2));
 var $setInt8 = uncurryThis(DataViewPrototype.setInt8);
 testView.setInt8(0, 2147483648);
 testView.setInt8(1, 2147483649);
 if (testView.getInt8(0) || !testView.getInt8(1))
  redefineAll(DataViewPrototype, {
   setInt8: function setInt8(byteOffset, value) {
    $setInt8(this, byteOffset, value << 24 >> 24);
   },
   setUint8: function setUint8(byteOffset, value) {
    $setInt8(this, byteOffset, value << 24 >> 24);
   }
  }, { unsafe: true });
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
module.exports = {
 ArrayBuffer: $ArrayBuffer,
 DataView: $DataView
};

/***/ }),
/* 133 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var toIntegerOrInfinity = __w_pdfjs_require__(60);
var toLength = __w_pdfjs_require__(62);
var RangeError = global.RangeError;
module.exports = function (it) {
 if (it === undefined)
  return 0;
 var number = toIntegerOrInfinity(it);
 var length = toLength(number);
 if (number !== length)
  throw RangeError('Wrong length or index');
 return length;
};

/***/ }),
/* 134 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var Array = global.Array;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var pack = function (number, mantissaLength, bytes) {
 var buffer = Array(bytes);
 var exponentLength = bytes * 8 - mantissaLength - 1;
 var eMax = (1 << exponentLength) - 1;
 var eBias = eMax >> 1;
 var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
 var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
 var index = 0;
 var exponent, mantissa, c;
 number = abs(number);
 if (number != number || number === Infinity) {
  mantissa = number != number ? 1 : 0;
  exponent = eMax;
 } else {
  exponent = floor(log(number) / LN2);
  c = pow(2, -exponent);
  if (number * c < 1) {
   exponent--;
   c *= 2;
  }
  if (exponent + eBias >= 1) {
   number += rt / c;
  } else {
   number += rt * pow(2, 1 - eBias);
  }
  if (number * c >= 2) {
   exponent++;
   c /= 2;
  }
  if (exponent + eBias >= eMax) {
   mantissa = 0;
   exponent = eMax;
  } else if (exponent + eBias >= 1) {
   mantissa = (number * c - 1) * pow(2, mantissaLength);
   exponent = exponent + eBias;
  } else {
   mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
   exponent = 0;
  }
 }
 while (mantissaLength >= 8) {
  buffer[index++] = mantissa & 255;
  mantissa /= 256;
  mantissaLength -= 8;
 }
 exponent = exponent << mantissaLength | mantissa;
 exponentLength += mantissaLength;
 while (exponentLength > 0) {
  buffer[index++] = exponent & 255;
  exponent /= 256;
  exponentLength -= 8;
 }
 buffer[--index] |= sign * 128;
 return buffer;
};
var unpack = function (buffer, mantissaLength) {
 var bytes = buffer.length;
 var exponentLength = bytes * 8 - mantissaLength - 1;
 var eMax = (1 << exponentLength) - 1;
 var eBias = eMax >> 1;
 var nBits = exponentLength - 7;
 var index = bytes - 1;
 var sign = buffer[index--];
 var exponent = sign & 127;
 var mantissa;
 sign >>= 7;
 while (nBits > 0) {
  exponent = exponent * 256 + buffer[index--];
  nBits -= 8;
 }
 mantissa = exponent & (1 << -nBits) - 1;
 exponent >>= -nBits;
 nBits += mantissaLength;
 while (nBits > 0) {
  mantissa = mantissa * 256 + buffer[index--];
  nBits -= 8;
 }
 if (exponent === 0) {
  exponent = 1 - eBias;
 } else if (exponent === eMax) {
  return mantissa ? NaN : sign ? -Infinity : Infinity;
 } else {
  mantissa = mantissa + pow(2, mantissaLength);
  exponent = exponent - eBias;
 }
 return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};
module.exports = {
 pack: pack,
 unpack: unpack
};

/***/ }),
/* 135 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var toObject = __w_pdfjs_require__(39);
var toAbsoluteIndex = __w_pdfjs_require__(59);
var lengthOfArrayLike = __w_pdfjs_require__(61);
module.exports = function fill(value) {
 var O = toObject(this);
 var length = lengthOfArrayLike(O);
 var argumentsLength = arguments.length;
 var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
 var end = argumentsLength > 2 ? arguments[2] : undefined;
 var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
 while (endPos > index)
  O[index++] = value;
 return O;
};

/***/ }),
/* 136 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var toAbsoluteIndex = __w_pdfjs_require__(59);
var lengthOfArrayLike = __w_pdfjs_require__(61);
var createProperty = __w_pdfjs_require__(137);
var Array = global.Array;
var max = Math.max;
module.exports = function (O, start, end) {
 var length = lengthOfArrayLike(O);
 var k = toAbsoluteIndex(start, length);
 var fin = toAbsoluteIndex(end === undefined ? length : end, length);
 var result = Array(max(fin - k, 0));
 for (var n = 0; k < fin; k++, n++)
  createProperty(result, n, O[k]);
 result.length = n;
 return result;
};

/***/ }),
/* 137 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var toPropertyKey = __w_pdfjs_require__(18);
var definePropertyModule = __w_pdfjs_require__(44);
var createPropertyDescriptor = __w_pdfjs_require__(12);
module.exports = function (object, key, value) {
 var propertyKey = toPropertyKey(key);
 if (propertyKey in object)
  definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
 else
  object[propertyKey] = value;
};

/***/ }),
/* 138 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var isObject = __w_pdfjs_require__(20);
var floor = Math.floor;
module.exports = Number.isInteger || function isInteger(it) {
 return !isObject(it) && isFinite(it) && floor(it) === it;
};

/***/ }),
/* 139 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var toPositiveInteger = __w_pdfjs_require__(140);
var RangeError = global.RangeError;
module.exports = function (it, BYTES) {
 var offset = toPositiveInteger(it);
 if (offset % BYTES)
  throw RangeError('Wrong offset');
 return offset;
};

/***/ }),
/* 140 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var toIntegerOrInfinity = __w_pdfjs_require__(60);
var RangeError = global.RangeError;
module.exports = function (it) {
 var result = toIntegerOrInfinity(it);
 if (result < 0)
  throw RangeError("The argument can't be less than 0");
 return result;
};

/***/ }),
/* 141 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var bind = __w_pdfjs_require__(80);
var call = __w_pdfjs_require__(9);
var aConstructor = __w_pdfjs_require__(74);
var toObject = __w_pdfjs_require__(39);
var lengthOfArrayLike = __w_pdfjs_require__(61);
var getIterator = __w_pdfjs_require__(99);
var getIteratorMethod = __w_pdfjs_require__(100);
var isArrayIteratorMethod = __w_pdfjs_require__(97);
var aTypedArrayConstructor = (__w_pdfjs_require__(128).aTypedArrayConstructor);
module.exports = function from(source) {
 var C = aConstructor(this);
 var O = toObject(source);
 var argumentsLength = arguments.length;
 var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
 var mapping = mapfn !== undefined;
 var iteratorMethod = getIteratorMethod(O);
 var i, length, result, step, iterator, next;
 if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
  iterator = getIterator(O, iteratorMethod);
  next = iterator.next;
  O = [];
  while (!(step = call(next, iterator)).done) {
   O.push(step.value);
  }
 }
 if (mapping && argumentsLength > 2) {
  mapfn = bind(mapfn, arguments[2]);
 }
 length = lengthOfArrayLike(O);
 result = new (aTypedArrayConstructor(C))(length);
 for (i = 0; length > i; i++) {
  result[i] = mapping ? mapfn(O[i], i) : O[i];
 }
 return result;
};

/***/ }),
/* 142 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var bind = __w_pdfjs_require__(80);
var uncurryThis = __w_pdfjs_require__(15);
var IndexedObject = __w_pdfjs_require__(14);
var toObject = __w_pdfjs_require__(39);
var lengthOfArrayLike = __w_pdfjs_require__(61);
var arraySpeciesCreate = __w_pdfjs_require__(143);
var push = uncurryThis([].push);
var createMethod = function (TYPE) {
 var IS_MAP = TYPE == 1;
 var IS_FILTER = TYPE == 2;
 var IS_SOME = TYPE == 3;
 var IS_EVERY = TYPE == 4;
 var IS_FIND_INDEX = TYPE == 6;
 var IS_FILTER_REJECT = TYPE == 7;
 var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
 return function ($this, callbackfn, that, specificCreate) {
  var O = toObject($this);
  var self = IndexedObject(O);
  var boundFunction = bind(callbackfn, that);
  var length = lengthOfArrayLike(self);
  var index = 0;
  var create = specificCreate || arraySpeciesCreate;
  var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
  var value, result;
  for (; length > index; index++)
   if (NO_HOLES || index in self) {
    value = self[index];
    result = boundFunction(value, index, O);
    if (TYPE) {
     if (IS_MAP)
      target[index] = result;
     else if (result)
      switch (TYPE) {
      case 3:
       return true;
      case 5:
       return value;
      case 6:
       return index;
      case 2:
       push(target, value);
      }
     else
      switch (TYPE) {
      case 4:
       return false;
      case 7:
       push(target, value);
      }
    }
   }
  return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
 };
};
module.exports = {
 forEach: createMethod(0),
 map: createMethod(1),
 filter: createMethod(2),
 some: createMethod(3),
 every: createMethod(4),
 find: createMethod(5),
 findIndex: createMethod(6),
 filterReject: createMethod(7)
};

/***/ }),
/* 143 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var arraySpeciesConstructor = __w_pdfjs_require__(144);
module.exports = function (originalArray, length) {
 return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};

/***/ }),
/* 144 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var isArray = __w_pdfjs_require__(145);
var isConstructor = __w_pdfjs_require__(75);
var isObject = __w_pdfjs_require__(20);
var wellKnownSymbol = __w_pdfjs_require__(33);
var SPECIES = wellKnownSymbol('species');
var Array = global.Array;
module.exports = function (originalArray) {
 var C;
 if (isArray(originalArray)) {
  C = originalArray.constructor;
  if (isConstructor(C) && (C === Array || isArray(C.prototype)))
   C = undefined;
  else if (isObject(C)) {
   C = C[SPECIES];
   if (C === null)
    C = undefined;
  }
 }
 return C === undefined ? Array : C;
};

/***/ }),
/* 145 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var classof = __w_pdfjs_require__(16);
module.exports = Array.isArray || function isArray(argument) {
 return classof(argument) == 'Array';
};

/***/ }),
/* 146 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var isCallable = __w_pdfjs_require__(21);
var isObject = __w_pdfjs_require__(20);
var setPrototypeOf = __w_pdfjs_require__(68);
module.exports = function ($this, dummy, Wrapper) {
 var NewTarget, NewTargetPrototype;
 if (setPrototypeOf && isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype)
  setPrototypeOf($this, NewTargetPrototype);
 return $this;
};

/***/ }),
/* 147 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var global = __w_pdfjs_require__(5);
var call = __w_pdfjs_require__(9);
var ArrayBufferViewCore = __w_pdfjs_require__(128);
var lengthOfArrayLike = __w_pdfjs_require__(61);
var toOffset = __w_pdfjs_require__(139);
var toIndexedObject = __w_pdfjs_require__(39);
var fails = __w_pdfjs_require__(8);
var RangeError = global.RangeError;
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var $set = Int8ArrayPrototype && Int8ArrayPrototype.set;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails(function () {
 var array = new Uint8ClampedArray(2);
 call($set, array, {
  length: 1,
  0: 3
 }, 1);
 return array[1] !== 3;
});
var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {
 var array = new Int8Array(2);
 array.set(1);
 array.set('2', 1);
 return array[0] !== 0 || array[1] !== 2;
});
exportTypedArrayMethod('set', function set(arrayLike) {
 aTypedArray(this);
 var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
 var src = toIndexedObject(arrayLike);
 if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS)
  return call($set, this, src, offset);
 var length = this.length;
 var len = lengthOfArrayLike(src);
 var index = 0;
 if (len + offset > length)
  throw RangeError('Wrong length');
 while (index < len)
  this[offset + index] = src[index++];
}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);

/***/ }),
/* 148 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var global = __w_pdfjs_require__(5);
var uncurryThis = __w_pdfjs_require__(15);
var fails = __w_pdfjs_require__(8);
var aCallable = __w_pdfjs_require__(30);
var internalSort = __w_pdfjs_require__(149);
var ArrayBufferViewCore = __w_pdfjs_require__(128);
var FF = __w_pdfjs_require__(150);
var IE_OR_EDGE = __w_pdfjs_require__(151);
var V8 = __w_pdfjs_require__(27);
var WEBKIT = __w_pdfjs_require__(152);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var Uint16Array = global.Uint16Array;
var un$Sort = Uint16Array && uncurryThis(Uint16Array.prototype.sort);
var ACCEPT_INCORRECT_ARGUMENTS = !!un$Sort && !(fails(function () {
 un$Sort(new Uint16Array(2), null);
}) && fails(function () {
 un$Sort(new Uint16Array(2), {});
}));
var STABLE_SORT = !!un$Sort && !fails(function () {
 if (V8)
  return V8 < 74;
 if (FF)
  return FF < 67;
 if (IE_OR_EDGE)
  return true;
 if (WEBKIT)
  return WEBKIT < 602;
 var array = new Uint16Array(516);
 var expected = Array(516);
 var index, mod;
 for (index = 0; index < 516; index++) {
  mod = index % 4;
  array[index] = 515 - index;
  expected[index] = index - 2 * mod + 3;
 }
 un$Sort(array, function (a, b) {
  return (a / 4 | 0) - (b / 4 | 0);
 });
 for (index = 0; index < 516; index++) {
  if (array[index] !== expected[index])
   return true;
 }
});
var getSortCompare = function (comparefn) {
 return function (x, y) {
  if (comparefn !== undefined)
   return +comparefn(x, y) || 0;
  if (y !== y)
   return -1;
  if (x !== x)
   return 1;
  if (x === 0 && y === 0)
   return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
  return x > y;
 };
};
exportTypedArrayMethod('sort', function sort(comparefn) {
 if (comparefn !== undefined)
  aCallable(comparefn);
 if (STABLE_SORT)
  return un$Sort(this, comparefn);
 return internalSort(aTypedArray(this), getSortCompare(comparefn));
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);

/***/ }),
/* 149 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var arraySlice = __w_pdfjs_require__(136);
var floor = Math.floor;
var mergeSort = function (array, comparefn) {
 var length = array.length;
 var middle = floor(length / 2);
 return length < 8 ? insertionSort(array, comparefn) : merge(array, mergeSort(arraySlice(array, 0, middle), comparefn), mergeSort(arraySlice(array, middle), comparefn), comparefn);
};
var insertionSort = function (array, comparefn) {
 var length = array.length;
 var i = 1;
 var element, j;
 while (i < length) {
  j = i;
  element = array[i];
  while (j && comparefn(array[j - 1], element) > 0) {
   array[j] = array[--j];
  }
  if (j !== i++)
   array[j] = element;
 }
 return array;
};
var merge = function (array, left, right, comparefn) {
 var llength = left.length;
 var rlength = right.length;
 var lindex = 0;
 var rindex = 0;
 while (lindex < llength || rindex < rlength) {
  array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
 }
 return array;
};
module.exports = mergeSort;

/***/ }),
/* 150 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var userAgent = __w_pdfjs_require__(28);
var firefox = userAgent.match(/firefox\/(\d+)/i);
module.exports = !!firefox && +firefox[1];

/***/ }),
/* 151 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var UA = __w_pdfjs_require__(28);
module.exports = /MSIE|Trident/.test(UA);

/***/ }),
/* 152 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var userAgent = __w_pdfjs_require__(28);
var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
module.exports = !!webkit && +webkit[1];

/***/ }),
/* 153 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Int16', function (init) {
 return function Int16Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 154 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Int32', function (init) {
 return function Int32Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 155 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Uint8', function (init) {
 return function Uint8Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 156 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Uint16', function (init) {
 return function Uint16Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 157 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Uint32', function (init) {
 return function Uint32Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 158 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Float32', function (init) {
 return function Float32Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 159 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var createTypedArrayConstructor = __w_pdfjs_require__(126);
createTypedArrayConstructor('Float64', function (init) {
 return function Float64Array(data, byteOffset, length) {
  return init(this, data, byteOffset, length);
 };
});

/***/ }),
/* 160 */
/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {

"use strict";


__w_pdfjs_require__(161);

class SandboxSupportBase {
  constructor(win) {
    this.win = win;
    this.timeoutIds = new Map();
    this.commFun = null;
  }

  destroy() {
    this.commFunc = null;
    this.timeoutIds.forEach(_ref => {
      let [_, id] = _ref;
      return this.win.clearTimeout(id);
    });
    this.timeoutIds = null;
  }

  exportValueToSandbox(val) {
    throw new Error("Not implemented");
  }

  importValueFromSandbox(val) {
    throw new Error("Not implemented");
  }

  createErrorForSandbox(errorMessage) {
    throw new Error("Not implemented");
  }

  callSandboxFunction(name, args) {
    try {
      args = this.exportValueToSandbox(args);
      this.commFun(name, args);
    } catch (e) {
      this.win.console.error(e);
    }
  }

  createSandboxExternals() {
    const externals = {
      setTimeout: (callbackId, nMilliseconds) => {
        if (typeof callbackId !== "number" || typeof nMilliseconds !== "number") {
          return;
        }

        const id = this.win.setTimeout(() => {
          this.timeoutIds.delete(callbackId);
          this.callSandboxFunction("timeoutCb", {
            callbackId,
            interval: false
          });
        }, nMilliseconds);
        this.timeoutIds.set(callbackId, id);
      },
      clearTimeout: id => {
        this.win.clearTimeout(this.timeoutIds.get(id));
        this.timeoutIds.delete(id);
      },
      setInterval: (callbackId, nMilliseconds) => {
        if (typeof callbackId !== "number" || typeof nMilliseconds !== "number") {
          return;
        }

        const id = this.win.setInterval(() => {
          this.callSandboxFunction("timeoutCb", {
            callbackId,
            interval: true
          });
        }, nMilliseconds);
        this.timeoutIds.set(callbackId, id);
      },
      clearInterval: id => {
        this.win.clearInterval(this.timeoutIds.get(id));
        this.timeoutIds.delete(id);
      },
      alert: cMsg => {
        if (typeof cMsg !== "string") {
          return;
        }

        this.win.alert(cMsg);
      },
      confirm: cMsg => {
        if (typeof cMsg !== "string") {
          return false;
        }

        return this.win.confirm(cMsg);
      },
      prompt: (cQuestion, cDefault) => {
        if (typeof cQuestion !== "string" || typeof cDefault !== "string") {
          return null;
        }

        return this.win.prompt(cQuestion, cDefault);
      },
      parseURL: cUrl => {
        const url = new this.win.URL(cUrl);
        const props = ["hash", "host", "hostname", "href", "origin", "password", "pathname", "port", "protocol", "search", "searchParams", "username"];
        return Object.fromEntries(props.map(name => [name, url[name].toString()]));
      },
      send: data => {
        if (!data) {
          return;
        }

        const event = new this.win.CustomEvent("updatefromsandbox", {
          detail: this.importValueFromSandbox(data)
        });
        this.win.dispatchEvent(event);
      }
    };
    Object.setPrototypeOf(externals, null);
    return (name, args) => {
      try {
        const result = externals[name](...args);
        return this.exportValueToSandbox(result);
      } catch (error) {
        var _error$toString;

        throw this.createErrorForSandbox((_error$toString = error === null || error === void 0 ? void 0 : error.toString()) !== null && _error$toString !== void 0 ? _error$toString : "");
      }
    };
  }

}

{
  exports.SandboxSupportBase = SandboxSupportBase;
}

/***/ }),
/* 161 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {

var global = __w_pdfjs_require__(5);
var DOMIterables = __w_pdfjs_require__(162);
var DOMTokenListPrototype = __w_pdfjs_require__(163);
var ArrayIteratorMethods = __w_pdfjs_require__(164);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var wellKnownSymbol = __w_pdfjs_require__(33);
var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;
var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
 if (CollectionPrototype) {
  if (CollectionPrototype[ITERATOR] !== ArrayValues)
   try {
    createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
   } catch (error) {
    CollectionPrototype[ITERATOR] = ArrayValues;
   }
  if (!CollectionPrototype[TO_STRING_TAG]) {
   createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
  }
  if (DOMIterables[COLLECTION_NAME])
   for (var METHOD_NAME in ArrayIteratorMethods) {
    if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])
     try {
      createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
     } catch (error) {
      CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
     }
   }
 }
};
for (var COLLECTION_NAME in DOMIterables) {
 handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}
handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

/***/ }),
/* 162 */
/***/ ((module) => {

module.exports = {
 CSSRuleList: 0,
 CSSStyleDeclaration: 0,
 CSSValueList: 0,
 ClientRectList: 0,
 DOMRectList: 0,
 DOMStringList: 0,
 DOMTokenList: 1,
 DataTransferItemList: 0,
 FileList: 0,
 HTMLAllCollection: 0,
 HTMLCollection: 0,
 HTMLFormElement: 0,
 HTMLSelectElement: 0,
 MediaList: 0,
 MimeTypeArray: 0,
 NamedNodeMap: 0,
 NodeList: 1,
 PaintRequestList: 0,
 Plugin: 0,
 PluginArray: 0,
 SVGLengthList: 0,
 SVGNumberList: 0,
 SVGPathSegList: 0,
 SVGPointList: 0,
 SVGStringList: 0,
 SVGTransformList: 0,
 SourceBufferList: 0,
 StyleSheetList: 0,
 TextTrackCueList: 0,
 TextTrackList: 0,
 TouchList: 0
};

/***/ }),
/* 163 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var documentCreateElement = __w_pdfjs_require__(42);
var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;
module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;

/***/ }),
/* 164 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var toIndexedObject = __w_pdfjs_require__(13);
var addToUnscopables = __w_pdfjs_require__(165);
var Iterators = __w_pdfjs_require__(98);
var InternalStateModule = __w_pdfjs_require__(49);
var defineProperty = (__w_pdfjs_require__(44).f);
var defineIterator = __w_pdfjs_require__(166);
var IS_PURE = __w_pdfjs_require__(35);
var DESCRIPTORS = __w_pdfjs_require__(7);
var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
 setInternalState(this, {
  type: ARRAY_ITERATOR,
  target: toIndexedObject(iterated),
  index: 0,
  kind: kind
 });
}, function () {
 var state = getInternalState(this);
 var target = state.target;
 var kind = state.kind;
 var index = state.index++;
 if (!target || index >= target.length) {
  state.target = undefined;
  return {
   value: undefined,
   done: true
  };
 }
 if (kind == 'keys')
  return {
   value: index,
   done: false
  };
 if (kind == 'values')
  return {
   value: target[index],
   done: false
  };
 return {
  value: [
   index,
   target[index]
  ],
  done: false
 };
}, 'values');
var values = Iterators.Arguments = Iterators.Array;
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');
if (!IS_PURE && DESCRIPTORS && values.name !== 'values')
 try {
  defineProperty(values, 'name', { value: 'values' });
 } catch (error) {
 }

/***/ }),
/* 165 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

var wellKnownSymbol = __w_pdfjs_require__(33);
var create = __w_pdfjs_require__(114);
var definePropertyModule = __w_pdfjs_require__(44);
var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;
if (ArrayPrototype[UNSCOPABLES] == undefined) {
 definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
  configurable: true,
  value: create(null)
 });
}
module.exports = function (key) {
 ArrayPrototype[UNSCOPABLES][key] = true;
};

/***/ }),
/* 166 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var $ = __w_pdfjs_require__(4);
var call = __w_pdfjs_require__(9);
var IS_PURE = __w_pdfjs_require__(35);
var FunctionName = __w_pdfjs_require__(53);
var isCallable = __w_pdfjs_require__(21);
var createIteratorConstructor = __w_pdfjs_require__(167);
var getPrototypeOf = __w_pdfjs_require__(130);
var setPrototypeOf = __w_pdfjs_require__(68);
var setToStringTag = __w_pdfjs_require__(70);
var createNonEnumerableProperty = __w_pdfjs_require__(43);
var redefine = __w_pdfjs_require__(47);
var wellKnownSymbol = __w_pdfjs_require__(33);
var Iterators = __w_pdfjs_require__(98);
var IteratorsCore = __w_pdfjs_require__(168);
var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';
var returnThis = function () {
 return this;
};
module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
 createIteratorConstructor(IteratorConstructor, NAME, next);
 var getIterationMethod = function (KIND) {
  if (KIND === DEFAULT && defaultIterator)
   return defaultIterator;
  if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)
   return IterablePrototype[KIND];
  switch (KIND) {
  case KEYS:
   return function keys() {
    return new IteratorConstructor(this, KIND);
   };
  case VALUES:
   return function values() {
    return new IteratorConstructor(this, KIND);
   };
  case ENTRIES:
   return function entries() {
    return new IteratorConstructor(this, KIND);
   };
  }
  return function () {
   return new IteratorConstructor(this);
  };
 };
 var TO_STRING_TAG = NAME + ' Iterator';
 var INCORRECT_VALUES_NAME = false;
 var IterablePrototype = Iterable.prototype;
 var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
 var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
 var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
 var CurrentIteratorPrototype, methods, KEY;
 if (anyNativeIterator) {
  CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
  if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
   if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
    if (setPrototypeOf) {
     setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
    } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
     redefine(CurrentIteratorPrototype, ITERATOR, returnThis);
    }
   }
   setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
   if (IS_PURE)
    Iterators[TO_STRING_TAG] = returnThis;
  }
 }
 if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
  if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
   createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
  } else {
   INCORRECT_VALUES_NAME = true;
   defaultIterator = function values() {
    return call(nativeIterator, this);
   };
  }
 }
 if (DEFAULT) {
  methods = {
   values: getIterationMethod(VALUES),
   keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
   entries: getIterationMethod(ENTRIES)
  };
  if (FORCED)
   for (KEY in methods) {
    if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
     redefine(IterablePrototype, KEY, methods[KEY]);
    }
   }
  else
   $({
    target: NAME,
    proto: true,
    forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
   }, methods);
 }
 if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
  redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
 }
 Iterators[NAME] = defaultIterator;
 return methods;
};

/***/ }),
/* 167 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var IteratorPrototype = (__w_pdfjs_require__(168).IteratorPrototype);
var create = __w_pdfjs_require__(114);
var createPropertyDescriptor = __w_pdfjs_require__(12);
var setToStringTag = __w_pdfjs_require__(70);
var Iterators = __w_pdfjs_require__(98);
var returnThis = function () {
 return this;
};
module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
 var TO_STRING_TAG = NAME + ' Iterator';
 IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
 setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
 Iterators[TO_STRING_TAG] = returnThis;
 return IteratorConstructor;
};

/***/ }),
/* 168 */
/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {

"use strict";

var fails = __w_pdfjs_require__(8);
var isCallable = __w_pdfjs_require__(21);
var create = __w_pdfjs_require__(114);
var getPrototypeOf = __w_pdfjs_require__(130);
var redefine = __w_pdfjs_require__(47);
var wellKnownSymbol = __w_pdfjs_require__(33);
var IS_PURE = __w_pdfjs_require__(35);
var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;
if ([].keys) {
 arrayIterator = [].keys();
 if (!('next' in arrayIterator))
  BUGGY_SAFARI_ITERATORS = true;
 else {
  PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
  if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
   IteratorPrototype = PrototypeOfArrayIteratorPrototype;
 }
}
var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
 var test = {};
 return IteratorPrototype[ITERATOR].call(test) !== test;
});
if (NEW_ITERATOR_PROTOTYPE)
 IteratorPrototype = {};
else if (IS_PURE)
 IteratorPrototype = create(IteratorPrototype);
if (!isCallable(IteratorPrototype[ITERATOR])) {
 redefine(IteratorPrototype, ITERATOR, function () {
  return this;
 });
}
module.exports = {
 IteratorPrototype: IteratorPrototype,
 BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __w_pdfjs_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
var exports = __webpack_exports__;


Object.defineProperty(exports, "__esModule", ({
  value: true
}));
exports.QuickJSSandbox = QuickJSSandbox;

var _quickjsEval = _interopRequireDefault(__w_pdfjs_require__(1));

var _pdfSandboxExternal = __w_pdfjs_require__(160);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pdfjsVersion = '2.13.491';
const pdfjsBuild = '013cd3743';

class SandboxSupport extends _pdfSandboxExternal.SandboxSupportBase {
  exportValueToSandbox(val) {
    return JSON.stringify(val);
  }

  importValueFromSandbox(val) {
    return val;
  }

  createErrorForSandbox(errorMessage) {
    return new Error(errorMessage);
  }

}

class Sandbox {
  constructor(win, module) {
    this.support = new SandboxSupport(win, this);
    module.externalCall = this.support.createSandboxExternals();
    this._module = module;
    this._alertOnError = 0;
  }

  create(data) {
    const code = ['(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === \'object\' && typeof module === \'object\')\n\t\tmodule.exports = factory();\n\telse if(typeof define === \'function\' && define.amd)\n\t\tdefine("pdfjs-dist/build/pdf.scripting", [], factory);\n\telse if(typeof exports === \'object\')\n\t\texports["pdfjs-dist/build/pdf.scripting"] = factory();\n\telse\n\t\troot.pdfjsScripting = factory();\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ([\n/* 0 */,\n/* 1 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.initSandbox = initSandbox;\n\n__w_pdfjs_require__(2);\n\nvar _constants = __w_pdfjs_require__(82);\n\nvar _field = __w_pdfjs_require__(83);\n\nvar _aform = __w_pdfjs_require__(88);\n\nvar _app = __w_pdfjs_require__(114);\n\nvar _color = __w_pdfjs_require__(85);\n\nvar _console = __w_pdfjs_require__(118);\n\nvar _doc = __w_pdfjs_require__(119);\n\nvar _proxy = __w_pdfjs_require__(124);\n\nvar _util = __w_pdfjs_require__(125);\n\nfunction initSandbox(params) {\n  delete globalThis.pdfjsScripting;\n  const externalCall = globalThis.callExternalFunction;\n  delete globalThis.callExternalFunction;\n\n  const globalEval = code => globalThis.eval(code);\n\n  const send = data => externalCall("send", [data]);\n\n  const proxyHandler = new _proxy.ProxyHandler();\n  const {\n    data\n  } = params;\n  const doc = new _doc.Doc({\n    send,\n    globalEval,\n    ...data.docInfo\n  });\n  const _document = {\n    obj: doc,\n    wrapped: new Proxy(doc, proxyHandler)\n  };\n  const app = new _app.App({\n    send,\n    globalEval,\n    externalCall,\n    _document,\n    calculationOrder: data.calculationOrder,\n    proxyHandler,\n    ...data.appInfo\n  });\n  const util = new _util.Util({\n    externalCall\n  });\n  const appObjects = app._objects;\n\n  if (data.objects) {\n    const annotations = [];\n\n    for (const [name, objs] of Object.entries(data.objects)) {\n      annotations.length = 0;\n      let container = null;\n\n      for (const obj of objs) {\n        if (obj.type !== "") {\n          annotations.push(obj);\n        } else {\n          container = obj;\n        }\n      }\n\n      let obj = container;\n\n      if (annotations.length > 0) {\n        obj = annotations[0];\n        obj.send = send;\n      }\n\n      obj.globalEval = globalEval;\n      obj.doc = _document;\n      obj.fieldPath = name;\n      obj.appObjects = appObjects;\n      let field;\n\n      switch (obj.type) {\n        case "radiobutton":\n          {\n            const otherButtons = annotations.slice(1);\n            field = new _field.RadioButtonField(otherButtons, obj);\n            break;\n          }\n\n        case "checkbox":\n          {\n            const otherButtons = annotations.slice(1);\n            field = new _field.CheckboxField(otherButtons, obj);\n            break;\n          }\n\n        case "text":\n          if (annotations.length <= 1) {\n            field = new _field.Field(obj);\n            break;\n          }\n\n          obj.siblings = annotations.map(x => x.id).slice(1);\n          field = new _field.Field(obj);\n          break;\n\n        default:\n          field = new _field.Field(obj);\n      }\n\n      const wrapped = new Proxy(field, proxyHandler);\n\n      doc._addField(name, wrapped);\n\n      const _object = {\n        obj: field,\n        wrapped\n      };\n\n      for (const object of objs) {\n        appObjects[object.id] = _object;\n      }\n\n      if (container) {\n        appObjects[container.id] = _object;\n      }\n    }\n  }\n\n  const color = new _color.Color();\n  globalThis.event = null;\n  globalThis.global = Object.create(null);\n  globalThis.app = new Proxy(app, proxyHandler);\n  globalThis.color = new Proxy(color, proxyHandler);\n  globalThis.console = new Proxy(new _console.Console({\n    send\n  }), proxyHandler);\n  globalThis.util = new Proxy(util, proxyHandler);\n  globalThis.border = _constants.Border;\n  globalThis.cursor = _constants.Cursor;\n  globalThis.display = _constants.Display;\n  globalThis.font = _constants.Font;\n  globalThis.highlight = _constants.Highlight;\n  globalThis.position = _constants.Position;\n  globalThis.scaleHow = _constants.ScaleHow;\n  globalThis.scaleWhen = _constants.ScaleWhen;\n  globalThis.style = _constants.Style;\n  globalThis.trans = _constants.Trans;\n  globalThis.zoomtype = _constants.ZoomType;\n  globalThis.ADBE = {\n    Reader_Value_Asked: true,\n    Viewer_Value_Asked: true\n  };\n  const aform = new _aform.AForm(doc, app, util, color);\n\n  for (const name of Object.getOwnPropertyNames(_aform.AForm.prototype)) {\n    if (name !== "constructor" && !name.startsWith("_")) {\n      globalThis[name] = aform[name].bind(aform);\n    }\n  }\n\n  for (const [name, value] of Object.entries(_constants.GlobalConstants)) {\n    Object.defineProperty(globalThis, name, {\n      value,\n      writable: false\n    });\n  }\n\n  Object.defineProperties(globalThis, {\n    ColorConvert: {\n      value: color.convert.bind(color),\n      writable: true\n    },\n    ColorEqual: {\n      value: color.equal.bind(color),\n      writable: true\n    }\n  });\n  const properties = Object.create(null);\n\n  for (const name of Object.getOwnPropertyNames(_doc.Doc.prototype)) {\n    if (name === "constructor" || name.startsWith("_")) {\n      continue;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(_doc.Doc.prototype, name);\n\n    if (descriptor.get) {\n      properties[name] = {\n        get: descriptor.get.bind(doc),\n        set: descriptor.set.bind(doc)\n      };\n    } else {\n      properties[name] = {\n        value: _doc.Doc.prototype[name].bind(doc)\n      };\n    }\n  }\n\n  Object.defineProperties(globalThis, properties);\n  const functions = {\n    dispatchEvent: app._dispatchEvent.bind(app),\n    timeoutCb: app._evalCallback.bind(app)\n  };\n  return (name, args) => {\n    try {\n      functions[name](args);\n    } catch (error) {\n      const value = "".concat(error.toString(), "\\n").concat(error.stack);\n      send({\n        command: "error",\n        value\n      });\n    }\n  };\n}\n\n/***/ }),\n/* 2 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar DOMIterables = __w_pdfjs_require__(4);\nvar DOMTokenListPrototype = __w_pdfjs_require__(5);\nvar ArrayIteratorMethods = __w_pdfjs_require__(9);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar ArrayValues = ArrayIteratorMethods.values;\nvar handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {\n if (CollectionPrototype) {\n  if (CollectionPrototype[ITERATOR] !== ArrayValues)\n   try {\n    createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);\n   } catch (error) {\n    CollectionPrototype[ITERATOR] = ArrayValues;\n   }\n  if (!CollectionPrototype[TO_STRING_TAG]) {\n   createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  if (DOMIterables[COLLECTION_NAME])\n   for (var METHOD_NAME in ArrayIteratorMethods) {\n    if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])\n     try {\n      createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);\n     } catch (error) {\n      CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];\n     }\n   }\n }\n};\nfor (var COLLECTION_NAME in DOMIterables) {\n handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);\n}\nhandlePrototype(DOMTokenListPrototype, \'DOMTokenList\');\n\n/***/ }),\n/* 3 */\n/***/ ((module) => {\n\nvar check = function (it) {\n return it && it.Math == Math && it;\n};\nmodule.exports = check(typeof globalThis == \'object\' && globalThis) || check(typeof window == \'object\' && window) || check(typeof self == \'object\' && self) || check(typeof global == \'object\' && global) || (function () {\n return this;\n}()) || Function(\'return this\')();\n\n/***/ }),\n/* 4 */\n/***/ ((module) => {\n\nmodule.exports = {\n CSSRuleList: 0,\n CSSStyleDeclaration: 0,\n CSSValueList: 0,\n ClientRectList: 0,\n DOMRectList: 0,\n DOMStringList: 0,\n DOMTokenList: 1,\n DataTransferItemList: 0,\n FileList: 0,\n HTMLAllCollection: 0,\n HTMLCollection: 0,\n HTMLFormElement: 0,\n HTMLSelectElement: 0,\n MediaList: 0,\n MimeTypeArray: 0,\n NamedNodeMap: 0,\n NodeList: 1,\n PaintRequestList: 0,\n Plugin: 0,\n PluginArray: 0,\n SVGLengthList: 0,\n SVGNumberList: 0,\n SVGPathSegList: 0,\n SVGPointList: 0,\n SVGStringList: 0,\n SVGTransformList: 0,\n SourceBufferList: 0,\n StyleSheetList: 0,\n TextTrackCueList: 0,\n TextTrackList: 0,\n TouchList: 0\n};\n\n/***/ }),\n/* 5 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar documentCreateElement = __w_pdfjs_require__(6);\nvar classList = documentCreateElement(\'span\').classList;\nvar DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;\nmodule.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;\n\n/***/ }),\n/* 6 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isObject = __w_pdfjs_require__(7);\nvar document = global.document;\nvar EXISTS = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n return EXISTS ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 7 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar isCallable = __w_pdfjs_require__(8);\nmodule.exports = function (it) {\n return typeof it == \'object\' ? it !== null : isCallable(it);\n};\n\n/***/ }),\n/* 8 */\n/***/ ((module) => {\n\nmodule.exports = function (argument) {\n return typeof argument == \'function\';\n};\n\n/***/ }),\n/* 9 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar addToUnscopables = __w_pdfjs_require__(17);\nvar Iterators = __w_pdfjs_require__(58);\nvar InternalStateModule = __w_pdfjs_require__(59);\nvar defineProperty = (__w_pdfjs_require__(36).f);\nvar defineIterator = __w_pdfjs_require__(64);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar ARRAY_ITERATOR = \'Array Iterator\';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\nmodule.exports = defineIterator(Array, \'Array\', function (iterated, kind) {\n setInternalState(this, {\n  type: ARRAY_ITERATOR,\n  target: toIndexedObject(iterated),\n  index: 0,\n  kind: kind\n });\n}, function () {\n var state = getInternalState(this);\n var target = state.target;\n var kind = state.kind;\n var index = state.index++;\n if (!target || index >= target.length) {\n  state.target = undefined;\n  return {\n   value: undefined,\n   done: true\n  };\n }\n if (kind == \'keys\')\n  return {\n   value: index,\n   done: false\n  };\n if (kind == \'values\')\n  return {\n   value: target[index],\n   done: false\n  };\n return {\n  value: [\n   index,\n   target[index]\n  ],\n  done: false\n };\n}, \'values\');\nvar values = Iterators.Arguments = Iterators.Array;\naddToUnscopables(\'keys\');\naddToUnscopables(\'values\');\naddToUnscopables(\'entries\');\nif (!IS_PURE && DESCRIPTORS && values.name !== \'values\')\n try {\n  defineProperty(values, \'name\', { value: \'values\' });\n } catch (error) {\n }\n\n/***/ }),\n/* 10 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar IndexedObject = __w_pdfjs_require__(11);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nmodule.exports = function (it) {\n return IndexedObject(requireObjectCoercible(it));\n};\n\n/***/ }),\n/* 11 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar fails = __w_pdfjs_require__(14);\nvar classof = __w_pdfjs_require__(15);\nvar Object = global.Object;\nvar split = uncurryThis(\'\'.split);\nmodule.exports = fails(function () {\n return !Object(\'z\').propertyIsEnumerable(0);\n}) ? function (it) {\n return classof(it) == \'String\' ? split(it, \'\') : Object(it);\n} : Object;\n\n/***/ }),\n/* 12 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_BIND = __w_pdfjs_require__(13);\nvar FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar uncurryThis = NATIVE_BIND && bind.bind(call, call);\nmodule.exports = NATIVE_BIND ? function (fn) {\n return fn && uncurryThis(fn);\n} : function (fn) {\n return fn && function () {\n  return call.apply(fn, arguments);\n };\n};\n\n/***/ }),\n/* 13 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !fails(function () {\n var test = function () {\n }.bind();\n return typeof test != \'function\' || test.hasOwnProperty(\'prototype\');\n});\n\n/***/ }),\n/* 14 */\n/***/ ((module) => {\n\nmodule.exports = function (exec) {\n try {\n  return !!exec();\n } catch (error) {\n  return true;\n }\n};\n\n/***/ }),\n/* 15 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(\'\'.slice);\nmodule.exports = function (it) {\n return stringSlice(toString(it), 8, -1);\n};\n\n/***/ }),\n/* 16 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar TypeError = global.TypeError;\nmodule.exports = function (it) {\n if (it == undefined)\n  throw TypeError("Can\'t call method on " + it);\n return it;\n};\n\n/***/ }),\n/* 17 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar create = __w_pdfjs_require__(31);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar UNSCOPABLES = wellKnownSymbol(\'unscopables\');\nvar ArrayPrototype = Array.prototype;\nif (ArrayPrototype[UNSCOPABLES] == undefined) {\n definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {\n  configurable: true,\n  value: create(null)\n });\n}\nmodule.exports = function (key) {\n ArrayPrototype[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 18 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar shared = __w_pdfjs_require__(19);\nvar hasOwn = __w_pdfjs_require__(23);\nvar uid = __w_pdfjs_require__(25);\nvar NATIVE_SYMBOL = __w_pdfjs_require__(26);\nvar USE_SYMBOL_AS_UID = __w_pdfjs_require__(30);\nvar WellKnownSymbolsStore = shared(\'wks\');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol[\'for\'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\nmodule.exports = function (name) {\n if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == \'string\')) {\n  var description = \'Symbol.\' + name;\n  if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n   WellKnownSymbolsStore[name] = Symbol[name];\n  } else if (USE_SYMBOL_AS_UID && symbolFor) {\n   WellKnownSymbolsStore[name] = symbolFor(description);\n  } else {\n   WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n  }\n }\n return WellKnownSymbolsStore[name];\n};\n\n/***/ }),\n/* 19 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar IS_PURE = __w_pdfjs_require__(20);\nvar store = __w_pdfjs_require__(21);\n(module.exports = function (key, value) {\n return store[key] || (store[key] = value !== undefined ? value : {});\n})(\'versions\', []).push({\n version: \'3.22.0\',\n mode: IS_PURE ? \'pure\' : \'global\',\n copyright: \'\xA9 2014-2022 Denis Pushkarev (zloirock.ru)\',\n license: \'https://github.com/zloirock/core-js/blob/v3.22.0/LICENSE\',\n source: \'https://github.com/zloirock/core-js\'\n});\n\n/***/ }),\n/* 20 */\n/***/ ((module) => {\n\nmodule.exports = false;\n\n/***/ }),\n/* 21 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar setGlobal = __w_pdfjs_require__(22);\nvar SHARED = \'__core-js_shared__\';\nvar store = global[SHARED] || setGlobal(SHARED, {});\nmodule.exports = store;\n\n/***/ }),\n/* 22 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar defineProperty = Object.defineProperty;\nmodule.exports = function (key, value) {\n try {\n  defineProperty(global, key, {\n   value: value,\n   configurable: true,\n   writable: true\n  });\n } catch (error) {\n  global[key] = value;\n }\n return value;\n};\n\n/***/ }),\n/* 23 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toObject = __w_pdfjs_require__(24);\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n return hasOwnProperty(toObject(it), key);\n};\n\n/***/ }),\n/* 24 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar Object = global.Object;\nmodule.exports = function (argument) {\n return Object(requireObjectCoercible(argument));\n};\n\n/***/ }),\n/* 25 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\nmodule.exports = function (key) {\n return \'Symbol(\' + (key === undefined ? \'\' : key) + \')_\' + toString(++id + postfix, 36);\n};\n\n/***/ }),\n/* 26 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar V8_VERSION = __w_pdfjs_require__(27);\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n var symbol = Symbol();\n return !String(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n\n/***/ }),\n/* 27 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar userAgent = __w_pdfjs_require__(28);\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\nif (v8) {\n match = v8.split(\'.\');\n version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\nif (!version && userAgent) {\n match = userAgent.match(/Edge\\/(\\d+)/);\n if (!match || match[1] >= 74) {\n  match = userAgent.match(/Chrome\\/(\\d+)/);\n  if (match)\n   version = +match[1];\n }\n}\nmodule.exports = version;\n\n/***/ }),\n/* 28 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nmodule.exports = getBuiltIn(\'navigator\', \'userAgent\') || \'\';\n\n/***/ }),\n/* 29 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar aFunction = function (argument) {\n return isCallable(argument) ? argument : undefined;\n};\nmodule.exports = function (namespace, method) {\n return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n\n/***/ }),\n/* 30 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_SYMBOL = __w_pdfjs_require__(26);\nmodule.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == \'symbol\';\n\n/***/ }),\n/* 31 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar anObject = __w_pdfjs_require__(32);\nvar definePropertiesModule = __w_pdfjs_require__(33);\nvar enumBugKeys = __w_pdfjs_require__(55);\nvar hiddenKeys = __w_pdfjs_require__(54);\nvar html = __w_pdfjs_require__(56);\nvar documentCreateElement = __w_pdfjs_require__(6);\nvar sharedKey = __w_pdfjs_require__(57);\nvar GT = \'>\';\nvar LT = \'<\';\nvar PROTOTYPE = \'prototype\';\nvar SCRIPT = \'script\';\nvar IE_PROTO = sharedKey(\'IE_PROTO\');\nvar EmptyConstructor = function () {\n};\nvar scriptTag = function (content) {\n return LT + SCRIPT + GT + content + LT + \'/\' + SCRIPT + GT;\n};\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n activeXDocument.write(scriptTag(\'\'));\n activeXDocument.close();\n var temp = activeXDocument.parentWindow.Object;\n activeXDocument = null;\n return temp;\n};\nvar NullProtoObjectViaIFrame = function () {\n var iframe = documentCreateElement(\'iframe\');\n var JS = \'java\' + SCRIPT + \':\';\n var iframeDocument;\n iframe.style.display = \'none\';\n html.appendChild(iframe);\n iframe.src = String(JS);\n iframeDocument = iframe.contentWindow.document;\n iframeDocument.open();\n iframeDocument.write(scriptTag(\'document.F=Object\'));\n iframeDocument.close();\n return iframeDocument.F;\n};\nvar activeXDocument;\nvar NullProtoObject = function () {\n try {\n  activeXDocument = new ActiveXObject(\'htmlfile\');\n } catch (error) {\n }\n NullProtoObject = typeof document != \'undefined\' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);\n var length = enumBugKeys.length;\n while (length--)\n  delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n return NullProtoObject();\n};\nhiddenKeys[IE_PROTO] = true;\nmodule.exports = Object.create || function create(O, Properties) {\n var result;\n if (O !== null) {\n  EmptyConstructor[PROTOTYPE] = anObject(O);\n  result = new EmptyConstructor();\n  EmptyConstructor[PROTOTYPE] = null;\n  result[IE_PROTO] = O;\n } else\n  result = NullProtoObject();\n return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n\n/***/ }),\n/* 32 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isObject = __w_pdfjs_require__(7);\nvar String = global.String;\nvar TypeError = global.TypeError;\nmodule.exports = function (argument) {\n if (isObject(argument))\n  return argument;\n throw TypeError(String(argument) + \' is not an object\');\n};\n\n/***/ }),\n/* 33 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar V8_PROTOTYPE_DEFINE_BUG = __w_pdfjs_require__(35);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar anObject = __w_pdfjs_require__(32);\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar objectKeys = __w_pdfjs_require__(47);\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n anObject(O);\n var props = toIndexedObject(Properties);\n var keys = objectKeys(Properties);\n var length = keys.length;\n var index = 0;\n var key;\n while (length > index)\n  definePropertyModule.f(O, key = keys[index++], props[key]);\n return O;\n};\n\n/***/ }),\n/* 34 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !fails(function () {\n return Object.defineProperty({}, 1, {\n  get: function () {\n   return 7;\n  }\n })[1] != 7;\n});\n\n/***/ }),\n/* 35 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = DESCRIPTORS && fails(function () {\n return Object.defineProperty(function () {\n }, \'prototype\', {\n  value: 42,\n  writable: false\n }).prototype != 42;\n});\n\n/***/ }),\n/* 36 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(37);\nvar V8_PROTOTYPE_DEFINE_BUG = __w_pdfjs_require__(35);\nvar anObject = __w_pdfjs_require__(32);\nvar toPropertyKey = __w_pdfjs_require__(38);\nvar TypeError = global.TypeError;\nvar $defineProperty = Object.defineProperty;\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = \'enumerable\';\nvar CONFIGURABLE = \'configurable\';\nvar WRITABLE = \'writable\';\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n anObject(O);\n P = toPropertyKey(P);\n anObject(Attributes);\n if (typeof O === \'function\' && P === \'prototype\' && \'value\' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n  var current = $getOwnPropertyDescriptor(O, P);\n  if (current && current[WRITABLE]) {\n   O[P] = Attributes.value;\n   Attributes = {\n    configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n    enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n    writable: false\n   };\n  }\n }\n return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n anObject(O);\n P = toPropertyKey(P);\n anObject(Attributes);\n if (IE8_DOM_DEFINE)\n  try {\n   return $defineProperty(O, P, Attributes);\n  } catch (error) {\n  }\n if (\'get\' in Attributes || \'set\' in Attributes)\n  throw TypeError(\'Accessors not supported\');\n if (\'value\' in Attributes)\n  O[P] = Attributes.value;\n return O;\n};\n\n/***/ }),\n/* 37 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar fails = __w_pdfjs_require__(14);\nvar createElement = __w_pdfjs_require__(6);\nmodule.exports = !DESCRIPTORS && !fails(function () {\n return Object.defineProperty(createElement(\'div\'), \'a\', {\n  get: function () {\n   return 7;\n  }\n }).a != 7;\n});\n\n/***/ }),\n/* 38 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toPrimitive = __w_pdfjs_require__(39);\nvar isSymbol = __w_pdfjs_require__(41);\nmodule.exports = function (argument) {\n var key = toPrimitive(argument, \'string\');\n return isSymbol(key) ? key : key + \'\';\n};\n\n/***/ }),\n/* 39 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar isObject = __w_pdfjs_require__(7);\nvar isSymbol = __w_pdfjs_require__(41);\nvar getMethod = __w_pdfjs_require__(43);\nvar ordinaryToPrimitive = __w_pdfjs_require__(46);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TypeError = global.TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol(\'toPrimitive\');\nmodule.exports = function (input, pref) {\n if (!isObject(input) || isSymbol(input))\n  return input;\n var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n var result;\n if (exoticToPrim) {\n  if (pref === undefined)\n   pref = \'default\';\n  result = call(exoticToPrim, input, pref);\n  if (!isObject(result) || isSymbol(result))\n   return result;\n  throw TypeError("Can\'t convert object to primitive value");\n }\n if (pref === undefined)\n  pref = \'number\';\n return ordinaryToPrimitive(input, pref);\n};\n\n/***/ }),\n/* 40 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_BIND = __w_pdfjs_require__(13);\nvar call = Function.prototype.call;\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n return call.apply(call, arguments);\n};\n\n/***/ }),\n/* 41 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar getBuiltIn = __w_pdfjs_require__(29);\nvar isCallable = __w_pdfjs_require__(8);\nvar isPrototypeOf = __w_pdfjs_require__(42);\nvar USE_SYMBOL_AS_UID = __w_pdfjs_require__(30);\nvar Object = global.Object;\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n return typeof it == \'symbol\';\n} : function (it) {\n var $Symbol = getBuiltIn(\'Symbol\');\n return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));\n};\n\n/***/ }),\n/* 42 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nmodule.exports = uncurryThis({}.isPrototypeOf);\n\n/***/ }),\n/* 43 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar aCallable = __w_pdfjs_require__(44);\nmodule.exports = function (V, P) {\n var func = V[P];\n return func == null ? undefined : aCallable(func);\n};\n\n/***/ }),\n/* 44 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar tryToString = __w_pdfjs_require__(45);\nvar TypeError = global.TypeError;\nmodule.exports = function (argument) {\n if (isCallable(argument))\n  return argument;\n throw TypeError(tryToString(argument) + \' is not a function\');\n};\n\n/***/ }),\n/* 45 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar String = global.String;\nmodule.exports = function (argument) {\n try {\n  return String(argument);\n } catch (error) {\n  return \'Object\';\n }\n};\n\n/***/ }),\n/* 46 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar isCallable = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(7);\nvar TypeError = global.TypeError;\nmodule.exports = function (input, pref) {\n var fn, val;\n if (pref === \'string\' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))\n  return val;\n if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))\n  return val;\n if (pref !== \'string\' && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))\n  return val;\n throw TypeError("Can\'t convert object to primitive value");\n};\n\n/***/ }),\n/* 47 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar internalObjectKeys = __w_pdfjs_require__(48);\nvar enumBugKeys = __w_pdfjs_require__(55);\nmodule.exports = Object.keys || function keys(O) {\n return internalObjectKeys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 48 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar hasOwn = __w_pdfjs_require__(23);\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar indexOf = (__w_pdfjs_require__(49).indexOf);\nvar hiddenKeys = __w_pdfjs_require__(54);\nvar push = uncurryThis([].push);\nmodule.exports = function (object, names) {\n var O = toIndexedObject(object);\n var i = 0;\n var result = [];\n var key;\n for (key in O)\n  !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n while (names.length > i)\n  if (hasOwn(O, key = names[i++])) {\n   ~indexOf(result, key) || push(result, key);\n  }\n return result;\n};\n\n/***/ }),\n/* 49 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar toAbsoluteIndex = __w_pdfjs_require__(50);\nvar lengthOfArrayLike = __w_pdfjs_require__(52);\nvar createMethod = function (IS_INCLUDES) {\n return function ($this, el, fromIndex) {\n  var O = toIndexedObject($this);\n  var length = lengthOfArrayLike(O);\n  var index = toAbsoluteIndex(fromIndex, length);\n  var value;\n  if (IS_INCLUDES && el != el)\n   while (length > index) {\n    value = O[index++];\n    if (value != value)\n     return true;\n   }\n  else\n   for (; length > index; index++) {\n    if ((IS_INCLUDES || index in O) && O[index] === el)\n     return IS_INCLUDES || index || 0;\n   }\n  return !IS_INCLUDES && -1;\n };\n};\nmodule.exports = {\n includes: createMethod(true),\n indexOf: createMethod(false)\n};\n\n/***/ }),\n/* 50 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n var integer = toIntegerOrInfinity(index);\n return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n\n/***/ }),\n/* 51 */\n/***/ ((module) => {\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (argument) {\n var number = +argument;\n return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);\n};\n\n/***/ }),\n/* 52 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toLength = __w_pdfjs_require__(53);\nmodule.exports = function (obj) {\n return toLength(obj.length);\n};\n\n/***/ }),\n/* 53 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar min = Math.min;\nmodule.exports = function (argument) {\n return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0;\n};\n\n/***/ }),\n/* 54 */\n/***/ ((module) => {\n\nmodule.exports = {};\n\n/***/ }),\n/* 55 */\n/***/ ((module) => {\n\nmodule.exports = [\n \'constructor\',\n \'hasOwnProperty\',\n \'isPrototypeOf\',\n \'propertyIsEnumerable\',\n \'toLocaleString\',\n \'toString\',\n \'valueOf\'\n];\n\n/***/ }),\n/* 56 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nmodule.exports = getBuiltIn(\'document\', \'documentElement\');\n\n/***/ }),\n/* 57 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar shared = __w_pdfjs_require__(19);\nvar uid = __w_pdfjs_require__(25);\nvar keys = shared(\'keys\');\nmodule.exports = function (key) {\n return keys[key] || (keys[key] = uid(key));\n};\n\n/***/ }),\n/* 58 */\n/***/ ((module) => {\n\nmodule.exports = {};\n\n/***/ }),\n/* 59 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_WEAK_MAP = __w_pdfjs_require__(60);\nvar global = __w_pdfjs_require__(3);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar isObject = __w_pdfjs_require__(7);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar hasOwn = __w_pdfjs_require__(23);\nvar shared = __w_pdfjs_require__(21);\nvar sharedKey = __w_pdfjs_require__(57);\nvar hiddenKeys = __w_pdfjs_require__(54);\nvar OBJECT_ALREADY_INITIALIZED = \'Object already initialized\';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\nvar enforce = function (it) {\n return has(it) ? get(it) : set(it, {});\n};\nvar getterFor = function (TYPE) {\n return function (it) {\n  var state;\n  if (!isObject(it) || (state = get(it)).type !== TYPE) {\n   throw TypeError(\'Incompatible receiver, \' + TYPE + \' required\');\n  }\n  return state;\n };\n};\nif (NATIVE_WEAK_MAP || shared.state) {\n var store = shared.state || (shared.state = new WeakMap());\n var wmget = uncurryThis(store.get);\n var wmhas = uncurryThis(store.has);\n var wmset = uncurryThis(store.set);\n set = function (it, metadata) {\n  if (wmhas(store, it))\n   throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n  metadata.facade = it;\n  wmset(store, it, metadata);\n  return metadata;\n };\n get = function (it) {\n  return wmget(store, it) || {};\n };\n has = function (it) {\n  return wmhas(store, it);\n };\n} else {\n var STATE = sharedKey(\'state\');\n hiddenKeys[STATE] = true;\n set = function (it, metadata) {\n  if (hasOwn(it, STATE))\n   throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n  metadata.facade = it;\n  createNonEnumerableProperty(it, STATE, metadata);\n  return metadata;\n };\n get = function (it) {\n  return hasOwn(it, STATE) ? it[STATE] : {};\n };\n has = function (it) {\n  return hasOwn(it, STATE);\n };\n}\nmodule.exports = {\n set: set,\n get: get,\n has: has,\n enforce: enforce,\n getterFor: getterFor\n};\n\n/***/ }),\n/* 60 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar inspectSource = __w_pdfjs_require__(61);\nvar WeakMap = global.WeakMap;\nmodule.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));\n\n/***/ }),\n/* 61 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar isCallable = __w_pdfjs_require__(8);\nvar store = __w_pdfjs_require__(21);\nvar functionToString = uncurryThis(Function.toString);\nif (!isCallable(store.inspectSource)) {\n store.inspectSource = function (it) {\n  return functionToString(it);\n };\n}\nmodule.exports = store.inspectSource;\n\n/***/ }),\n/* 62 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar createPropertyDescriptor = __w_pdfjs_require__(63);\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n object[key] = value;\n return object;\n};\n\n/***/ }),\n/* 63 */\n/***/ ((module) => {\n\nmodule.exports = function (bitmap, value) {\n return {\n  enumerable: !(bitmap & 1),\n  configurable: !(bitmap & 2),\n  writable: !(bitmap & 4),\n  value: value\n };\n};\n\n/***/ }),\n/* 64 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar call = __w_pdfjs_require__(40);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar FunctionName = __w_pdfjs_require__(69);\nvar isCallable = __w_pdfjs_require__(8);\nvar createIteratorConstructor = __w_pdfjs_require__(75);\nvar getPrototypeOf = __w_pdfjs_require__(77);\nvar setPrototypeOf = __w_pdfjs_require__(80);\nvar setToStringTag = __w_pdfjs_require__(79);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar redefine = __w_pdfjs_require__(68);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar Iterators = __w_pdfjs_require__(58);\nvar IteratorsCore = __w_pdfjs_require__(76);\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar KEYS = \'keys\';\nvar VALUES = \'values\';\nvar ENTRIES = \'entries\';\nvar returnThis = function () {\n return this;\n};\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n createIteratorConstructor(IteratorConstructor, NAME, next);\n var getIterationMethod = function (KIND) {\n  if (KIND === DEFAULT && defaultIterator)\n   return defaultIterator;\n  if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype)\n   return IterablePrototype[KIND];\n  switch (KIND) {\n  case KEYS:\n   return function keys() {\n    return new IteratorConstructor(this, KIND);\n   };\n  case VALUES:\n   return function values() {\n    return new IteratorConstructor(this, KIND);\n   };\n  case ENTRIES:\n   return function entries() {\n    return new IteratorConstructor(this, KIND);\n   };\n  }\n  return function () {\n   return new IteratorConstructor(this);\n  };\n };\n var TO_STRING_TAG = NAME + \' Iterator\';\n var INCORRECT_VALUES_NAME = false;\n var IterablePrototype = Iterable.prototype;\n var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype[\'@@iterator\'] || DEFAULT && IterablePrototype[DEFAULT];\n var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n var anyNativeIterator = NAME == \'Array\' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n var CurrentIteratorPrototype, methods, KEY;\n if (anyNativeIterator) {\n  CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n  if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n   if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n    if (setPrototypeOf) {\n     setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n    } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n     redefine(CurrentIteratorPrototype, ITERATOR, returnThis);\n    }\n   }\n   setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n   if (IS_PURE)\n    Iterators[TO_STRING_TAG] = returnThis;\n  }\n }\n if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n  if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n   createNonEnumerableProperty(IterablePrototype, \'name\', VALUES);\n  } else {\n   INCORRECT_VALUES_NAME = true;\n   defaultIterator = function values() {\n    return call(nativeIterator, this);\n   };\n  }\n }\n if (DEFAULT) {\n  methods = {\n   values: getIterationMethod(VALUES),\n   keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n   entries: getIterationMethod(ENTRIES)\n  };\n  if (FORCED)\n   for (KEY in methods) {\n    if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n     redefine(IterablePrototype, KEY, methods[KEY]);\n    }\n   }\n  else\n   $({\n    target: NAME,\n    proto: true,\n    forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME\n   }, methods);\n }\n if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n  redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n }\n Iterators[NAME] = defaultIterator;\n return methods;\n};\n\n/***/ }),\n/* 65 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar getOwnPropertyDescriptor = (__w_pdfjs_require__(66).f);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar redefine = __w_pdfjs_require__(68);\nvar setGlobal = __w_pdfjs_require__(22);\nvar copyConstructorProperties = __w_pdfjs_require__(70);\nvar isForced = __w_pdfjs_require__(74);\nmodule.exports = function (options, source) {\n var TARGET = options.target;\n var GLOBAL = options.global;\n var STATIC = options.stat;\n var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n if (GLOBAL) {\n  target = global;\n } else if (STATIC) {\n  target = global[TARGET] || setGlobal(TARGET, {});\n } else {\n  target = (global[TARGET] || {}).prototype;\n }\n if (target)\n  for (key in source) {\n   sourceProperty = source[key];\n   if (options.noTargetGet) {\n    descriptor = getOwnPropertyDescriptor(target, key);\n    targetProperty = descriptor && descriptor.value;\n   } else\n    targetProperty = target[key];\n   FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? \'.\' : \'#\') + key, options.forced);\n   if (!FORCED && targetProperty !== undefined) {\n    if (typeof sourceProperty == typeof targetProperty)\n     continue;\n    copyConstructorProperties(sourceProperty, targetProperty);\n   }\n   if (options.sham || targetProperty && targetProperty.sham) {\n    createNonEnumerableProperty(sourceProperty, \'sham\', true);\n   }\n   redefine(target, key, sourceProperty, options);\n  }\n};\n\n/***/ }),\n/* 66 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar call = __w_pdfjs_require__(40);\nvar propertyIsEnumerableModule = __w_pdfjs_require__(67);\nvar createPropertyDescriptor = __w_pdfjs_require__(63);\nvar toIndexedObject = __w_pdfjs_require__(10);\nvar toPropertyKey = __w_pdfjs_require__(38);\nvar hasOwn = __w_pdfjs_require__(23);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(37);\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n O = toIndexedObject(O);\n P = toPropertyKey(P);\n if (IE8_DOM_DEFINE)\n  try {\n   return $getOwnPropertyDescriptor(O, P);\n  } catch (error) {\n  }\n if (hasOwn(O, P))\n  return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n\n/***/ }),\n/* 67 */\n/***/ ((__unused_webpack_module, exports) => {\n\n"use strict";\n\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n var descriptor = getOwnPropertyDescriptor(this, V);\n return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n\n/***/ }),\n/* 68 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar hasOwn = __w_pdfjs_require__(23);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar setGlobal = __w_pdfjs_require__(22);\nvar inspectSource = __w_pdfjs_require__(61);\nvar InternalStateModule = __w_pdfjs_require__(59);\nvar CONFIGURABLE_FUNCTION_NAME = (__w_pdfjs_require__(69).CONFIGURABLE);\nvar getInternalState = InternalStateModule.get;\nvar enforceInternalState = InternalStateModule.enforce;\nvar TEMPLATE = String(String).split(\'String\');\n(module.exports = function (O, key, value, options) {\n var unsafe = options ? !!options.unsafe : false;\n var simple = options ? !!options.enumerable : false;\n var noTargetGet = options ? !!options.noTargetGet : false;\n var name = options && options.name !== undefined ? options.name : key;\n var state;\n if (isCallable(value)) {\n  if (String(name).slice(0, 7) === \'Symbol(\') {\n   name = \'[\' + String(name).replace(/^Symbol\\(([^)]*)\\)/, \'$1\') + \']\';\n  }\n  if (!hasOwn(value, \'name\') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {\n   createNonEnumerableProperty(value, \'name\', name);\n  }\n  state = enforceInternalState(value);\n  if (!state.source) {\n   state.source = TEMPLATE.join(typeof name == \'string\' ? name : \'\');\n  }\n }\n if (O === global) {\n  if (simple)\n   O[key] = value;\n  else\n   setGlobal(key, value);\n  return;\n } else if (!unsafe) {\n  delete O[key];\n } else if (!noTargetGet && O[key]) {\n  simple = true;\n }\n if (simple)\n  O[key] = value;\n else\n  createNonEnumerableProperty(O, key, value);\n})(Function.prototype, \'toString\', function toString() {\n return isCallable(this) && getInternalState(this).source || inspectSource(this);\n});\n\n/***/ }),\n/* 69 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar hasOwn = __w_pdfjs_require__(23);\nvar FunctionPrototype = Function.prototype;\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\nvar EXISTS = hasOwn(FunctionPrototype, \'name\');\nvar PROPER = EXISTS && function something() {\n}.name === \'something\';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, \'name\').configurable);\nmodule.exports = {\n EXISTS: EXISTS,\n PROPER: PROPER,\n CONFIGURABLE: CONFIGURABLE\n};\n\n/***/ }),\n/* 70 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar hasOwn = __w_pdfjs_require__(23);\nvar ownKeys = __w_pdfjs_require__(71);\nvar getOwnPropertyDescriptorModule = __w_pdfjs_require__(66);\nvar definePropertyModule = __w_pdfjs_require__(36);\nmodule.exports = function (target, source, exceptions) {\n var keys = ownKeys(source);\n var defineProperty = definePropertyModule.f;\n var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n for (var i = 0; i < keys.length; i++) {\n  var key = keys[i];\n  if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n   defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n  }\n }\n};\n\n/***/ }),\n/* 71 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar getOwnPropertyNamesModule = __w_pdfjs_require__(72);\nvar getOwnPropertySymbolsModule = __w_pdfjs_require__(73);\nvar anObject = __w_pdfjs_require__(32);\nvar concat = uncurryThis([].concat);\nmodule.exports = getBuiltIn(\'Reflect\', \'ownKeys\') || function ownKeys(it) {\n var keys = getOwnPropertyNamesModule.f(anObject(it));\n var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n\n/***/ }),\n/* 72 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\nvar internalObjectKeys = __w_pdfjs_require__(48);\nvar enumBugKeys = __w_pdfjs_require__(55);\nvar hiddenKeys = enumBugKeys.concat(\'length\', \'prototype\');\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n return internalObjectKeys(O, hiddenKeys);\n};\n\n/***/ }),\n/* 73 */\n/***/ ((__unused_webpack_module, exports) => {\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 74 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar isCallable = __w_pdfjs_require__(8);\nvar replacement = /#|\\.prototype\\./;\nvar isForced = function (feature, detection) {\n var value = data[normalize(feature)];\n return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;\n};\nvar normalize = isForced.normalize = function (string) {\n return String(string).replace(replacement, \'.\').toLowerCase();\n};\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = \'N\';\nvar POLYFILL = isForced.POLYFILL = \'P\';\nmodule.exports = isForced;\n\n/***/ }),\n/* 75 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar IteratorPrototype = (__w_pdfjs_require__(76).IteratorPrototype);\nvar create = __w_pdfjs_require__(31);\nvar createPropertyDescriptor = __w_pdfjs_require__(63);\nvar setToStringTag = __w_pdfjs_require__(79);\nvar Iterators = __w_pdfjs_require__(58);\nvar returnThis = function () {\n return this;\n};\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n var TO_STRING_TAG = NAME + \' Iterator\';\n IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n Iterators[TO_STRING_TAG] = returnThis;\n return IteratorConstructor;\n};\n\n/***/ }),\n/* 76 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar fails = __w_pdfjs_require__(14);\nvar isCallable = __w_pdfjs_require__(8);\nvar create = __w_pdfjs_require__(31);\nvar getPrototypeOf = __w_pdfjs_require__(77);\nvar redefine = __w_pdfjs_require__(68);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar ITERATOR = wellKnownSymbol(\'iterator\');\nvar BUGGY_SAFARI_ITERATORS = false;\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\nif ([].keys) {\n arrayIterator = [].keys();\n if (!(\'next\' in arrayIterator))\n  BUGGY_SAFARI_ITERATORS = true;\n else {\n  PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n  if (PrototypeOfArrayIteratorPrototype !== Object.prototype)\n   IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n }\n}\nvar NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {\n var test = {};\n return IteratorPrototype[ITERATOR].call(test) !== test;\n});\nif (NEW_ITERATOR_PROTOTYPE)\n IteratorPrototype = {};\nelse if (IS_PURE)\n IteratorPrototype = create(IteratorPrototype);\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n redefine(IteratorPrototype, ITERATOR, function () {\n  return this;\n });\n}\nmodule.exports = {\n IteratorPrototype: IteratorPrototype,\n BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n\n/***/ }),\n/* 77 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar hasOwn = __w_pdfjs_require__(23);\nvar isCallable = __w_pdfjs_require__(8);\nvar toObject = __w_pdfjs_require__(24);\nvar sharedKey = __w_pdfjs_require__(57);\nvar CORRECT_PROTOTYPE_GETTER = __w_pdfjs_require__(78);\nvar IE_PROTO = sharedKey(\'IE_PROTO\');\nvar Object = global.Object;\nvar ObjectPrototype = Object.prototype;\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {\n var object = toObject(O);\n if (hasOwn(object, IE_PROTO))\n  return object[IE_PROTO];\n var constructor = object.constructor;\n if (isCallable(constructor) && object instanceof constructor) {\n  return constructor.prototype;\n }\n return object instanceof Object ? ObjectPrototype : null;\n};\n\n/***/ }),\n/* 78 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = !fails(function () {\n function F() {\n }\n F.prototype.constructor = null;\n return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n\n/***/ }),\n/* 79 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar defineProperty = (__w_pdfjs_require__(36).f);\nvar hasOwn = __w_pdfjs_require__(23);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nmodule.exports = function (target, TAG, STATIC) {\n if (target && !STATIC)\n  target = target.prototype;\n if (target && !hasOwn(target, TO_STRING_TAG)) {\n  defineProperty(target, TO_STRING_TAG, {\n   configurable: true,\n   value: TAG\n  });\n }\n};\n\n/***/ }),\n/* 80 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar anObject = __w_pdfjs_require__(32);\nvar aPossiblePrototype = __w_pdfjs_require__(81);\nmodule.exports = Object.setPrototypeOf || (\'__proto__\' in {} ? (function () {\n var CORRECT_SETTER = false;\n var test = {};\n var setter;\n try {\n  setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, \'__proto__\').set);\n  setter(test, []);\n  CORRECT_SETTER = test instanceof Array;\n } catch (error) {\n }\n return function setPrototypeOf(O, proto) {\n  anObject(O);\n  aPossiblePrototype(proto);\n  if (CORRECT_SETTER)\n   setter(O, proto);\n  else\n   O.__proto__ = proto;\n  return O;\n };\n}()) : undefined);\n\n/***/ }),\n/* 81 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar isCallable = __w_pdfjs_require__(8);\nvar String = global.String;\nvar TypeError = global.TypeError;\nmodule.exports = function (argument) {\n if (typeof argument == \'object\' || isCallable(argument))\n  return argument;\n throw TypeError("Can\'t set " + String(argument) + \' as a prototype\');\n};\n\n/***/ }),\n/* 82 */\n/***/ ((__unused_webpack_module, exports) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ZoomType = exports.Trans = exports.Style = exports.ScaleWhen = exports.ScaleHow = exports.Position = exports.Highlight = exports.GlobalConstants = exports.Font = exports.Display = exports.Cursor = exports.Border = void 0;\nconst Border = Object.freeze({\n  s: "solid",\n  d: "dashed",\n  b: "beveled",\n  i: "inset",\n  u: "underline"\n});\nexports.Border = Border;\nconst Cursor = Object.freeze({\n  visible: 0,\n  hidden: 1,\n  delay: 2\n});\nexports.Cursor = Cursor;\nconst Display = Object.freeze({\n  visible: 0,\n  hidden: 1,\n  noPrint: 2,\n  noView: 3\n});\nexports.Display = Display;\nconst Font = Object.freeze({\n  Times: "Times-Roman",\n  TimesB: "Times-Bold",\n  TimesI: "Times-Italic",\n  TimesBI: "Times-BoldItalic",\n  Helv: "Helvetica",\n  HelvB: "Helvetica-Bold",\n  HelvI: "Helvetica-Oblique",\n  HelvBI: "Helvetica-BoldOblique",\n  Cour: "Courier",\n  CourB: "Courier-Bold",\n  CourI: "Courier-Oblique",\n  CourBI: "Courier-BoldOblique",\n  Symbol: "Symbol",\n  ZapfD: "ZapfDingbats",\n  KaGo: "HeiseiKakuGo-W5-UniJIS-UCS2-H",\n  KaMi: "HeiseiMin-W3-UniJIS-UCS2-H"\n});\nexports.Font = Font;\nconst Highlight = Object.freeze({\n  n: "none",\n  i: "invert",\n  p: "push",\n  o: "outline"\n});\nexports.Highlight = Highlight;\nconst Position = Object.freeze({\n  textOnly: 0,\n  iconOnly: 1,\n  iconTextV: 2,\n  textIconV: 3,\n  iconTextH: 4,\n  textIconH: 5,\n  overlay: 6\n});\nexports.Position = Position;\nconst ScaleHow = Object.freeze({\n  proportional: 0,\n  anamorphic: 1\n});\nexports.ScaleHow = ScaleHow;\nconst ScaleWhen = Object.freeze({\n  always: 0,\n  never: 1,\n  tooBig: 2,\n  tooSmall: 3\n});\nexports.ScaleWhen = ScaleWhen;\nconst Style = Object.freeze({\n  ch: "check",\n  cr: "cross",\n  di: "diamond",\n  ci: "circle",\n  st: "star",\n  sq: "square"\n});\nexports.Style = Style;\nconst Trans = Object.freeze({\n  blindsH: "BlindsHorizontal",\n  blindsV: "BlindsVertical",\n  boxI: "BoxIn",\n  boxO: "BoxOut",\n  dissolve: "Dissolve",\n  glitterD: "GlitterDown",\n  glitterR: "GlitterRight",\n  glitterRD: "GlitterRightDown",\n  random: "Random",\n  replace: "Replace",\n  splitHI: "SplitHorizontalIn",\n  splitHO: "SplitHorizontalOut",\n  splitVI: "SplitVerticalIn",\n  splitVO: "SplitVerticalOut",\n  wipeD: "WipeDown",\n  wipeL: "WipeLeft",\n  wipeR: "WipeRight",\n  wipeU: "WipeUp"\n});\nexports.Trans = Trans;\nconst ZoomType = Object.freeze({\n  none: "NoVary",\n  fitP: "FitPage",\n  fitW: "FitWidth",\n  fitH: "FitHeight",\n  fitV: "FitVisibleWidth",\n  pref: "Preferred",\n  refW: "ReflowWidth"\n});\nexports.ZoomType = ZoomType;\nconst GlobalConstants = Object.freeze({\n  IDS_GREATER_THAN: "Invalid value: must be greater than or equal to % s.",\n  IDS_GT_AND_LT: "Invalid value: must be greater than or equal to % s " + "and less than or equal to % s.",\n  IDS_LESS_THAN: "Invalid value: must be less than or equal to % s.",\n  IDS_INVALID_MONTH: "** Invalid **",\n  IDS_INVALID_DATE: "Invalid date / time: please ensure that the date / time exists.Field",\n  IDS_INVALID_DATE2: " should match format ",\n  IDS_INVALID_VALUE: "The value entered does not match the format of the field",\n  IDS_AM: "am",\n  IDS_PM: "pm",\n  IDS_MONTH_INFO: "January[1] February[2] March[3] April[4] May[5] " + "June[6] July[7] August[8] September[9] October[10] " + "November[11] December[12] Sept[9] Jan[1] Feb[2] Mar[3] " + "Apr[4] Jun[6] Jul[7] Aug[8] Sep[9] Oct[10] Nov[11] Dec[12]",\n  IDS_STARTUP_CONSOLE_MSG: "** ^ _ ^ **",\n  RE_NUMBER_ENTRY_DOT_SEP: ["[+-]?\\\\d*\\\\.?\\\\d*"],\n  RE_NUMBER_COMMIT_DOT_SEP: ["[+-]?\\\\d+(\\\\.\\\\d+)?", "[+-]?\\\\.\\\\d+", "[+-]?\\\\d+\\\\."],\n  RE_NUMBER_ENTRY_COMMA_SEP: ["[+-]?\\\\d*,?\\\\d*"],\n  RE_NUMBER_COMMIT_COMMA_SEP: ["[+-]?\\\\d+([.,]\\\\d+)?", "[+-]?[.,]\\\\d+", "[+-]?\\\\d+[.,]"],\n  RE_ZIP_ENTRY: ["\\\\d{0,5}"],\n  RE_ZIP_COMMIT: ["\\\\d{5}"],\n  RE_ZIP4_ENTRY: ["\\\\d{0,5}(\\\\.|[- ])?\\\\d{0,4}"],\n  RE_ZIP4_COMMIT: ["\\\\d{5}(\\\\.|[- ])?\\\\d{4}"],\n  RE_PHONE_ENTRY: ["\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "\\\\(\\\\d{0,3}", "\\\\(\\\\d{0,3}\\\\)(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "\\\\(\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "\\\\d{0,3}\\\\)(\\\\.|[- ])?\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,4}", "011(\\\\.|[- \\\\d])*"],\n  RE_PHONE_COMMIT: ["\\\\d{3}(\\\\.|[- ])?\\\\d{4}", "\\\\d{3}(\\\\.|[- ])?\\\\d{3}(\\\\.|[- ])?\\\\d{4}", "\\\\(\\\\d{3}\\\\)(\\\\.|[- ])?\\\\d{3}(\\\\.|[- ])?\\\\d{4}", "011(\\\\.|[- \\\\d])*"],\n  RE_SSN_ENTRY: ["\\\\d{0,3}(\\\\.|[- ])?\\\\d{0,2}(\\\\.|[- ])?\\\\d{0,4}"],\n  RE_SSN_COMMIT: ["\\\\d{3}(\\\\.|[- ])?\\\\d{2}(\\\\.|[- ])?\\\\d{4}"]\n});\nexports.GlobalConstants = GlobalConstants;\n\n/***/ }),\n/* 83 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.RadioButtonField = exports.Field = exports.CheckboxField = void 0;\n\n__w_pdfjs_require__(2);\n\nvar _common = __w_pdfjs_require__(84);\n\nvar _color = __w_pdfjs_require__(85);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Field extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this.alignment = data.alignment || "left";\n    this.borderStyle = data.borderStyle || "";\n    this.buttonAlignX = data.buttonAlignX || 50;\n    this.buttonAlignY = data.buttonAlignY || 50;\n    this.buttonFitBounds = data.buttonFitBounds;\n    this.buttonPosition = data.buttonPosition;\n    this.buttonScaleHow = data.buttonScaleHow;\n    this.ButtonScaleWhen = data.buttonScaleWhen;\n    this.calcOrderIndex = data.calcOrderIndex;\n    this.charLimit = data.charLimit;\n    this.comb = data.comb;\n    this.commitOnSelChange = data.commitOnSelChange;\n    this.currentValueIndices = data.currentValueIndices;\n    this.defaultStyle = data.defaultStyle;\n    this.defaultValue = data.defaultValue;\n    this.doNotScroll = data.doNotScroll;\n    this.doNotSpellCheck = data.doNotSpellCheck;\n    this.delay = data.delay;\n    this.display = data.display;\n    this.doc = data.doc.wrapped;\n    this.editable = data.editable;\n    this.exportValues = data.exportValues;\n    this.fileSelect = data.fileSelect;\n    this.hidden = data.hidden;\n    this.highlight = data.highlight;\n    this.lineWidth = data.lineWidth;\n    this.multiline = data.multiline;\n    this.multipleSelection = !!data.multipleSelection;\n    this.name = data.name;\n    this.password = data.password;\n    this.print = data.print;\n    this.radiosInUnison = data.radiosInUnison;\n    this.readonly = data.readonly;\n    this.rect = data.rect;\n    this.required = data.required;\n    this.richText = data.richText;\n    this.richValue = data.richValue;\n    this.rotation = data.rotation;\n    this.style = data.style;\n    this.submitName = data.submitName;\n    this.textFont = data.textFont;\n    this.textSize = data.textSize;\n    this.type = data.type;\n    this.userName = data.userName;\n    this._actions = (0, _common.createActionsMap)(data.actions);\n    this._browseForFileToSubmit = data.browseForFileToSubmit || null;\n    this._buttonCaption = null;\n    this._buttonIcon = null;\n    this._children = null;\n    this._currentValueIndices = data.currentValueIndices || 0;\n    this._document = data.doc;\n    this._fieldPath = data.fieldPath;\n    this._fillColor = data.fillColor || ["T"];\n    this._isChoice = Array.isArray(data.items);\n    this._items = data.items || [];\n    this._page = data.page || 0;\n    this._strokeColor = data.strokeColor || ["G", 0];\n    this._textColor = data.textColor || ["G", 0];\n    this._value = data.value || "";\n    this._kidIds = data.kidIds || null;\n    this._fieldType = (0, _common.getFieldType)(this._actions);\n    this._siblings = data.siblings || null;\n    this._globalEval = data.globalEval;\n    this._appObjects = data.appObjects;\n    this.valueAsString = data.valueAsString || this._value;\n  }\n\n  get currentValueIndices() {\n    if (!this._isChoice) {\n      return 0;\n    }\n\n    return this._currentValueIndices;\n  }\n\n  set currentValueIndices(indices) {\n    if (!this._isChoice) {\n      return;\n    }\n\n    if (!Array.isArray(indices)) {\n      indices = [indices];\n    }\n\n    if (!indices.every(i => typeof i === "number" && Number.isInteger(i) && i >= 0 && i < this.numItems)) {\n      return;\n    }\n\n    indices.sort();\n\n    if (this.multipleSelection) {\n      this._currentValueIndices = indices;\n      this._value = [];\n      indices.forEach(i => {\n        this._value.push(this._items[i].displayValue);\n      });\n    } else {\n      if (indices.length > 0) {\n        indices = indices.splice(1, indices.length - 1);\n        this._currentValueIndices = indices[0];\n        this._value = this._items[this._currentValueIndices];\n      }\n    }\n\n    this._send({\n      id: this._id,\n      indices\n    });\n  }\n\n  get fillColor() {\n    return this._fillColor;\n  }\n\n  set fillColor(color) {\n    if (_color.Color._isValidColor(color)) {\n      this._fillColor = color;\n    }\n  }\n\n  get bgColor() {\n    return this.fillColor;\n  }\n\n  set bgColor(color) {\n    this.fillColor = color;\n  }\n\n  get numItems() {\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    return this._items.length;\n  }\n\n  set numItems(_) {\n    throw new Error("field.numItems is read-only");\n  }\n\n  get strokeColor() {\n    return this._strokeColor;\n  }\n\n  set strokeColor(color) {\n    if (_color.Color._isValidColor(color)) {\n      this._strokeColor = color;\n    }\n  }\n\n  get borderColor() {\n    return this.strokeColor;\n  }\n\n  set borderColor(color) {\n    this.strokeColor = color;\n  }\n\n  get page() {\n    return this._page;\n  }\n\n  set page(_) {\n    throw new Error("field.page is read-only");\n  }\n\n  get textColor() {\n    return this._textColor;\n  }\n\n  set textColor(color) {\n    if (_color.Color._isValidColor(color)) {\n      this._textColor = color;\n    }\n  }\n\n  get fgColor() {\n    return this.textColor;\n  }\n\n  set fgColor(color) {\n    this.textColor = color;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value === "") {\n      this._value = "";\n    } else if (typeof value === "string") {\n      switch (this._fieldType) {\n        case _common.FieldType.number:\n        case _common.FieldType.percent:\n          value = parseFloat(value);\n\n          if (!isNaN(value)) {\n            this._value = value;\n          }\n\n          break;\n\n        default:\n          this._value = value;\n      }\n    } else {\n      this._value = value;\n    }\n\n    if (this._isChoice) {\n      if (this.multipleSelection) {\n        const values = new Set(value);\n        this._currentValueIndices.length = 0;\n\n        this._items.forEach((_ref, i) => {\n          let {\n            displayValue\n          } = _ref;\n\n          if (values.has(displayValue)) {\n            this._currentValueIndices.push(i);\n          }\n        });\n      } else {\n        this._currentValueIndices = this._items.findIndex(_ref2 => {\n          let {\n            displayValue\n          } = _ref2;\n          return value === displayValue;\n        });\n      }\n    }\n  }\n\n  get valueAsString() {\n    if (this._valueAsString === undefined) {\n      this._valueAsString = this._value ? this._value.toString() : "";\n    }\n\n    return this._valueAsString;\n  }\n\n  set valueAsString(val) {\n    this._valueAsString = val ? val.toString() : "";\n  }\n\n  browseForFileToSubmit() {\n    if (this._browseForFileToSubmit) {\n      this._browseForFileToSubmit();\n    }\n  }\n\n  buttonGetCaption() {\n    let nFace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (this._buttonCaption) {\n      return this._buttonCaption[nFace];\n    }\n\n    return "";\n  }\n\n  buttonGetIcon() {\n    let nFace = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    if (this._buttonIcon) {\n      return this._buttonIcon[nFace];\n    }\n\n    return null;\n  }\n\n  buttonImportIcon() {\n    let cPath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let nPave = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  }\n\n  buttonSetCaption(cCaption) {\n    let nFace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!this._buttonCaption) {\n      this._buttonCaption = ["", "", ""];\n    }\n\n    this._buttonCaption[nFace] = cCaption;\n  }\n\n  buttonSetIcon(oIcon) {\n    let nFace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (!this._buttonIcon) {\n      this._buttonIcon = [null, null, null];\n    }\n\n    this._buttonIcon[nFace] = oIcon;\n  }\n\n  checkThisBox(nWidget) {\n    let bCheckIt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  }\n\n  clearItems() {\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    this._items = [];\n\n    this._send({\n      id: this._id,\n      clear: null\n    });\n  }\n\n  deleteItemAt() {\n    let nIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    if (!this.numItems) {\n      return;\n    }\n\n    if (nIdx === null) {\n      nIdx = Array.isArray(this._currentValueIndices) ? this._currentValueIndices[0] : this._currentValueIndices;\n      nIdx = nIdx || 0;\n    }\n\n    if (nIdx < 0 || nIdx >= this.numItems) {\n      nIdx = this.numItems - 1;\n    }\n\n    this._items.splice(nIdx, 1);\n\n    if (Array.isArray(this._currentValueIndices)) {\n      let index = this._currentValueIndices.findIndex(i => i >= nIdx);\n\n      if (index !== -1) {\n        if (this._currentValueIndices[index] === nIdx) {\n          this._currentValueIndices.splice(index, 1);\n        }\n\n        for (const ii = this._currentValueIndices.length; index < ii; index++) {\n          --this._currentValueIndices[index];\n        }\n      }\n    } else {\n      if (this._currentValueIndices === nIdx) {\n        this._currentValueIndices = this.numItems > 0 ? 0 : -1;\n      } else if (this._currentValueIndices > nIdx) {\n        --this._currentValueIndices;\n      }\n    }\n\n    this._send({\n      id: this._id,\n      remove: nIdx\n    });\n  }\n\n  getItemAt() {\n    let nIdx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;\n    let bExportValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    if (nIdx < 0 || nIdx >= this.numItems) {\n      nIdx = this.numItems - 1;\n    }\n\n    const item = this._items[nIdx];\n    return bExportValue ? item.exportValue : item.displayValue;\n  }\n\n  getArray() {\n    if (this._kidIds) {\n      return this._kidIds.map(id => this._appObjects[id].wrapped);\n    }\n\n    if (this._children === null) {\n      this._children = this._document.obj._getChildren(this._fieldPath);\n    }\n\n    return this._children;\n  }\n\n  getLock() {\n    return undefined;\n  }\n\n  isBoxChecked(nWidget) {\n    return false;\n  }\n\n  isDefaultChecked(nWidget) {\n    return false;\n  }\n\n  insertItemAt(cName) {\n    let cExport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    let nIdx = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    if (!cName) {\n      return;\n    }\n\n    if (nIdx < 0 || nIdx > this.numItems) {\n      nIdx = this.numItems;\n    }\n\n    if (this._items.some(_ref3 => {\n      let {\n        displayValue\n      } = _ref3;\n      return displayValue === cName;\n    })) {\n      return;\n    }\n\n    if (cExport === undefined) {\n      cExport = cName;\n    }\n\n    const data = {\n      displayValue: cName,\n      exportValue: cExport\n    };\n\n    this._items.splice(nIdx, 0, data);\n\n    if (Array.isArray(this._currentValueIndices)) {\n      let index = this._currentValueIndices.findIndex(i => i >= nIdx);\n\n      if (index !== -1) {\n        for (const ii = this._currentValueIndices.length; index < ii; index++) {\n          ++this._currentValueIndices[index];\n        }\n      }\n    } else if (this._currentValueIndices >= nIdx) {\n      ++this._currentValueIndices;\n    }\n\n    this._send({\n      id: this._id,\n      insert: {\n        index: nIdx,\n        ...data\n      }\n    });\n  }\n\n  setAction(cTrigger, cScript) {\n    if (typeof cTrigger !== "string" || typeof cScript !== "string") {\n      return;\n    }\n\n    if (!(cTrigger in this._actions)) {\n      this._actions[cTrigger] = [];\n    }\n\n    this._actions[cTrigger].push(cScript);\n  }\n\n  setFocus() {\n    this._send({\n      id: this._id,\n      focus: true\n    });\n  }\n\n  setItems(oArray) {\n    if (!this._isChoice) {\n      throw new Error("Not a choice widget");\n    }\n\n    this._items.length = 0;\n\n    for (const element of oArray) {\n      let displayValue, exportValue;\n\n      if (Array.isArray(element)) {\n        var _element$, _element$2;\n\n        displayValue = ((_element$ = element[0]) === null || _element$ === void 0 ? void 0 : _element$.toString()) || "";\n        exportValue = ((_element$2 = element[1]) === null || _element$2 === void 0 ? void 0 : _element$2.toString()) || "";\n      } else {\n        displayValue = exportValue = (element === null || element === void 0 ? void 0 : element.toString()) || "";\n      }\n\n      this._items.push({\n        displayValue,\n        exportValue\n      });\n    }\n\n    this._currentValueIndices = 0;\n\n    this._send({\n      id: this._id,\n      items: this._items\n    });\n  }\n\n  setLock() {}\n\n  signatureGetModifications() {}\n\n  signatureGetSeedValue() {}\n\n  signatureInfo() {}\n\n  signatureSetSeedValue() {}\n\n  signatureSign() {}\n\n  signatureValidate() {}\n\n  _isButton() {\n    return false;\n  }\n\n  _reset() {\n    this.value = this.valueAsString = this.defaultValue;\n  }\n\n  _runActions(event) {\n    const eventName = event.name;\n\n    if (!this._actions.has(eventName)) {\n      return false;\n    }\n\n    const actions = this._actions.get(eventName);\n\n    try {\n      for (const action of actions) {\n        this._globalEval(action);\n      }\n    } catch (error) {\n      event.rc = false;\n      throw error;\n    }\n\n    return true;\n  }\n\n}\n\nexports.Field = Field;\n\nclass RadioButtonField extends Field {\n  constructor(otherButtons, data) {\n    super(data);\n    this.exportValues = [this.exportValues];\n    this._radioIds = [this._id];\n    this._radioActions = [this._actions];\n\n    for (const radioData of otherButtons) {\n      this.exportValues.push(radioData.exportValues);\n\n      this._radioIds.push(radioData.id);\n\n      this._radioActions.push((0, _common.createActionsMap)(radioData.actions));\n\n      if (this._value === radioData.exportValues) {\n        this._id = radioData.id;\n      }\n    }\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (value === null || value === undefined) {\n      this._value = "";\n    }\n\n    const i = this.exportValues.indexOf(value);\n\n    if (0 <= i && i < this._radioIds.length) {\n      this._id = this._radioIds[i];\n      this._value = value;\n    } else if (value === "Off" && this._radioIds.length === 2) {\n      const nextI = (1 + this._radioIds.indexOf(this._id)) % 2;\n      this._id = this._radioIds[nextI];\n      this._value = this.exportValues[nextI];\n    }\n  }\n\n  checkThisBox(nWidget) {\n    let bCheckIt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (nWidget < 0 || nWidget >= this._radioIds.length || !bCheckIt) {\n      return;\n    }\n\n    this._id = this._radioIds[nWidget];\n    this._value = this.exportValues[nWidget];\n\n    this._send({\n      id: this._id,\n      value: this._value\n    });\n  }\n\n  isBoxChecked(nWidget) {\n    return nWidget >= 0 && nWidget < this._radioIds.length && this._id === this._radioIds[nWidget];\n  }\n\n  isDefaultChecked(nWidget) {\n    return nWidget >= 0 && nWidget < this.exportValues.length && this.defaultValue === this.exportValues[nWidget];\n  }\n\n  _getExportValue(state) {\n    const i = this._radioIds.indexOf(this._id);\n\n    return this.exportValues[i];\n  }\n\n  _runActions(event) {\n    const i = this._radioIds.indexOf(this._id);\n\n    this._actions = this._radioActions[i];\n    return super._runActions(event);\n  }\n\n  _isButton() {\n    return true;\n  }\n\n}\n\nexports.RadioButtonField = RadioButtonField;\n\nclass CheckboxField extends RadioButtonField {\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    if (!value || value === "Off") {\n      this._value = "Off";\n    } else {\n      super.value = value;\n    }\n  }\n\n  _getExportValue(state) {\n    return state ? super._getExportValue(state) : "Off";\n  }\n\n  isBoxChecked(nWidget) {\n    if (this._value === "Off") {\n      return false;\n    }\n\n    return super.isBoxChecked(nWidget);\n  }\n\n  isDefaultChecked(nWidget) {\n    if (this.defaultValue === "Off") {\n      return this._value === "Off";\n    }\n\n    return super.isDefaultChecked(nWidget);\n  }\n\n  checkThisBox(nWidget) {\n    let bCheckIt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (nWidget < 0 || nWidget >= this._radioIds.length) {\n      return;\n    }\n\n    this._id = this._radioIds[nWidget];\n    this._value = bCheckIt ? this.exportValues[nWidget] : "Off";\n\n    this._send({\n      id: this._id,\n      value: this._value\n    });\n  }\n\n}\n\nexports.CheckboxField = CheckboxField;\n\n/***/ }),\n/* 84 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.FieldType = void 0;\nexports.createActionsMap = createActionsMap;\nexports.getFieldType = getFieldType;\n\n__w_pdfjs_require__(2);\n\nconst FieldType = {\n  none: 0,\n  number: 1,\n  percent: 2,\n  date: 3,\n  time: 4\n};\nexports.FieldType = FieldType;\n\nfunction createActionsMap(actions) {\n  const actionsMap = new Map();\n\n  if (actions) {\n    for (const [eventType, actionsForEvent] of Object.entries(actions)) {\n      actionsMap.set(eventType, actionsForEvent);\n    }\n  }\n\n  return actionsMap;\n}\n\nfunction getFieldType(actions) {\n  let format = actions.get("Format");\n\n  if (!format) {\n    return FieldType.none;\n  }\n\n  format = format[0];\n  format = format.trim();\n\n  if (format.startsWith("AFNumber_")) {\n    return FieldType.number;\n  }\n\n  if (format.startsWith("AFPercent_")) {\n    return FieldType.percent;\n  }\n\n  if (format.startsWith("AFDate_")) {\n    return FieldType.date;\n  }\n\n  if (format.startsWith("AFTime__")) {\n    return FieldType.time;\n  }\n\n  return FieldType.none;\n}\n\n/***/ }),\n/* 85 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Color = void 0;\n\nvar _scripting_utils = __w_pdfjs_require__(86);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Color extends _pdf_object.PDFObject {\n  constructor() {\n    super({});\n    this.transparent = ["T"];\n    this.black = ["G", 0];\n    this.white = ["G", 1];\n    this.red = ["RGB", 1, 0, 0];\n    this.green = ["RGB", 0, 1, 0];\n    this.blue = ["RGB", 0, 0, 1];\n    this.cyan = ["CMYK", 1, 0, 0, 0];\n    this.magenta = ["CMYK", 0, 1, 0, 0];\n    this.yellow = ["CMYK", 0, 0, 1, 0];\n    this.dkGray = ["G", 0.25];\n    this.gray = ["G", 0.5];\n    this.ltGray = ["G", 0.75];\n  }\n\n  static _isValidSpace(cColorSpace) {\n    return typeof cColorSpace === "string" && (cColorSpace === "T" || cColorSpace === "G" || cColorSpace === "RGB" || cColorSpace === "CMYK");\n  }\n\n  static _isValidColor(colorArray) {\n    if (!Array.isArray(colorArray) || colorArray.length === 0) {\n      return false;\n    }\n\n    const space = colorArray[0];\n\n    if (!Color._isValidSpace(space)) {\n      return false;\n    }\n\n    switch (space) {\n      case "T":\n        if (colorArray.length !== 1) {\n          return false;\n        }\n\n        break;\n\n      case "G":\n        if (colorArray.length !== 2) {\n          return false;\n        }\n\n        break;\n\n      case "RGB":\n        if (colorArray.length !== 4) {\n          return false;\n        }\n\n        break;\n\n      case "CMYK":\n        if (colorArray.length !== 5) {\n          return false;\n        }\n\n        break;\n\n      default:\n        return false;\n    }\n\n    return colorArray.slice(1).every(c => typeof c === "number" && c >= 0 && c <= 1);\n  }\n\n  static _getCorrectColor(colorArray) {\n    return Color._isValidColor(colorArray) ? colorArray : ["G", 0];\n  }\n\n  convert(colorArray, cColorSpace) {\n    if (!Color._isValidSpace(cColorSpace)) {\n      return this.black;\n    }\n\n    if (cColorSpace === "T") {\n      return ["T"];\n    }\n\n    colorArray = Color._getCorrectColor(colorArray);\n\n    if (colorArray[0] === cColorSpace) {\n      return colorArray;\n    }\n\n    if (colorArray[0] === "T") {\n      return this.convert(this.black, cColorSpace);\n    }\n\n    return _scripting_utils.ColorConverters["".concat(colorArray[0], "_").concat(cColorSpace)](colorArray.slice(1));\n  }\n\n  equal(colorArray1, colorArray2) {\n    colorArray1 = Color._getCorrectColor(colorArray1);\n    colorArray2 = Color._getCorrectColor(colorArray2);\n\n    if (colorArray1[0] === "T" || colorArray2[0] === "T") {\n      return colorArray1[0] === "T" && colorArray2[0] === "T";\n    }\n\n    if (colorArray1[0] !== colorArray2[0]) {\n      colorArray2 = this.convert(colorArray2, colorArray1[0]);\n    }\n\n    return colorArray1.slice(1).every((c, i) => c === colorArray2[i + 1]);\n  }\n\n}\n\nexports.Color = Color;\n\n/***/ }),\n/* 86 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ColorConverters = void 0;\n\n__w_pdfjs_require__(2);\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, "0");\n}\n\nclass ColorConverters {\n  static CMYK_G(_ref) {\n    let [c, y, m, k] = _ref;\n    return ["G", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK(_ref2) {\n    let [g] = _ref2;\n    return ["CMYK", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB(_ref3) {\n    let [g] = _ref3;\n    return ["RGB", g, g, g];\n  }\n\n  static G_HTML(_ref4) {\n    let [g] = _ref4;\n    const G = makeColorComp(g);\n    return "#".concat(G).concat(G).concat(G);\n  }\n\n  static RGB_G(_ref5) {\n    let [r, g, b] = _ref5;\n    return ["G", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML(_ref6) {\n    let [r, g, b] = _ref6;\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return "#".concat(R).concat(G).concat(B);\n  }\n\n  static T_HTML() {\n    return "#00000000";\n  }\n\n  static CMYK_RGB(_ref7) {\n    let [c, y, m, k] = _ref7;\n    return ["RGB", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK(_ref8) {\n    let [r, g, b] = _ref8;\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return ["CMYK", c, m, y, k];\n  }\n\n}\n\nexports.ColorConverters = ColorConverters;\n\n/***/ }),\n/* 87 */\n/***/ ((__unused_webpack_module, exports) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.PDFObject = void 0;\n\nclass PDFObject {\n  constructor(data) {\n    this._expandos = Object.create(null);\n    this._send = data.send || null;\n    this._id = data.id || null;\n  }\n\n}\n\nexports.PDFObject = PDFObject;\n\n/***/ }),\n/* 88 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.AForm = void 0;\n\n__w_pdfjs_require__(89);\n\n__w_pdfjs_require__(101);\n\n__w_pdfjs_require__(103);\n\n__w_pdfjs_require__(110);\n\n__w_pdfjs_require__(2);\n\nvar _constants = __w_pdfjs_require__(82);\n\nclass AForm {\n  constructor(document, app, util, color) {\n    this._document = document;\n    this._app = app;\n    this._util = util;\n    this._color = color;\n    this._dateFormats = ["m/d", "m/d/yy", "mm/dd/yy", "mm/yy", "d-mmm", "d-mmm-yy", "dd-mmm-yy", "yy-mm-dd", "mmm-yy", "mmmm-yy", "mmm d, yyyy", "mmmm d, yyyy", "m/d/yy h:MM tt", "m/d/yy HH:MM"];\n    this._timeFormats = ["HH:MM", "h:MM tt", "HH:MM:ss", "h:MM:ss tt"];\n    this._emailRegex = new RegExp("^[a-zA-Z0-9.!#$%&\'*+\\\\/=?^_`{|}~-]+" + "@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?" + "(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$");\n  }\n\n  _mkTargetName(event) {\n    return event.target ? "[ ".concat(event.target.name, " ]") : "";\n  }\n\n  _parseDate(cFormat, cDate) {\n    let date = null;\n\n    try {\n      date = this._util.scand(cFormat, cDate);\n    } catch (error) {}\n\n    if (!date) {\n      date = Date.parse(cDate);\n\n      if (isNaN(date)) {\n        date = null;\n      } else {\n        date = new Date(date);\n      }\n    }\n\n    return date;\n  }\n\n  AFMergeChange() {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalThis.event;\n\n    if (event.willCommit) {\n      return event.value.toString();\n    }\n\n    return this._app._eventDispatcher.mergeChange(event);\n  }\n\n  AFParseDateEx(cString, cOrder) {\n    return this._parseDate(cOrder, cString);\n  }\n\n  AFExtractNums(str) {\n    if (typeof str === "number") {\n      return [str];\n    }\n\n    if (!str || typeof str !== "string") {\n      return null;\n    }\n\n    const first = str.charAt(0);\n\n    if (first === "." || first === ",") {\n      str = "0".concat(str);\n    }\n\n    const numbers = str.match(/(\\d+)/g);\n\n    if (numbers.length === 0) {\n      return null;\n    }\n\n    return numbers;\n  }\n\n  AFMakeNumber(str) {\n    if (typeof str === "number") {\n      return str;\n    }\n\n    if (typeof str !== "string") {\n      return null;\n    }\n\n    str = str.trim().replace(",", ".");\n    const number = parseFloat(str);\n\n    if (isNaN(number) || !isFinite(number)) {\n      return null;\n    }\n\n    return number;\n  }\n\n  AFMakeArrayFromList(string) {\n    if (typeof string === "string") {\n      return string.split(/, ?/g);\n    }\n\n    return string;\n  }\n\n  AFNumber_Format(nDec, sepStyle, negStyle, currStyle, strCurrency, bCurrencyPrepend) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    let value = this.AFMakeNumber(event.value);\n\n    if (value === null) {\n      event.value = "";\n      return;\n    }\n\n    const sign = Math.sign(value);\n    const buf = [];\n    let hasParen = false;\n\n    if (sign === -1 && bCurrencyPrepend && negStyle === 0) {\n      buf.push("-");\n    }\n\n    if ((negStyle === 2 || negStyle === 3) && sign === -1) {\n      buf.push("(");\n      hasParen = true;\n    }\n\n    if (bCurrencyPrepend) {\n      buf.push(strCurrency);\n    }\n\n    sepStyle = Math.min(Math.max(0, Math.floor(sepStyle)), 4);\n    buf.push("%,", sepStyle, ".", nDec.toString(), "f");\n\n    if (!bCurrencyPrepend) {\n      buf.push(strCurrency);\n    }\n\n    if (hasParen) {\n      buf.push(")");\n    }\n\n    if (negStyle === 1 || negStyle === 3) {\n      event.target.textColor = sign === 1 ? this._color.black : this._color.red;\n    }\n\n    if ((negStyle !== 0 || bCurrencyPrepend) && sign === -1) {\n      value = -value;\n    }\n\n    const formatStr = buf.join("");\n    event.value = this._util.printf(formatStr, value);\n  }\n\n  AFNumber_Keystroke(nDec, sepStyle, negStyle, currStyle, strCurrency, bCurrencyPrepend) {\n    const event = globalThis.event;\n    let value = this.AFMergeChange(event);\n\n    if (!value) {\n      return;\n    }\n\n    value = value.trim();\n    let pattern;\n\n    if (sepStyle > 1) {\n      pattern = event.willCommit ? /^[+-]?(\\d+(,\\d*)?|,\\d+)$/ : /^[+-]?\\d*,?\\d*$/;\n    } else {\n      pattern = event.willCommit ? /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)$/ : /^[+-]?\\d*\\.?\\d*$/;\n    }\n\n    if (!pattern.test(value)) {\n      if (event.willCommit) {\n        const err = "".concat(_constants.GlobalConstants.IDS_INVALID_VALUE, " ").concat(this._mkTargetName(event));\n\n        this._app.alert(err);\n      }\n\n      event.rc = false;\n    }\n\n    if (event.willCommit && sepStyle > 1) {\n      event.value = parseFloat(value.replace(",", "."));\n    }\n  }\n\n  AFPercent_Format(nDec, sepStyle) {\n    let percentPrepend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof nDec !== "number") {\n      return;\n    }\n\n    if (typeof sepStyle !== "number") {\n      return;\n    }\n\n    if (nDec < 0) {\n      throw new Error("Invalid nDec value in AFPercent_Format");\n    }\n\n    const event = globalThis.event;\n\n    if (nDec > 512) {\n      event.value = "%";\n      return;\n    }\n\n    nDec = Math.floor(nDec);\n    sepStyle = Math.min(Math.max(0, Math.floor(sepStyle)), 4);\n    let value = this.AFMakeNumber(event.value);\n\n    if (value === null) {\n      event.value = "%";\n      return;\n    }\n\n    const formatStr = "%,".concat(sepStyle, ".").concat(nDec, "f");\n    value = this._util.printf(formatStr, value * 100);\n\n    if (percentPrepend) {\n      event.value = "%".concat(value);\n    } else {\n      event.value = "".concat(value, "%");\n    }\n  }\n\n  AFPercent_Keystroke(nDec, sepStyle) {\n    this.AFNumber_Keystroke(nDec, sepStyle, 0, 0, "", true);\n  }\n\n  AFDate_FormatEx(cFormat) {\n    const event = globalThis.event;\n    const value = event.value;\n\n    if (!value) {\n      return;\n    }\n\n    const date = this._parseDate(cFormat, value);\n\n    if (date !== null) {\n      event.value = this._util.printd(cFormat, date);\n    }\n  }\n\n  AFDate_Format(pdf) {\n    if (pdf >= 0 && pdf < this._dateFormats.length) {\n      this.AFDate_FormatEx(this._dateFormats[pdf]);\n    }\n  }\n\n  AFDate_KeystrokeEx(cFormat) {\n    const event = globalThis.event;\n\n    if (!event.willCommit) {\n      return;\n    }\n\n    const value = this.AFMergeChange(event);\n\n    if (!value) {\n      return;\n    }\n\n    if (this._parseDate(cFormat, value) === null) {\n      const invalid = _constants.GlobalConstants.IDS_INVALID_DATE;\n      const invalid2 = _constants.GlobalConstants.IDS_INVALID_DATE2;\n      const err = "".concat(invalid, " ").concat(this._mkTargetName(event)).concat(invalid2).concat(cFormat);\n\n      this._app.alert(err);\n\n      event.rc = false;\n    }\n  }\n\n  AFDate_Keystroke(pdf) {\n    if (pdf >= 0 && pdf < this._dateFormats.length) {\n      this.AFDate_KeystrokeEx(this._dateFormats[pdf]);\n    }\n  }\n\n  AFRange_Validate(bGreaterThan, nGreaterThan, bLessThan, nLessThan) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    const value = this.AFMakeNumber(event.value);\n\n    if (value === null) {\n      return;\n    }\n\n    bGreaterThan = !!bGreaterThan;\n    bLessThan = !!bLessThan;\n\n    if (bGreaterThan) {\n      nGreaterThan = this.AFMakeNumber(nGreaterThan);\n\n      if (nGreaterThan === null) {\n        return;\n      }\n    }\n\n    if (bLessThan) {\n      nLessThan = this.AFMakeNumber(nLessThan);\n\n      if (nLessThan === null) {\n        return;\n      }\n    }\n\n    let err = "";\n\n    if (bGreaterThan && bLessThan) {\n      if (value < nGreaterThan || value > nLessThan) {\n        err = this._util.printf(_constants.GlobalConstants.IDS_GT_AND_LT, nGreaterThan, nLessThan);\n      }\n    } else if (bGreaterThan) {\n      if (value < nGreaterThan) {\n        err = this._util.printf(_constants.GlobalConstants.IDS_GREATER_THAN, nGreaterThan);\n      }\n    } else if (value > nLessThan) {\n      err = this._util.printf(_constants.GlobalConstants.IDS_LESS_THAN, nLessThan);\n    }\n\n    if (err) {\n      this._app.alert(err);\n\n      event.rc = false;\n    }\n  }\n\n  AFSimple(cFunction, nValue1, nValue2) {\n    const value1 = this.AFMakeNumber(nValue1);\n\n    if (value1 === null) {\n      throw new Error("Invalid nValue1 in AFSimple");\n    }\n\n    const value2 = this.AFMakeNumber(nValue2);\n\n    if (value2 === null) {\n      throw new Error("Invalid nValue2 in AFSimple");\n    }\n\n    switch (cFunction) {\n      case "AVG":\n        return (value1 + value2) / 2;\n\n      case "SUM":\n        return value1 + value2;\n\n      case "PRD":\n        return value1 * value2;\n\n      case "MIN":\n        return Math.min(value1, value2);\n\n      case "MAX":\n        return Math.max(value1, value2);\n    }\n\n    throw new Error("Invalid cFunction in AFSimple");\n  }\n\n  AFSimple_Calculate(cFunction, cFields) {\n    const actions = {\n      AVG: args => args.reduce((acc, value) => acc + value, 0) / args.length,\n      SUM: args => args.reduce((acc, value) => acc + value, 0),\n      PRD: args => args.reduce((acc, value) => acc * value, 1),\n      MIN: args => args.reduce((acc, value) => Math.min(acc, value), Number.MAX_VALUE),\n      MAX: args => args.reduce((acc, value) => Math.max(acc, value), Number.MIN_VALUE)\n    };\n\n    if (!(cFunction in actions)) {\n      throw new TypeError("Invalid function in AFSimple_Calculate");\n    }\n\n    const event = globalThis.event;\n    const values = [];\n\n    for (const cField of cFields) {\n      const field = this._document.getField(cField);\n\n      const number = this.AFMakeNumber(field.value);\n\n      if (number !== null) {\n        values.push(number);\n      }\n    }\n\n    if (values.length === 0) {\n      event.value = cFunction === "PRD" ? 1 : 0;\n      return;\n    }\n\n    const res = actions[cFunction](values);\n    event.value = Math.round(1e6 * res) / 1e6;\n  }\n\n  AFSpecial_Format(psf) {\n    const event = globalThis.event;\n\n    if (!event.value) {\n      return;\n    }\n\n    psf = this.AFMakeNumber(psf);\n    let formatStr;\n\n    switch (psf) {\n      case 0:\n        formatStr = "99999";\n        break;\n\n      case 1:\n        formatStr = "99999-9999";\n        break;\n\n      case 2:\n        if (this._util.printx("9999999999", event.value).length >= 10) {\n          formatStr = "(999) 999-9999";\n        } else {\n          formatStr = "999-9999";\n        }\n\n        break;\n\n      case 3:\n        formatStr = "999-99-9999";\n        break;\n\n      default:\n        throw new Error("Invalid psf in AFSpecial_Format");\n    }\n\n    event.value = this._util.printx(formatStr, event.value);\n  }\n\n  AFSpecial_KeystrokeEx(cMask) {\n    if (!cMask) {\n      return;\n    }\n\n    const event = globalThis.event;\n    const value = this.AFMergeChange(event);\n\n    if (!value) {\n      return;\n    }\n\n    const checkers = new Map([["9", char => char >= "0" && char <= "9"], ["A", char => "a" <= char && char <= "z" || "A" <= char && char <= "Z"], ["O", char => "a" <= char && char <= "z" || "A" <= char && char <= "Z" || "0" <= char && char <= "9"], ["X", char => true]]);\n\n    function _checkValidity(_value, _cMask) {\n      for (let i = 0, ii = _value.length; i < ii; i++) {\n        const mask = _cMask.charAt(i);\n\n        const char = _value.charAt(i);\n\n        const checker = checkers.get(mask);\n\n        if (checker) {\n          if (!checker(char)) {\n            return false;\n          }\n        } else if (mask !== char) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    const err = "".concat(_constants.GlobalConstants.IDS_INVALID_VALUE, " = \\"").concat(cMask, "\\"");\n\n    if (value.length > cMask.length) {\n      this._app.alert(err);\n\n      event.rc = false;\n      return;\n    }\n\n    if (event.willCommit) {\n      if (value.length < cMask.length) {\n        this._app.alert(err);\n\n        event.rc = false;\n        return;\n      }\n\n      if (!_checkValidity(value, cMask)) {\n        this._app.alert(err);\n\n        event.rc = false;\n        return;\n      }\n\n      event.value += cMask.substring(value.length);\n      return;\n    }\n\n    if (value.length < cMask.length) {\n      cMask = cMask.substring(0, value.length);\n    }\n\n    if (!_checkValidity(value, cMask)) {\n      this._app.alert(err);\n\n      event.rc = false;\n    }\n  }\n\n  AFSpecial_Keystroke(psf) {\n    const event = globalThis.event;\n    psf = this.AFMakeNumber(psf);\n    let formatStr;\n\n    switch (psf) {\n      case 0:\n        formatStr = "99999";\n        break;\n\n      case 1:\n        formatStr = "99999-9999";\n        break;\n\n      case 2:\n        const value = this.AFMergeChange(event);\n\n        if (value.length > 8 || value.startsWith("(")) {\n          formatStr = "(999) 999-9999";\n        } else {\n          formatStr = "999-9999";\n        }\n\n        break;\n\n      case 3:\n        formatStr = "999-99-9999";\n        break;\n\n      default:\n        throw new Error("Invalid psf in AFSpecial_Keystroke");\n    }\n\n    this.AFSpecial_KeystrokeEx(formatStr);\n  }\n\n  AFTime_FormatEx(cFormat) {\n    this.AFDate_FormatEx(cFormat);\n  }\n\n  AFTime_Format(pdf) {\n    if (pdf >= 0 && pdf < this._timeFormats.length) {\n      this.AFDate_FormatEx(this._timeFormats[pdf]);\n    }\n  }\n\n  AFTime_KeystrokeEx(cFormat) {\n    this.AFDate_KeystrokeEx(cFormat);\n  }\n\n  AFTime_Keystroke(pdf) {\n    if (pdf >= 0 && pdf < this._timeFormats.length) {\n      this.AFDate_KeystrokeEx(this._timeFormats[pdf]);\n    }\n  }\n\n  eMailValidate(str) {\n    return this._emailRegex.test(str);\n  }\n\n}\n\nexports.AForm = AForm;\n\n/***/ }),\n/* 89 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar global = __w_pdfjs_require__(3);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar isForced = __w_pdfjs_require__(74);\nvar inheritIfRequired = __w_pdfjs_require__(90);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar getOwnPropertyNames = (__w_pdfjs_require__(72).f);\nvar isPrototypeOf = __w_pdfjs_require__(42);\nvar isRegExp = __w_pdfjs_require__(91);\nvar toString = __w_pdfjs_require__(92);\nvar regExpFlags = __w_pdfjs_require__(95);\nvar stickyHelpers = __w_pdfjs_require__(96);\nvar proxyAccessor = __w_pdfjs_require__(97);\nvar redefine = __w_pdfjs_require__(68);\nvar fails = __w_pdfjs_require__(14);\nvar hasOwn = __w_pdfjs_require__(23);\nvar enforceInternalState = (__w_pdfjs_require__(59).enforce);\nvar setSpecies = __w_pdfjs_require__(98);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar UNSUPPORTED_DOT_ALL = __w_pdfjs_require__(99);\nvar UNSUPPORTED_NCG = __w_pdfjs_require__(100);\nvar MATCH = wellKnownSymbol(\'match\');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar SyntaxError = global.SyntaxError;\nvar getFlags = uncurryThis(regExpFlags);\nvar exec = uncurryThis(RegExpPrototype.exec);\nvar charAt = uncurryThis(\'\'.charAt);\nvar replace = uncurryThis(\'\'.replace);\nvar stringIndexOf = uncurryThis(\'\'.indexOf);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar IS_NCG = /^\\?<[^\\s\\d!#%&*+<=>@^][^\\s!#%&*+<=>@^]*>/;\nvar re1 = /a/g;\nvar re2 = /a/g;\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\nvar MISSED_STICKY = stickyHelpers.MISSED_STICKY;\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar BASE_FORCED = DESCRIPTORS && (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {\n re2[MATCH] = false;\n return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, \'i\') != \'/a/i\';\n}));\nvar handleDotAll = function (string) {\n var length = string.length;\n var index = 0;\n var result = \'\';\n var brackets = false;\n var chr;\n for (; index <= length; index++) {\n  chr = charAt(string, index);\n  if (chr === \'\\\\\') {\n   result += chr + charAt(string, ++index);\n   continue;\n  }\n  if (!brackets && chr === \'.\') {\n   result += \'[\\\\s\\\\S]\';\n  } else {\n   if (chr === \'[\') {\n    brackets = true;\n   } else if (chr === \']\') {\n    brackets = false;\n   }\n   result += chr;\n  }\n }\n return result;\n};\nvar handleNCG = function (string) {\n var length = string.length;\n var index = 0;\n var result = \'\';\n var named = [];\n var names = {};\n var brackets = false;\n var ncg = false;\n var groupid = 0;\n var groupname = \'\';\n var chr;\n for (; index <= length; index++) {\n  chr = charAt(string, index);\n  if (chr === \'\\\\\') {\n   chr = chr + charAt(string, ++index);\n  } else if (chr === \']\') {\n   brackets = false;\n  } else if (!brackets)\n   switch (true) {\n   case chr === \'[\':\n    brackets = true;\n    break;\n   case chr === \'(\':\n    if (exec(IS_NCG, stringSlice(string, index + 1))) {\n     index += 2;\n     ncg = true;\n    }\n    result += chr;\n    groupid++;\n    continue;\n   case chr === \'>\' && ncg:\n    if (groupname === \'\' || hasOwn(names, groupname)) {\n     throw new SyntaxError(\'Invalid capture group name\');\n    }\n    names[groupname] = true;\n    named[named.length] = [\n     groupname,\n     groupid\n    ];\n    ncg = false;\n    groupname = \'\';\n    continue;\n   }\n  if (ncg)\n   groupname += chr;\n  else\n   result += chr;\n }\n return [\n  result,\n  named\n ];\n};\nif (isForced(\'RegExp\', BASE_FORCED)) {\n var RegExpWrapper = function RegExp(pattern, flags) {\n  var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);\n  var patternIsRegExp = isRegExp(pattern);\n  var flagsAreUndefined = flags === undefined;\n  var groups = [];\n  var rawPattern = pattern;\n  var rawFlags, dotAll, sticky, handled, result, state;\n  if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {\n   return pattern;\n  }\n  if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {\n   pattern = pattern.source;\n   if (flagsAreUndefined)\n    flags = \'flags\' in rawPattern ? rawPattern.flags : getFlags(rawPattern);\n  }\n  pattern = pattern === undefined ? \'\' : toString(pattern);\n  flags = flags === undefined ? \'\' : toString(flags);\n  rawPattern = pattern;\n  if (UNSUPPORTED_DOT_ALL && \'dotAll\' in re1) {\n   dotAll = !!flags && stringIndexOf(flags, \'s\') > -1;\n   if (dotAll)\n    flags = replace(flags, /s/g, \'\');\n  }\n  rawFlags = flags;\n  if (MISSED_STICKY && \'sticky\' in re1) {\n   sticky = !!flags && stringIndexOf(flags, \'y\') > -1;\n   if (sticky && UNSUPPORTED_Y)\n    flags = replace(flags, /y/g, \'\');\n  }\n  if (UNSUPPORTED_NCG) {\n   handled = handleNCG(pattern);\n   pattern = handled[0];\n   groups = handled[1];\n  }\n  result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);\n  if (dotAll || sticky || groups.length) {\n   state = enforceInternalState(result);\n   if (dotAll) {\n    state.dotAll = true;\n    state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);\n   }\n   if (sticky)\n    state.sticky = true;\n   if (groups.length)\n    state.groups = groups;\n  }\n  if (pattern !== rawPattern)\n   try {\n    createNonEnumerableProperty(result, \'source\', rawPattern === \'\' ? \'(?:)\' : rawPattern);\n   } catch (error) {\n   }\n  return result;\n };\n for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {\n  proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);\n }\n RegExpPrototype.constructor = RegExpWrapper;\n RegExpWrapper.prototype = RegExpPrototype;\n redefine(global, \'RegExp\', RegExpWrapper);\n}\nsetSpecies(\'RegExp\');\n\n/***/ }),\n/* 90 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar isCallable = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(7);\nvar setPrototypeOf = __w_pdfjs_require__(80);\nmodule.exports = function ($this, dummy, Wrapper) {\n var NewTarget, NewTargetPrototype;\n if (setPrototypeOf && isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype)\n  setPrototypeOf($this, NewTargetPrototype);\n return $this;\n};\n\n/***/ }),\n/* 91 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar isObject = __w_pdfjs_require__(7);\nvar classof = __w_pdfjs_require__(15);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar MATCH = wellKnownSymbol(\'match\');\nmodule.exports = function (it) {\n var isRegExp;\n return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == \'RegExp\');\n};\n\n/***/ }),\n/* 92 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar classof = __w_pdfjs_require__(93);\nvar String = global.String;\nmodule.exports = function (argument) {\n if (classof(argument) === \'Symbol\')\n  throw TypeError(\'Cannot convert a Symbol value to a string\');\n return String(argument);\n};\n\n/***/ }),\n/* 93 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar TO_STRING_TAG_SUPPORT = __w_pdfjs_require__(94);\nvar isCallable = __w_pdfjs_require__(8);\nvar classofRaw = __w_pdfjs_require__(15);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar Object = global.Object;\nvar CORRECT_ARGUMENTS = classofRaw((function () {\n return arguments;\n}())) == \'Arguments\';\nvar tryGet = function (it, key) {\n try {\n  return it[key];\n } catch (error) {\n }\n};\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n var O, tag, result;\n return it === undefined ? \'Undefined\' : it === null ? \'Null\' : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == \'string\' ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) == \'Object\' && isCallable(O.callee) ? \'Arguments\' : result;\n};\n\n/***/ }),\n/* 94 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar TO_STRING_TAG = wellKnownSymbol(\'toStringTag\');\nvar test = {};\ntest[TO_STRING_TAG] = \'z\';\nmodule.exports = String(test) === \'[object z]\';\n\n/***/ }),\n/* 95 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar anObject = __w_pdfjs_require__(32);\nmodule.exports = function () {\n var that = anObject(this);\n var result = \'\';\n if (that.global)\n  result += \'g\';\n if (that.ignoreCase)\n  result += \'i\';\n if (that.multiline)\n  result += \'m\';\n if (that.dotAll)\n  result += \'s\';\n if (that.unicode)\n  result += \'u\';\n if (that.sticky)\n  result += \'y\';\n return result;\n};\n\n/***/ }),\n/* 96 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar global = __w_pdfjs_require__(3);\nvar $RegExp = global.RegExp;\nvar UNSUPPORTED_Y = fails(function () {\n var re = $RegExp(\'a\', \'y\');\n re.lastIndex = 2;\n return re.exec(\'abcd\') != null;\n});\nvar MISSED_STICKY = UNSUPPORTED_Y || fails(function () {\n return !$RegExp(\'a\', \'y\').sticky;\n});\nvar BROKEN_CARET = UNSUPPORTED_Y || fails(function () {\n var re = $RegExp(\'^r\', \'gy\');\n re.lastIndex = 2;\n return re.exec(\'str\') != null;\n});\nmodule.exports = {\n BROKEN_CARET: BROKEN_CARET,\n MISSED_STICKY: MISSED_STICKY,\n UNSUPPORTED_Y: UNSUPPORTED_Y\n};\n\n/***/ }),\n/* 97 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar defineProperty = (__w_pdfjs_require__(36).f);\nmodule.exports = function (Target, Source, key) {\n key in Target || defineProperty(Target, key, {\n  configurable: true,\n  get: function () {\n   return Source[key];\n  },\n  set: function (it) {\n   Source[key] = it;\n  }\n });\n};\n\n/***/ }),\n/* 98 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar getBuiltIn = __w_pdfjs_require__(29);\nvar definePropertyModule = __w_pdfjs_require__(36);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar SPECIES = wellKnownSymbol(\'species\');\nmodule.exports = function (CONSTRUCTOR_NAME) {\n var Constructor = getBuiltIn(CONSTRUCTOR_NAME);\n var defineProperty = definePropertyModule.f;\n if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {\n  defineProperty(Constructor, SPECIES, {\n   configurable: true,\n   get: function () {\n    return this;\n   }\n  });\n }\n};\n\n/***/ }),\n/* 99 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar global = __w_pdfjs_require__(3);\nvar $RegExp = global.RegExp;\nmodule.exports = fails(function () {\n var re = $RegExp(\'.\', \'s\');\n return !(re.dotAll && re.exec(\'\\n\') && re.flags === \'s\');\n});\n\n/***/ }),\n/* 100 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar fails = __w_pdfjs_require__(14);\nvar global = __w_pdfjs_require__(3);\nvar $RegExp = global.RegExp;\nmodule.exports = fails(function () {\n var re = $RegExp(\'(?<a>b)\', \'g\');\n return re.exec(\'b\').groups.a !== \'b\' || \'b\'.replace(re, \'$<a>c\') !== \'bc\';\n});\n\n/***/ }),\n/* 101 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar exec = __w_pdfjs_require__(102);\n$({\n target: \'RegExp\',\n proto: true,\n forced: /./.exec !== exec\n}, { exec: exec });\n\n/***/ }),\n/* 102 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar call = __w_pdfjs_require__(40);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toString = __w_pdfjs_require__(92);\nvar regexpFlags = __w_pdfjs_require__(95);\nvar stickyHelpers = __w_pdfjs_require__(96);\nvar shared = __w_pdfjs_require__(19);\nvar create = __w_pdfjs_require__(31);\nvar getInternalState = (__w_pdfjs_require__(59).get);\nvar UNSUPPORTED_DOT_ALL = __w_pdfjs_require__(99);\nvar UNSUPPORTED_NCG = __w_pdfjs_require__(100);\nvar nativeReplace = shared(\'native-string-replace\', String.prototype.replace);\nvar nativeExec = RegExp.prototype.exec;\nvar patchedExec = nativeExec;\nvar charAt = uncurryThis(\'\'.charAt);\nvar indexOf = uncurryThis(\'\'.indexOf);\nvar replace = uncurryThis(\'\'.replace);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n var re1 = /a/;\n var re2 = /b*/g;\n call(nativeExec, re1, \'a\');\n call(nativeExec, re2, \'a\');\n return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n}());\nvar UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;\nvar NPCG_INCLUDED = /()??/.exec(\'\')[1] !== undefined;\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;\nif (PATCH) {\n patchedExec = function exec(string) {\n  var re = this;\n  var state = getInternalState(re);\n  var str = toString(string);\n  var raw = state.raw;\n  var result, reCopy, lastIndex, match, i, object, group;\n  if (raw) {\n   raw.lastIndex = re.lastIndex;\n   result = call(patchedExec, raw, str);\n   re.lastIndex = raw.lastIndex;\n   return result;\n  }\n  var groups = state.groups;\n  var sticky = UNSUPPORTED_Y && re.sticky;\n  var flags = call(regexpFlags, re);\n  var source = re.source;\n  var charsAdded = 0;\n  var strCopy = str;\n  if (sticky) {\n   flags = replace(flags, \'y\', \'\');\n   if (indexOf(flags, \'g\') === -1) {\n    flags += \'g\';\n   }\n   strCopy = stringSlice(str, re.lastIndex);\n   if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== \'\\n\')) {\n    source = \'(?: \' + source + \')\';\n    strCopy = \' \' + strCopy;\n    charsAdded++;\n   }\n   reCopy = new RegExp(\'^(?:\' + source + \')\', flags);\n  }\n  if (NPCG_INCLUDED) {\n   reCopy = new RegExp(\'^\' + source + \'$(?!\\\\s)\', flags);\n  }\n  if (UPDATES_LAST_INDEX_WRONG)\n   lastIndex = re.lastIndex;\n  match = call(nativeExec, sticky ? reCopy : re, strCopy);\n  if (sticky) {\n   if (match) {\n    match.input = stringSlice(match.input, charsAdded);\n    match[0] = stringSlice(match[0], charsAdded);\n    match.index = re.lastIndex;\n    re.lastIndex += match[0].length;\n   } else\n    re.lastIndex = 0;\n  } else if (UPDATES_LAST_INDEX_WRONG && match) {\n   re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n  }\n  if (NPCG_INCLUDED && match && match.length > 1) {\n   call(nativeReplace, match[0], reCopy, function () {\n    for (i = 1; i < arguments.length - 2; i++) {\n     if (arguments[i] === undefined)\n      match[i] = undefined;\n    }\n   });\n  }\n  if (match && groups) {\n   match.groups = object = create(null);\n   for (i = 0; i < groups.length; i++) {\n    group = groups[i];\n    object[group[0]] = match[group[1]];\n   }\n  }\n  return match;\n };\n}\nmodule.exports = patchedExec;\n\n/***/ }),\n/* 103 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar apply = __w_pdfjs_require__(104);\nvar call = __w_pdfjs_require__(40);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar fixRegExpWellKnownSymbolLogic = __w_pdfjs_require__(105);\nvar fails = __w_pdfjs_require__(14);\nvar anObject = __w_pdfjs_require__(32);\nvar isCallable = __w_pdfjs_require__(8);\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar toLength = __w_pdfjs_require__(53);\nvar toString = __w_pdfjs_require__(92);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar advanceStringIndex = __w_pdfjs_require__(106);\nvar getMethod = __w_pdfjs_require__(43);\nvar getSubstitution = __w_pdfjs_require__(108);\nvar regExpExec = __w_pdfjs_require__(109);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar REPLACE = wellKnownSymbol(\'replace\');\nvar max = Math.max;\nvar min = Math.min;\nvar concat = uncurryThis([].concat);\nvar push = uncurryThis([].push);\nvar stringIndexOf = uncurryThis(\'\'.indexOf);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar maybeToString = function (it) {\n return it === undefined ? it : String(it);\n};\nvar REPLACE_KEEPS_$0 = (function () {\n return \'a\'.replace(/./, \'$0\') === \'$0\';\n}());\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n if (/./[REPLACE]) {\n  return /./[REPLACE](\'a\', \'$0\') === \'\';\n }\n return false;\n}());\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n var re = /./;\n re.exec = function () {\n  var result = [];\n  result.groups = { a: \'7\' };\n  return result;\n };\n return \'\'.replace(re, \'$<a>\') !== \'7\';\n});\nfixRegExpWellKnownSymbolLogic(\'replace\', function (_, nativeReplace, maybeCallNative) {\n var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? \'$\' : \'$0\';\n return [\n  function replace(searchValue, replaceValue) {\n   var O = requireObjectCoercible(this);\n   var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);\n   return replacer ? call(replacer, searchValue, O, replaceValue) : call(nativeReplace, toString(O), searchValue, replaceValue);\n  },\n  function (string, replaceValue) {\n   var rx = anObject(this);\n   var S = toString(string);\n   if (typeof replaceValue == \'string\' && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, \'$<\') === -1) {\n    var res = maybeCallNative(nativeReplace, rx, S, replaceValue);\n    if (res.done)\n     return res.value;\n   }\n   var functionalReplace = isCallable(replaceValue);\n   if (!functionalReplace)\n    replaceValue = toString(replaceValue);\n   var global = rx.global;\n   if (global) {\n    var fullUnicode = rx.unicode;\n    rx.lastIndex = 0;\n   }\n   var results = [];\n   while (true) {\n    var result = regExpExec(rx, S);\n    if (result === null)\n     break;\n    push(results, result);\n    if (!global)\n     break;\n    var matchStr = toString(result[0]);\n    if (matchStr === \'\')\n     rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n   }\n   var accumulatedResult = \'\';\n   var nextSourcePosition = 0;\n   for (var i = 0; i < results.length; i++) {\n    result = results[i];\n    var matched = toString(result[0]);\n    var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);\n    var captures = [];\n    for (var j = 1; j < result.length; j++)\n     push(captures, maybeToString(result[j]));\n    var namedCaptures = result.groups;\n    if (functionalReplace) {\n     var replacerArgs = concat([matched], captures, position, S);\n     if (namedCaptures !== undefined)\n      push(replacerArgs, namedCaptures);\n     var replacement = toString(apply(replaceValue, undefined, replacerArgs));\n    } else {\n     replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n    }\n    if (position >= nextSourcePosition) {\n     accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;\n     nextSourcePosition = position + matched.length;\n    }\n   }\n   return accumulatedResult + stringSlice(S, nextSourcePosition);\n  }\n ];\n}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);\n\n/***/ }),\n/* 104 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar NATIVE_BIND = __w_pdfjs_require__(13);\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\nmodule.exports = typeof Reflect == \'object\' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n return call.apply(apply, arguments);\n});\n\n/***/ }),\n/* 105 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n__w_pdfjs_require__(101);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(68);\nvar regexpExec = __w_pdfjs_require__(102);\nvar fails = __w_pdfjs_require__(14);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar createNonEnumerableProperty = __w_pdfjs_require__(62);\nvar SPECIES = wellKnownSymbol(\'species\');\nvar RegExpPrototype = RegExp.prototype;\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n var SYMBOL = wellKnownSymbol(KEY);\n var DELEGATES_TO_SYMBOL = !fails(function () {\n  var O = {};\n  O[SYMBOL] = function () {\n   return 7;\n  };\n  return \'\'[KEY](O) != 7;\n });\n var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n  var execCalled = false;\n  var re = /a/;\n  if (KEY === \'split\') {\n   re = {};\n   re.constructor = {};\n   re.constructor[SPECIES] = function () {\n    return re;\n   };\n   re.flags = \'\';\n   re[SYMBOL] = /./[SYMBOL];\n  }\n  re.exec = function () {\n   execCalled = true;\n   return null;\n  };\n  re[SYMBOL](\'\');\n  return !execCalled;\n });\n if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {\n  var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);\n  var methods = exec(SYMBOL, \'\'[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n   var uncurriedNativeMethod = uncurryThis(nativeMethod);\n   var $exec = regexp.exec;\n   if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n    if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n     return {\n      done: true,\n      value: uncurriedNativeRegExpMethod(regexp, str, arg2)\n     };\n    }\n    return {\n     done: true,\n     value: uncurriedNativeMethod(str, regexp, arg2)\n    };\n   }\n   return { done: false };\n  });\n  redefine(String.prototype, KEY, methods[0]);\n  redefine(RegExpPrototype, SYMBOL, methods[1]);\n }\n if (SHAM)\n  createNonEnumerableProperty(RegExpPrototype[SYMBOL], \'sham\', true);\n};\n\n/***/ }),\n/* 106 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar charAt = (__w_pdfjs_require__(107).charAt);\nmodule.exports = function (S, index, unicode) {\n return index + (unicode ? charAt(S, index).length : 1);\n};\n\n/***/ }),\n/* 107 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toIntegerOrInfinity = __w_pdfjs_require__(51);\nvar toString = __w_pdfjs_require__(92);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar charAt = uncurryThis(\'\'.charAt);\nvar charCodeAt = uncurryThis(\'\'.charCodeAt);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar createMethod = function (CONVERT_TO_STRING) {\n return function ($this, pos) {\n  var S = toString(requireObjectCoercible($this));\n  var position = toIntegerOrInfinity(pos);\n  var size = S.length;\n  var first, second;\n  if (position < 0 || position >= size)\n   return CONVERT_TO_STRING ? \'\' : undefined;\n  first = charCodeAt(S, position);\n  return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n };\n};\nmodule.exports = {\n codeAt: createMethod(false),\n charAt: createMethod(true)\n};\n\n/***/ }),\n/* 108 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar uncurryThis = __w_pdfjs_require__(12);\nvar toObject = __w_pdfjs_require__(24);\nvar floor = Math.floor;\nvar charAt = uncurryThis(\'\'.charAt);\nvar replace = uncurryThis(\'\'.replace);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&\'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&\'`]|\\d{1,2})/g;\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n var tailPos = position + matched.length;\n var m = captures.length;\n var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n if (namedCaptures !== undefined) {\n  namedCaptures = toObject(namedCaptures);\n  symbols = SUBSTITUTION_SYMBOLS;\n }\n return replace(replacement, symbols, function (match, ch) {\n  var capture;\n  switch (charAt(ch, 0)) {\n  case \'$\':\n   return \'$\';\n  case \'&\':\n   return matched;\n  case \'`\':\n   return stringSlice(str, 0, position);\n  case "\'":\n   return stringSlice(str, tailPos);\n  case \'<\':\n   capture = namedCaptures[stringSlice(ch, 1, -1)];\n   break;\n  default:\n   var n = +ch;\n   if (n === 0)\n    return match;\n   if (n > m) {\n    var f = floor(n / 10);\n    if (f === 0)\n     return match;\n    if (f <= m)\n     return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n    return match;\n   }\n   capture = captures[n - 1];\n  }\n  return capture === undefined ? \'\' : capture;\n });\n};\n\n/***/ }),\n/* 109 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar anObject = __w_pdfjs_require__(32);\nvar isCallable = __w_pdfjs_require__(8);\nvar classof = __w_pdfjs_require__(15);\nvar regexpExec = __w_pdfjs_require__(102);\nvar TypeError = global.TypeError;\nmodule.exports = function (R, S) {\n var exec = R.exec;\n if (isCallable(exec)) {\n  var result = call(exec, R, S);\n  if (result !== null)\n   anObject(result);\n  return result;\n }\n if (classof(R) === \'RegExp\')\n  return call(regexpExec, R, S);\n throw TypeError(\'RegExp#exec called on incompatible receiver\');\n};\n\n/***/ }),\n/* 110 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar $reduce = (__w_pdfjs_require__(111).left);\nvar arrayMethodIsStrict = __w_pdfjs_require__(112);\nvar CHROME_VERSION = __w_pdfjs_require__(27);\nvar IS_NODE = __w_pdfjs_require__(113);\nvar STRICT_METHOD = arrayMethodIsStrict(\'reduce\');\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n$({\n target: \'Array\',\n proto: true,\n forced: !STRICT_METHOD || CHROME_BUG\n}, {\n reduce: function reduce(callbackfn) {\n  var length = arguments.length;\n  return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n }\n});\n\n/***/ }),\n/* 111 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar global = __w_pdfjs_require__(3);\nvar aCallable = __w_pdfjs_require__(44);\nvar toObject = __w_pdfjs_require__(24);\nvar IndexedObject = __w_pdfjs_require__(11);\nvar lengthOfArrayLike = __w_pdfjs_require__(52);\nvar TypeError = global.TypeError;\nvar createMethod = function (IS_RIGHT) {\n return function (that, callbackfn, argumentsLength, memo) {\n  aCallable(callbackfn);\n  var O = toObject(that);\n  var self = IndexedObject(O);\n  var length = lengthOfArrayLike(O);\n  var index = IS_RIGHT ? length - 1 : 0;\n  var i = IS_RIGHT ? -1 : 1;\n  if (argumentsLength < 2)\n   while (true) {\n    if (index in self) {\n     memo = self[index];\n     index += i;\n     break;\n    }\n    index += i;\n    if (IS_RIGHT ? index < 0 : length <= index) {\n     throw TypeError(\'Reduce of empty array with no initial value\');\n    }\n   }\n  for (; IS_RIGHT ? index >= 0 : length > index; index += i)\n   if (index in self) {\n    memo = callbackfn(memo, self[index], index, O);\n   }\n  return memo;\n };\n};\nmodule.exports = {\n left: createMethod(false),\n right: createMethod(true)\n};\n\n/***/ }),\n/* 112 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar fails = __w_pdfjs_require__(14);\nmodule.exports = function (METHOD_NAME, argument) {\n var method = [][METHOD_NAME];\n return !!method && fails(function () {\n  method.call(null, argument || function () {\n   return 1;\n  }, 1);\n });\n};\n\n/***/ }),\n/* 113 */\n/***/ ((module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar classof = __w_pdfjs_require__(15);\nvar global = __w_pdfjs_require__(3);\nmodule.exports = classof(global.process) == \'process\';\n\n/***/ }),\n/* 114 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.App = void 0;\n\n__w_pdfjs_require__(2);\n\n__w_pdfjs_require__(101);\n\nvar _color = __w_pdfjs_require__(85);\n\nvar _event = __w_pdfjs_require__(115);\n\nvar _fullscreen = __w_pdfjs_require__(116);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nvar _thermometer = __w_pdfjs_require__(117);\n\nconst VIEWER_TYPE = "PDF.js";\nconst VIEWER_VARIATION = "Full";\nconst VIEWER_VERSION = 21.00720099;\nconst FORMS_VERSION = 21.00720099;\n\nclass App extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._constants = null;\n    this._focusRect = true;\n    this._fs = null;\n    this._language = App._getLanguage(data.language);\n    this._openInPlace = false;\n    this._platform = App._getPlatform(data.platform);\n    this._runtimeHighlight = false;\n    this._runtimeHighlightColor = ["T"];\n    this._thermometer = null;\n    this._toolbar = false;\n    this._document = data._document;\n    this._proxyHandler = data.proxyHandler;\n    this._objects = Object.create(null);\n    this._eventDispatcher = new _event.EventDispatcher(this._document, data.calculationOrder, this._objects);\n    this._timeoutIds = new WeakMap();\n\n    if (typeof FinalizationRegistry !== "undefined") {\n      this._timeoutIdsRegistry = new FinalizationRegistry(this._cleanTimeout.bind(this));\n    } else {\n      this._timeoutIdsRegistry = null;\n    }\n\n    this._timeoutCallbackIds = new Map();\n    this._timeoutCallbackId = 0;\n    this._globalEval = data.globalEval;\n    this._externalCall = data.externalCall;\n    this._document = data._document;\n  }\n\n  _dispatchEvent(pdfEvent) {\n    this._eventDispatcher.dispatch(pdfEvent);\n  }\n\n  _registerTimeoutCallback(cExpr) {\n    const id = this._timeoutCallbackId++;\n\n    this._timeoutCallbackIds.set(id, cExpr);\n\n    return id;\n  }\n\n  _unregisterTimeoutCallback(id) {\n    this._timeoutCallbackIds.delete(id);\n  }\n\n  _evalCallback(_ref) {\n    let {\n      callbackId,\n      interval\n    } = _ref;\n\n    const expr = this._timeoutCallbackIds.get(callbackId);\n\n    if (!interval) {\n      this._unregisterTimeoutCallback(callbackId);\n    }\n\n    if (expr) {\n      this._globalEval(expr);\n    }\n  }\n\n  _registerTimeout(callbackId, interval) {\n    const timeout = Object.create(null);\n    const id = {\n      callbackId,\n      interval\n    };\n\n    this._timeoutIds.set(timeout, id);\n\n    if (this._timeoutIdsRegistry) {\n      this._timeoutIdsRegistry.register(timeout, id);\n    }\n\n    return timeout;\n  }\n\n  _unregisterTimeout(timeout) {\n    if (this._timeoutIdsRegistry) {\n      this._timeoutIdsRegistry.unregister(timeout);\n    }\n\n    const data = this._timeoutIds.get(timeout);\n\n    if (!data) {\n      return;\n    }\n\n    this._timeoutIds.delete(timeout);\n\n    this._cleanTimeout(data);\n  }\n\n  _cleanTimeout(_ref2) {\n    let {\n      callbackId,\n      interval\n    } = _ref2;\n\n    this._unregisterTimeoutCallback(callbackId);\n\n    if (interval) {\n      this._externalCall("clearInterval", [callbackId]);\n    } else {\n      this._externalCall("clearTimeout", [callbackId]);\n    }\n  }\n\n  static _getPlatform(platform) {\n    if (typeof platform === "string") {\n      platform = platform.toLowerCase();\n\n      if (platform.includes("win")) {\n        return "WIN";\n      } else if (platform.includes("mac")) {\n        return "MAC";\n      }\n    }\n\n    return "UNIX";\n  }\n\n  static _getLanguage(language) {\n    const [main, sub] = language.toLowerCase().split(/[-_]/);\n\n    switch (main) {\n      case "zh":\n        if (sub === "cn" || sub === "sg") {\n          return "CHS";\n        }\n\n        return "CHT";\n\n      case "da":\n        return "DAN";\n\n      case "de":\n        return "DEU";\n\n      case "es":\n        return "ESP";\n\n      case "fr":\n        return "FRA";\n\n      case "it":\n        return "ITA";\n\n      case "ko":\n        return "KOR";\n\n      case "ja":\n        return "JPN";\n\n      case "nl":\n        return "NLD";\n\n      case "no":\n        return "NOR";\n\n      case "pt":\n        if (sub === "br") {\n          return "PTB";\n        }\n\n        return "ENU";\n\n      case "fi":\n        return "SUO";\n\n      case "SV":\n        return "SVE";\n\n      default:\n        return "ENU";\n    }\n  }\n\n  get activeDocs() {\n    return [this._document.wrapped];\n  }\n\n  set activeDocs(_) {\n    throw new Error("app.activeDocs is read-only");\n  }\n\n  get calculate() {\n    return this._document.obj.calculate;\n  }\n\n  set calculate(calculate) {\n    this._document.obj.calculate = calculate;\n  }\n\n  get constants() {\n    if (!this._constants) {\n      this._constants = Object.freeze({\n        align: Object.freeze({\n          left: 0,\n          center: 1,\n          right: 2,\n          top: 3,\n          bottom: 4\n        })\n      });\n    }\n\n    return this._constants;\n  }\n\n  set constants(_) {\n    throw new Error("app.constants is read-only");\n  }\n\n  get focusRect() {\n    return this._focusRect;\n  }\n\n  set focusRect(val) {\n    this._focusRect = val;\n  }\n\n  get formsVersion() {\n    return FORMS_VERSION;\n  }\n\n  set formsVersion(_) {\n    throw new Error("app.formsVersion is read-only");\n  }\n\n  get fromPDFConverters() {\n    return [];\n  }\n\n  set fromPDFConverters(_) {\n    throw new Error("app.fromPDFConverters is read-only");\n  }\n\n  get fs() {\n    if (this._fs === null) {\n      this._fs = new Proxy(new _fullscreen.FullScreen({\n        send: this._send\n      }), this._proxyHandler);\n    }\n\n    return this._fs;\n  }\n\n  set fs(_) {\n    throw new Error("app.fs is read-only");\n  }\n\n  get language() {\n    return this._language;\n  }\n\n  set language(_) {\n    throw new Error("app.language is read-only");\n  }\n\n  get media() {\n    return undefined;\n  }\n\n  set media(_) {\n    throw new Error("app.media is read-only");\n  }\n\n  get monitors() {\n    return [];\n  }\n\n  set monitors(_) {\n    throw new Error("app.monitors is read-only");\n  }\n\n  get numPlugins() {\n    return 0;\n  }\n\n  set numPlugins(_) {\n    throw new Error("app.numPlugins is read-only");\n  }\n\n  get openInPlace() {\n    return this._openInPlace;\n  }\n\n  set openInPlace(val) {\n    this._openInPlace = val;\n  }\n\n  get platform() {\n    return this._platform;\n  }\n\n  set platform(_) {\n    throw new Error("app.platform is read-only");\n  }\n\n  get plugins() {\n    return [];\n  }\n\n  set plugins(_) {\n    throw new Error("app.plugins is read-only");\n  }\n\n  get printColorProfiles() {\n    return [];\n  }\n\n  set printColorProfiles(_) {\n    throw new Error("app.printColorProfiles is read-only");\n  }\n\n  get printerNames() {\n    return [];\n  }\n\n  set printerNames(_) {\n    throw new Error("app.printerNames is read-only");\n  }\n\n  get runtimeHighlight() {\n    return this._runtimeHighlight;\n  }\n\n  set runtimeHighlight(val) {\n    this._runtimeHighlight = val;\n  }\n\n  get runtimeHighlightColor() {\n    return this._runtimeHighlightColor;\n  }\n\n  set runtimeHighlightColor(val) {\n    if (_color.Color._isValidColor(val)) {\n      this._runtimeHighlightColor = val;\n    }\n  }\n\n  get thermometer() {\n    if (this._thermometer === null) {\n      this._thermometer = new Proxy(new _thermometer.Thermometer({\n        send: this._send\n      }), this._proxyHandler);\n    }\n\n    return this._thermometer;\n  }\n\n  set thermometer(_) {\n    throw new Error("app.thermometer is read-only");\n  }\n\n  get toolbar() {\n    return this._toolbar;\n  }\n\n  set toolbar(val) {\n    this._toolbar = val;\n  }\n\n  get toolbarHorizontal() {\n    return this.toolbar;\n  }\n\n  set toolbarHorizontal(value) {\n    this.toolbar = value;\n  }\n\n  get toolbarVertical() {\n    return this.toolbar;\n  }\n\n  set toolbarVertical(value) {\n    this.toolbar = value;\n  }\n\n  get viewerType() {\n    return VIEWER_TYPE;\n  }\n\n  set viewerType(_) {\n    throw new Error("app.viewerType is read-only");\n  }\n\n  get viewerVariation() {\n    return VIEWER_VARIATION;\n  }\n\n  set viewerVariation(_) {\n    throw new Error("app.viewerVariation is read-only");\n  }\n\n  get viewerVersion() {\n    return VIEWER_VERSION;\n  }\n\n  set viewerVersion(_) {\n    throw new Error("app.viewerVersion is read-only");\n  }\n\n  addMenuItem() {}\n\n  addSubMenu() {}\n\n  addToolButton() {}\n\n  alert(cMsg) {\n    let nIcon = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let cTitle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "PDF.js";\n    let oDoc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let oCheckbox = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n\n    if (typeof cMsg === "object") {\n      nType = cMsg.nType;\n      cMsg = cMsg.cMsg;\n    }\n\n    cMsg = (cMsg || "").toString();\n    nType = typeof nType !== "number" || isNaN(nType) || nType < 0 || nType > 3 ? 0 : nType;\n\n    if (nType >= 2) {\n      return this._externalCall("confirm", [cMsg]) ? 4 : 3;\n    }\n\n    this._externalCall("alert", [cMsg]);\n\n    return 1;\n  }\n\n  beep() {}\n\n  beginPriv() {}\n\n  browseForDoc() {}\n\n  clearInterval(oInterval) {\n    this._unregisterTimeout(oInterval);\n  }\n\n  clearTimeOut(oTime) {\n    this._unregisterTimeout(oTime);\n  }\n\n  endPriv() {}\n\n  execDialog() {}\n\n  execMenuItem(item) {\n    switch (item) {\n      case "SaveAs":\n      case "FirstPage":\n      case "LastPage":\n      case "NextPage":\n      case "PrevPage":\n      case "ZoomViewIn":\n      case "ZoomViewOut":\n        this._send({\n          command: item\n        });\n\n        break;\n\n      case "FitPage":\n        this._send({\n          command: "zoom",\n          value: "page-fit"\n        });\n\n        break;\n\n      case "Print":\n        this._send({\n          command: "print"\n        });\n\n        break;\n    }\n  }\n\n  getNthPlugInName() {}\n\n  getPath() {}\n\n  goBack() {}\n\n  goForward() {}\n\n  hideMenuItem() {}\n\n  hideToolbarButton() {}\n\n  launchURL() {}\n\n  listMenuItems() {}\n\n  listToolbarButtons() {}\n\n  loadPolicyFile() {}\n\n  mailGetAddrs() {}\n\n  mailMsg() {}\n\n  newDoc() {}\n\n  newCollection() {}\n\n  newFDF() {}\n\n  openDoc() {}\n\n  openFDF() {}\n\n  popUpMenu() {}\n\n  popUpMenuEx() {}\n\n  removeToolButton() {}\n\n  response(cQuestion) {\n    let cTitle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";\n    let cDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";\n    let bPassword = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";\n    let cLabel = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "";\n\n    if (typeof cQuestion === "object") {\n      cDefault = cQuestion.cDefault;\n      cQuestion = cQuestion.cQuestion;\n    }\n\n    cQuestion = (cQuestion || "").toString();\n    cDefault = (cDefault || "").toString();\n    return this._externalCall("prompt", [cQuestion, cDefault || ""]);\n  }\n\n  setInterval(cExpr) {\n    let nMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (typeof cExpr === "object") {\n      nMilliseconds = cExpr.nMilliseconds || 0;\n      cExpr = cExpr.cExpr;\n    }\n\n    if (typeof cExpr !== "string") {\n      throw new TypeError("First argument of app.setInterval must be a string");\n    }\n\n    if (typeof nMilliseconds !== "number") {\n      throw new TypeError("Second argument of app.setInterval must be a number");\n    }\n\n    const callbackId = this._registerTimeoutCallback(cExpr);\n\n    this._externalCall("setInterval", [callbackId, nMilliseconds]);\n\n    return this._registerTimeout(callbackId, true);\n  }\n\n  setTimeOut(cExpr) {\n    let nMilliseconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    if (typeof cExpr === "object") {\n      nMilliseconds = cExpr.nMilliseconds || 0;\n      cExpr = cExpr.cExpr;\n    }\n\n    if (typeof cExpr !== "string") {\n      throw new TypeError("First argument of app.setTimeOut must be a string");\n    }\n\n    if (typeof nMilliseconds !== "number") {\n      throw new TypeError("Second argument of app.setTimeOut must be a number");\n    }\n\n    const callbackId = this._registerTimeoutCallback(cExpr);\n\n    this._externalCall("setTimeout", [callbackId, nMilliseconds]);\n\n    return this._registerTimeout(callbackId, false);\n  }\n\n  trustedFunction() {}\n\n  trustPropagatorFunction() {}\n\n}\n\nexports.App = App;\n\n/***/ }),\n/* 115 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.EventDispatcher = exports.Event = void 0;\n\n__w_pdfjs_require__(2);\n\nclass Event {\n  constructor(data) {\n    var _data$selEnd, _data$selStart;\n\n    this.change = data.change || "";\n    this.changeEx = data.changeEx || null;\n    this.commitKey = data.commitKey || 0;\n    this.fieldFull = data.fieldFull || false;\n    this.keyDown = data.keyDown || false;\n    this.modifier = data.modifier || false;\n    this.name = data.name;\n    this.rc = true;\n    this.richChange = data.richChange || [];\n    this.richChangeEx = data.richChangeEx || [];\n    this.richValue = data.richValue || [];\n    this.selEnd = (_data$selEnd = data.selEnd) !== null && _data$selEnd !== void 0 ? _data$selEnd : -1;\n    this.selStart = (_data$selStart = data.selStart) !== null && _data$selStart !== void 0 ? _data$selStart : -1;\n    this.shift = data.shift || false;\n    this.source = data.source || null;\n    this.target = data.target || null;\n    this.targetName = "";\n    this.type = "Field";\n    this.value = data.value || "";\n    this.willCommit = data.willCommit || false;\n  }\n\n}\n\nexports.Event = Event;\n\nclass EventDispatcher {\n  constructor(document, calculationOrder, objects) {\n    this._document = document;\n    this._calculationOrder = calculationOrder;\n    this._objects = objects;\n    this._document.obj._eventDispatcher = this;\n  }\n\n  mergeChange(event) {\n    let value = event.value;\n\n    if (typeof value !== "string") {\n      value = value.toString();\n    }\n\n    const prefix = event.selStart >= 0 ? value.substring(0, event.selStart) : "";\n    const postfix = event.selEnd >= 0 && event.selEnd <= value.length ? value.substring(event.selEnd) : "";\n    return "".concat(prefix).concat(event.change).concat(postfix);\n  }\n\n  dispatch(baseEvent) {\n    const id = baseEvent.id;\n\n    if (!(id in this._objects)) {\n      let event;\n\n      if (id === "doc" || id === "page") {\n        event = globalThis.event = new Event(baseEvent);\n        event.source = event.target = this._document.wrapped;\n        event.name = baseEvent.name;\n      }\n\n      if (id === "doc") {\n        this._document.obj._dispatchDocEvent(event.name);\n      } else if (id === "page") {\n        this._document.obj._dispatchPageEvent(event.name, baseEvent.actions, baseEvent.pageNumber);\n      } else if (id === "app" && baseEvent.name === "ResetForm") {\n        for (const fieldId of baseEvent.ids) {\n          const obj = this._objects[fieldId];\n\n          if (obj) {\n            obj.obj._reset();\n          }\n        }\n      }\n\n      return;\n    }\n\n    const name = baseEvent.name;\n    const source = this._objects[id];\n    const event = globalThis.event = new Event(baseEvent);\n    let savedChange;\n\n    if (source.obj._isButton()) {\n      source.obj._id = id;\n      event.value = source.obj._getExportValue(event.value);\n\n      if (name === "Action") {\n        source.obj._value = event.value;\n      }\n    }\n\n    switch (name) {\n      case "Keystroke":\n        savedChange = {\n          value: event.value,\n          change: event.change,\n          selStart: event.selStart,\n          selEnd: event.selEnd\n        };\n        break;\n\n      case "Blur":\n      case "Focus":\n        Object.defineProperty(event, "value", {\n          configurable: false,\n          writable: false,\n          enumerable: true,\n          value: event.value\n        });\n        break;\n\n      case "Validate":\n        this.runValidation(source, event);\n        return;\n\n      case "Action":\n        this.runActions(source, source, event, name);\n\n        if (this._document.obj.calculate) {\n          this.runCalculate(source, event);\n        }\n\n        return;\n    }\n\n    this.runActions(source, source, event, name);\n\n    if (name === "Keystroke") {\n      if (event.rc) {\n        if (event.willCommit) {\n          this.runValidation(source, event);\n        } else if (event.change !== savedChange.change || event.selStart !== savedChange.selStart || event.selEnd !== savedChange.selEnd) {\n          source.wrapped.value = this.mergeChange(event);\n        }\n      } else if (!event.willCommit) {\n        source.obj._send({\n          id: source.obj._id,\n          value: savedChange.value,\n          selRange: [savedChange.selStart, savedChange.selEnd]\n        });\n      } else {\n        source.obj._send({\n          id: source.obj._id,\n          value: "",\n          selRange: [0, 0]\n        });\n      }\n    }\n  }\n\n  runValidation(source, event) {\n    const hasRan = this.runActions(source, source, event, "Validate");\n\n    if (event.rc) {\n      if (hasRan) {\n        source.wrapped.value = event.value;\n        source.wrapped.valueAsString = event.value;\n      } else {\n        source.obj.value = event.value;\n        source.obj.valueAsString = event.value;\n      }\n\n      if (this._document.obj.calculate) {\n        this.runCalculate(source, event);\n      }\n\n      event.value = source.obj.value;\n      this.runActions(source, source, event, "Format");\n      source.wrapped.valueAsString = event.value;\n    }\n  }\n\n  runActions(source, target, event, eventName) {\n    event.source = source.wrapped;\n    event.target = target.wrapped;\n    event.name = eventName;\n    event.targetName = target.obj.name;\n    event.rc = true;\n    return target.obj._runActions(event);\n  }\n\n  calculateNow() {\n    if (!this._calculationOrder) {\n      return;\n    }\n\n    const first = this._calculationOrder[0];\n    const source = this._objects[first];\n    globalThis.event = new Event({});\n    this.runCalculate(source, globalThis.event);\n  }\n\n  runCalculate(source, event) {\n    if (!this._calculationOrder) {\n      return;\n    }\n\n    for (const targetId of this._calculationOrder) {\n      if (!(targetId in this._objects)) {\n        continue;\n      }\n\n      if (!this._document.obj.calculate) {\n        continue;\n      }\n\n      event.value = null;\n      const target = this._objects[targetId];\n      this.runActions(source, target, event, "Calculate");\n\n      if (!event.rc) {\n        continue;\n      }\n\n      if (event.value !== null) {\n        target.wrapped.value = event.value;\n      }\n\n      event.value = target.obj.value;\n      this.runActions(target, target, event, "Validate");\n\n      if (!event.rc) {\n        continue;\n      }\n\n      event.value = target.obj.value;\n      this.runActions(target, target, event, "Format");\n\n      if (event.value !== null) {\n        target.wrapped.valueAsString = event.value;\n      }\n    }\n  }\n\n}\n\nexports.EventDispatcher = EventDispatcher;\n\n/***/ }),\n/* 116 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.FullScreen = void 0;\n\nvar _constants = __w_pdfjs_require__(82);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass FullScreen extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._backgroundColor = [];\n    this._clickAdvances = true;\n    this._cursor = _constants.Cursor.hidden;\n    this._defaultTransition = "";\n    this._escapeExits = true;\n    this._isFullScreen = true;\n    this._loop = false;\n    this._timeDelay = 3600;\n    this._usePageTiming = false;\n    this._useTimer = false;\n  }\n\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n\n  set backgroundColor(_) {}\n\n  get clickAdvances() {\n    return this._clickAdvances;\n  }\n\n  set clickAdvances(_) {}\n\n  get cursor() {\n    return this._cursor;\n  }\n\n  set cursor(_) {}\n\n  get defaultTransition() {\n    return this._defaultTransition;\n  }\n\n  set defaultTransition(_) {}\n\n  get escapeExits() {\n    return this._escapeExits;\n  }\n\n  set escapeExits(_) {}\n\n  get isFullScreen() {\n    return this._isFullScreen;\n  }\n\n  set isFullScreen(_) {}\n\n  get loop() {\n    return this._loop;\n  }\n\n  set loop(_) {}\n\n  get timeDelay() {\n    return this._timeDelay;\n  }\n\n  set timeDelay(_) {}\n\n  get transitions() {\n    return ["Replace", "WipeRight", "WipeLeft", "WipeDown", "WipeUp", "SplitHorizontalIn", "SplitHorizontalOut", "SplitVerticalIn", "SplitVerticalOut", "BlindsHorizontal", "BlindsVertical", "BoxIn", "BoxOut", "GlitterRight", "GlitterDown", "GlitterRightDown", "Dissolve", "Random"];\n  }\n\n  set transitions(_) {\n    throw new Error("fullscreen.transitions is read-only");\n  }\n\n  get usePageTiming() {\n    return this._usePageTiming;\n  }\n\n  set usePageTiming(_) {}\n\n  get useTimer() {\n    return this._useTimer;\n  }\n\n  set useTimer(_) {}\n\n}\n\nexports.FullScreen = FullScreen;\n\n/***/ }),\n/* 117 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Thermometer = void 0;\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Thermometer extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._cancelled = false;\n    this._duration = 100;\n    this._text = "";\n    this._value = 0;\n  }\n\n  get cancelled() {\n    return this._cancelled;\n  }\n\n  set cancelled(_) {\n    throw new Error("thermometer.cancelled is read-only");\n  }\n\n  get duration() {\n    return this._duration;\n  }\n\n  set duration(val) {\n    this._duration = val;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(val) {\n    this._text = val;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n  }\n\n  begin() {}\n\n  end() {}\n\n}\n\nexports.Thermometer = Thermometer;\n\n/***/ }),\n/* 118 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Console = void 0;\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Console extends _pdf_object.PDFObject {\n  clear() {\n    this._send({\n      id: "clear"\n    });\n  }\n\n  hide() {}\n\n  println(msg) {\n    if (typeof msg === "string") {\n      this._send({\n        command: "println",\n        value: "PDF.js Console:: " + msg\n      });\n    }\n  }\n\n  show() {}\n\n}\n\nexports.Console = Console;\n\n/***/ }),\n/* 119 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Doc = void 0;\n\n__w_pdfjs_require__(2);\n\n__w_pdfjs_require__(101);\n\n__w_pdfjs_require__(103);\n\n__w_pdfjs_require__(120);\n\nvar _common = __w_pdfjs_require__(84);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nvar _print_params = __w_pdfjs_require__(122);\n\nvar _constants = __w_pdfjs_require__(82);\n\nclass InfoProxyHandler {\n  static get(obj, prop) {\n    return obj[prop.toLowerCase()];\n  }\n\n  static set(obj, prop, value) {\n    throw new Error("doc.info.".concat(prop, " is read-only"));\n  }\n\n}\n\nclass Doc extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._expandos = globalThis;\n    this._baseURL = data.baseURL || "";\n    this._calculate = true;\n    this._delay = false;\n    this._dirty = false;\n    this._disclosed = false;\n    this._media = undefined;\n    this._metadata = data.metadata || "";\n    this._noautocomplete = undefined;\n    this._nocache = undefined;\n    this._spellDictionaryOrder = [];\n    this._spellLanguageOrder = [];\n    this._printParams = null;\n    this._fields = new Map();\n    this._fieldNames = [];\n    this._event = null;\n    this._author = data.Author || "";\n    this._creator = data.Creator || "";\n    this._creationDate = this._getDate(data.CreationDate) || null;\n    this._docID = data.docID || ["", ""];\n    this._documentFileName = data.filename || "";\n    this._filesize = data.filesize || 0;\n    this._keywords = data.Keywords || "";\n    this._layout = data.layout || "";\n    this._modDate = this._getDate(data.ModDate) || null;\n    this._numFields = 0;\n    this._numPages = data.numPages || 1;\n    this._pageNum = data.pageNum || 0;\n    this._producer = data.Producer || "";\n    this._securityHandler = data.EncryptFilterName || null;\n    this._subject = data.Subject || "";\n    this._title = data.Title || "";\n    this._URL = data.URL || "";\n    this._info = new Proxy({\n      title: this._title,\n      author: this._author,\n      authors: data.authors || [this._author],\n      subject: this._subject,\n      keywords: this._keywords,\n      creator: this._creator,\n      producer: this._producer,\n      creationdate: this._creationDate,\n      moddate: this._modDate,\n      trapped: data.Trapped || "Unknown"\n    }, InfoProxyHandler);\n    this._zoomType = _constants.ZoomType.none;\n    this._zoom = data.zoom || 100;\n    this._actions = (0, _common.createActionsMap)(data.actions);\n    this._globalEval = data.globalEval;\n    this._pageActions = new Map();\n  }\n\n  _dispatchDocEvent(name) {\n    if (name === "Open") {\n      const dontRun = new Set(["WillClose", "WillSave", "DidSave", "WillPrint", "DidPrint", "OpenAction"]);\n\n      for (const actionName of this._actions.keys()) {\n        if (!dontRun.has(actionName)) {\n          this._runActions(actionName);\n        }\n      }\n\n      this._runActions("OpenAction");\n    } else {\n      this._runActions(name);\n    }\n  }\n\n  _dispatchPageEvent(name, actions, pageNumber) {\n    var _this$_pageActions$ge;\n\n    if (name === "PageOpen") {\n      if (!this._pageActions.has(pageNumber)) {\n        this._pageActions.set(pageNumber, (0, _common.createActionsMap)(actions));\n      }\n\n      this._pageNum = pageNumber - 1;\n    }\n\n    actions = (_this$_pageActions$ge = this._pageActions.get(pageNumber)) === null || _this$_pageActions$ge === void 0 ? void 0 : _this$_pageActions$ge.get(name);\n\n    if (actions) {\n      for (const action of actions) {\n        this._globalEval(action);\n      }\n    }\n  }\n\n  _runActions(name) {\n    const actions = this._actions.get(name);\n\n    if (actions) {\n      for (const action of actions) {\n        this._globalEval(action);\n      }\n    }\n  }\n\n  _addField(name, field) {\n    this._fields.set(name, field);\n\n    this._fieldNames.push(name);\n\n    this._numFields++;\n  }\n\n  _getDate(date) {\n    if (!date || date.length < 15 || !date.startsWith("D:")) {\n      return date;\n    }\n\n    date = date.substring(2);\n    const year = date.substring(0, 4);\n    const month = date.substring(4, 6);\n    const day = date.substring(6, 8);\n    const hour = date.substring(8, 10);\n    const minute = date.substring(10, 12);\n    const o = date.charAt(12);\n    let second, offsetPos;\n\n    if (o === "Z" || o === "+" || o === "-") {\n      second = "00";\n      offsetPos = 12;\n    } else {\n      second = date.substring(12, 14);\n      offsetPos = 14;\n    }\n\n    const offset = date.substring(offsetPos).replaceAll("\'", "");\n    return new Date("".concat(year, "-").concat(month, "-").concat(day, "T").concat(hour, ":").concat(minute, ":").concat(second).concat(offset));\n  }\n\n  get author() {\n    return this._author;\n  }\n\n  set author(_) {\n    throw new Error("doc.author is read-only");\n  }\n\n  get baseURL() {\n    return this._baseURL;\n  }\n\n  set baseURL(baseURL) {\n    this._baseURL = baseURL;\n  }\n\n  get bookmarkRoot() {\n    return undefined;\n  }\n\n  set bookmarkRoot(_) {\n    throw new Error("doc.bookmarkRoot is read-only");\n  }\n\n  get calculate() {\n    return this._calculate;\n  }\n\n  set calculate(calculate) {\n    this._calculate = calculate;\n  }\n\n  get creator() {\n    return this._creator;\n  }\n\n  set creator(_) {\n    throw new Error("doc.creator is read-only");\n  }\n\n  get dataObjects() {\n    return [];\n  }\n\n  set dataObjects(_) {\n    throw new Error("doc.dataObjects is read-only");\n  }\n\n  get delay() {\n    return this._delay;\n  }\n\n  set delay(delay) {\n    this._delay = delay;\n  }\n\n  get dirty() {\n    return this._dirty;\n  }\n\n  set dirty(dirty) {\n    this._dirty = dirty;\n  }\n\n  get disclosed() {\n    return this._disclosed;\n  }\n\n  set disclosed(disclosed) {\n    this._disclosed = disclosed;\n  }\n\n  get docID() {\n    return this._docID;\n  }\n\n  set docID(_) {\n    throw new Error("doc.docID is read-only");\n  }\n\n  get documentFileName() {\n    return this._documentFileName;\n  }\n\n  set documentFileName(_) {\n    throw new Error("doc.documentFileName is read-only");\n  }\n\n  get dynamicXFAForm() {\n    return false;\n  }\n\n  set dynamicXFAForm(_) {\n    throw new Error("doc.dynamicXFAForm is read-only");\n  }\n\n  get external() {\n    return true;\n  }\n\n  set external(_) {\n    throw new Error("doc.external is read-only");\n  }\n\n  get filesize() {\n    return this._filesize;\n  }\n\n  set filesize(_) {\n    throw new Error("doc.filesize is read-only");\n  }\n\n  get hidden() {\n    return false;\n  }\n\n  set hidden(_) {\n    throw new Error("doc.hidden is read-only");\n  }\n\n  get hostContainer() {\n    return undefined;\n  }\n\n  set hostContainer(_) {\n    throw new Error("doc.hostContainer is read-only");\n  }\n\n  get icons() {\n    return undefined;\n  }\n\n  set icons(_) {\n    throw new Error("doc.icons is read-only");\n  }\n\n  get info() {\n    return this._info;\n  }\n\n  set info(_) {\n    throw new Error("doc.info is read-only");\n  }\n\n  get innerAppWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set innerAppWindowRect(_) {\n    throw new Error("doc.innerAppWindowRect is read-only");\n  }\n\n  get innerDocWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set innerDocWindowRect(_) {\n    throw new Error("doc.innerDocWindowRect is read-only");\n  }\n\n  get isModal() {\n    return false;\n  }\n\n  set isModal(_) {\n    throw new Error("doc.isModal is read-only");\n  }\n\n  get keywords() {\n    return this._keywords;\n  }\n\n  set keywords(_) {\n    throw new Error("doc.keywords is read-only");\n  }\n\n  get layout() {\n    return this._layout;\n  }\n\n  set layout(value) {\n    if (typeof value !== "string") {\n      return;\n    }\n\n    if (value !== "SinglePage" && value !== "OneColumn" && value !== "TwoColumnLeft" && value !== "TwoPageLeft" && value !== "TwoColumnRight" && value !== "TwoPageRight") {\n      value = "SinglePage";\n    }\n\n    this._send({\n      command: "layout",\n      value\n    });\n\n    this._layout = value;\n  }\n\n  get media() {\n    return this._media;\n  }\n\n  set media(media) {\n    this._media = media;\n  }\n\n  get metadata() {\n    return this._metadata;\n  }\n\n  set metadata(metadata) {\n    this._metadata = metadata;\n  }\n\n  get modDate() {\n    return this._modDate;\n  }\n\n  set modDate(_) {\n    throw new Error("doc.modDate is read-only");\n  }\n\n  get mouseX() {\n    return 0;\n  }\n\n  set mouseX(_) {\n    throw new Error("doc.mouseX is read-only");\n  }\n\n  get mouseY() {\n    return 0;\n  }\n\n  set mouseY(_) {\n    throw new Error("doc.mouseY is read-only");\n  }\n\n  get noautocomplete() {\n    return this._noautocomplete;\n  }\n\n  set noautocomplete(noautocomplete) {\n    this._noautocomplete = noautocomplete;\n  }\n\n  get nocache() {\n    return this._nocache;\n  }\n\n  set nocache(nocache) {\n    this._nocache = nocache;\n  }\n\n  get numFields() {\n    return this._numFields;\n  }\n\n  set numFields(_) {\n    throw new Error("doc.numFields is read-only");\n  }\n\n  get numPages() {\n    return this._numPages;\n  }\n\n  set numPages(_) {\n    throw new Error("doc.numPages is read-only");\n  }\n\n  get numTemplates() {\n    return 0;\n  }\n\n  set numTemplates(_) {\n    throw new Error("doc.numTemplates is read-only");\n  }\n\n  get outerAppWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set outerAppWindowRect(_) {\n    throw new Error("doc.outerAppWindowRect is read-only");\n  }\n\n  get outerDocWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set outerDocWindowRect(_) {\n    throw new Error("doc.outerDocWindowRect is read-only");\n  }\n\n  get pageNum() {\n    return this._pageNum;\n  }\n\n  set pageNum(value) {\n    if (typeof value !== "number" || value < 0 || value >= this._numPages) {\n      return;\n    }\n\n    this._send({\n      command: "page-num",\n      value\n    });\n\n    this._pageNum = value;\n  }\n\n  get pageWindowRect() {\n    return [0, 0, 0, 0];\n  }\n\n  set pageWindowRect(_) {\n    throw new Error("doc.pageWindowRect is read-only");\n  }\n\n  get path() {\n    return "";\n  }\n\n  set path(_) {\n    throw new Error("doc.path is read-only");\n  }\n\n  get permStatusReady() {\n    return true;\n  }\n\n  set permStatusReady(_) {\n    throw new Error("doc.permStatusReady is read-only");\n  }\n\n  get producer() {\n    return this._producer;\n  }\n\n  set producer(_) {\n    throw new Error("doc.producer is read-only");\n  }\n\n  get requiresFullSave() {\n    return false;\n  }\n\n  set requiresFullSave(_) {\n    throw new Error("doc.requiresFullSave is read-only");\n  }\n\n  get securityHandler() {\n    return this._securityHandler;\n  }\n\n  set securityHandler(_) {\n    throw new Error("doc.securityHandler is read-only");\n  }\n\n  get selectedAnnots() {\n    return [];\n  }\n\n  set selectedAnnots(_) {\n    throw new Error("doc.selectedAnnots is read-only");\n  }\n\n  get sounds() {\n    return [];\n  }\n\n  set sounds(_) {\n    throw new Error("doc.sounds is read-only");\n  }\n\n  get spellDictionaryOrder() {\n    return this._spellDictionaryOrder;\n  }\n\n  set spellDictionaryOrder(spellDictionaryOrder) {\n    this._spellDictionaryOrder = spellDictionaryOrder;\n  }\n\n  get spellLanguageOrder() {\n    return this._spellLanguageOrder;\n  }\n\n  set spellLanguageOrder(spellLanguageOrder) {\n    this._spellLanguageOrder = spellLanguageOrder;\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  set subject(_) {\n    throw new Error("doc.subject is read-only");\n  }\n\n  get templates() {\n    return [];\n  }\n\n  set templates(_) {\n    throw new Error("doc.templates is read-only");\n  }\n\n  get title() {\n    return this._title;\n  }\n\n  set title(_) {\n    throw new Error("doc.title is read-only");\n  }\n\n  get URL() {\n    return this._URL;\n  }\n\n  set URL(_) {\n    throw new Error("doc.URL is read-only");\n  }\n\n  get viewState() {\n    return undefined;\n  }\n\n  set viewState(_) {\n    throw new Error("doc.viewState is read-only");\n  }\n\n  get xfa() {\n    return this._xfa;\n  }\n\n  set xfa(_) {\n    throw new Error("doc.xfa is read-only");\n  }\n\n  get XFAForeground() {\n    return false;\n  }\n\n  set XFAForeground(_) {\n    throw new Error("doc.XFAForeground is read-only");\n  }\n\n  get zoomType() {\n    return this._zoomType;\n  }\n\n  set zoomType(type) {\n    if (typeof type !== "string") {\n      return;\n    }\n\n    switch (type) {\n      case _constants.ZoomType.none:\n        this._send({\n          command: "zoom",\n          value: 1\n        });\n\n        break;\n\n      case _constants.ZoomType.fitP:\n        this._send({\n          command: "zoom",\n          value: "page-fit"\n        });\n\n        break;\n\n      case _constants.ZoomType.fitW:\n        this._send({\n          command: "zoom",\n          value: "page-width"\n        });\n\n        break;\n\n      case _constants.ZoomType.fitH:\n        this._send({\n          command: "zoom",\n          value: "page-height"\n        });\n\n        break;\n\n      case _constants.ZoomType.fitV:\n        this._send({\n          command: "zoom",\n          value: "auto"\n        });\n\n        break;\n\n      case _constants.ZoomType.pref:\n      case _constants.ZoomType.refW:\n        break;\n\n      default:\n        return;\n    }\n\n    this._zoomType = type;\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  set zoom(value) {\n    if (typeof value !== "number" || value < 8.33 || value > 6400) {\n      return;\n    }\n\n    this._send({\n      command: "zoom",\n      value: value / 100\n    });\n  }\n\n  addAnnot() {}\n\n  addField() {}\n\n  addIcon() {}\n\n  addLink() {}\n\n  addRecipientListCryptFilter() {}\n\n  addRequirement() {}\n\n  addScript() {}\n\n  addThumbnails() {}\n\n  addWatermarkFromFile() {}\n\n  addWatermarkFromText() {}\n\n  addWeblinks() {}\n\n  bringToFront() {}\n\n  calculateNow() {\n    this._eventDispatcher.calculateNow();\n  }\n\n  closeDoc() {}\n\n  colorConvertPage() {}\n\n  createDataObject() {}\n\n  createTemplate() {}\n\n  deletePages() {}\n\n  deleteSound() {}\n\n  embedDocAsDataObject() {}\n\n  embedOutputIntent() {}\n\n  encryptForRecipients() {}\n\n  encryptUsingPolicy() {}\n\n  exportAsFDF() {}\n\n  exportAsFDFStr() {}\n\n  exportAsText() {}\n\n  exportAsXFDF() {}\n\n  exportAsXFDFStr() {}\n\n  exportDataObject() {}\n\n  exportXFAData() {}\n\n  extractPages() {}\n\n  flattenPages() {}\n\n  getAnnot() {}\n\n  getAnnots() {}\n\n  getAnnot3D() {}\n\n  getAnnots3D() {}\n\n  getColorConvertAction() {}\n\n  getDataObject() {}\n\n  getDataObjectContents() {}\n\n  getField(cName) {\n    if (typeof cName === "object") {\n      cName = cName.cName;\n    }\n\n    if (typeof cName !== "string") {\n      throw new TypeError("Invalid field name: must be a string");\n    }\n\n    const searchedField = this._fields.get(cName);\n\n    if (searchedField) {\n      return searchedField;\n    }\n\n    const parts = cName.split("#");\n    let childIndex = NaN;\n\n    if (parts.length === 2) {\n      childIndex = Math.floor(parseFloat(parts[1]));\n      cName = parts[0];\n    }\n\n    for (const [name, field] of this._fields.entries()) {\n      if (name.endsWith(cName)) {\n        if (!isNaN(childIndex)) {\n          const children = this._getChildren(name);\n\n          if (childIndex < 0 || childIndex >= children.length) {\n            childIndex = 0;\n          }\n\n          if (childIndex < children.length) {\n            this._fields.set(cName, children[childIndex]);\n\n            return children[childIndex];\n          }\n        }\n\n        this._fields.set(cName, field);\n\n        return field;\n      }\n    }\n\n    return null;\n  }\n\n  _getChildren(fieldName) {\n    const len = fieldName.length;\n    const children = [];\n    const pattern = /^\\.[^.]+$/;\n\n    for (const [name, field] of this._fields.entries()) {\n      if (name.startsWith(fieldName)) {\n        const finalPart = name.slice(len);\n\n        if (finalPart.match(pattern)) {\n          children.push(field);\n        }\n      }\n    }\n\n    return children;\n  }\n\n  getIcon() {}\n\n  getLegalWarnings() {}\n\n  getLinks() {}\n\n  getNthFieldName(nIndex) {\n    if (typeof nIndex === "object") {\n      nIndex = nIndex.nIndex;\n    }\n\n    if (typeof nIndex !== "number") {\n      throw new TypeError("Invalid field index: must be a number");\n    }\n\n    if (0 <= nIndex && nIndex < this.numFields) {\n      return this._fieldNames[Math.trunc(nIndex)];\n    }\n\n    return null;\n  }\n\n  getNthTemplate() {\n    return null;\n  }\n\n  getOCGs() {}\n\n  getOCGOrder() {}\n\n  getPageBox() {}\n\n  getPageLabel() {}\n\n  getPageNthWord() {}\n\n  getPageNthWordQuads() {}\n\n  getPageNumWords() {}\n\n  getPageRotation() {}\n\n  getPageTransition() {}\n\n  getPrintParams() {\n    if (!this._printParams) {\n      this._printParams = new _print_params.PrintParams({\n        lastPage: this._numPages - 1\n      });\n    }\n\n    return this._printParams;\n  }\n\n  getSound() {}\n\n  getTemplate() {}\n\n  getURL() {}\n\n  gotoNamedDest() {}\n\n  importAnFDF() {}\n\n  importAnXFDF() {}\n\n  importDataObject() {}\n\n  importIcon() {}\n\n  importSound() {}\n\n  importTextData() {}\n\n  importXFAData() {}\n\n  insertPages() {}\n\n  mailDoc() {}\n\n  mailForm() {}\n\n  movePage() {}\n\n  newPage() {}\n\n  openDataObject() {}\n\n  print() {\n    let bUI = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let nStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nEnd = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    let bSilent = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let bShrinkToFit = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let bPrintAsImage = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    let bReverse = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let bAnnotations = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;\n    let printParams = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n\n    if (typeof bUI === "object") {\n      nStart = bUI.nStart;\n      nEnd = bUI.nEnd;\n      bSilent = bUI.bSilent;\n      bShrinkToFit = bUI.bShrinkToFit;\n      bPrintAsImage = bUI.bPrintAsImage;\n      bReverse = bUI.bReverse;\n      bAnnotations = bUI.bAnnotations;\n      printParams = bUI.printParams;\n      bUI = bUI.bUI;\n    }\n\n    if (printParams) {\n      nStart = printParams.firstPage;\n      nEnd = printParams.lastPage;\n    }\n\n    if (typeof nStart === "number") {\n      nStart = Math.max(0, Math.trunc(nStart));\n    } else {\n      nStart = 0;\n    }\n\n    if (typeof nEnd === "number") {\n      nEnd = Math.max(0, Math.trunc(nEnd));\n    } else {\n      nEnd = -1;\n    }\n\n    this._send({\n      command: "print",\n      start: nStart,\n      end: nEnd\n    });\n  }\n\n  removeDataObject() {}\n\n  removeField() {}\n\n  removeIcon() {}\n\n  removeLinks() {}\n\n  removeRequirement() {}\n\n  removeScript() {}\n\n  removeTemplate() {}\n\n  removeThumbnails() {}\n\n  removeWeblinks() {}\n\n  replacePages() {}\n\n  resetForm() {\n    let aFields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (aFields && !Array.isArray(aFields) && typeof aFields === "object") {\n      aFields = aFields.aFields;\n    }\n\n    let mustCalculate = false;\n\n    if (aFields) {\n      for (const fieldName of aFields) {\n        if (!fieldName) {\n          continue;\n        }\n\n        const field = this.getField(fieldName);\n\n        if (!field) {\n          continue;\n        }\n\n        field.value = field.defaultValue;\n        field.valueAsString = field.value;\n        mustCalculate = true;\n      }\n    } else {\n      mustCalculate = this._fields.size !== 0;\n\n      for (const field of this._fields.values()) {\n        field.value = field.defaultValue;\n        field.valueAsString = field.value;\n      }\n    }\n\n    if (mustCalculate) {\n      this.calculateNow();\n    }\n  }\n\n  saveAs() {}\n\n  scroll() {}\n\n  selectPageNthWord() {}\n\n  setAction() {}\n\n  setDataObjectContents() {}\n\n  setOCGOrder() {}\n\n  setPageAction() {}\n\n  setPageBoxes() {}\n\n  setPageLabels() {}\n\n  setPageRotations() {}\n\n  setPageTabOrder() {}\n\n  setPageTransitions() {}\n\n  spawnPageFromTemplate() {}\n\n  submitForm() {}\n\n  syncAnnotScan() {}\n\n}\n\nexports.Doc = Doc;\n\n/***/ }),\n/* 120 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n__w_pdfjs_require__(121);\n\n/***/ }),\n/* 121 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\n"use strict";\n\nvar $ = __w_pdfjs_require__(65);\nvar global = __w_pdfjs_require__(3);\nvar call = __w_pdfjs_require__(40);\nvar uncurryThis = __w_pdfjs_require__(12);\nvar requireObjectCoercible = __w_pdfjs_require__(16);\nvar isCallable = __w_pdfjs_require__(8);\nvar isRegExp = __w_pdfjs_require__(91);\nvar toString = __w_pdfjs_require__(92);\nvar getMethod = __w_pdfjs_require__(43);\nvar regExpFlags = __w_pdfjs_require__(95);\nvar getSubstitution = __w_pdfjs_require__(108);\nvar wellKnownSymbol = __w_pdfjs_require__(18);\nvar IS_PURE = __w_pdfjs_require__(20);\nvar REPLACE = wellKnownSymbol(\'replace\');\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\nvar getFlags = uncurryThis(regExpFlags);\nvar indexOf = uncurryThis(\'\'.indexOf);\nvar replace = uncurryThis(\'\'.replace);\nvar stringSlice = uncurryThis(\'\'.slice);\nvar max = Math.max;\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n if (fromIndex > string.length)\n  return -1;\n if (searchValue === \'\')\n  return fromIndex;\n return indexOf(string, searchValue, fromIndex);\n};\n$({\n target: \'String\',\n proto: true\n}, {\n replaceAll: function replaceAll(searchValue, replaceValue) {\n  var O = requireObjectCoercible(this);\n  var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n  var position = 0;\n  var endOfLastMatch = 0;\n  var result = \'\';\n  if (searchValue != null) {\n   IS_REG_EXP = isRegExp(searchValue);\n   if (IS_REG_EXP) {\n    flags = toString(requireObjectCoercible(\'flags\' in RegExpPrototype ? searchValue.flags : getFlags(searchValue)));\n    if (!~indexOf(flags, \'g\'))\n     throw TypeError(\'`.replaceAll` does not allow non-global regexes\');\n   }\n   replacer = getMethod(searchValue, REPLACE);\n   if (replacer) {\n    return call(replacer, searchValue, O, replaceValue);\n   } else if (IS_PURE && IS_REG_EXP) {\n    return replace(toString(O), searchValue, replaceValue);\n   }\n  }\n  string = toString(O);\n  searchString = toString(searchValue);\n  functionalReplace = isCallable(replaceValue);\n  if (!functionalReplace)\n   replaceValue = toString(replaceValue);\n  searchLength = searchString.length;\n  advanceBy = max(1, searchLength);\n  position = stringIndexOf(string, searchString, 0);\n  while (position !== -1) {\n   replacement = functionalReplace ? toString(replaceValue(searchString, position, string)) : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n   result += stringSlice(string, endOfLastMatch, position) + replacement;\n   endOfLastMatch = position + searchLength;\n   position = stringIndexOf(string, searchString, position + advanceBy);\n  }\n  if (endOfLastMatch < string.length) {\n   result += stringSlice(string, endOfLastMatch);\n  }\n  return result;\n }\n});\n\n/***/ }),\n/* 122 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.PrintParams = void 0;\n\n__w_pdfjs_require__(123);\n\nclass PrintParams {\n  constructor(data) {\n    this.binaryOk = true;\n    this.bitmapDPI = 150;\n    this.booklet = {\n      binding: 0,\n      duplexMode: 0,\n      subsetFrom: 0,\n      subsetTo: -1\n    };\n    this.colorOverride = 0;\n    this.colorProfile = "";\n    this.constants = Object.freeze({\n      bookletBindings: Object.freeze({\n        Left: 0,\n        Right: 1,\n        LeftTall: 2,\n        RightTall: 3\n      }),\n      bookletDuplexMode: Object.freeze({\n        BothSides: 0,\n        FrontSideOnly: 1,\n        BasicSideOnly: 2\n      }),\n      colorOverrides: Object.freeze({\n        auto: 0,\n        gray: 1,\n        mono: 2\n      }),\n      fontPolicies: Object.freeze({\n        everyPage: 0,\n        jobStart: 1,\n        pageRange: 2\n      }),\n      handling: Object.freeze({\n        none: 0,\n        fit: 1,\n        shrink: 2,\n        tileAll: 3,\n        tileLarge: 4,\n        nUp: 5,\n        booklet: 6\n      }),\n      interactionLevel: Object.freeze({\n        automatic: 0,\n        full: 1,\n        silent: 2\n      }),\n      nUpPageOrders: Object.freeze({\n        Horizontal: 0,\n        HorizontalReversed: 1,\n        Vertical: 2\n      }),\n      printContents: Object.freeze({\n        doc: 0,\n        docAndComments: 1,\n        formFieldsOnly: 2\n      }),\n      flagValues: Object.freeze({\n        applyOverPrint: 1,\n        applySoftProofSettings: 1 << 1,\n        applyWorkingColorSpaces: 1 << 2,\n        emitHalftones: 1 << 3,\n        emitPostScriptXObjects: 1 << 4,\n        emitFormsAsPSForms: 1 << 5,\n        maxJP2KRes: 1 << 6,\n        setPageSize: 1 << 7,\n        suppressBG: 1 << 8,\n        suppressCenter: 1 << 9,\n        suppressCJKFontSubst: 1 << 10,\n        suppressCropClip: 1 << 1,\n        suppressRotate: 1 << 12,\n        suppressTransfer: 1 << 13,\n        suppressUCR: 1 << 14,\n        useTrapAnnots: 1 << 15,\n        usePrintersMarks: 1 << 16\n      }),\n      rasterFlagValues: Object.freeze({\n        textToOutline: 1,\n        strokesToOutline: 1 << 1,\n        allowComplexClip: 1 << 2,\n        preserveOverprint: 1 << 3\n      }),\n      subsets: Object.freeze({\n        all: 0,\n        even: 1,\n        odd: 2\n      }),\n      tileMarks: Object.freeze({\n        none: 0,\n        west: 1,\n        east: 2\n      }),\n      usages: Object.freeze({\n        auto: 0,\n        use: 1,\n        noUse: 2\n      })\n    });\n    this.downloadFarEastFonts = false;\n    this.fileName = "";\n    this.firstPage = 0;\n    this.flags = 0;\n    this.fontPolicy = 0;\n    this.gradientDPI = 150;\n    this.interactive = 1;\n    this.lastPage = data.lastPage;\n    this.npUpAutoRotate = false;\n    this.npUpNumPagesH = 2;\n    this.npUpNumPagesV = 2;\n    this.npUpPageBorder = false;\n    this.npUpPageOrder = 0;\n    this.pageHandling = 0;\n    this.pageSubset = 0;\n    this.printAsImage = false;\n    this.printContent = 0;\n    this.printerName = "";\n    this.psLevel = 0;\n    this.rasterFlags = 0;\n    this.reversePages = false;\n    this.tileLabel = false;\n    this.tileMark = 0;\n    this.tileOverlap = 0;\n    this.tileScale = 1.0;\n    this.transparencyLevel = 75;\n    this.usePrinterCRD = 0;\n    this.useT1Conversion = 0;\n  }\n\n}\n\nexports.PrintParams = PrintParams;\n\n/***/ }),\n/* 123 */\n/***/ ((__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n\nvar DESCRIPTORS = __w_pdfjs_require__(34);\nvar objectDefinePropertyModule = __w_pdfjs_require__(36);\nvar regExpFlags = __w_pdfjs_require__(95);\nvar fails = __w_pdfjs_require__(14);\nvar RegExpPrototype = RegExp.prototype;\nvar FORCED = DESCRIPTORS && fails(function () {\n return Object.getOwnPropertyDescriptor(RegExpPrototype, \'flags\').get.call({\n  dotAll: true,\n  sticky: true\n }) !== \'sy\';\n});\nif (FORCED)\n objectDefinePropertyModule.f(RegExpPrototype, \'flags\', {\n  configurable: true,\n  get: regExpFlags\n });\n\n/***/ }),\n/* 124 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.ProxyHandler = void 0;\n\n__w_pdfjs_require__(2);\n\nclass ProxyHandler {\n  constructor() {\n    this.nosend = new Set(["delay"]);\n  }\n\n  get(obj, prop) {\n    if (prop in obj._expandos) {\n      const val = obj._expandos[prop];\n\n      if (typeof val === "function") {\n        return val.bind(obj);\n      }\n\n      return val;\n    }\n\n    if (typeof prop === "string" && !prop.startsWith("_") && prop in obj) {\n      const val = obj[prop];\n\n      if (typeof val === "function") {\n        return val.bind(obj);\n      }\n\n      return val;\n    }\n\n    return undefined;\n  }\n\n  set(obj, prop, value) {\n    if (obj._kidIds) {\n      obj._kidIds.forEach(id => {\n        obj._appObjects[id].wrapped[prop] = value;\n      });\n    }\n\n    if (typeof prop === "string" && !prop.startsWith("_") && prop in obj) {\n      const old = obj[prop];\n      obj[prop] = value;\n\n      if (!this.nosend.has(prop) && obj._send && obj._id !== null && typeof old !== "function") {\n        const data = {\n          id: obj._id\n        };\n        data[prop] = obj[prop];\n\n        if (!obj._siblings) {\n          obj._send(data);\n        } else {\n          data.siblings = obj._siblings;\n\n          obj._send(data);\n        }\n      }\n    } else {\n      obj._expandos[prop] = value;\n    }\n\n    return true;\n  }\n\n  has(obj, prop) {\n    return prop in obj._expandos || typeof prop === "string" && !prop.startsWith("_") && prop in obj;\n  }\n\n  getPrototypeOf(obj) {\n    return null;\n  }\n\n  setPrototypeOf(obj, proto) {\n    return false;\n  }\n\n  isExtensible(obj) {\n    return true;\n  }\n\n  preventExtensions(obj) {\n    return false;\n  }\n\n  getOwnPropertyDescriptor(obj, prop) {\n    if (prop in obj._expandos) {\n      return {\n        configurable: true,\n        enumerable: true,\n        value: obj._expandos[prop]\n      };\n    }\n\n    if (typeof prop === "string" && !prop.startsWith("_") && prop in obj) {\n      return {\n        configurable: true,\n        enumerable: true,\n        value: obj[prop]\n      };\n    }\n\n    return undefined;\n  }\n\n  defineProperty(obj, key, descriptor) {\n    Object.defineProperty(obj._expandos, key, descriptor);\n    return true;\n  }\n\n  deleteProperty(obj, prop) {\n    if (prop in obj._expandos) {\n      delete obj._expandos[prop];\n    }\n  }\n\n  ownKeys(obj) {\n    const fromExpandos = Reflect.ownKeys(obj._expandos);\n    const fromObj = Reflect.ownKeys(obj).filter(k => !k.startsWith("_"));\n    return fromExpandos.concat(fromObj);\n  }\n\n}\n\nexports.ProxyHandler = ProxyHandler;\n\n/***/ }),\n/* 125 */\n/***/ ((__unused_webpack_module, exports, __w_pdfjs_require__) => {\n\n"use strict";\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nexports.Util = void 0;\n\n__w_pdfjs_require__(2);\n\n__w_pdfjs_require__(101);\n\n__w_pdfjs_require__(103);\n\n__w_pdfjs_require__(89);\n\nvar _pdf_object = __w_pdfjs_require__(87);\n\nclass Util extends _pdf_object.PDFObject {\n  constructor(data) {\n    super(data);\n    this._scandCache = new Map();\n    this._months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];\n    this._days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];\n    this.MILLISECONDS_IN_DAY = 86400000;\n    this.MILLISECONDS_IN_WEEK = 604800000;\n    this._externalCall = data.externalCall;\n  }\n\n  printf() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (args.length === 0) {\n      throw new Error("Invalid number of params in printf");\n    }\n\n    if (typeof args[0] !== "string") {\n      throw new TypeError("First argument of printf must be a string");\n    }\n\n    const pattern = /%(,[0-4])?([+ 0#]+)?(\\d+)?(\\.\\d+)?(.)/g;\n    const PLUS = 1;\n    const SPACE = 2;\n    const ZERO = 4;\n    const HASH = 8;\n    let i = 0;\n    return args[0].replace(pattern, function (match, nDecSep, cFlags, nWidth, nPrecision, cConvChar) {\n      if (cConvChar !== "d" && cConvChar !== "f" && cConvChar !== "s" && cConvChar !== "x") {\n        const buf = ["%"];\n\n        for (const str of [nDecSep, cFlags, nWidth, nPrecision, cConvChar]) {\n          if (str) {\n            buf.push(str);\n          }\n        }\n\n        return buf.join("");\n      }\n\n      i++;\n\n      if (i === args.length) {\n        throw new Error("Not enough arguments in printf");\n      }\n\n      const arg = args[i];\n\n      if (cConvChar === "s") {\n        return arg.toString();\n      }\n\n      let flags = 0;\n\n      if (cFlags) {\n        for (const flag of cFlags) {\n          switch (flag) {\n            case "+":\n              flags |= PLUS;\n              break;\n\n            case " ":\n              flags |= SPACE;\n              break;\n\n            case "0":\n              flags |= ZERO;\n              break;\n\n            case "#":\n              flags |= HASH;\n              break;\n          }\n        }\n      }\n\n      cFlags = flags;\n\n      if (nWidth) {\n        nWidth = parseInt(nWidth);\n      }\n\n      let intPart = Math.trunc(arg);\n\n      if (cConvChar === "x") {\n        let hex = Math.abs(intPart).toString(16).toUpperCase();\n\n        if (nWidth !== undefined) {\n          hex = hex.padStart(nWidth, cFlags & ZERO ? "0" : " ");\n        }\n\n        if (cFlags & HASH) {\n          hex = "0x".concat(hex);\n        }\n\n        return hex;\n      }\n\n      if (nPrecision) {\n        nPrecision = parseInt(nPrecision.substring(1));\n      }\n\n      nDecSep = nDecSep ? nDecSep.substring(1) : "0";\n      const separators = {\n        0: [",", "."],\n        1: ["", "."],\n        2: [".", ","],\n        3: ["", ","],\n        4: ["\'", "."]\n      };\n      const [thousandSep, decimalSep] = separators[nDecSep];\n      let decPart = "";\n\n      if (cConvChar === "f") {\n        if (nPrecision !== undefined) {\n          decPart = Math.abs(arg - intPart).toFixed(nPrecision);\n        } else {\n          decPart = Math.abs(arg - intPart).toString();\n        }\n\n        if (decPart.length > 2) {\n          decPart = "".concat(decimalSep).concat(decPart.substring(2));\n        } else if (cFlags & HASH) {\n          decPart = ".";\n        } else {\n          decPart = "";\n        }\n      }\n\n      let sign = "";\n\n      if (intPart < 0) {\n        sign = "-";\n        intPart = -intPart;\n      } else if (cFlags & PLUS) {\n        sign = "+";\n      } else if (cFlags & SPACE) {\n        sign = " ";\n      }\n\n      if (thousandSep && intPart >= 1000) {\n        const buf = [];\n\n        while (true) {\n          buf.push((intPart % 1000).toString().padStart(3, "0"));\n          intPart = Math.trunc(intPart / 1000);\n\n          if (intPart < 1000) {\n            buf.push(intPart.toString());\n            break;\n          }\n        }\n\n        intPart = buf.reverse().join(thousandSep);\n      } else {\n        intPart = intPart.toString();\n      }\n\n      let n = "".concat(intPart).concat(decPart);\n\n      if (nWidth !== undefined) {\n        n = n.padStart(nWidth - sign.length, cFlags & ZERO ? "0" : " ");\n      }\n\n      return "".concat(sign).concat(n);\n    });\n  }\n\n  iconStreamFromIcon() {}\n\n  printd(cFormat, oDate) {\n    switch (cFormat) {\n      case 0:\n        return this.printd("D:yyyymmddHHMMss", oDate);\n\n      case 1:\n        return this.printd("yyyy.mm.dd HH:MM:ss", oDate);\n\n      case 2:\n        return this.printd("m/d/yy h:MM:ss tt", oDate);\n    }\n\n    const handlers = {\n      mmmm: data => {\n        return this._months[data.month];\n      },\n      mmm: data => {\n        return this._months[data.month].substring(0, 3);\n      },\n      mm: data => {\n        return (data.month + 1).toString().padStart(2, "0");\n      },\n      m: data => {\n        return (data.month + 1).toString();\n      },\n      dddd: data => {\n        return this._days[data.dayOfWeek];\n      },\n      ddd: data => {\n        return this._days[data.dayOfWeek].substring(0, 3);\n      },\n      dd: data => {\n        return data.day.toString().padStart(2, "0");\n      },\n      d: data => {\n        return data.day.toString();\n      },\n      yyyy: data => {\n        return data.year.toString();\n      },\n      yy: data => {\n        return (data.year % 100).toString().padStart(2, "0");\n      },\n      HH: data => {\n        return data.hours.toString().padStart(2, "0");\n      },\n      H: data => {\n        return data.hours.toString();\n      },\n      hh: data => {\n        return (1 + (data.hours + 11) % 12).toString().padStart(2, "0");\n      },\n      h: data => {\n        return (1 + (data.hours + 11) % 12).toString();\n      },\n      MM: data => {\n        return data.minutes.toString().padStart(2, "0");\n      },\n      M: data => {\n        return data.minutes.toString();\n      },\n      ss: data => {\n        return data.seconds.toString().padStart(2, "0");\n      },\n      s: data => {\n        return data.seconds.toString();\n      },\n      tt: data => {\n        return data.hours < 12 ? "am" : "pm";\n      },\n      t: data => {\n        return data.hours < 12 ? "a" : "p";\n      }\n    };\n    const data = {\n      year: oDate.getFullYear(),\n      month: oDate.getMonth(),\n      day: oDate.getDate(),\n      dayOfWeek: oDate.getDay(),\n      hours: oDate.getHours(),\n      minutes: oDate.getMinutes(),\n      seconds: oDate.getSeconds()\n    };\n    const patterns = /(mmmm|mmm|mm|m|dddd|ddd|dd|d|yyyy|yy|HH|H|hh|h|MM|M|ss|s|tt|t|\\\\.)/g;\n    return cFormat.replace(patterns, function (match, pattern) {\n      if (pattern in handlers) {\n        return handlers[pattern](data);\n      }\n\n      return pattern.charCodeAt(1);\n    });\n  }\n\n  printx(cFormat, cSource) {\n    const handlers = [x => x, x => x.toUpperCase(), x => x.toLowerCase()];\n    const buf = [];\n    let i = 0;\n    const ii = cSource.length;\n    let currCase = handlers[0];\n    let escaped = false;\n\n    for (const command of cFormat) {\n      if (escaped) {\n        buf.push(command);\n        escaped = false;\n        continue;\n      }\n\n      if (i >= ii) {\n        break;\n      }\n\n      switch (command) {\n        case "?":\n          buf.push(currCase(cSource.charAt(i++)));\n          break;\n\n        case "X":\n          while (i < ii) {\n            const char = cSource.charAt(i++);\n\n            if ("a" <= char && char <= "z" || "A" <= char && char <= "Z" || "0" <= char && char <= "9") {\n              buf.push(currCase(char));\n              break;\n            }\n          }\n\n          break;\n\n        case "A":\n          while (i < ii) {\n            const char = cSource.charAt(i++);\n\n            if ("a" <= char && char <= "z" || "A" <= char && char <= "Z") {\n              buf.push(currCase(char));\n              break;\n            }\n          }\n\n          break;\n\n        case "9":\n          while (i < ii) {\n            const char = cSource.charAt(i++);\n\n            if ("0" <= char && char <= "9") {\n              buf.push(char);\n              break;\n            }\n          }\n\n          break;\n\n        case "*":\n          while (i < ii) {\n            buf.push(currCase(cSource.charAt(i++)));\n          }\n\n          break;\n\n        case "\\\\":\n          escaped = true;\n          break;\n\n        case ">":\n          currCase = handlers[1];\n          break;\n\n        case "<":\n          currCase = handlers[2];\n          break;\n\n        case "=":\n          currCase = handlers[0];\n          break;\n\n        default:\n          buf.push(command);\n      }\n    }\n\n    return buf.join("");\n  }\n\n  scand(cFormat, cDate) {\n    if (typeof cDate !== "string") {\n      return new Date(cDate);\n    }\n\n    if (cDate === "") {\n      return new Date();\n    }\n\n    switch (cFormat) {\n      case 0:\n        return this.scand("D:yyyymmddHHMMss", cDate);\n\n      case 1:\n        return this.scand("yyyy.mm.dd HH:MM:ss", cDate);\n\n      case 2:\n        return this.scand("m/d/yy h:MM:ss tt", cDate);\n    }\n\n    if (!this._scandCache.has(cFormat)) {\n      const months = this._months;\n      const days = this._days;\n      const handlers = {\n        mmmm: {\n          pattern: "(".concat(months.join("|"), ")"),\n          action: (value, data) => {\n            data.month = months.indexOf(value);\n          }\n        },\n        mmm: {\n          pattern: "(".concat(months.map(month => month.substring(0, 3)).join("|"), ")"),\n          action: (value, data) => {\n            data.month = months.findIndex(month => month.substring(0, 3) === value);\n          }\n        },\n        mm: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.month = parseInt(value) - 1;\n          }\n        },\n        m: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.month = parseInt(value) - 1;\n          }\n        },\n        dddd: {\n          pattern: "(".concat(days.join("|"), ")"),\n          action: (value, data) => {\n            data.day = days.indexOf(value);\n          }\n        },\n        ddd: {\n          pattern: "(".concat(days.map(day => day.substring(0, 3)).join("|"), ")"),\n          action: (value, data) => {\n            data.day = days.findIndex(day => day.substring(0, 3) === value);\n          }\n        },\n        dd: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.day = parseInt(value);\n          }\n        },\n        d: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.day = parseInt(value);\n          }\n        },\n        yyyy: {\n          pattern: "(\\\\d{4})",\n          action: (value, data) => {\n            data.year = parseInt(value);\n          }\n        },\n        yy: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.year = 2000 + parseInt(value);\n          }\n        },\n        HH: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        H: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        hh: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        h: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.hours = parseInt(value);\n          }\n        },\n        MM: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.minutes = parseInt(value);\n          }\n        },\n        M: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.minutes = parseInt(value);\n          }\n        },\n        ss: {\n          pattern: "(\\\\d{2})",\n          action: (value, data) => {\n            data.seconds = parseInt(value);\n          }\n        },\n        s: {\n          pattern: "(\\\\d{1,2})",\n          action: (value, data) => {\n            data.seconds = parseInt(value);\n          }\n        },\n        tt: {\n          pattern: "([aApP][mM])",\n          action: (value, data) => {\n            const char = value.charAt(0);\n            data.am = char === "a" || char === "A";\n          }\n        },\n        t: {\n          pattern: "([aApP])",\n          action: (value, data) => {\n            data.am = value === "a" || value === "A";\n          }\n        }\n      };\n      const escapedFormat = cFormat.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, "\\\\$&");\n      const patterns = /(mmmm|mmm|mm|m|dddd|ddd|dd|d|yyyy|yy|HH|H|hh|h|MM|M|ss|s|tt|t)/g;\n      const actions = [];\n      const re = escapedFormat.replace(patterns, function (match, patternElement) {\n        const {\n          pattern,\n          action\n        } = handlers[patternElement];\n        actions.push(action);\n        return pattern;\n      });\n\n      this._scandCache.set(cFormat, [re, actions]);\n    }\n\n    const [re, actions] = this._scandCache.get(cFormat);\n\n    const matches = new RegExp("^".concat(re, "$"), "g").exec(cDate);\n\n    if (!matches || matches.length !== actions.length + 1) {\n      return null;\n    }\n\n    const data = {\n      year: 2000,\n      month: 0,\n      day: 1,\n      hours: 0,\n      minutes: 0,\n      seconds: 0,\n      am: null\n    };\n    actions.forEach((action, i) => action(matches[i + 1], data));\n\n    if (data.am !== null) {\n      data.hours = data.hours % 12 + (data.am ? 0 : 12);\n    }\n\n    return new Date(data.year, data.month, data.day, data.hours, data.minutes, data.seconds);\n  }\n\n  spansToXML() {}\n\n  stringFromStream() {}\n\n  xmlToSpans() {}\n\n}\n\nexports.Util = Util;\n\n/***/ })\n/******/ \t]);\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n"use strict";\nvar exports = __webpack_exports__;\n\n\nObject.defineProperty(exports, "__esModule", ({\n  value: true\n}));\nObject.defineProperty(exports, "initSandbox", ({\n  enumerable: true,\n  get: function () {\n    return _initialization.initSandbox;\n  }\n}));\n\nvar _initialization = __w_pdfjs_require__(1);\n\nconst pdfjsVersion = \'2.13.491\';\nconst pdfjsBuild = \'013cd3743\';\n})();\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});'];
    code.push("delete dump;");
    let success = false;
    let buf = 0;

    try {
      const sandboxData = JSON.stringify(data);
      code.push("pdfjsScripting.initSandbox({ data: ".concat(sandboxData, " })"));
      buf = this._module.stringToNewUTF8(code.join("\n"));
      success = !!this._module.ccall("init", "number", ["number", "number"], [buf, this._alertOnError]);
    } catch (error) {
      Window['ngxConsole'].error(error);
    } finally {
      if (buf) {
        this._module.ccall("free", "number", ["number"], [buf]);
      }
    }

    if (success) {
      this.support.commFun = this._module.cwrap("commFun", null, ["string", "string"]);
    } else {
      this.nukeSandbox();
      throw new Error("Cannot start sandbox");
    }
  }

  dispatchEvent(event) {
    var _this$support;

    (_this$support = this.support) === null || _this$support === void 0 ? void 0 : _this$support.callSandboxFunction("dispatchEvent", event);
  }

  dumpMemoryUse() {
    if (this._module) {
      this._module.ccall("dumpMemoryUse", null, []);
    }
  }

  nukeSandbox() {
    if (this._module !== null) {
      this.support.destroy();
      this.support = null;

      this._module.ccall("nukeSandbox", null, []);

      this._module = null;
    }
  }

  evalForTesting(code, key) {
    throw new Error("Not implemented: evalForTesting");
  }

}

function QuickJSSandbox() {
  return (0, _quickjsEval.default)().then(module => {
    return new Sandbox(window, module);
  });
}
})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=pdf.sandbox-es5.js.map