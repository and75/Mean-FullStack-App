{"version":3,"sources":["webpack://pdf.js/web/app_options.js","webpack://pdf.js/web/app.js","webpack://pdf.js/web/ui_utils.js","webpack://pdf.js/web/event_utils.js","webpack://pdf.js/web/pdfjs.js","webpack://pdf.js/web/pdf_cursor_tools.js","webpack://pdf.js/web/grab_to_pan.js","webpack://pdf.js/web/overlay_manager.js","webpack://pdf.js/web/password_prompt.js","webpack://pdf.js/web/pdf_attachment_viewer.js","webpack://pdf.js/web/base_tree_viewer.js","webpack://pdf.js/web/pdf_document_properties.js","webpack://pdf.js/web/pdf_find_bar.js","webpack://pdf.js/web/pdf_find_controller.js","webpack://pdf.js/external/lodash.deburr/index.js","webpack://pdf.js/web/pdf_find_utils.js","webpack://pdf.js/external/fast-levenshtein/levenshtein.js","webpack://pdf.js/web/pdf_history.js","webpack://pdf.js/web/pdf_layer_viewer.js","webpack://pdf.js/web/pdf_link_service.js","webpack://pdf.js/web/pdf_outline_viewer.js","webpack://pdf.js/web/pdf_presentation_mode.js","webpack://pdf.js/web/pdf_rendering_queue.js","webpack://pdf.js/web/pdf_scripting_manager.js","webpack://pdf.js/web/pdf_sidebar.js","webpack://pdf.js/web/pdf_sidebar_resizer.js","webpack://pdf.js/web/pdf_thumbnail_viewer.js","webpack://pdf.js/web/pdf_thumbnail_view.js","webpack://pdf.js/web/pdf_viewer.js","webpack://pdf.js/web/base_viewer.js","webpack://pdf.js/web/annotation_layer_builder.js","webpack://pdf.js/web/l10n_utils.js","webpack://pdf.js/web/page-flip.module.js","webpack://pdf.js/web/pdf_page_view.js","webpack://pdf.js/node_modules/canvas-size/dist/canvas-size.esm.js","webpack://pdf.js/src/shared/util.js","webpack://pdf.js/web/struct_tree_layer_builder.js","webpack://pdf.js/web/text_highlighter.js","webpack://pdf.js/web/text_layer_builder.js","webpack://pdf.js/web/xfa_layer_builder.js","webpack://pdf.js/web/secondary_toolbar.js","webpack://pdf.js/web/toolbar.js","webpack://pdf.js/web/view_history.js","webpack://pdf.js/web/genericcom.js","webpack://pdf.js/web/preferences.js","webpack://pdf.js/web/download_manager.js","webpack://pdf.js/web/genericl10n.js","webpack://pdf.js/external/webL10n/l10n.js","webpack://pdf.js/web/generic_scripting.js","webpack://pdf.js/web/pdf_print_service.js","webpack://pdf.js/web/print_utils.js","webpack://pdf.js/webpack/bootstrap","webpack://pdf.js/web/viewer.js"],"names":["compatibilityParams","Object","userAgent","navigator","platform","maxTouchPoints","isAndroid","test","isIOS","isIOSChrome","checkOnBlobSupport","checkCanvasSizeLimitation","OptionKind","VIEWER","API","WORKER","PREFERENCE","defaultOptions","annotationMode","value","kind","cursorToolOnLoad","defaultUrl","defaultZoomValue","disableHistory","disablePageLabels","enablePermissions","enablePrintAutoRotate","enableScripting","externalLinkRel","externalLinkTarget","historyUpdateUrl","ignoreDestinationZoom","imageResourcesPath","maxCanvasPixels","compatibility","pdfBugEnabled","printResolution","removePageBorders","renderer","sidebarViewOnLoad","scrollModeOnLoad","spreadModeOnLoad","textLayerMode","useOnlyCssZoom","viewerCssTheme","viewOnLoad","cMapPacked","cMapUrl","disableAutoFetch","disableFontFace","disableRange","disableStream","docBaseUrl","enableXfa","fontExtraProperties","isEvalSupported","maxImageSize","pdfBug","standardFontDataUrl","verbosity","workerPort","workerSrc","language","userOptions","globalThis","pdfDefaultOptions","key","AppOptions","constructor","Error","static","name","userOption","undefined","defaultOption","options","valueType","Number","_ui_utils","__webpack_require__","_app_options","_event_utils","_pdfjsLib","_pdf_cursor_tools","_overlay_manager","_password_prompt","_pdf_attachment_viewer","_pdf_document_properties","_pdf_find_bar","_pdf_find_controller","_pdf_history","_pdf_layer_viewer","_pdf_link_service","_pdf_outline_viewer","_pdf_presentation_mode","_pdf_rendering_queue","_pdf_scripting_manager","_pdf_sidebar","_pdf_sidebar_resizer","_pdf_thumbnail_viewer","_pdf_viewer","_secondary_toolbar","_toolbar","_view_history","ViewOnLoad","ViewerCssTheme","AUTOMATIC","LIGHT","DARK","KNOWN_VERSIONS","KNOWN_GENERATORS","DefaultExternalServices","data","callbacks","supportsIntegratedFind","shadow","supportsDocumentFonts","supportedMouseWheelZoomModifierKeys","this","ctrlKey","metaKey","isInAutomation","PDFViewerApplication","initialBookmark","document","_initializedCapability","createPromiseCapability","_fellback","appConfig","pdfDocument","pdfLoadingTask","printService","pdfViewer","pdfThumbnailViewer","pdfRenderingQueue","pdfPresentationMode","pdfDocumentProperties","pdfLinkService","pdfHistory","pdfSidebar","pdfSidebarResizer","pdfOutlineViewer","pdfAttachmentViewer","pdfLayerViewer","pdfCursorTools","pdfScriptingManager","store","downloadManager","overlayManager","preferences","toolbar","secondaryToolbar","eventBus","l10n","isInitialViewSet","downloadComplete","isViewerEmbedded","window","url","baseUrl","_downloadUrl","externalServices","_boundEvents","documentInfo","metadata","_contentDispositionFilename","_contentLength","_saveInProgress","_docStats","_wheelUnusedTicks","_idleCallbacks","Set","async","createPreferences","_readPreferences","_parseHashParameters","_forceCssTheme","_initializeL10n","LinkTarget","NONE","TOP","_initializeViewerComponents","bindEvents","bindWindowEvents","appContainer","documentElement","translate","then","dispatch","source","resolve","initializeLoadingBar","_hasUserOptions","Window","getAll","reason","message","hash","params","parseQueryString","waitOn","loadFakeWorker","GlobalWorkerOptions","loadScript","PDFWorker","TextLayerMode","DISABLE","viewerContainer","viewer","enabled","initPDFBug","enabledTabs","debuggerScriptPath","mainContainer","PDFBug","OPS","Promise","createL10n","locale","dir","getDirection","cssTheme","styleSheet","cssRules","i","ii","length","_rule$media","rule","darkRules","exec","cssText","AutomationEventBus","EventBus","OverlayManager","PDFRenderingQueue","_cleanup","bind","PDFLinkService","createDownloadManager","findController","PDFFindController","linkService","pageViewMode","PDFScriptingManager","sandboxBundleSrc","scriptingFactory","docPropertiesLookup","_scriptingDocProperties","container","PDFViewer","renderingQueue","scriptingManager","renderInteractiveForms","PDFThumbnailViewer","thumbnailView","PDFHistory","findBar","PDFFindBar","PDFDocumentProperties","documentProperties","PDFCursorTools","Toolbar","SecondaryToolbar","supportsFullscreen","PDFPresentationMode","prompt","PasswordPrompt","passwordOverlay","passwordPrompt","PDFOutlineViewer","outlineView","PDFAttachmentViewer","attachmentsView","PDFLayerViewer","layersView","PDFSidebar","elements","sidebar","onToggled","forceRendering","PDFSidebarResizer","sidebarResizer","run","initialize","config","webViewerInitialized","initialized","settled","initializedPromise","promise","zoomIn","isInPresentationMode","increaseScale","steps","zoomOut","decreaseScale","zoomReset","currentScaleValue","DEFAULT_SCALE_VALUE","pagesCount","numPages","page","currentPageNumber","val","supportsPrinting","PDFPrintServiceFactory","webkitFullscreenEnabled","bar","ProgressBar","hide","initPassiveLoading","setTitleUsingUrl","downloadUrl","title","getPdfFilenameFromUrl","decodeURIComponent","getFilenameFromUrl","ex","setTitle","_docFilename","_hideViewBookmark","_cancelIdleCallbacks","size","callback","clear","_this$pdfDocument","_this$pdfHistory","_this$findBar","_unblockDocumentLoadEvent","errorWrapper","annotationStorage","_annotationStorageModified","save","sourceEventType","promises","destroy","setDocument","externalLinkEnabled","destroyPromise","reset","cleanup","file","args","close","workerParameters","parameters","originalUrl","apiParameters","loadingTask","getDocument","updateCallback","setUpdateCallback","open","loaded","total","progress","type","percent","fallback","loadingBar","show","load","exception","InvalidPDFException","MissingPDFException","UnexpectedResponseException","get","msg","_documentError","_ensureDownloadComplete","filename","getData","blob","Blob","download","dispatchWillSave","saveDocument","dispatchDidSave","downloadOrSave","_this$pdfDocument2","reportTelemetry","featureId","moreInfo","_otherError","moreInfoText","version","build","stack","lineNumber","line","errorWrapperConfig","errorMessage","closeButton","errorMoreInfo","moreInfoButton","lessInfoButton","noContextMenuHandler","parts","Math","level","isNaN","loadingParams","disableAutoFetchLoadingBarTimeout","clearTimeout","setTimeout","firstPagePromise","pageLayoutPromise","getPageLayout","catch","pageModePromise","getPageMode","openActionPromise","getOpenAction","setPagesCount","baseDocumentUrl","onePageRendered","pagesPromise","storedPromise","ViewHistory","getMultiple","zoom","scrollLeft","scrollTop","rotation","sidebarView","SidebarView","UNKNOWN","scrollMode","ScrollMode","spreadMode","SpreadMode","pdfPage","setWidth","_initializeAnnotationStorageCallbacks","animationStarted","timeStamp","stored","pageLayout","pageMode","openAction","_initializePdfHistory","fingerprint","initialDest","dest","parseInt","apiPageModeToSidebarView","apiPageLayoutToViewerModes","setInitialView","focus","race","hasEqualPageSizes","update","_initializeAutoPrint","timestamp","outline","render","attachments","optionalContentConfig","requestIdleCallback","_collectTelemetry","delete","timeout","add","_initializePageLabels","_initializeMetadata","_this$metadata","_this$metadata2","_on","once","baseURL","filesize","getRaw","authors","URL","markInfo","getMarkInfo","tagged","javaScript","all","getJavaScript","triggerAutoPrint","js","UNSUPPORTED_FEATURES","AutoPrintRegExp","triggerPrinting","info","contentDispositionFilename","contentLength","getMetadata","PDFViewerApplicationOptions","PDFFormatVersion","Producer","trim","Creator","enableWebGL","Language","lang","pdfTitle","Title","metadataTitle","isPureXfa","IsAcroFormPresent","IsXFAPresent","renderForms","forms","IsSignaturesPresent","signatures","versionId","generatorId","producer","toLowerCase","generator","formType","labels","getPageLabels","numLabels","standardLabels","emptyLabels","label","toString","currentPageLabel","resetHistory","updateUrl","initialRotation","JSON","push","explicitDest","pageNumber","beforeUnload","setRotation","angle","isValidRotation","pagesRotation","scroll","spread","isValidScrollMode","isValidSpreadMode","setViewerModes","setHash","storedHash","setPageNumber","defaultZoomOption","RendererType","SVG","printing","isThumbnailViewEnabled","isThumbnailViewVisible","renderHighestPriority","beforePrint","dispatchWillPrint","pageViewsReady","pagesOverview","getPagesOverview","printContainer","optionalContentConfigPromise","layout","afterPrint","dispatchDidPrint","_this$pdfDocument3","resetModified","rotatePages","delta","requestPresentationMode","_this$pdfPresentation","request","printPDF","webViewerResize","webViewerHashchange","webViewerPageRendered","webViewerUpdateViewarea","webViewerPageChanging","webViewerScaleChanging","webViewerRotationChanging","webViewerSidebarViewChanged","webViewerPageMode","webViewerNamedAction","webViewerPresentationModeChanged","webViewerPresentationMode","webViewerPrint","webViewerDownload","webViewerSave","webViewerFirstPage","webViewerLastPage","webViewerNextPage","webViewerPreviousPage","webViewerZoomIn","webViewerZoomOut","webViewerZoomReset","webViewerPageNumberChanged","webViewerScaleChanged","webViewerRotateCw","webViewerRotateCcw","webViewerOptionalContentConfig","webViewerSwitchScrollMode","webViewerScrollModeChanged","webViewerSwitchSpreadMode","webViewerSpreadModeChanged","webViewerDocumentProperties","webViewerFindFromUrlHash","webViewerUpdateFindMatchesCount","webViewerUpdateFindControlState","reportPageStatsPDFBug","webViewerFileInputChange","webViewerOpenFile","event","detail","webViewerVisibilityChange","passive","webViewerClick","webViewerKeyDown","windowResize","windowHashChange","windowBeforePrint","windowAfterPrint","windowUpdateFromSandbox","unbindEvents","unbindWindowEvents","accumulateWheelTicks","ticks","wholeTicks","blockUnblockOnload","_reportDocumentStatsTelemetry","stats","scriptingReady","ready","validateFileURL","HOSTED_VIEWER_ORIGINS","viewerOrigin","href","origin","protocol","_pageView$pdfPage","Stats","pageView","pageStats","fileInput","openFileInputName","File","FileReader","FileList","evt","files","target","preventDefault","dataTransfer","dropEvent","webViewerOpenFileViaURL","error","mode","view","THUMBS","OUTLINE","ATTACHMENTS","LAYERS","action","select","toggle","state","_PDFViewerApplication","location","_PDFViewerApplication2","settings","scale","left","top","pdfOpenParams","currentPage","loading","RenderingStates","FINISHED","_PDFViewerApplication3","_PDFViewerApplication4","_PDFViewerApplication5","popStateInProgress","_PDFViewerApplication6","disableCreateObjectURL","fileReader","webViewerChangeFileReaderOnload","buffer","result","Uint8Array","click","nextPage","previousPage","query","phraseSearch","caseSensitive","entireWord","ignoreAccents","fuzzySearch","highlightAll","findPrevious","matchesCount","previous","rawQuery","pageLabel","pageNumberInput","pageScrollEvent","CustomEvent","setZoomDisabledTimeout","zoomDisabledTimeout","webViewerWheel","cmd","altKey","shiftKey","defaultWheelAction","modifierKeyHasBeenPressed","previousScale","currentScale","normalizeWheelEventDirection","WheelEvent","DOM_DELTA_PAGE","PIXELS_PER_LINE_SCALE","scaleCorrectionFactor","rect","getBoundingClientRect","dx","dy","isOpen","toggleButton","active","isViewerInPresentationMode","handled","ensureViewerFocused","keyCode","eventState","assign","curElement","getActiveOrFocusedElement","curElementTagName","toUpperCase","isContentEditable","turnPage","turnOnlyIfPageFit","isVerticalScrollbarEnabled","isHorizontalScrollbarEnabled","opened","CursorTool","SELECT","HAND","instance","createPrintService","VERTICAL","PAGE","ODD","EVEN","approximateFraction","x","xinv","x_","a","b","c","d","p","q","curRoot","curActiveOrFocused","_curActiveOrFocused","shadowRoot","getOutputScale","ctx","devicePixelRatio","backingStoreRatio","pixelRatio","sx","sy","scaled","getPageSizeInches","userUnit","rotate","x1","y1","x2","y2","changeOrientation","width","height","getVisibleElements","scrollEl","views","sortByVisibility","horizontal","rtl","bottom","clientHeight","right","clientWidth","visible","ids","numViews","firstVisibleElementInd","binarySearchFirstItem","isElementNextAfterViewHorizontally","element","div","elementLeft","clientLeft","elementRight","isElementBottomAfterViewTop","backtrackBeforeAllVisibleElements","lastEdge","currentWidth","currentHeight","clientTop","viewWidth","viewHeight","viewRight","viewBottom","hiddenHeight","hiddenWidth","fractionWidth","fractionHeight","id","y","widthPercent","first","last","pc","isPortraitOrientation","normalizeWheelEventDelta","MOUSE_PIXELS_PER_LINE","Map","URLSearchParams","roundToDivide","r","scrollIntoView","spot","scrollMatches","infiniteScroll","parent","offsetParent","offsetY","offsetX","scrollWidth","classList","contains","getComputedStyle","offsetTop","offsetLeft","watchScroll","viewAreaElement","debounceScroll","rAF","requestAnimationFrame","viewAreaElementScrolled","currentX","lastX","currentY","lastY","down","_eventHandler","INITIAL","RUNNING","PAUSED","NORMAL","CHANGING","FULLSCREEN","CANVAS","ENABLE","ENABLE_ENHANCE","HORIZONTAL","WRAPPED","items","condition","minIndex","maxIndex","currentIndex","index","elt","pageTop","deltaY","deltaX","PI","units","parentNode","style","_updateBar","_indeterminate","remove","progressSize","_percent","clamp","v","min","max","scrollbarWidth","offsetWidth","doc","waitOnEventOrTimeout","delay","reject","isInteger","handler","eventHandler","WaitOnType","EVENT","timeoutHandler","TIMEOUT","_listeners","on","eventName","listener","external","off","_off","eventListeners","externalListeners","module","_grab_to_pan","ZOOM","activeBeforePresentationMode","handTool","GrabToPan","_addEventListeners","switchTool","activeTool","tool","disableActiveTool","deactivate","activate","_dispatchEvent","PresentationModeState","previouslyActive","CSS_CLASS_GRAB","ownerDocument","ignoreTarget","onActiveChanged","_onMouseDown","onMouseDown","_onMouseMove","onMouseMove","_endPan","endPan","overlay","_this$onActiveChanged","addEventListener","call","_this$onActiveChanged2","removeEventListener","node","originalTarget","tagName","e","scrollLeftStart","scrollTopStart","clientXStart","clientX","clientYStart","clientY","isOverPerfectScrollbar","stopPropagation","focusedElement","activeElement","blur","buttons","xDiff","yDiff","scrollTo","behavior","divName","perfectScrollbar","_overlays","_active","_keyDownBound","_keyDown","callerCloseMethod","canForceClose","_closeThroughCaller","overlayName","input","submitButton","cancelButton","_isViewerEmbedded","verify","register","passwordIncorrect","PasswordResponses","INCORRECT_PASSWORD","textContent","password","_base_tree_viewer","BaseTreeViewer","super","_appendAttachment","keepRenderedCapability","_attachments","_renderedCapability","_pendingDispatchEvent","attachmentsCount","_bindLink","content","openOrDownloadData","names","keys","sort","fragment","createDocumentFragment","item","_normalizeTextContent","_finishRendering","renderedPromise","TREEITEM_SELECTED_CLASS","_pdfDocument","_lastToggleIsShow","_currentTreeItem","removeNullCharacters","_addToggleButton","hidden","toggler","shouldShowAll","_toggleTreeItem","firstChild","root","_toggleAllTreeItems","hasAnyNesting","appendChild","count","_updateCurrentTreeItem","treeItem","_scrollToCurrentTreeItem","currentNode","firstElementChild","NON_METRIC_LOCALES","US_PAGE_NAMES","METRIC_PAGE_NAMES","getPageName","isPortrait","pageNames","fields","_reset","_currentPageNumber","_pagesRotation","_isNonMetricLocale","freezeFieldData","writable","enumerable","configurable","_dataAvailableCapability","fieldData","_updateUI","fileName","fileSize","creationDate","modificationDate","pageSize","isLinearized","_parseFileSize","_parseDate","CreationDate","ModDate","getPage","_parsePageSize","_parseLinearization","IsLinearized","author","Author","subject","Subject","keywords","Keywords","creator","pageCount","linearized","getDownloadInfo","kb","mb","size_mb","toLocaleString","size_kb","size_b","pageSizeInches","sizeInches","sizeMillimeters","rawName","exactMillimeters","intMillimeters","unit","orientation","inputDate","dateObject","PDFDateString","date","toLocaleDateString","time","toLocaleTimeString","findField","highlightAllCheckbox","findCurrentPageCheckbox","pageRange","findPageRangeField","caseSensitiveCheckbox","entireWordCheckbox","findMsg","findResultsCount","findPreviousButton","findNextButton","findFieldMultiline","multipleSearchTexts","dispatchEvent","_adjustWidth","updateUIState","findPrev","checked","status","FindState","FOUND","PENDING","NOT_FOUND","setAttribute","updateResultsCount","current","matchCountMsg","limit","_index","_pdf_find_utils","_levenshtein","CHARACTERS_TO_NORMALIZE","normalizationRegex","normalize","text","replace","RegExp","diffs","ch","normalizedCh","diff","getOriginalIndex","matchIndex","totalDiff","_linkService","_eventBus","_pageViewMode","_onFind","_onFindBarClose","executeCommand","highlightMatches","_highlightMatches","pageMatches","_pageMatches","pageMatchesColor","_pageMatchesColor","pageMatchesLength","_pageMatchesLength","selected","_selected","_state","_firstPageCapability","_shouldDirtyMatch","_dirtyMatch","_updateUIState","_extractText","findbarClosed","pendingTimeout","_findTimeout","_nextMatch","_updateAllPages","scrollMatchIntoView","selectedLeft","pageIndex","_scrollMatches","matchIdx","pageIdx","_offset","wrapped","_extractTextPromises","_pageContents","_pageDiffs","_matchesCountTotal","_pagesToSearch","_pendingFindMatches","_resumePageIdx","_query","_rawQuery","_normalizedQuery","_prepareMatches","isSubTerm","currentElem","matchesWithLength","nextElem","match","prevElem","skipped","matchLength","len","matches","matchesLength","matchesColor","color","_isEntireWord","startIdx","getCharacterType","endIdx","_calculateFuzzyMatch","queryLen","shortLen","maxDistance","shortQuery","useCollator","pageContent","shortCurrentContent","Levenshtein","currentContent","distance","nextCurrentContent","originalMatchIdx","pageDiffs","originalQueryLen","_calculatePhraseMatch","deburr","_calculateWordMatch","queryArray","subquery","subqueryLen","_isInPageRanges","commaSeparatedRanges","range","_isInPageRange","from","to","_calculateMatch","ignoreCurrentPage","_updatePage","_nextPageMatch","pageMatchesCount","_updateUIResultsCount","extractTextCapability","normalizeWhitespace","textItems","strBuf","j","jj","str","currentPageIndex","startPage","finalPage","has","offset","numPageMatches","_updateMatch","_advanceOffsetPage","_matchesReady","numMatches","found","_requestMatchesCount","_this$_pageMatches$i","_this$_state","string","baseToString","isSymbol","isObjectLike","objectToString","symbolTag","symbolToString","reLatin","reComboMark","freeGlobal","global","freeSelf","self","Function","deburrLetter","basePropertyOf","object","prototype","Symbol","symbolProto","charCode","isAlphabeticalScript","isAscii","isAsciiSpace","CharacterType","SPACE","isAsciiAlpha","isAsciiDigit","ALPHA_LETTER","PUNCT","isThai","THAI_LETTER","isHan","HAN_LETTER","isKatakana","KATAKANA_LETTER","isHiragana","HIRAGANA_LETTER","isHalfwidthKatakana","HALFWIDTH_KATAKANA_LETTER","levenshtein_collator","Intl","sensitivity","missingBrowserSupport","noBrowserSupport","levenshtein_prevRow","levenshtein_str2Char","str1","str2","str1Len","str2Len","curCol","nextCol","tmp","strCmp","String","getCurrentHash","_initialized","_fingerprint","_isViewerInPresentationMode","_isPagesLoaded","reInitialized","_updateUrl","_bindEvents","_popStateInProgress","_blockHashChange","_currentHash","_numPositionUpdates","_uid","_maxUid","_destination","_position","_isValidState","_parseCurrentHash","_pushOrReplaceState","destination","_updateInternalState","uid","_initialRotation","_initialBookmark","_pageHide","_unbindEvents","_updateViewareaTimeout","namedDest","Array","_isValidPage","forceReplace","isDestHashesEqual","isDestArraysEqual","pushPage","_this$_destination","pushCurrentPosition","_tryPushCurrentPosition","back","forward","shouldReplace","newState","newUrl","temporary","position","checkReload","perfEntry","performance","removeTemporary","checkNameddest","unescape","nameddest","_updateViewarea","POSITION_UPDATED_THRESHOLD","_popState","newHash","hashChanged","goToDestination","updateViewarea","popState","pageHide","destHash","pushHash","firstDest","secondDest","isEntryEqual","second","isArray","_resetLayers","_optionalContentConfig","layersCount","groupId","setVisibility","groups","getOrder","queue","levelData","shift","_setNestedName","itemsDiv","order","group","getOptionalContentConfig","_ignoreDestinationZoom","_pagesRefCache","setViewer","setHistory","_goToDestinationHelper","destRef","_cachedPageNumber","getPageIndex","cachePageRef","rawDest","scrollPageIntoView","destArray","getDestination","goToPage","pageLabelToPageNumber","addLinkAttributes","newWindow","rel","getDestinationHash","getAnchorUrl","escape","anchor","zoomArgs","zoomArg","zoomArgNumber","parseFloat","allowNegativeOffset","isValidExplicitDestination","destLength","num","gen","allowNull","param","executeNamedAction","_this$pdfHistory2","pageRef","refStr","pageNum","_this$_pagesRefCache","isPageVisible","isPageCached","SimpleLinkService","_currentOutlineItem","_currentOutlineItemCapability","_sidebarView","_outline","_pageNumberToDestHashCapability","_this$_pdfDocument","outlineCount","currentOutlineItemPromise","_setStyles","bold","italic","totalCount","nestedCount","nestedItems","pageNumberToDestHash","_getPageNumberToDestHash","linkElement","querySelector","pageNumberNesting","nesting","currentNesting","ACTIVE_SELECTOR","CONTROLS_SELECTOR","SWIPE_ANGLE_THRESHOLD","contextMenuOpen","mouseScrollTimeStamp","mouseScrollDelta","touchSwipeState","switchInProgress","_addFullscreenChangeListeners","_setSwitchInProgress","_notifyStateChange","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","_prepareFullscreenMode","scaleValue","_mouseWheel","currentTime","Date","now","storedTime","_resetMouseScrollState","totalDelta","isFullscreen","fullscreenElement","mozFullScreen","webkitIsFullScreen","_removeFullscreenChangeListeners","_resetSwitchInProgress","_enter","_addWindowListeners","_showControls","removeAllRanges","_exit","_tidyUpFullscreenMode","_removeWindowListeners","_hideControls","domElement","parentElement","ngxContainer","childElementCount","ngxContainerIndex","siblings","children","s","HTMLElement","append","insertBefore","_mouseDown","_contextMenu","controlsTimeout","_touchSwipe","startX","pageX","startY","pageY","endX","endY","absAngle","showControlsBind","mouseDownBind","mouseWheelBind","resetMouseScrollStateBind","contextMenuBind","touchSwipeBind","_fullscreenChange","fullscreenChangeBind","onIdle","highestPriorityPage","idleTimeout","setThumbnailViewer","isHighestPriority","renderingId","hasViewer","_this$pdfThumbnailVie","currentlyVisiblePages","getHighestPriority","preRenderExtra","visibleViews","numVisible","isViewFinished","firstId","lastId","visibleIds","holeId","scrolledDown","holeView","preRenderIndex","preRenderView","renderView","renderingState","resume","RenderingCancelledException","_pdfViewer","_closeCapability","_destroyCapability","_scripting","_mouseState","_ready","_sandboxBundleSrc","_scriptingFactory","_docPropertiesLookup","_this$_scripting3","_destroyScripting","objects","calculationOrder","docActions","getFieldObjects","getCalculationOrderIds","getJSActions","_createScripting","_internalEvents","set","_updateFromSandbox","_this$_scripting","dispatchEventInSandbox","_dispatchPageClose","_dispatchPageOpen","_pageOpenPending","_this$_scripting2","_this$_closeCapabilit","_domEvents","isDown","docProperties","_getDocProperties","createSandbox","appInfo","docInfo","actions","_this$_scripting4","_this$_scripting5","_this$_scripting6","_this$_scripting7","mouseState","_this$_destroyCapabil","_visitedPages","isChangingPresentationMode","command","modes","elementId","setValue","visitedPages","getPageView","actionsPromise","_this$_scripting8","_this$_scripting9","createScripting","_this$_destroyCapabil3","destroySandbox","_this$_destroyCapabil2","UI_NOTIFICATION_CLASS","outerContainer","thumbnailButton","outlineButton","attachmentsButton","layersButton","_outlineOptionsContainer","outlineOptionsContainer","_currentOutlineItemButton","currentOutlineItemButton","_hideUINotification","switchView","disabled","visibleView","isOutlineViewVisible","isAttachmentsViewVisible","isLayersViewVisible","_switchView","forceOpen","isViewChanged","shouldForceRendering","renderThumbnails","_updateThumbnailViewer","_forceRendering","_showUINotification","onTreeLoaded","button","enableCurrentOutlineItemButton","SIDEBAR_RESIZING_CLASS","isRTL","sidebarOpen","_width","_outerContainerWidth","resizer","outerContainerWidth","_updateWidth","maxWidth","setProperty","_mouseMove","_mouseUp","mouseMove","mouseUp","updated","_pdf_thumbnail_view","THUMBNAIL_SELECTED_CLASS","_scrollUpdated","_resetView","_setImageDisabled","getThumbnail","_thumbnails","_getVisibleThumbs","scrollThumbnailIntoView","prevThumbnailView","shouldScroll","updateArgs","thumbnail","TempImageFactory","destroyCanvas","_pageLabels","_optionalContentConfigPromise","_cancelRendering","firstPdfPage","viewport","checkSetImageDisabled","PDFThumbnailView","defaultViewport","clone","firstThumbnailView","cancelRendering","setPageLabels","_this$_pageLabels","setPageLabel","thumbView","getScrollAhead","_visible$first","_visible$last","visibleThumbs","scrollAhead","ensurePdfPageLoaded","tempCanvas","alpha","restore","pdfPageRotate","renderTask","_checkSetImageDisabled","pageWidth","pageRatio","canvasWidth","canvasHeight","pdfThumbnailGenerator","_thumbPageTitle","createThumbnail","thumbPageTitlePromise","pdfThumbnailView","ring","setPdfPage","totalRotation","getViewport","removeAttribute","canvas","image","cancel","_getPageDrawContext","upscaleFactor","outputScale","transform","_convertCanvasToImage","reducedCanvas","_reduceImage","_thumbPageCanvas","toDataURL","draw","finishRenderTask","renderContext","canvasContext","background","cont","resultPromise","_this$pdfPage","setImage","img","reducedWidth","reducedHeight","reducedImage","reducedImageCtx","_this$image","_base_viewer","BaseViewer","PDFSinglePageViewer","_scrollMode","_spreadMode","_updateScrollMode","_updateSpreadMode","_annotation_layer_builder","_l10n_utils","_pageFlipModule","_pdf_page_view","_struct_tree_layer_builder","_text_highlighter","_text_layer_builder","_xfa_layer_builder","ENABLE_PERMISSIONS_CLASS","PagesCountLimit","FORCE_SCROLL_MODE_PAGE","FORCE_LAZY_PAGE_INIT","PAUSE_EAGER_PAGE_INIT","PDFPageViewBuffer","buf","destroyFirstView","resize","idsToKeep","newSize","iterator","firstView","next","AnnotationMode","ENABLE_FORMS","previousAnnotationMode","previousContainerHeight","scrollModePageState","_this$container","_this$viewer","viewerVersion","_scriptingManager","NullL10n","defaultRenderingQueue","_doc","_scrollUpdate","presentationModeState","_onBeforeDraw","_onAfterDraw","_pages","_pagesCapability","every","flip","_setCurrentPageNumber","pageFlip","turnToPage","hidePagesDependingOnpageViewMode","page1","htmlParentElement","PageFlip","showCover","loadFromHTML","ensureAdjecentPagesAreLoaded","resetCurrentPageView","_resetCurrentPageView","pv","addPageToRenderQueue","adjacentPagesLoader","isLoading","_this$_pageLabels2","indexOf","_currentScale","UNKNOWN_SCALE","DEFAULT_SCALE","_setScale","_currentScaleValue","_onePageRenderedCapability","initializePermissions","permissions","PermissionFlag","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","onePageRenderedOrForceFetch","_getVisiblePages","permissionsPromise","getPermissions","console","viewerElement","PixelsPerInch","PDF_TO_CSS_UNITS","textLayerFactory","annotationLayerFactory","xfaLayerFactory","PDFPageView","textHighlighterFactory","structTreeLayerFactory","firstPageView","ref","ensurePageViewVisible","getPagesLeft","_this$_pageLabels3","bufferSize","_location","_previousScrollMode","previousPageNumber","scrollDown","pages","dummyPage","pageIndexSet","parity","_scrollIntoView","pageDiv","pageSpot","isSameScale","newScale","_setScaleUpdatePages","noScroll","preset","newValue","presetValue","_pageWidthScaleFactor","hPadding","SCROLLBAR_PADDING","vPadding","VERTICAL_PADDING","pageWidthScale","pageHeightScale","horizontalScale","widthScale","heightScale","pageHeight","boundingRect","_updateLocation","normalizedScaleValue","firstPage","currentPageView","topLeft","intLeft","intTop","visiblePages","numVisiblePages","newCacheSize","isSimpleLayout","currentId","stillFullyVisible","containsElement","_isContainerRtl","scrollHeight","_getCurrentVisiblePage","toggleLoadingIconSpinner","createTextLayerBuilder","enhanceTextSelection","TextLayerBuilder","textLayerDiv","highlighter","createTextHighlighter","TextHighlighter","createAnnotationLayerBuilder","hasJSActionsPromise","fieldObjectsPromise","annotationCanvasMap","_this$_scriptingManag","AnnotationLayerBuilder","hasJSActions","createXfaLayerBuilder","_this$pdfDocument4","XfaLayerBuilder","createStructTreeLayerBuilder","StructTreeLayerBuilder","map","_getPageAdvance","yArray","values","expectedId","advance","maxScale","MAX_SCALE","DEFAULT_SCALE_DELTA","toFixed","minScale","MIN_SCALE","_hasJSActionsPromise","_fieldObjectsPromise","_annotationCanvasMap","_cancelled","intent","annotations","fieldObjects","getAnnotations","dontFlip","AnnotationLayer","className","fixupLangCode","langCode","PARTIAL_LANG_CODES","DEFAULT_L10N_STRINGS","of_pages","page_of_pages","document_properties_kb","document_properties_mb","document_properties_date_string","document_properties_page_size_unit_inches","document_properties_page_size_unit_millimeters","document_properties_page_size_orientation_portrait","document_properties_page_size_orientation_landscape","document_properties_page_size_name_a3","document_properties_page_size_name_a4","document_properties_page_size_name_letter","document_properties_page_size_name_legal","document_properties_page_size_dimension_string","document_properties_page_size_dimension_name_string","document_properties_linearized_yes","document_properties_linearized_no","print_progress_percent","additional_layers","page_landmark","thumb_page_title","thumb_page_canvas","find_reached_top","find_reached_bottom","find_not_found","error_version_info","error_message","error_stack","error_file","error_line","rendering_error","page_scale_width","page_scale_fit","page_scale_auto","page_scale_actual","page_scale_percent","loading_error","invalid_file_error","missing_file_error","unexpected_response_error","printing_not_supported","printing_not_ready","web_fonts_disabled","getL10nFallback","en","es","fy","ga","gu","hi","hy","nb","ne","nn","pa","pt","sv","zh","formatL10nValue","Page","area","hardAngle","hardDrawingAngle","createdDensity","density","nowDrawingDensity","setDensity","setDrawingDensity","setPosition","pagePos","setAngle","setArea","setHardDrawingAngle","setHardAngle","setOrientation","getDrawingDensity","getDensity","getHardAngle","ImagePage","isLoad","loadingAngle","Image","src","getContext","convertToGlobal","getRect","beginPath","clip","drawLoader","simpleDraw","orient","shiftPos","stroke","fill","middlePoint","closePath","onload","newTemporaryCopy","getTemporaryCopy","hideTemporaryCopy","PageCollection","currentSpreadIndex","landscapeSpread","portraitSpread","app","isShowCover","getSettings","createSpread","start","getSpread","getOrientation","getSpreadIndexByPage","getPageCount","getPages","nextBy","idx","prevBy","getFlippingPage","direction","getBottomPage","showNext","showSpread","showPrev","getCurrentPageIndex","spreadIndex","getCurrentSpreadIndex","setCurrentSpreadIndex","newIndex","setLeftPage","setRightPage","updatePageIndex","ImagePageCollection","imagesHref","Helper","point1","point2","Infinity","segment","line1","line2","A1","A2","B1","B2","sqrt","pos","transformedPoint","startPoint","radius","limitedPoint","n","m","pow","rectBorder","one","two","C1","C2","det1","det2","isFinite","pointOne","pointTwo","sizeX","sizeY","lengthLine","getCord","c1","c2","HTMLPage","copiedElement","temporaryCopy","cloneNode","tempDensity","commonStyle","zIndex","drawHard","drawSoft","newStyle","polygon","g","GetRotatedPoint","isSafari","startZIndex","getElement","HTMLPageCollection","pagesElement","pageElement","FlipCalculation","corner","topIntersectPoint","sideIntersectPoint","bottomIntersectPoint","calc","calcAngleAndPosition","localPos","calculateIntersectPoint","getFlippingClipArea","clipBottom","bottomLeft","getBottomClipArea","getAngle","getPosition","getActiveCorner","topRight","getFlippingProgress","getCorner","getBottomPagePosition","getShadowStartPoint","getShadowAngle","GetAngleBetweenTwoLine","getSegmentToShadowLine","updateAngleAndGeometry","checkPositionAtCenterLine","calculateAngle","getPageRect","da","getRectFromBasePoint","getRotatedPoint","points","bottomRight","boundRect","GetIntersectBetweenTwoSegment","checkedPos","rad","checkPointOne","checkPointTwo","bottomPoint","Flip","flippingPage","bottomPage","fold","setState","globalPos","do","convertToPage","disableFlipByClick","isPointOnCorners","finishAnimation","getBoundsRect","topMargins","yStart","yDest","animateFlippingTo","bookPos","convertToBook","getDirectionByPoint","flipCorner","checkDirection","getPageCollection","prevPage","setDirection","setPageRect","setBottomPage","setFlippingPage","setShadowData","flipToPage","flipNext","flipPrev","stopMove","showCorner","checkState","fixedCornerSize","needReset","frames","duration","getAnimationDuration","startAnimation","isTurned","turnToPrevPage","turnToNextPage","clearShadow","getCalculation","getState","updateState","touchPos","defaultTime","flippingTime","states","operatingDistance","Render","leftPage","rightPage","animation","pageRect","boundsRect","timer","safari","setting","regex","frameIndex","startedAt","durationFrame","onAnimateEnd","drawFrame","loop","calculateBoundsRect","updateOrientation","blockWidth","getBlockWidth","getBlockHeight","ratio","minWidth","usePortrait","drawShadow","maxShadowOpacity","opacity","getUI","getDistElement","offsetHeight","convertRectToGlobal","CanvasRender","inCanvas","reload","drawBookShadow","drawOuterShadow","drawInnerShadow","shadowSize","shadowPos","outerGradient","createLinearGradient","fillStyle","fillRect","moveTo","lineTo","isw","innerGradient","UI","touchPoint","swipeTimeout","onResize","checkTarget","getMousePos","startUserTouch","onTouchStart","t","point","mobileScrollSupport","onMouseUp","userStop","userMove","onTouchMove","cancelable","onTouchEnd","isSwipe","distY","swipeDistance","getRender","inBlock","wrapper","k","autoSize","useMouseEvents","removeHandlers","distElement","getWrapper","setOrientationStyle","paddingBottom","setHandlers","clickEventForward","includes","targer","HTMLUI","insertAdjacentHTML","updateItems","innerHTML","CanvasUI","resizeCanvas","cs","getCanvas","HTMLRender","outerShadow","innerShadow","hardShadow","hardInnerShadow","createShadows","drawHardInnerShadow","innerShadowSize","drawHardOuterShadow","shadowTranslate","shadowDirection","drawLeftPage","display","drawRightPage","drawBottomPage","lastAngle","Settings","_default","minHeight","maxHeight","showPageCorners","userSetting","styleInject","css","insertAt","head","EventObject","events","trigger","isUserTouch","isUserMove","block","ui","loadFromImages","flipController","updateFromImages","updateFromHtml","newPage","newOrientation","getFlipController","mousePosition","isTouch","_canvasSize","_interopRequireDefault","_util","MAX_CANVAS_PIXELS","_options$textHighligh","_this$renderingQueue","hasRestrictedScaling","textHighlighter","paintTask","paintedViewportMap","WeakMap","_renderError","_isStandalone","annotationLayer","textLayer","zoomLayer","xfaLayer","structTreeLayer","_buildXfaTextContentItems","textDivs","getTextContent","setTextMapping","enable","_resetZoomLayer","removeFromDOM","zoomLayerCanvas","keepZoomLayer","keepAnnotationLayer","keepXfaLayer","_this$annotationLayer","_this$xfaLayer","childNodes","zoomLayerNode","annotationLayerNode","xfaLayerNode","svg","loadingIconDiv","_this$loadingIconDiv","arguments","viewportScale","cssTransform","redrawAnnotationLayer","redrawXfaLayer","isScalingRestricted","_this$textHighlighter","disable","_onTextLayerRendered","relativeRotation","absRotation","scaleX","scaleY","textLayerViewport","textRelativeRotation","textAbsRotation","transX","transY","_renderAnnotationLayer","_renderXfaLayer","getPagePoint","convertToPdfPoint","viewVisible","_this$loadingIconDiv2","_this$annotationLayer2","_this$xfaLayer2","canvasWrapper","_this$annotationLayer3","renderContinueCallback","finishPaintTask","paintOnSvg","paintOnCanvas","readableStream","streamTextContent","includeMarkedContent","getStructTree","tree","treeDom","renderCapability","onRenderContinue","isCanvasHidden","showCanvas","actualSizeViewport","pixelsInViewport","sfx","sfy","default","determineMaxDimensions","divisor","warn","backgroundColor","backgroundColorToReplace","colorToReplace","cancelled","ensureNotCancelled","getOperatorList","opList","SVGGraphics","commonObjs","objs","getSVG","checklist","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","_defineProperty","getOwnPropertyDescriptors","obj","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceKeys","sourceSymbolKeys","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_i","_s","_e","_arr","_n","_d","done","err","_unsupportedIterableToArray","_nonIterableRest","TypeError","_toConsumableArray","_arrayWithoutHoles","_arrayLikeToArray","_iterableToArray","iter","_nonIterableSpread","o","minLen","arr2","canvasTest","cropCvs","testCvs","job","isWorker","WorkerGlobalScope","OffscreenCanvas","cropCtx","testCtx","isTestPass","benchmark","postMessage","testSizes","_excluded","defaults","sizes","step","usePromise","useWorker","onError","onSuccess","workerJobs","createSizesArray","isArea","isWidth","isHeight","testMin","testStep","testSize","handleMethod","hasCanvasSupport","hasOffscreenCanvasSupport","jobID","_onError","_onSuccess","settingsWithoutCallbacks","worker","concat","blobURL","Worker","_e$data","promiseSettings","isLastTest","_settings$sizes$slice2","_settings$sizes$slice3","lastWidth","lastHeight","canvasSize","maxArea","arraysToBytes","resultLength","arrayByteLength","stringToBytes","itemLength","byteLength","bytesToString","bytes","assert","MAX_ARGUMENT_COUNT","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","digits","b1","b2","b3","capability","isSettled","createValidAbsoluteUrl","dots","tryConvertEncoding","stringToUTF8String","absoluteUrl","_isValidProtocol","escapeString","getModificationDate","getUTCMonth","padStart","getVerbosityLevel","VerbosityLevel","INFOS","isArrayBuffer","isArrayEqual","arr1","isBool","isNum","isSameOrigin","otherUrl","base","other","isString","objectFromMap","objectSize","replaceInvisible","setVerbosityLevel","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","char","utf8StringToString","encodeURIComponent","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","ENABLE_STORAGE","MODIFY_CONTENTS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","K","F","V","C","WC","WS","DS","WP","DP","O","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","curveTo","curveTo2","curveTo3","rectangle","closeStroke","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","NEED_PASSWORD","unreachable","cond","prop","BaseException","BaseExceptionClosure","PasswordException","UnknownErrorException","details","FormatError","AbortException","NullCharactersRegExp","InvisibleCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","hexNumbers","Util","m1","m2","p1","p2","p3","applyTransform","p4","transpose","rect1","rect2","compare","orderedX","orderedY","x0","y0","x3","y3","tvalues","bounds","t1","t2","b2ac","sqrtb2ac","mt","jlen","PDF_ROLE_TO_HTML_ROLE","Document","DocumentFragment","Part","Sect","Div","Aside","NonStruct","P","H","FENote","Sub","Lbl","Span","Em","Strong","Link","Annot","Form","Ruby","RB","RT","RP","Warichu","WT","L","LI","LBody","Table","TR","TH","TD","THead","TBody","TFoot","Caption","Figure","Formula","Artifact","HEADING_PATTERN","_walk","structTree","_setAttributes","structElement","htmlElement","alt","role","kid","_onUpdateTextLayerMatches","textContentItemsStr","divs","texts","_updateMatches","_convertMatches","iIndex","end","mm","begin","divIdx","_renderMatches","isSelectedPage","selectedMatchIdx","prevEnd","infinity","appendTextToDiv","fromOffset","toOffset","Node","TEXT_NODE","span","i0","i1","isSelected","highlightSuffix","n0","n1","clearedUntilDivIdx","textContentStream","renderingDone","textLayerRenderTask","_bindMouse","endOfContent","numTextDivs","_this$highlighter","textLayerFrag","renderTextLayer","_this$highlighter2","_this$highlighter3","setTextContentStream","setTextContent","expandDivsTimer","expandTextDivs","adjustTop","divBounds","xfaHtml","XfaLayer","getXfa","toolbarButtonContainer","presentationModeButton","openFileButton","printButton","downloadButton","viewBookmarkButton","firstPageButton","lastPageButton","pageRotateCwButton","pageRotateCcwButton","cursorSelectToolButton","eventDetails","cursorHandToolButton","scrollPageButton","scrollVerticalButton","scrollHorizontalButton","scrollWrappedButton","spreadNoneButton","spreadOddButton","spreadEvenButton","documentPropertiesButton","lastPage","pageRotateCw","pageRotateCcw","containerHeight","_bindClickListeners","_bindCursorToolsListener","_bindScrollModeListener","_bindSpreadModeListener","_setMaxHeight","widget","property","scrollModeChanged","forceScrollModePage","isScrollModeHorizontal","spreadModeChanged","openFile","print","viewBookmark","scaleSelect","customScaleOption","_wasLocalized","_bindListeners","hasPageLabels","setPageScale","pageScaleValue","pageScale","updateLoadingIndicatorState","resetNumPages","predefinedValueFound","option","predefinedValuesPromise","scaleSelectContainerWidth","scaleSelectOverflow","fontSize","fontFamily","predefinedValue","fingerprintIsBlockedException","cacheSize","_initializedPromise","_readFromStorage","databaseStr","database","branch","localStorage","_writeToStorage","properties","defaultValue","_app","_preferences","_download_manager","_genericl10n","_generic_scripting","GenericPreferences","BasePreferences","prefObj","GenericExternalServices","DownloadManager","GenericL10n","GenericScripting","freeze","prefs","prefValue","defaultType","blobUrl","body","_openBlobUrls","downloadData","isPdfData","isPdfFile","viewerUrl","webL10n","_lang","getLanguage","gL10nData","gTextData","gTextProp","gLanguage","gMacros","gReadyState","fireL10nReadyEvent","evtObject","xhrLoadText","onFailure","_onFailure","xhr","XMLHttpRequest","overrideMimeType","responseText","parseResource","successCallback","failureCallback","evalString","response","parseProperties","parsedPropertiesCallback","dictionary","reBlank","reComment","reSection","reImport","reSplit","parseRawLines","rawText","extendedSyntax","parsedRawLinesCallback","entries","currentLang","genericLang","skipLang","languagefound","nextEntry","genericMatch","loadImport","loadLocale","originalCaseLang","_callback","langLinks","getL10nResourceLinks","langCount","onResourceLoaded","gResourceCount","L10nResourceLink","resource","dict","getL10nDictionary","script","default_locale","defaultLocale","anyCaseLang","locales","link","_pluralRules","getPluralRules","isIn","list","isBetween","pluralRules","af","ak","am","ar","asa","az","be","bem","bez","bg","bh","bm","bn","bo","br","brx","bs","ca","cgg","chr","cy","de","dv","dz","ee","el","eo","et","eu","fa","ff","fi","fil","fo","fr","fur","gd","gl","gsw","guw","gv","ha","haw","he","hr","hu","ig","is","it","iu","ja","jmc","jv","ka","kab","kaj","kcg","kde","kea","kk","kl","km","kn","ko","ksb","ksh","ku","kw","lag","lb","lg","ln","lo","lt","lv","mas","mg","mk","ml","mn","mo","mr","ms","my","nah","naq","nd","nl","no","nr","nso","ny","nyn","om","or","pap","pl","ps","rm","ro","rof","ru","rwk","sah","saq","se","seh","ses","sg","sh","shi","sk","sl","sma","smi","smj","smn","sms","sn","so","sq","sr","ss","ssy","st","sw","syr","ta","te","teo","th","ti","tig","tk","tl","tn","tr","ts","tzm","uk","ur","ve","vi","vun","wa","wae","wo","xh","xog","yo","zu","getL10nData","rv","substArguments","substIndexes","reMatch","reIndex","macroName","paramName","macro","matched_text","arg","translateElement","getL10nAttributes","l10nId","l10nArgs","getChildElementCount","l","nodeValue","textNode","fallbackString","getText","setLanguage","shortCode","rtlList","translateFragment","getTranslatableChildren","elementCount","getReadyState","QuickJSSandbox","sandbox","nukeSandbox","_print_utils","activeService","renderPage","activeServiceOnEntry","scratchCanvas","PRINT_UNITS","PDF","PDFPrintService","_printResolution","throwIfInactive","pageStyleSheet","ensureOverlay","overlayPromise","renderPages","getXfaHtmlForPrinting","renderNextPage","isInPDFPrintRange","renderProgress","useRenderedPage","performPrint","enablePrint","progressIndicator","abort","eventType","progressContainer","progressBar","progressPerc","chrome","opera","stopImmediatePropagation","stopPropagationIfNeeded","allXfaHtml","xfaPage","builder","getXfaPageViewport","__webpack_module_cache__","moduleId","cachedModule","exports","__webpack_modules__","HTMLCollection","bubbles","require","webViewerLoad","getViewerConfiguration","viewFind","findMultipleSearchTextsCheckbox","ignoreAccentsCheckbox","fuzzyCheckbox"],"mappings":";;;;;;;;;;;;;;;;;;;;8IAeA,MAAMA,EAAsBC,OAAAA,OAf5B,8BAgBiE,CAC/D,MAAMC,EACH,oBAAAC,WAAoCA,UAArCD,WAF6D,GAGzDE,EACH,oBAAAD,WAAoCA,UAArCC,UAJ6D,GAKzDC,EACH,oBAAAF,WAAoCA,UAArCE,gBAN6D,EAQzDC,EAAY,UAAAC,KAR6CL,GASzDM,EACJ,4BAAAD,KAAAL,IACCE,aAAAA,GAA2BC,EAXiC,EAYzDI,EAAc,QAAAF,KAZ2CL,IAgB9D,SAAAQ,qBAGCD,IACET,EAAAA,wBADe,GAHlB,IAUA,SAAAW,6BACKH,GAAJF,KACEN,EAAAA,gBADsB,SADzB,GAOH,MAAMY,EAAa,CACjBC,OADiB,EAEjBC,IAFiB,EAGjBC,OAHiB,EAIjBC,WAJiB,oBAYnB,MAAMC,EAAiB,CACrBC,eAAgB,CAEdC,MAFc,EAGdC,KAAMR,EAAAA,OAAoBA,EAHZI,YAKhBK,iBAAkB,CAEhBF,MAFgB,EAGhBC,KAAMR,EAAAA,OAAoBA,EAHVI,YAKlBM,WAAY,CAEVH,MAFU,GAGVC,KAAMR,EAHIC,QAKZU,iBAAkB,CAEhBJ,MAFgB,GAGhBC,KAAMR,EAAAA,OAAoBA,EAHVI,YAKlBQ,eAAgB,CAEdL,OAFc,EAGdC,KAAMR,EAHQC,QAKhBY,kBAAmB,CAEjBN,OAFiB,EAGjBC,KAAMR,EAAAA,OAAoBA,EAHTI,YAKnBU,kBAAmB,CAEjBP,OAFiB,EAGjBC,KAAMR,EAAAA,OAAoBA,EAHTI,YAKnBW,sBAAuB,CAErBR,OAFqB,EAGrBC,KAAMR,EAAAA,OAAoBA,EAHLI,YAKvBY,gBAAiB,CAEfT,OAFe,EAGfC,KAAMR,EAAAA,OAAoBA,EAHXI,YAKjBa,gBAAiB,CAEfV,MAFe,+BAGfC,KAAMR,EAHSC,QAKjBiB,mBAAoB,CAElBX,MAFkB,EAGlBC,KAAMR,EAAAA,OAAoBA,EAHRI,YAKpBe,iBAAkB,CAEhBZ,OAFgB,EAGhBC,KAAMR,EAAAA,OAAoBA,EAHVI,YAKlBgB,sBAAuB,CAErBb,OAFqB,EAGrBC,KAAMR,EAAAA,OAAoBA,EAHLI,YAKvBiB,mBAAoB,CAElBd,MAFkB,YAGlBC,KAAMR,EAHYC,QAKpBqB,gBAAiB,CAEff,MAFe,SAGfgB,cAAenC,EAHAkC,gBAIfd,KAAMR,EAJSC,QAMjBuB,cAAe,CAEbjB,OAFa,EAGbC,KAAMR,EAAAA,OAAoBA,EAHbI,YAKfqB,gBAAiB,CAEflB,MAFe,IAGfC,KAAMR,EAHSC,QAKjByB,kBAAmB,CAEjBnB,OAFiB,EAGjBC,KAAMR,EAAAA,OAAoBA,EAHTI,YAKnBuB,SAAU,CAERpB,MAFQ,SAGRC,KAAMR,EAHEC,QAKV2B,kBAAmB,CAEjBrB,OAFiB,EAGjBC,KAAMR,EAAAA,OAAoBA,EAHTI,YAKnByB,iBAAkB,CAEhBtB,OAFgB,EAGhBC,KAAMR,EAAAA,OAAoBA,EAHVI,YAKlB0B,iBAAkB,CAEhBvB,OAFgB,EAGhBC,KAAMR,EAAAA,OAAoBA,EAHVI,YAKlB2B,cAAe,CAEbxB,MAFa,EAGbC,KAAMR,EAAAA,OAAoBA,EAHbI,YAKf4B,eAAgB,CAEdzB,OAFc,EAGdC,KAAMR,EAAAA,OAAoBA,EAHZI,YAKhB6B,eAAgB,CAEd1B,MAFc,EAGdC,KAAMR,EAAAA,OAAoBA,EAHZI,YAKhB8B,WAAY,CAEV3B,MAFU,EAGVC,KAAMR,EAAAA,OAAoBA,EAHhBI,YAMZ+B,WAAY,CAEV5B,OAFU,EAGVC,KAAMR,EAHIE,KAKZkC,QAAS,CAEP7B,MAFO,gBAMPC,KAAMR,EANCE,KAQTmC,iBAAkB,CAEhB9B,OAFgB,EAGhBC,KAAMR,EAAAA,IAAiBA,EAHPI,YAKlBkC,gBAAiB,CAEf/B,OAFe,EAGfC,KAAMR,EAAAA,IAAiBA,EAHRI,YAKjBmC,aAAc,CAEZhC,OAFY,EAGZC,KAAMR,EAAAA,IAAiBA,EAHXI,YAKdoC,cAAe,CAEbjC,OAFa,EAGbC,KAAMR,EAAAA,IAAiBA,EAHVI,YAKfqC,WAAY,CAEVlC,MAFU,GAGVC,KAAMR,EAHIE,KAKZwC,UAAW,CAETnC,OAFS,EAGTC,KAAMR,EAAAA,IAAiBA,EAHdI,YAKXuC,oBAAqB,CAEnBpC,OAFmB,EAGnBC,KAAMR,EAHaE,KAKrB0C,gBAAiB,CAEfrC,OAFe,EAGfC,KAAMR,EAHSE,KAKjB2C,aAAc,CAEZtC,OAFY,EAGZC,KAAMR,EAHME,KAKd4C,OAAQ,CAENvC,OAFM,EAGNC,KAAMR,EAHAE,KAKR6C,oBAAqB,CAEnBxC,MAFmB,yBAMnBC,KAAMR,EANaE,KAQrB8C,UAAW,CAETzC,MAFS,EAGTC,KAAMR,EAHGE,KAMX+C,WAAY,CAEV1C,MAFU,KAGVC,KAAMR,EAHIG,QAKZ+C,UAAW,CAET3C,MAFS,yBAMTC,KAAMR,EANGG,SAaXE,EAAAA,mBAAoC,CAElCE,OAFkC,EAGlCC,KAAMR,EAH4BC,QAKpCI,EAAAA,OAAwB,CAEtBE,MAAO,oBAAAhB,UAAmCA,UAAnC4D,SAFe,QAGtB3C,KAAMR,EAHgBC,QAKxBI,EAAAA,iBAAkC,CAEhCE,MAFgC,0BAMhCC,KAAMR,EAN0BC,QASlCI,EAAAA,SAAAA,MAAgCL,EApBhCI,WAkCF,MAAMgD,EAAc/D,OAAAA,OAlUpB,MAoUA,GAAIgE,WAAJC,kBACE,IAAA,MAAAC,KAAkBF,WAAlBC,kBACEF,EAAAA,GAAmBC,WAAAA,kBAD2BE,gBAKlD,MAAAC,WACEC,cACE,MAAM,IAAAC,MADM,iCAIdC,WAAAC,GACE,MAAMC,EAAaT,EADJQ,GAEf,QAAAE,IAAID,EACF,OAD4BA,EAG9B,MAAME,EAAgB1D,EALPuD,GAMf,YAAAE,IAAIC,EACKA,EAAAA,eAA+BA,EADPxD,WAAjC,EAMFoD,cAAcnD,EAAd,MACE,MAAMwD,EAAU3E,OAAAA,OADS,MAEzB,IAAA,MAAAuE,KAAAvD,EAAmC,CACjC,MAAM0D,EAAgB1D,EADWuD,GAEjC,GAAApD,EAAU,CACR,GAAA,IAAKA,EAAOuD,EAARvD,MAAmC,SAGvC,GAAIA,IAASR,EAAbI,WAAoC,CAClC,MAAMG,EAAQwD,EAAdxD,MACE0D,SAFgC1D,EAIlC,GACE0D,YAAAA,GAAAA,WACAA,GACCA,WAAAA,GAA0BC,OAAAA,UAH7B3D,GAIE,CACAyD,EAAAA,GADAzD,EAAA,SAIF,MAAM,IAAAmD,MAAU,gCAAAE,MAGpB,MAAMC,EAAaT,EArBcQ,GAsBjCI,EAAAA,QACEH,IAAAA,EAAAA,EAEIE,EAAAA,eAA+BA,EAzBJxD,MA2BnC,OA7ByByD,EAgC3BL,WAAAC,EAAArD,GACE6C,EAAAA,GADsB7C,EAIxBoD,cAAAK,GACE,IAAA,MAAAJ,KAAAI,EACEZ,EAAAA,GAAoBY,EADMJ,GAK9BD,cAAAC,UACSR,EADWQ,GAOpBD,yBACE,OAAOtE,OAAAA,KAAAA,GAAAA,OADgB,iJC3X3B,IAAA8E,EAAAC,EAAA,GAqBAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAmBAI,EAAAJ,EAAA,GA3DAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,IAAAgB,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAA,IAAAkB,EAAAlB,EAAA,IAAAmB,EAAAnB,EAAA,IAAAoB,EAAApB,EAAA,IAAAqB,EAAArB,EAAA,IAAAsB,EAAAtB,EAAA,IAAAuB,EAAAvB,EAAA,IAAAwB,EAAAxB,EAAA,IAiFA,MAIMyB,GAAa,EAAbA,EAAa,EAMbC,EAAiB,CACrBC,UADqB,EAErBC,MAFqB,EAGrBC,KAHqB,GAOjBC,EAAiB,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OAiBjBC,EAAmB,CAAA,oBAAA,oBAAA,kBAAA,oBAAA,kBAAA,cAAA,QAAA,QAAA,UAAA,QAAA,SAAA,SAAA,QAAA,SAAA,cAAA,WAAA,YAAA,aAAA,SAAA,eAAA,cAAA,gBAAA,eAAA,QA2BzB,MAAAC,wBACE3C,cACE,MAAM,IAAAC,MADM,8CAIdC,8BAAA0C,IAEA1C,8BAAA0C,IAEA1C,0BAAA2C,IAEA3C,sBAAA0C,IAEA1C,uBAAA0C,IAEA1C,6BAAAK,GACE,MAAM,IAAAN,MAD8B,0CAItCC,2BACE,MAAM,IAAAD,MADmB,sCAI3BC,kBAAAK,GACE,MAAM,IAAAN,MADmB,+BAI3BC,uBAAAK,GACE,MAAM,IAAAN,MADwB,oCAIrB6C,oCACT,OAAOC,EAAAA,EAAAA,QAAAA,KAAAA,0BAD2B,GAIzBC,mCACT,OAAOD,EAAAA,EAAAA,QAAAA,KAAAA,yBAD0B,GAIxBE,iDACT,OAAO,EAAAnC,EAAAiC,QAAAG,KAAA,sCAAoD,CACzDC,SADyD,EAEzDC,SAFyD,IAMlDC,4BACT,OAAON,EAAAA,EAAAA,QAAAA,KAAAA,kBADmB,sDAK9B,MAAMO,EAAuB,CAC3BC,gBAAiBC,SAAAA,SAAAA,KAAAA,UADU,GAE3BC,wBAF2B,EAAA3C,EAAA4C,2BAG3BC,WAH2B,EAI3BC,UAJ2B,KAK3BC,YAL2B,KAM3BC,eAN2B,KAO3BC,aAP2B,KAS3BC,UAT2B,KAW3BC,mBAX2B,KAa3BC,kBAb2B,KAe3BC,oBAf2B,KAiB3BC,sBAjB2B,KAmB3BC,eAnB2B,KAqB3BC,WArB2B,KAuB3BC,WAvB2B,KAyB3BC,kBAzB2B,KA2B3BC,iBA3B2B,KA6B3BC,oBA7B2B,KA+B3BC,eA/B2B,KAiC3BC,eAjC2B,KAmC3BC,oBAnC2B,KAqC3BC,MArC2B,KAuC3BC,gBAvC2B,KAyC3BC,eAzC2B,KA2C3BC,YA3C2B,KA6C3BC,QA7C2B,KA+C3BC,iBA/C2B,KAiD3BC,SAjD2B,KAmD3BC,KAnD2B,KAoD3BC,kBApD2B,EAqD3BC,kBArD2B,EAsD3BC,iBAAkBC,OAAAA,SAtDSA,OAuD3BC,IAvD2B,GAwD3BC,QAxD2B,GAyD3BC,aAzD2B,GA0D3BC,iBA1D2BlD,wBA2D3BmD,aAAclK,OAAAA,OA3Da,MA4D3BmK,aA5D2B,KA6D3BC,SA7D2B,KA8D3BC,4BA9D2B,KA+D3BC,eA/D2B,KAgE3BC,iBAhE2B,EAiE3BC,UAjE2B,KAkE3BC,kBAlE2B,EAmE3BC,eAAgB,IAnEWC,IAsE3BC,iBAAA5C,GACEV,KAAA+B,YAAmB/B,KAAA2C,iBADOY,oBAE1BvD,KAAAU,UAF0BA,QAIpBV,KAJoBwD,yBAKpBxD,KALoByD,uBAM1BzD,KAN0B0D,uBAOpB1D,KAPoB2D,kBAUxB3D,KAAAsC,kBACAzF,EAAAA,WAAAA,IAAAA,wBAAyC+G,EAAAA,WAF3CC,MAMEhH,EAAAA,WAAAA,IAAAA,qBAAqC+G,EAAAA,WAHrCE,WAKI9D,KAjBoB+D,8BAqB1B/D,KArB0BgE,aAsB1BhE,KAtB0BiE,mBAyB1B,MAAMC,EAAexD,EAAAA,cAA0BJ,SAzBrB6D,gBA0B1BnE,KAAAmC,KAAAiC,UAAAF,GAAAG,MAAuC,KAGrCrE,KAAAkC,SAAAoC,SAAA,YAAoC,CAAEC,OAHKvE,UAM7CA,KAAAO,uBAhC0BiE,UAoC1BxE,KApC0ByE,wBA2C5BnB,yBAKI,IAAIzG,EAAAA,WAAAA,IAAJ,sBAAA,CAKIA,EAAAA,WAAJ6H,mBACEC,OAAAA,WAAAA,KACE,gJAKN,IACE9H,EAAAA,WAAAA,aAAwBmD,KAAA+B,YADtB6C,UAEF,MAAAC,GACAF,OAAAA,WAAAA,MAA2B,sBAAsBE,MAAAA,OAAtB,EAAsBA,EAAtBC,gBAQ/BxB,6BACE,IAAKzG,EAAAA,WAAAA,IAAL,iBAAsC,OAGtC,MAAMkI,EAAOzE,SAAAA,SAAAA,KAAAA,UAJc,GAK3B,IAAAyE,EAAW,OAGX,MAAMC,GAASC,EAAAA,EAAAA,kBAAfF,GACEG,EATyB,GAW3B,SAAIF,EAAAA,IAAAA,kBACFE,EAAAA,KA41DN5B,eAAA6B,iBACE,IAAKC,EAAAA,oBAAL7I,UAAoC,CAClC6I,EAAAA,oBAAAA,UAAgCvI,EAAAA,WAAAA,IADE,aAIlC,aAAIuI,EAAAA,oBAAAA,UAAAA,YAAAA,OACFA,EAAAA,oBAAAA,UAAgCA,EAAAA,oBADiC7I,mBAS/D8I,EAAAA,EAAAA,YAAWC,EAAAA,UAda/I,WA51Dd4I,IAEVH,EAAAA,IAAJ,iBACEnI,EAAAA,WAAAA,IAAAA,eAD8B,SACCmI,EAAAA,IAAAA,iBAE7BA,EAAAA,IAAJ,kBACEnI,EAAAA,WAAAA,IAAAA,gBAD+B,SACCmI,EAAAA,IAAAA,kBAE9BA,EAAAA,IAAJ,qBACEnI,EAAAA,WAAAA,IAAAA,mBADkC,SAGhCmI,EAAAA,IAAAA,qBAGAA,EAAAA,IAAJ,oBACEnI,EAAAA,WAAAA,IAAAA,kBADiC,SAG/BmI,EAAAA,IAAAA,oBAGAA,EAAAA,IAAJ,mBACEnI,EAAAA,WAAAA,IAAAA,iBADgC,SACCmI,EAAAA,IAAAA,mBAE/BA,EAAAA,IAAJ,cACEnI,EAAAA,WAAAA,IAAAA,YAD2B,EACCmI,EAAAA,IAAAA,cAE9B,GAAIA,EAAAA,IAAJ,aACE,OAAQA,EAAAA,IAAR,cACE,IAAA,MACEnI,EAAAA,WAAAA,IAAAA,gBAAgC0I,EAAAA,cADlCC,SADF,MAIE,IAJF,UAKE,IALF,SAME,IAAA,QACiBxF,KAAAU,UADjB+E,gBAEEC,UAAAA,IAAqB,aAAaV,EAAAA,IAAb,gBAI3B,GAAIA,EAAAA,IAAJ,UAA0B,CACxBnI,EAAAA,WAAAA,IAAAA,UADwB,GAExBA,EAAAA,WAAAA,IAAAA,uBAFwB,GAIxB,MAAM8I,EAAUX,EAAAA,IAAAA,UAAAA,MAJQ,KAKxBE,EAAAA,KAi0DN5B,eAAAsC,WAAAC,GACE,MAAMC,mBAAAA,EAAAC,cAAAA,GAAwC3F,EADTM,gBAE/B2E,EAAAA,EAAAA,YAF+BS,GAGrCE,OAAAA,KAAY,CAAEC,IAAAA,EAAAA,KAAdD,EAHqCH,GAj0DrBD,CALYD,IAWxBX,EAAAA,IAHF,WAKEnI,EAAAA,WAAAA,IAAAA,SAAyBmI,EAAAA,IADzB,WAIF,GAAA,IAAIE,EAAAA,OAGJ,UACQgB,QAAAA,IADJhB,GAEF,MAAAL,GACAF,OAAAA,WAAAA,MAA2B,0BAA0BE,EAA1BC,eAO/BxB,wBACEtD,KAAAmC,KAAYnC,KAAA2C,iBAAAwD,WAEN,CAAEC,OAAQvJ,EAAAA,WAAAA,IAHM,YAMtB,MAAMwJ,QAAYrG,KAAAmC,KANImE,eAOtBhG,SAAAA,qBAAAA,QAAAA,GAAAA,IAPsB+F,GAaxB3C,iBACE,MAAM6C,EAAW1J,EAAAA,WAAAA,IADF,kBAEf,GACE0J,IAAapH,EAAboH,WACC7N,OAAAA,OAAAA,GAAAA,SAFH6N,GAMA,IACE,MAAMC,EAAalG,SAAAA,YADjB,GAEImG,GAAWD,MAAAA,OAAAA,EAAAA,EAAAA,WAFf,GAGF,IAAK,IAAIE,EAAJ,EAAWC,EAAKF,EAArBG,OAAsCF,EAAtCC,EAA8CD,IAAK,CAAA,IAAAG,EACjD,MAAMC,EAAOL,EADoCC,GAEjD,GACEI,aAAAA,cADF,kCAEEA,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IACA,CACA,GAAIP,IAAapH,EAAjBE,MAAuC,CACrCmH,EAAAA,WADqCE,GAAA,OAKvC,MAAMK,EACJ,yEAAAC,KACEF,EARJG,SAUA,GAAIF,MAAAA,GAAAA,EAAJ,GAAoB,CAClBP,EAAAA,WADkBE,GAElBF,EAAAA,WAAsBO,EAAtBP,GAFkBE,GAVpB,SAiBJ,MAAA7B,GACAF,OAAAA,WAAAA,MAA2B,oBAAoBE,MAAAA,OAApB,EAAoBA,EAApBC,eAO/BxB,oCACE,MAAM5C,UAAAA,EAAAiC,iBAAAA,GAD4B3C,KAGlC,IAHkCkC,EAKhCA,EADExB,EAAJwB,SACaxB,EADWwB,SAEbS,EAAJxC,eACM,IAD+BxC,EAAAuJ,mBAG/B,IADNvJ,EAAAwJ,SAGPnH,KAAAkC,SAXkCA,EAalClC,KAAA8B,eAAsB,IAbYhE,EAAAsJ,eAelC,MAAMpG,EAAoB,IAfQvC,EAAA4I,kBAgBlCrG,EAAAA,OAA2BhB,KAAAsH,SAAAC,KAhBOvH,MAiBlCA,KAAAgB,kBAjBkCA,EAmBlC,MAAMG,EAAiB,IAAA7C,EAAAkJ,eAAmB,CAAAtF,SAAAA,EAExC3H,mBAAoBsC,EAAAA,WAAAA,IAFoB,sBAGxCvC,gBAAiBuC,EAAAA,WAAAA,IAHuB,mBAIxCpC,sBAAuBoC,EAAAA,WAAAA,IAJiB,2BAM1CmD,KAAAmB,eAzBkCA,EA2BlC,MAAMU,EAAkBc,EA3BU8E,wBA4BlCzH,KAAA6B,gBA5BkCA,EA8BlC,MAAM6F,EAAiB,IAAAvJ,EAAAwJ,kBAAsB,CAC3CC,YAD2CzG,EAAAe,SAAAA,EAI3C2F,aAAchL,EAAAA,WAAAA,IAJ6B,kBAO7CmD,KAAA0H,eArCkCA,EAuClC,MAAM/F,EAAsB,IAAAjD,EAAAoJ,oBAAwB,CAAA5F,SAAAA,EAElD6F,iBAGMlL,EAAAA,WAAAA,IAL4C,oBAOlDmL,iBAPkDrF,EAQlDsF,oBAAqBjI,KAAAkI,wBAAAX,KAR6BvH,QAUpDA,KAAA2B,oBAjDkCA,EAmDlC,MAAMwG,EAAYzH,EAnDgBqF,cAoD5BL,EAAShF,EApDmB+E,gBAqDlCzF,KAAAc,UAAiB,IAAAhC,EAAAsJ,UAAc,CAAAD,UAAAA,EAAAzC,OAAAA,EAAAxD,SAAAA,EAI7BmG,eAJ6BrH,EAK7B4G,YAL6BzG,EAAAU,gBAAAA,EAAA6F,eAAAA,EAQ7BY,iBACEzL,EAAAA,WAAAA,IAAAA,oBAT2B8E,EAU7B3G,SAAU6B,EAAAA,WAAAA,IAVmB,YAW7BsF,KAAMnC,KAXuBmC,KAY7B/G,cAAeyB,EAAAA,WAAAA,IAZc,iBAa7BlD,eAAgBkD,EAAAA,WAAAA,IAba,kBAc7BnC,mBAAoBmC,EAAAA,WAAAA,IAdS,sBAe7B9B,kBAAmB8B,EAAAA,WAAAA,IAfU,qBAgB7B0L,uBAAwB1L,EAAAA,WAAAA,IAhBK,0BAiB7BzC,sBAAuByC,EAAAA,WAAAA,IAjBM,yBAkB7BxB,eAAgBwB,EAAAA,WAAAA,IAlBa,kBAmB7BlC,gBAAiBkC,EAAAA,WAAAA,IAnBY,mBAqB7BgL,aAAchL,EAAAA,WAAAA,IArBe,gBAuB7B1C,kBAAmB0C,EAAAA,WAAAA,IAvBU,uBAyB/BmE,EAAAA,UAA4BhB,KA9EMc,WA+ElCK,EAAAA,UAAyBnB,KA/ESc,WAgFlCa,EAAAA,UAA8B3B,KAhFIc,WAkFlCd,KAAAe,mBAA0B,IAAAlC,EAAA2J,mBAAuB,CAC/CL,UAAWzH,EAAAA,QADoC+H,cAAAvG,SAAAA,EAG/CmG,eAH+CrH,EAI/C4G,YAJ+CzG,EAK/CgB,KAAMnC,KALyCmC,OAOjDnB,EAAAA,mBAAqChB,KAzFHe,oBA6FlC,IAAKf,KAADsC,mBAA2BzF,EAAAA,WAAAA,IAA/B,kBAAiE,CAC/DmD,KAAAoB,WAAkB,IAAAhD,EAAAsK,WAAe,CAC/Bd,YAD+BzG,EAAAe,SAAAA,IAIjCf,EAAAA,WAA0BnB,KALqCoB,YAQ5DpB,KAALJ,yBACEI,KAAA2I,QAAe,IAAAzK,EAAA0K,WAAelI,EAAfiI,QAAAzG,EAA4ClC,KAD3BmC,OAIlCnC,KAAAkB,sBAA6B,IAAAjD,EAAA4K,sBAC3BnI,EAD2BoI,mBAE3B9I,KAF2B8B,eAAAI,EAI3BlC,KA7GgCmC,MAgHlCnC,KAAA0B,eAAsB,IAAA7D,EAAAkL,eAAmB,CAAAZ,UAAAA,EAAAjG,SAAAA,EAGvCpI,iBAAkB+C,EAAAA,WAAAA,IAHqB,sBAMzCmD,KAAAgC,QAAe,IAAAhD,EAAAgK,QAAYtI,EAAZsB,QAAAE,EAAyClC,KAtHtBmC,MAwHlCnC,KAAAiC,iBAAwB,IAAAlD,EAAAkK,iBACtBvI,EADsBuB,iBAAAkG,EAxHUjG,GA8H9BlC,KAAJkJ,qBACElJ,KAAAiB,oBAA2B,IAAAzC,EAAA2K,oBAAwB,CAAAhB,UAAAA,EAEjDrH,UAAWd,KAFsCc,UAAAoB,SAAAA,KASrD,IAAIkH,EAASvM,EAAAA,WAAAA,IAxIqB,kBAyIlCuM,IACEA,EAAS,IAAArL,EAAAsL,eACP3I,EADO4I,gBAEPtJ,KAFO8B,eAGP9B,KAHOmC,KAIPnC,KALSsC,mBAQbtC,KAAAuJ,eAjJkCH,EAoJlCpJ,KAAAuB,iBAAwB,IAAAhD,EAAAiL,iBAAqB,CAC3CrB,UAAWzH,EAAAA,QADgC+I,YAAAvH,SAAAA,EAG3C0F,YAH2CzG,IAM7CnB,KAAAwB,oBAA2B,IAAAxD,EAAA0L,oBAAwB,CACjDvB,UAAWzH,EAAAA,QADsCiJ,gBAAAzH,SAAAA,EAAAL,gBAAAA,IAMnD7B,KAAAyB,eAAsB,IAAApD,EAAAuL,eAAmB,CACvCzB,UAAWzH,EAAAA,QAD4BmJ,WAAA3H,SAAAA,EAGvCC,KAAMnC,KAHiCmC,OAMzCnC,KAAAqB,WAAkB,IAAA1C,EAAAmL,WAAe,CAC/BC,SAAUrJ,EADqBsJ,QAE/BlJ,UAAWd,KAFoBc,UAG/BC,mBAAoBf,KAHWe,mBAAAmB,SAAAA,EAK/BC,KAAMnC,KALyBmC,OAOjCnC,KAAAqB,WAAA4I,UAA4BjK,KAAAkK,eAAA3C,KA7KMvH,MA+KlCA,KAAAsB,kBAAyB,IAAA1C,EAAAuL,kBACvBzJ,EADuB0J,eAAAlI,EAGvBlC,KAlLgCmC,OAsLpCkI,IAAAA,GACErK,KAAAsK,WAAAC,GAAAlG,KADUmG,uBAIZC,kBACE,OAAOzK,KAAAO,uBADSmK,SAIlBC,yBACE,OAAO3K,KAAAO,uBADgBqK,SAIzBC,OAAAA,GACM7K,KAAAc,UAAJgK,sBAGA9K,KAAAc,UAAAiK,cAJYC,IAOdC,QAAAA,GACMjL,KAAAc,UAAJgK,sBAGA9K,KAAAc,UAAAoK,cAJaF,IAOfG,YACMnL,KAAAc,UAAJgK,uBAGA9K,KAAAc,UAAAsK,kBAJU5N,EAAA6N,sBAOZC,iBACE,OAAOtL,KAAAW,YAAmBX,KAAAW,YAAnB4K,SADQ,GAIjBC,WACE,OAAOxL,KAAAc,UADE2K,mBAIXD,SAAAE,GACE1L,KAAAc,UAAA2K,kBADYC,GAIdC,uBACE,OAAOC,EAAAA,SADcD,kBAIvBzC,yBAIE,OAAOrJ,EAAAA,EAAAA,QAAAA,KAAAA,qBAGLS,SAAAA,mBACEA,SADFA,sBAEEA,SATmBuL,0BAazBjM,6BACE,OAAOI,KAAA2C,iBADoB/C,wBAI7BE,4BACE,OAAOE,KAAA2C,iBADmB7C,uBAQ5B2E,uBACE,MAAMqH,EAAM,IAAAtO,EAAAuO,YADS,eAErBD,EAFqBE,OAGrB,OAAOnM,EAAAA,EAAAA,QAAAA,KAAAA,aAHciM,IAWvB/L,0CACE,OAAOC,KAAA2C,iBADiC5C,qCAI1CkM,qBAKI,MAAM,IAAAlP,MALW,wCA2CrBmP,iBAAiB1J,EAAjB0J,GAA2BC,EAA3BD,MACElM,KAAAwC,IAD6CA,EAE7CxC,KAAAyC,QAAeD,EAAAA,MAAAA,KAF8B,GAG7C2J,IACEnM,KAAA0C,aACEyJ,IAAAA,EAAsBnM,KAAtBmM,QAAqCA,EAAAA,MAAAA,KAFxB,IAIjB,IAAIC,GAAQC,EAAAA,EAAAA,uBAAAA,EAPiC,IAQ7C,IAAAD,EACE,IACEA,EAAQE,oBAAmBC,EAAAA,EAAAA,oBAAnBD,KADN9J,EAEF,MAAAgK,GAGAJ,EAHW5J,EAMfxC,KAAAyM,SAjB6CL,IAoB/CK,SAAAA,GACMzM,KAAJsC,mBAIAhC,SAAAA,MALc8L,IAQhBM,mBAGE,OAAO1M,KAAA+C,8BAAoCsJ,EAAAA,EAAAA,uBAAsBrM,KAHhDwC,MASnBmK,oBAEE,MAAM3K,QAAAA,EAAAC,iBAAAA,GAAgCjC,KAFpBU,UAGlBsB,EAAAA,aAAAA,QAHkB,EAIlBC,EAAAA,mBAAAA,QAJkB,GAUpB2K,uBACE,GAAK5M,KAAAoD,eAALyJ,KAAA,CAGA,IAAA,MAAAC,KAAuB9M,KAAvBoD,eACEb,OAAAA,mBAD0CuK,GAG5C9M,KAAAoD,eAPqB2J,UAevBzJ,cAAc,IAAA0J,EAAAC,EAAAC,EACZlN,KADYmN,4BAEZnN,KAFY2M,oBAKV,MAAMxE,UAAAA,GAAgBnI,KAAAU,UALZ0M,aAMVjF,EAAAA,QANU,EASZ,IAAKnI,KAALY,eAA0B,OAG1B,IAEE,QAAAoM,EAAAhN,KAAAW,mBAAA,IAAAqM,OAAA,EAAAA,EAAAK,kBAAAR,MADA,GAEA7M,KAHFsN,2BAKE,UAEQtN,KAAAuN,KAAU,CAAEC,gBAFhB,SAGF,MAAA3I,IAIJ,MAAM4I,EAxBM,GA0BZA,EAAAA,KAAczN,KAAAY,eA1BF8M,WA2BZ1N,KAAAY,eA3BY,KA6BZ,GAAIZ,KAAJW,YAAsB,CACpBX,KAAAW,YADoB,KAGpBX,KAAAe,mBAAA4M,YAHoB,MAIpB3N,KAAAc,UAAA6M,YAJoB,MAKpB3N,KAAAmB,eAAAwM,YALoB,MAMpB3N,KAAAkB,sBAAAyM,YANoB,MAQtB3N,KAAAmB,eAAAyM,qBArCY,EAsCZ5N,KAAAS,WAtCY,EAuCZT,KAAA4B,MAvCY,KAwCZ5B,KAAAoC,kBAxCY,EAyCZpC,KAAAqC,kBAzCY,EA0CZrC,KAAAwC,IA1CY,GA2CZxC,KAAAyC,QA3CY,GA4CZzC,KAAA0C,aA5CY,GA6CZ1C,KAAA6C,aA7CY,KA8CZ7C,KAAA8C,SA9CY,KA+CZ9C,KAAA+C,4BA/CY,KAgDZ/C,KAAAgD,eAhDY,KAiDZhD,KAAAiD,iBAjDY,EAkDZjD,KAAAkD,UAlDY,KAoDZlD,KApDY4M,uBAqDZa,EAAAA,KAAczN,KAAA2B,oBArDFkM,gBAuDZ7N,KAAAqB,WAvDYyM,QAwDZ9N,KAAAuB,iBAxDYuM,QAyDZ9N,KAAAwB,oBAzDYsM,QA0DZ9N,KAAAyB,eA1DYqM,QA4DZ,QAAAb,EAAAjN,KAAAoB,kBAAA,IAAA6L,GAAAA,EA5DYa,QA6DZ,QAAAZ,EAAAlN,KAAA2I,eAAA,IAAAuE,GAAAA,EA7DYY,QA8DZ9N,KAAAgC,QA9DY8L,QA+DZ9N,KAAAiC,iBA/DY6L,QAiEZ,oBAAI9H,QACFA,OADiC+H,gBAG7B7H,QAAAA,IApEMuH,IAgFdnK,WAAA0K,EAAAC,GACE1L,OAAAA,QAAAA,mBAAiCe,UAC3BtD,KAAJY,sBAEQZ,KAFiBkO,QAKzB,MAAMC,EAAmBtR,EAAAA,WAAAA,OAAkBxD,EAAAA,WANAG,QAO3C,IAAA,MAAAoD,KAAAuR,EACE/I,EAAAA,oBAAAA,GAA2B+I,EADOvR,GAIpC,MAAMwR,EAAa1V,OAAAA,OAXwB,MAY3C,GAAA,iBAAIsV,EAA0B,CAE5BhO,KAAAkM,iBAAA8B,EAF4BA,GAG5BI,EAAAA,IAH4BJ,OAIvB,GAAIA,GAAQ,eAAZA,EAELI,EAAAA,KAFuCJ,OAGlC,GAAIA,EAAAA,KAAYA,EAAhBK,YAAkC,CACvCrO,KAAAkM,iBAAsB8B,EAAtBK,YAA4DL,EADrBxL,KAEvC4L,EAAAA,IAAiBJ,EAFsBxL,IAKzC,MAAM8L,EAAgBzR,EAAAA,WAAAA,OAAkBxD,EAAAA,WAxBGE,KAyB3C,IAAA,MAAAqD,KAAA0R,EAAiC,CAC/B,IAAI1U,EAAQ0U,EADmB1R,GAU/BwR,EAAAA,GAV+BxU,EAajC,GAAAqU,EACE,IAAA,MAAArR,KAAAqR,EACEG,EAAAA,GAAkBH,EADIrR,GAK1B,MAAM2R,GAAcC,EAAAA,EAAAA,aA5CuBJ,GA6C3CpO,KAAAY,eA7C2C2N,EA+C3CA,EAAAA,WAAyB,CAAAE,EAAA5J,KACvB7E,KAAAmB,eAAAyM,qBADmD,EAEnD5N,KAAAuJ,eAAAmF,kBAAAD,EAFmD5J,GAGnD7E,KAAAuJ,eAHmDoF,QAMrDJ,EAAAA,WAAyB,EAACK,OAAAA,EAADC,MAAAA,MACvB7O,KAAA8O,SAAcF,EADgCC,GAG9C7O,KAAAkC,SAAAoC,SAAA,WAAmC,CACjCC,OADiCvE,KAEjC+O,KAFiC,OAAAF,MAAAA,EAAAD,OAAAA,EAKjCI,QAAU,IAADJ,EALwBC,KAWrCN,EAAAA,qBAAmCvO,KAAAiP,SAAA1H,KAnEQvH,MAqE3CA,KAAAkP,WArE2CC,OAsE3C,OAAOZ,EAAA3D,QAAAvG,MACL1D,IACEX,KAAAoP,KADazO,MAGf0O,IACE,GAAId,IAAgBvO,KAApBY,eACE,OAGF,IAAIhE,EALO,gBAMPyS,aAAJzR,EAAA0R,oBACE1S,EAD4C,qBAEnCyS,aAAJzR,EAAA2R,oBACL3S,EADmD,qBAE1CyS,aAAJzR,EAAA4R,8BACL5S,EAD2D,6BAG7D,OAAOoD,KAAAmC,KAAAsN,IAAA7S,GAAAyH,MAAwBqL,IAC7B1P,KAAA2P,eAAAD,EAAyB,CAAE5K,QAASuK,MAAAA,OAATvK,EAASuK,EADAvK,UAEpC,MAFoCuK,YAY9CO,0BACE,IAAI5P,KAAAW,cAAoBX,KAAxBqC,iBAGA,MAAM,IAAAtF,MAJkB,iCAO1BuG,gBAAekK,gBAAEA,EAAF,YAAf,IACE,MAAMhL,EAAMxC,KAAZ0C,aACEmN,EAAW7P,KAFuC0M,aAGpD,IACE1M,KADE4P,0BAGF,MAAMlQ,QAAaM,KAAAW,YAHjBmP,UAIIC,EAAO,IAAAC,KAAS,CAATtQ,GAAiB,CAAEqP,KAJ9B,0BAMI/O,KAAA6B,gBAAAoO,SAAAF,EAAAvN,EAAAqN,EANJrC,GAOF,MAAA3I,SAGM7E,KAAA6B,gBAAAsK,YAAA3J,EAHSqN,KAOnBvM,YAAWkK,gBAAEA,EAAF,YAAX,IACE,GAAIxN,KAAJiD,gBAA0B,OAG1BjD,KAAAiD,iBAJgD,QAK1CjD,KAAA2B,oBAL0CuO,mBAOhD,MAAM1N,EAAMxC,KAAZ0C,aACEmN,EAAW7P,KARmC0M,aAShD,IACE1M,KADE4P,0BAGF,MAAMlQ,QAAaM,KAAAW,YAHjBwP,eAIIJ,EAAO,IAAAC,KAAS,CAATtQ,GAAiB,CAAEqP,KAJ9B,0BAMI/O,KAAA6B,gBAAAoO,SAAAF,EAAAvN,EAAAqN,EANJrC,GAOF,MAAA3I,GAGAF,OAAAA,WAAAA,MAA2B,mCAAmCE,EAAnCC,iBACrB9E,KAAAiQ,SAAc,CAJLzC,gBAAAA,IAPjB,cAaQxN,KAAA2B,oBADEyO,kBAERpQ,KAAAiD,iBAFQ,IAMZoN,eAAAA,GAAwB,IAAAC,GAClB,QAAAA,EAAAtQ,KAAAW,mBAAA,IAAA2P,OAAA,EAAAA,EAAAjD,kBAAAR,MAAJ,EACE7M,KAAAuN,KADgDlQ,GAGhD2C,KAAAiQ,SADK5S,IAKT4R,SAAAA,GACEjP,KAAA2C,iBAAA4N,gBAAsC,CACpCxB,KADoC,qBAAAyB,UAAAA,IAOtC,IAAIxQ,KAAJS,UAAA,CAGAT,KAAAS,WAXkB,EAalBT,KAAA2C,iBAAAsM,SACY,CAAAuB,UAAAA,EAERhO,IAAKxC,KAFGyC,UADZ4B,MAKQ4L,IACJA,GAGAjQ,KAAAiQ,SAAc,CAAEzC,gBAJA,kBAYtBmC,eAAAA,EAAwBc,EAAxBd,MACE3P,KADuCmN,4BAGvCnN,KAAA0Q,YAAA5L,EAHuC2L,IAczCC,YAAAA,EAAqBD,EAArBC,MACE,MAAMC,EAAe,CACnB3Q,KAAAmC,KAAAsN,IAAA,qBAAoC,CAClCmB,QAASA,EAAAA,SADyB,IAElCC,MAAOA,EAAAA,OAF2B,OAKtC,GAAAJ,EAAc,CACZE,EAAAA,KACE3Q,KAAAmC,KAAAsN,IAAA,gBAA+B,CAAE3K,QAAS2L,EAFhC3L,WAIZ,GAAI2L,EAAJK,MACEH,EAAAA,KACE3Q,KAAAmC,KAAAsN,IAAA,cAA6B,CAAEqB,MAAOL,EAFtBK,aAIb,CACDL,EAAJZ,UACEc,EAAAA,KACE3Q,KAAAmC,KAAAsN,IAAA,aAA4B,CAAEzB,KAAMyC,EAFjBZ,YAKnBY,EAAJM,YACEJ,EAAAA,KACE3Q,KAAAmC,KAAAsN,IAAA,aAA4B,CAAEuB,KAAMP,EAFfM,eAS3B,MAAME,EAAqBjR,KAAAU,UA9BO0M,aA+B5BA,EAAe6D,EA/Ba9I,UAgClCiF,EAAAA,QAhCkC,EAkCb6D,EAlCaC,aAmClCA,YAnCkCpM,EAqClC,MAAMqM,EAAcF,EArCcE,YAsClCA,EAAAA,QAAsB,WACpB/D,EAAAA,QADgC,GAIlC,MAAMgE,EAAgBH,EA1CYG,cA2C5BC,EAAiBJ,EA3CWI,eA4C5BC,EAAiBL,EA5CWK,eA6ClCD,EAAAA,QAAyB,WACvBD,EAAAA,QADmC,EAEnCC,EAAAA,QAFmC,EAGnCC,EAAAA,QAHmC,EAInCF,EAAAA,MAAAA,OAA6BA,EAAAA,aAJM,MAMrCE,EAAAA,QAAyB,WACvBF,EAAAA,QADmC,EAEnCC,EAAAA,QAFmC,EAGnCC,EAAAA,QAHmC,GAKrCD,EAAAA,cAxDkC7T,EAAA+T,qBAyDlCD,EAAAA,cAzDkC9T,EAAA+T,qBA0DlCJ,EAAAA,cA1DkC3T,EAAA+T,qBA2DlCF,EAAAA,QA3DkC,EA4DlCC,EAAAA,QA5DkC,EA6DlCpL,QAAAA,IAAAA,GAAAA,MAA+BsL,IAC7BJ,EAAAA,MAAsBI,EAAAA,KADgB,UAW5C1C,SAAAA,GACE,GAAI9O,KAAJqC,iBAA2B,OAK3B,MAAM2M,EAAUyC,KAAAA,MANF,IAMaC,GAK3B,GAAI1C,EAAUhP,KAAAkP,WAAVF,SAAqC2C,MAAzC3C,GAAyD,CACvDhP,KAAAkP,WAAAF,QADuDA,EAYvD,IAJyBhP,KAAAW,YACrBX,KAAAW,YAAAiR,cADqBlW,iBAErBmB,EAAAA,WAAAA,IAVmD,sBAYvDmS,EAAiC,CAC/B,GAAIhP,KAAJ6R,kCAA4C,CAC1CC,aAAa9R,KAD6B6R,mCAE1C7R,KAAA6R,kCAF0C,KAI5C7R,KAAAkP,WAL+BC,OAO/BnP,KAAA6R,kCAAyCE,YAAW,KAClD/R,KAAAkP,WADwDlD,OAExDhM,KAAA6R,kCAFwD,OA7sClE,QAqtCEzC,KAAAA,GACEpP,KAAAW,YADgBA,EAGhBA,EAAAA,kBAAAA,MAAmC,EAAAiG,OAAAA,MACjC5G,KAAAgD,eADiD4D,EAEjD5G,KAAAqC,kBAFiD,EAGjDrC,KAAAkP,WAHiDlD,OAKjDgG,EAAAA,MAAsB,KACpBhS,KAAAkC,SAAAoC,SAAA,iBAAyC,CAAEC,OADjBvE,aAO9B,MAAMiS,EAAoBtR,EAAAuR,gBAAAC,OAAkC,eAGtDC,EAAkBzR,EAAA0R,cAAAF,OAAgC,eAGlDG,EAAoB3R,EAAA4R,gBAAAJ,OAAkC,eAI5DnS,KAAAgC,QAAAwQ,cAA2B7R,EAA3B4K,UAzBgB,GA0BhBvL,KAAAiC,iBAAAuQ,cAAoC7R,EA1BpB4K,UA4BhB,IA5BgBkH,EA8BdA,EA9Bc,KAoChBzS,KAAAmB,eAAAwM,YAAAhN,EApCgB,MAqChBX,KAAAkB,sBAAAyM,YAAAhN,EAAoDX,KArCpCwC,KAuChB,MAAM1B,EAAYd,KAvCFc,UAwChBA,EAAAA,YAxCgBH,GAyChB,MAAMqR,iBAAAA,EAAAU,gBAAAA,EAAAC,aAAAA,GAzCU7R,EA2CWd,KA3CXe,mBA4ChBA,YA5CgBJ,GA8ChB,MAAMiS,GAAiB5S,KAAA4B,MAAa,IAAA3C,EAAA4T,YAClClS,EAAAA,aADoB,KAAAmS,YAGP,CACXtH,KADW,KAEXuH,KAFWvV,EAAA6N,oBAGX2H,WAHW,IAIXC,UAJW,IAKXC,SALW,KAMXC,YAAaC,EAAAA,YANFC,QAOXC,WAAYC,EAAAA,WAPDF,QAQXG,WAAYC,EAAAA,WARDJ,UAHOlB,OAab,IAEEzZ,OAAAA,OAFI,QAKfsZ,EAAAA,MAAsB0B,IACpB1T,KAAAkP,WAAAyE,SAAyB3T,KAAAU,UADM+E,iBAE/BzF,KAAA4T,sCAF+BjT,GAI/BuF,QAAAA,IAAY,CAAA1I,EAAAqW,iBAAAjB,EAAAX,EAAAG,EAAAE,IAAZpM,MAOQ5C,OAAOwQ,EAAAC,EAAAC,EAAAC,EAAPC,MACJ,MAAM3Y,EAAasB,EAAAA,WAAAA,IADkD,cAGrEmD,KAAAmU,sBAA2B,CACzBC,YAAazT,EAAAA,aADY,GAAApF,WAAAA,EAGzB8Y,YAAaH,MAAAA,OAAbG,EAAaH,EAHYI,OAK3B,MAAMjU,EAAkBL,KAR6CK,gBAW/D0S,EAAOlW,EAAAA,WAAAA,IAXwD,oBAYrE,IAAIkI,EAAOgO,EAAO,QAAAA,IAZmD,KAcjEG,EAdiE,KAejEC,EAActW,EAAAA,WAAAA,IAfmD,qBAgBjEyW,EAAazW,EAAAA,WAAAA,IAhBoD,oBAiBjE2W,EAAa3W,EAAAA,WAAAA,IAjBoD,oBAmBrE,GAAIkX,EAAAA,MAAexY,IAAe2D,EAAoB,CACpD6F,EACE,QAAQgP,EAARvI,aAA4BuH,GAAQgB,EAApChB,QACGgB,EAAHf,cAAwBe,EAAxBd,YAEFC,EAAWqB,SAASR,EAATQ,SALyC,IAOhDpB,IAAgBC,EAAAA,YAApBC,UACEF,EADuC,EACzBY,EAAAA,aAEZT,IAAeC,EAAAA,WAAnBF,UACEC,EADqC,EACxBS,EAAAA,YAEXP,IAAeC,EAAAA,WAAnBJ,UACEG,EADqC,EACxBO,EAAAA,YAIbE,GAAYd,IAAgBC,EAAAA,YAAhCC,UACEF,GAAcqB,EAAAA,EAAAA,0BADqCP,IAGrD,GACED,GACAV,IAAeC,EAAAA,WADfS,SAEAR,IAAeC,EAAAA,WAHjBJ,QAIE,CAKAG,GAJciB,EAAAA,EAAAA,4BADdT,GAAAR,WAQFxT,KAAA0U,eAAA3P,EAA0B,CAAAmO,SAAAA,EAAAC,YAAAA,EAAAG,WAAAA,EAAAE,WAAAA,IAM1BxT,KAAAkC,SAAAoC,SAAA,eAAuC,CAAEC,OA1D4BvE,OA6DhEA,KAALsC,kBACExB,EAD0B6T,cAStBzO,QAAA0O,KAAa,CAAAjC,EAEjB,IAAAzM,SAAY1B,IACVuN,WAAAA,EAz2Cd,UA42CU,IAAI1R,GAAJ0E,KAGIjE,EAAJ+T,kBAAA,CAGA7U,KAAAK,gBAlFqEA,EAqFrES,EAAAA,kBAA8BA,EArFuCsK,kBAuFrEpL,KAAA0U,eAvFqE3P,OAPzEmB,OAgGS,KAGLlG,KAHW0U,oBAhGfxO,MAqGQ,WAKJpF,EALgBgU,eAStBnC,EAAAA,MACE,KACE3S,KADImN,4BAGJnN,KAAA+U,qBAAApU,EAHI2R,MAKNzN,IACE7E,KAAAmC,KAAAsN,IAAA,iBAAApL,MAAoCqL,IAClC1P,KAAA2P,eAAAD,EAAyB,CAAE5K,QAASD,MAAAA,OAATC,EAASD,EADKC,gBAM/C4N,EAAAA,MAAqBhT,IACnBM,KAAA2C,iBAAA4N,gBAAsC,CACpCxB,KADoC,WAEpCiG,UAAWtV,EAFyBsV,YAKtCrU,EAAAA,aAAAA,MAA8BsU,IACxBtU,IAAgBX,KAApBW,aAGAX,KAAAuB,iBAAA2T,OAA6B,CAAAD,QAAAA,EAAAtU,YAAAA,OAE/BA,EAAAA,iBAAAA,MAAkCwU,IAC5BxU,IAAgBX,KAApBW,aAGAX,KAAAwB,oBAAA0T,OAAgC,CAJeC,YAAAA,OAQjDrU,EAAAA,6BAAAA,MAA4CsU,IACtCzU,IAAgBX,KAApBW,aAGAX,KAAAyB,eAAAyT,OAA2B,CAAAE,sBAAAA,EAAAzU,YAAAA,OAE7B,GAEE,wBAFF4B,OAGE,CACA,MAAMuK,EAAWvK,OAAA8S,qBACf,KACErV,KAAAsV,kBADI3U,GAEJX,KAAAoD,eAAAmS,OAFIzI,KAIN,CAAE0I,QANJ,MAQAxV,KAAAoD,eAAAqS,IARA3I,OAYJ9M,KAAA0V,sBAxOgB/U,GAyOhBX,KAAA2V,oBAzOgBhV,IA+OlB2C,8BAAA3C,GAA2C,IAAAiV,EAAAC,EACzC,IAAK7V,KAAL6C,aAAwB,OAGhB,IAAAqD,SAAY1B,IAChBxE,KAAAkC,SAAA4T,IAAA,iBAAAtR,EAA6C,CAAEuR,MADpB,OAG7B,GAAIpV,IAAgBX,KAApBW,YACE,OADoC,KAIxC,IAAKX,KAALgD,eAA0B,OAMlB,IAAAkD,SAAY1B,IAChBxE,KAAAkC,SAAA4T,IAAA,iBAAAtR,EAA6C,CAAEuR,MADpB,OAG7B,GAAIpV,IAAgBX,KAApBW,YACE,OADoC,KAKxC,MAAO,IACFX,KADE6C,aAELmT,QAAShW,KAFJyC,QAGLwT,SAAUjW,KAHLgD,eAIL6M,SAAU7P,KAJL0M,aAKL5J,SAAAA,QAAAA,EAAU9C,KAAA8C,gBAAVA,IAAAA,OAAAA,EAAU8S,EALLM,SAMLC,QAAAA,QAAAA,EAASnW,KAAA8C,gBAATqT,IAAAA,OAAAA,EAASN,EAAApG,IANJ,cAOLlE,SAAUvL,KAPLsL,WAQL8K,IAAKpW,KARAwC,MAiBTc,wBAAA3C,GACE,MAAM0V,QAAiBrW,KAAAW,YADY2V,cAEnC,GAAI3V,IAAgBX,KAApBW,YAAsC,OAGtC,MAAM4V,GAASF,MAAAA,OAAAA,EAAAA,EAAAA,UALoB,EAMnCrW,KAAA2C,iBAAA4N,gBAAsC,CACpCxB,KADoC,SAAAwH,OAAAA,KASxCjT,2BAAA3C,EAAA2R,GACE,MAAM4B,EAAAsC,SAAiCtQ,QAAAuQ,IAAY,CAAAnE,EAEhDtS,KAAAc,UAADzG,gBAFiD,KAEfsG,EAAlC+V,kBAGF,GAAI/V,IAAgBX,KAApBW,YAAsC,OAGtC,IAAIgW,GATqD,EAWzD,WAAIzC,MAAAA,OAAAA,EAAAA,EAAAA,UACFyC,GADkC,GAGpC,GAAAH,EAAgB,CACdA,EAAAA,MAAgBI,IACd,IAAAA,EAEE,OAFO,EAITjS,OAAAA,WAAAA,KALoB,8CAMpB3E,KAAAiP,SAAc4H,EAAAA,qBANML,YAOpB,OAPoB,KAUtB,IAAAG,EAEE,IAAA,MAAAC,KAAAJ,EACE,GAAII,GAAME,EAAAA,gBAAAA,KAAVF,GAAoC,CAClCD,GADkC,EAAA,OAQ1CA,GACE3W,KADoB+W,mBAQxBzT,0BAAA3C,GACE,MAAMqW,KAAAA,EAAAlU,SAAAA,EAAAmU,2BAAAA,EAAAC,cAAAA,SACEvW,EAF6BwW,cAIrC,GAAIxW,IAAgBX,KAApBW,YAAsC,OAGtCX,KAAA6C,aAPqCmU,EAQrChX,KAAA8C,SARqCA,EASrC9C,KAAA+C,8BATqCkU,EAUrCjX,KAAAgD,iBAVqCkU,EAarC,MAAME,EAA8B7U,OAbC6U,4BAcrC,IAAIA,GAAkCA,EAAAA,IAAAA,aAAtC,EAAwF,CACtFzS,OAAAA,WAAAA,IACE,0DACGpC,OAAA,wBACGA,OAAAA,wBADHqO,QAHiF,2BAOtFjM,OAAAA,WAAAA,IACE,OAAOhE,EAAAA,aAAP,OAAuCqW,EAAvCK,qBACML,EAAAM,UAAD,KAAHC,aAAuCP,EAAAQ,SAAD,KAAtCD,oBACY3G,EAAAA,SAAZ,OAEE5Q,KAAAc,UAAA2W,YAAA,WADF,IAAA,0CAMFT,EAAJU,WACE1X,KAAAU,UAAA+E,gBAAAkS,KAAsCX,EADrBU,UAGnB,IAAIE,EAAWZ,MAAAA,OAAXY,EAAWZ,EAlCsBa,MAoCrC,MAAMC,EAAgBhV,MAAAA,OAAhBgV,EAAgBhV,EAAAA,IApCe,YAqCrCgV,IAQIA,aAAAA,GACC,mBAAA9e,KAFH8e,KAIEF,EADAE,IAIJF,EACE5X,KAAAyM,SACE,GAAAmL,OAAiBX,GAA8B3W,SAA/C8L,SAEG6K,GACLjX,KAAAyM,SADqCwK,GAIvC,IACED,EAAAA,cACCA,EADDA,mBAECrW,EAHHoX,WAWO,IACJf,EAAAgB,mBAA0BhB,EAA3BiB,gBACCjY,KAAAc,UAFIoX,YAGL,CACAvT,OAAAA,WAAAA,KADA,oDAEA3E,KAAAiP,SAAc4H,EAAAA,qBAFdsB,YAVA,CACIxX,EAAAA,cAAJ5E,UACE4I,OAAAA,WAAAA,KADuC,uDAGvCA,OAAAA,WAAAA,KADK,uCAGP3E,KAAAiP,SAAc4H,EAAAA,qBANdsB,OAeF,GAAInB,EAAJoB,oBAA8B,CAC5BzT,OAAAA,WAAAA,KAD4B,2DAE5B3E,KAAAiP,SAAc4H,EAAAA,qBAFcwB,YAM9B,IAAIC,EApFiC,QAqFjC/Y,EAAAA,SAAwByX,EAA5BK,oBACEiB,EAAY,IAAItB,EAAAA,iBAAAA,QAAAA,IAAJ,QAEd,IAAIuB,EAxFiC,QAyFrC,GAAIvB,EAAJM,SAAmB,CACjB,MAAMkB,EAAWxB,EAAAA,SADAyB,cAEjBjZ,EAAAA,MAAsB,SAAAkZ,GACpB,IAAKF,EAAAA,SAALE,GACE,OADiC,EAGnCH,EAAcG,EAAAA,QAAAA,SAJ2B,KAKzC,OALyC,KAQ7C,IAAIC,EAnGiC,KAoGjC3B,EAAJiB,aACEU,EADqB,MAEZ3B,EAAJgB,oBACLW,EADiC,YAGnC3Y,KAAA2C,iBAAA4N,gBAAsC,CACpCxB,KADoC,eAEpC6B,QAFoC0H,EAGpCI,UAHoCH,EAAAI,SAAAA,IAOtC3Y,KAAAkC,SAAAoC,SAAA,iBAAyC,CAAEC,OAhHNvE,QAsHvCsD,4BAAA3C,GACE,MAAMiY,QAAejY,EADkBkY,gBAGvC,GAAIlY,IAAgBX,KAApBW,YAAsC,OAGtC,IAAIiY,GAAW/b,EAAAA,WAAAA,IAAf,qBAAoD,OAGpD,MAAMic,EAAYF,EATqBhS,OAYvC,IAAImS,EAAJ,EACEC,EAbqC,EAcvC,IAAK,IAAItS,EAAT,EAAgBA,EAAhBoS,EAA+BpS,IAAK,CAClC,MAAMuS,EAAQL,EADoBlS,GAElC,GAAIuS,KAAWvS,EAAD,GAAdwS,WACEH,QACK,CAAA,GAAA,KAAIE,EAEJ,MADLD,KAKJ,GAAID,GAAAA,GAA+BC,GAAnCF,EAA6D,OAG7D,MAAMhY,UAAAA,EAAAC,mBAAAA,EAAAiB,QAAAA,GA3BiChC,KA6BvCc,EAAAA,cA7BuC8X,GA8BvC7X,EAAAA,cA9BuC6X,GAkCvC5W,EAAAA,cAAAA,GAlCuC,GAmCvCA,EAAAA,cACElB,EADFkB,kBAEElB,EArCqCqY,mBA4CzChF,uBAAsBC,YAAAA,EAAA7Y,WAAAA,EAAA8Y,YAA2BA,EAAjDF,OACE,GAAKnU,KAALoB,WAAA,CAGApB,KAAAoB,WAAAkJ,WAA2B,CAAA8J,YAAAA,EAEzBgF,aAAc7d,IAAe2D,EAC7Bma,UAAWxc,EAAAA,WAAAA,IAHc,sBAM3B,GAAImD,KAAAoB,WAAJf,gBAAqC,CACnCL,KAAAK,gBAAuBL,KAAAoB,WADYf,gBAGnCL,KAAAsZ,gBAAuBtZ,KAAAoB,WAHYkY,gBAOrC,GACEjF,IACCrU,KADDqU,iBAEA9Y,IAAe2D,EACf,CACAc,KAAAK,gBAAuBkZ,KAAAA,UADvBlF,GAIArU,KAAAoB,WAAAoY,KAAqB,CAAEC,aAAFpF,EAA6BqF,WAA7B,UAOzB9F,sCAAAA,GACE,GAAIjT,IAAgBX,KAApBW,YAAsC,OAGtC,MAAM0M,kBAAAA,GAJ2C1M,EAMjD0M,EAAAA,cAAkC,KAChC9K,OAAAA,iBAAAA,eADsCoX,cAIpC3Z,KAAAsN,4BAJoC,GAOxCD,EAAAA,gBAAoC,KAClC9K,OAAAA,oBAAAA,eADwCoX,qBAI/B3Z,KAJ+BsN,6BAS5CoH,eAAAA,GAEExB,SAAAA,EAAAC,YAAAA,EAAAG,WAAAA,EAAAE,WAAAA,GAFFkB,IAIE,MAAMkF,YAAcC,KACdC,EAAAA,EAAAA,iBAAJD,KACE7Z,KAAAc,UAAAiZ,cAD0BF,IAY9B7Z,KAAAoC,kBAdA,EAeApC,KAAAqB,WAAAqT,eAfAvB,GAMuB,EAAA6G,EAAAC,MACjBC,EAAAA,EAAAA,mBAAJF,KACEha,KAAAc,UAAAwS,WAD6B0G,IAG3BG,EAAAA,EAAAA,mBAAJF,KACEja,KAAAc,UAAA0S,WAD6ByG,IAOjCG,CAAAA,EAjBA5G,GAmBA,GAAIxT,KAAJK,gBAA0B,CACxBuZ,YAAY5Z,KADYsZ,wBAEjBtZ,KAFiBsZ,gBAIxBtZ,KAAAmB,eAAAkZ,QAA4Bra,KAJJK,iBAKxBL,KAAAK,gBALwB,UAMnB,GAAAia,EAAgB,CACrBV,YADqB1G,GAGrBlT,KAAAmB,eAAAkZ,QAHqBC,GAQvBta,KAAAgC,QAAAuY,cACEva,KAAAc,UADF2K,kBAEEzL,KAAAc,UAnCFqY,kBAqCAnZ,KAAAiC,iBAAAsY,cAAoCva,KAAAc,UArCpC2K,mBAuCA,IAAKzL,KAAAc,UAALsK,kBAAuC,CAIrC,MAAMoP,EAAoBpD,4BAAAA,IAJW,oBAMrCoD,IACExa,KAAAc,UAAAsK,kBADqBoP,KAU3BlT,WACE,GAAKtH,KAALW,YAAA,CAGAX,KAAAc,UAJSiN,UAKT/N,KAAAe,mBALSgN,UAQT/N,KAAAW,YAAAoN,QAC0B/N,KAAAc,UAAA9F,WAA4Byf,EAAAA,aAT7CC,OAaXxQ,iBACElK,KAAAgB,kBAAA2Z,WAAoC3a,KADrBa,aAEfb,KAAAgB,kBAAA4Z,uBACE5a,KAAAqB,WAHawZ,uBAIf7a,KAAAgB,kBAJe8Z,yBAOjBC,cAGE/a,KAAA2B,oBAHYqZ,oBAKZ,GAAIhb,KAAJa,aAAuB,OAOvB,IAAKb,KAAL2L,iBAA4B,CAC1B3L,KAAAmC,KAAAsN,IAAA,0BAAApL,MAA6CqL,IAC3C1P,KAAA0Q,YADkDhB,MAD1B,OAS5B,IAAK1P,KAAAc,UAALma,eAAoC,CAClCjb,KAAAmC,KAAAsN,IAAA,sBAAApL,MAAyCqL,IAEvCnN,OAAAA,MAF8CmN,MADd,OAQpC,MAAMwL,EAAgBlb,KAAAc,UA7BVqa,mBA8BNC,EAAiBpb,KAAAU,UA9BX0a,eA+BNtgB,EAAkB+B,EAAAA,WAAAA,IA/BZ,mBAgCNwe,EACJrb,KAAAc,UAjCUua,6BAmCNxa,EAAe+K,EAAAA,SAAAA,mBACnB5L,KADmB4L,YAAAA,EAAAA,EAAAA,EAAAA,EAMnB5L,KANmB4L,KAOnB5L,KAAAc,UA1CUoB,UA4CZlC,KAAAa,aA5CYA,EA6CZb,KA7CYkK,iBA+CZrJ,EA/CYya,SAiDZtb,KAAA2C,iBAAA4N,gBAAsC,CACpCxB,KAlDU,WAsDdwM,aAGEvb,KAAA2B,oBAHW6Z,mBAKX,GAAIxb,KAAJa,aAAuB,CAAA,IAAA4a,EACrBnb,SAAAA,KAAAA,gBADqB,sBAErBN,KAAAa,aAFqB6M,UAGrB1N,KAAAa,aAHqB,KAKrB,QAAA4a,EAAAzb,KAAAW,mBAAA,IAAA8a,GAAAA,EAAApO,kBALqBqO,gBAOvB1b,KAZWkK,kBAebyR,YAAAA,GACE3b,KAAAc,UAAAiZ,eADiB6B,GAMnBC,0BAA0B,IAAAC,EACxB,QAAAA,EAAA9b,KAAAiB,2BAAA,IAAA6a,GAAAA,EADwBC,WAI1BhF,kBACO/W,KAAL2L,kBAGApJ,OAJgByZ,YAOlBhY,aACE,MAAM9B,SAAAA,EAAAU,aAAAA,GADK5C,KAGX4C,EAAAA,YAA2B5C,KAAA+a,YAAAxT,KAHhBvH,MAIX4C,EAAAA,WAA0B5C,KAAAub,WAAAhU,KAJfvH,MAMXkC,EAAAA,IAAAA,SANW+Z,iBAOX/Z,EAAAA,IAAAA,aAPWga,qBAQXha,EAAAA,IAAAA,cAA4BU,EARjBmY,aASX7Y,EAAAA,IAAAA,aAA2BU,EAThB2Y,YAUXrZ,EAAAA,IAAAA,eAVWia,uBAWXja,EAAAA,IAAAA,iBAXWka,yBAYXla,EAAAA,IAAAA,eAZWma,uBAaXna,EAAAA,IAAAA,gBAbWoa,wBAcXpa,EAAAA,IAAAA,mBAdWqa,2BAeXra,EAAAA,IAAAA,qBAfWsa,6BAgBXta,EAAAA,IAAAA,WAhBWua,mBAiBXva,EAAAA,IAAAA,cAjBWwa,sBAkBXxa,EAAAA,IAAAA,0BAlBWya,kCAmBXza,EAAAA,IAAAA,mBAnBW0a,2BAoBX1a,EAAAA,IAAAA,QApBW2a,gBAqBX3a,EAAAA,IAAAA,WArBW4a,mBAsBX5a,EAAAA,IAAAA,OAtBW6a,eAuBX7a,EAAAA,IAAAA,YAvBW8a,oBAwBX9a,EAAAA,IAAAA,WAxBW+a,mBAyBX/a,EAAAA,IAAAA,WAzBWgb,mBA0BXhb,EAAAA,IAAAA,eA1BWib,uBA2BXjb,EAAAA,IAAAA,SA3BWkb,iBA4BXlb,EAAAA,IAAAA,UA5BWmb,kBA6BXnb,EAAAA,IAAAA,YA7BWob,oBA8BXpb,EAAAA,IAAAA,oBA9BWqb,4BA+BXrb,EAAAA,IAAAA,eA/BWsb,uBAgCXtb,EAAAA,IAAAA,WAhCWub,mBAiCXvb,EAAAA,IAAAA,YAjCWwb,oBAkCXxb,EAAAA,IAAAA,wBAlCWyb,gCAmCXzb,EAAAA,IAAAA,mBAnCW0b,2BAoCX1b,EAAAA,IAAAA,oBApCW2b,4BAqCX3b,EAAAA,IAAAA,mBArCW4b,2BAsCX5b,EAAAA,IAAAA,oBAtCW6b,4BAuCX7b,EAAAA,IAAAA,qBAvCW8b,6BAwCX9b,EAAAA,IAAAA,kBAxCW+b,0BAyCX/b,EAAAA,IAAAA,yBAzCWgc,iCA0CXhc,EAAAA,IAAAA,yBA1CWic,iCA4CX,GAAIthB,EAAAA,WAAAA,IAAJ,UAA8B,CAC5B+F,EAAAA,sBAD4Bwb,sBAG5Blc,EAAAA,IAAAA,eAA6BU,EAHDwb,uBAI5Blc,EAAAA,IAAAA,eAA6BU,EAJDwb,uBAO5Blc,EAAAA,IAAAA,kBAnDSmc,GAoDTnc,EAAAA,IAAAA,WApDSoc,IAwDbra,mBACE,MAAM/B,SAAAA,EAAAU,aAAAA,GADW5C,KAGjB4C,EAAAA,aAA4B,KAC1BV,EAAAA,SAAAA,SAA4B,CAAEqC,OADEhC,UAGlCK,EAAAA,iBAAgC,KAC9BV,EAAAA,SAAAA,aAAgC,CAC9BqC,OAD8BhC,OAE9BwC,KAAMzE,SAAAA,SAAAA,KAAAA,UAFwB,MAKlCsC,EAAAA,kBAAiC,KAC/BV,EAAAA,SAAAA,cAAiC,CAAEqC,OADEhC,UAGvCK,EAAAA,iBAAgC,KAC9BV,EAAAA,SAAAA,aAAgC,CAAEqC,OADEhC,UAGtCK,EAAAA,wBAAuC2b,IACrCrc,EAAAA,SAAAA,oBAAuC,CACrCqC,OADqChC,OAErCic,OAAQD,EAF6BC,UAMzCjc,OAAAA,iBAAAA,mBAzBiBkc,2BA0BjBlc,OAAAA,iBAAAA,QAAAA,eAAiD,CAAEmc,SA1BlC,IAgCjBnc,OAAAA,iBAAAA,QAhCiBoc,gBAiCjBpc,OAAAA,iBAAAA,UAjCiBqc,kBAkCjBrc,OAAAA,iBAAAA,SAAkCK,EAlCjBic,cAmCjBtc,OAAAA,iBAAAA,aAAsCK,EAnCrBkc,kBAoCjBvc,OAAAA,iBAAAA,cAAuCK,EApCtBmc,mBAqCjBxc,OAAAA,iBAAAA,aAAsCK,EArCrBoc,kBAsCjBzc,OAAAA,iBAAAA,oBAEEK,EAxCeqc,0BA4CnBC,eACE,MAAMhd,SAAAA,EAAAU,aAAAA,GADO5C,KAGbkC,EAAAA,KAAAA,SAHa+Z,iBAIb/Z,EAAAA,KAAAA,aAJaga,qBAKbha,EAAAA,KAAAA,cAA6BU,EALhBmY,aAMb7Y,EAAAA,KAAAA,aAA4BU,EANf2Y,YAObrZ,EAAAA,KAAAA,eAPaia,uBAQbja,EAAAA,KAAAA,iBARaka,yBASbla,EAAAA,KAAAA,eATama,uBAUbna,EAAAA,KAAAA,gBAVaoa,wBAWbpa,EAAAA,KAAAA,mBAXaqa,2BAYbra,EAAAA,KAAAA,qBAZasa,6BAabta,EAAAA,KAAAA,WAbaua,mBAcbva,EAAAA,KAAAA,cAdawa,sBAebxa,EAAAA,KAAAA,0BAfaya,kCAgBbza,EAAAA,KAAAA,mBAhBa0a,2BAiBb1a,EAAAA,KAAAA,QAjBa2a,gBAkBb3a,EAAAA,KAAAA,WAlBa4a,mBAmBb5a,EAAAA,KAAAA,OAnBa6a,eAoBb7a,EAAAA,KAAAA,YApBa8a,oBAqBb9a,EAAAA,KAAAA,WArBa+a,mBAsBb/a,EAAAA,KAAAA,WAtBagb,mBAuBbhb,EAAAA,KAAAA,eAvBaib,uBAwBbjb,EAAAA,KAAAA,SAxBakb,iBAyBblb,EAAAA,KAAAA,UAzBamb,kBA0Bbnb,EAAAA,KAAAA,YA1Baob,oBA2Bbpb,EAAAA,KAAAA,oBA3Baqb,4BA4Bbrb,EAAAA,KAAAA,eA5Basb,uBA6Bbtb,EAAAA,KAAAA,WA7Baub,mBA8Bbvb,EAAAA,KAAAA,YA9Bawb,oBA+Bbxb,EAAAA,KAAAA,wBA/Bayb,gCAgCbzb,EAAAA,KAAAA,mBAhCa0b,2BAiCb1b,EAAAA,KAAAA,oBAjCa2b,4BAkCb3b,EAAAA,KAAAA,mBAlCa4b,2BAmCb5b,EAAAA,KAAAA,oBAnCa6b,4BAoCb7b,EAAAA,KAAAA,qBApCa8b,6BAqCb9b,EAAAA,KAAAA,kBArCa+b,0BAsCb/b,EAAAA,KAAAA,yBAtCagc,iCAuCbhc,EAAAA,KAAAA,yBAvCaic,iCAyCb,GAAIvb,EAAJwb,sBAAwC,CACtClc,EAAAA,KAAAA,eAA8BU,EADQwb,uBAEtClc,EAAAA,KAAAA,eAA8BU,EAFQwb,uBAItCxb,EAAAA,sBAJsC,KAOtCV,EAAAA,KAAAA,kBAhDWmc,GAiDXnc,EAAAA,KAAAA,WAjDWoc,GAoDb1b,EAAAA,YApDa,KAqDbA,EAAAA,WArDa,MAwDfuc,qBACE,MAAMvc,aAAAA,GADa5C,KAGnBuC,OAAAA,oBAAAA,mBAHmBkc,2BAInBlc,OAAAA,oBAAAA,QAAAA,eAAoD,CAAEmc,SAJnC,IAUnBnc,OAAAA,oBAAAA,QAVmBoc,gBAWnBpc,OAAAA,oBAAAA,UAXmBqc,kBAYnBrc,OAAAA,oBAAAA,SAAqCK,EAZlBic,cAanBtc,OAAAA,oBAAAA,aAAyCK,EAbtBkc,kBAcnBvc,OAAAA,oBAAAA,cAA0CK,EAdvBmc,mBAenBxc,OAAAA,oBAAAA,aAAyCK,EAftBoc,kBAgBnBzc,OAAAA,oBAAAA,oBAEEK,EAlBiBqc,yBAqBnBrc,EAAAA,aArBmB,KAsBnBA,EAAAA,iBAtBmB,KAuBnBA,EAAAA,kBAvBmB,KAwBnBA,EAAAA,iBAxBmB,KAyBnBA,EAAAA,wBAzBmB,MA4BrBwc,qBAAAA,IAGKpf,KAAAmD,kBAAA,GAA8Bkc,EAA/B,GACCrf,KAAAmD,kBAAA,GAA8Bkc,EAFjC,KAIErf,KAAAmD,kBADA,GAGFnD,KAAAmD,mBAR0Bkc,EAS1B,MAAMC,EACJ7N,KAAAA,KAAUzR,KAAVyR,mBACAA,KAAAA,MAAWA,KAAAA,IAASzR,KAXImD,oBAY1BnD,KAAAmD,mBAZ0Bmc,EAa1B,OAb0BA,GAqB5BnS,4BACM7M,SAAJif,oBACEjf,SAAAA,oBAD+B,GAIjCN,KAAAmN,0BAAiC,QAMnCqS,gCACE,MAAMC,MAAAA,GAAYzf,KADYW,YAE9B,GAAI8e,IAAUzf,KAAdkD,UAA8B,CAC5BlD,KAAAkD,UAD4Buc,EAG5Bzf,KAAA2C,iBAAA4N,gBAAsC,CACpCxB,KADoC,gBAAA0Q,MAAAA,MAW1CC,qBACE,OAAO1f,KAAA2B,oBADYge,iCAKvB,IAlpEAC,EA4hFAvB,EA5hFAC,EAmpEiE,CAC/D,MAAMuB,EAAwB,CAAA,OAAA,2BAAA,6BAK9BD,EAAkB,SAAA5R,GAChB,QAAA7Q,IAAI6Q,EAGJ,IACE,MAAM8R,EAAe,IAAA1J,IAAQ7T,OAAAA,SAARwd,MAAAC,QADnB,OAEF,GAAIH,EAAAA,SAAJC,GAAkD,OAIlD,MAAME,OAAAA,EAAAC,SAAAA,GAAuB,IAAA7J,IAAApI,EAAczL,OAAAA,SANzCwd,MAaF,GAAIC,IAAAA,GAAJ,UAA+BC,EAC7B,MAAM,IAAAljB,MAD6C,uCAGrD,MAAAyP,GACApM,EAAAA,KAAAA,IAAAA,iBAAAA,MAAoDsP,IAClDtP,EAAAA,eAAAA,EAAyC,CAAE0E,QAAS0H,MAAAA,OAAT1H,EAAS0H,EADK1H,aAG3D,MAJW0H,IAgCjB,SAAA4R,uBAA+B1E,WAA/BA,IAA+C,IAAAwG,EAC7C,GAAI,oBAAAC,QAAiCA,MAArCxa,QAAoD,OAGpD,MAAMya,EAAWhgB,EAAAA,UAAAA,YACDsZ,EAL6B,GAOvC2G,EAAYD,MAAAA,GAAZC,QAAAA,EAAYD,EAAAA,eAAZC,IAAAA,OAAAA,EAAYD,EAP2BX,MAQ7CY,GAGAF,MAAAA,IAAAA,EAX6CE,GAc/C,SAAA7V,uBACE,MAAM9J,EAAYN,EADYM,UAiB5B,MAAM4f,EAAYhgB,SAAAA,cAjBU,SAkB5BggB,EAAAA,GAAe5f,EAlBa6f,kBAmB5BD,EAAAA,UAnB4B,YAoB5BA,EAAAA,aAAAA,SApB4B,wBAqB5BA,EAAAA,aAAAA,OArB4B,QAsB5BA,EAAAA,cAtB4B9iB,EAAA+T,qBAuB5BjR,SAAAA,KAAAA,YAvB4BggB,GAyB5B,GACG/d,OAADie,MACCje,OADDke,YAECle,OAFDme,UAGCne,OAJHyN,KASEsQ,EAAAA,MADK,SAHL,CACA5f,EAAAA,QAAAA,SAAAA,QADA,EAEAA,EAAAA,iBAAAA,eAAAA,QAFA,EAOF4f,EAAAA,iBAAAA,UAAqC,SAAAK,GACnC,MAAMC,EAAQD,EAAAA,OADoCC,MAE9CA,GAAJ,IAAcA,EAAAA,QAGdxgB,EAAAA,SAAAA,SAAAA,kBAA0D,CACxDmE,OADwDvE,KAExDsgB,UAAWK,EAF6CE,YAO5DngB,EAAAA,cAAAA,iBAAAA,YAAqD,SAAAigB,GACnD,GAAI9jB,EAAAA,WAAAA,IAAJ,qBAAyC,CACvC8jB,EADuCG,iBAGvCH,EAAAA,aAAAA,WAHuC,WAM3CjgB,EAAAA,cAAAA,iBAAAA,QAAiD,SAAAigB,GAC/C,GAAI9jB,EAAAA,WAAAA,IAAJ,qBAAyC,CACvC8jB,EADuCG,iBAGvC,MAAMF,EAAQD,EAAAA,aAHyBC,MAIvC,IAAIA,GAAJ,IAAcA,EAAAA,OAAoB,OAGlCxgB,EAAAA,SAAAA,SAAAA,kBAA2D,CACzDmE,OADyDvE,KAEzDsgB,UAAWK,EAF8CI,aAGzDC,UAHyDL,QAYjE,IAAKvgB,EAALN,sBAAiD,CAC/CjD,EAAAA,WAAAA,IAAAA,mBAD+C,GAE/CuD,EAAAA,KAAAA,IAAAA,sBAAAA,MAAyDsP,IACvD/K,OAAAA,WAAAA,KAD8D+K,MAKlE,IAAKtP,EAALuL,iBAA4C,CAC1CjL,EAAAA,QAAAA,MAAAA,UAAAA,IAD0C,UAE1CA,EAAAA,iBAAAA,YAAAA,UAAAA,IAF0C,UAK5C,IAAKN,EAAL8I,mBAA8C,CAC5CxI,EAAAA,QAAAA,uBAAAA,UAAAA,IAD4C,UAE5CA,EAAAA,iBAAAA,uBAAAA,UAAAA,IAF4C,UAK1CN,EAAJR,wBACEc,EAAAA,QAAAA,SAAAA,UAAAA,IAD+C,UAIjDA,EAAAA,cAAAA,iBAAAA,iBAEE,SAAAigB,GACMA,EAAAA,SAAJ3gB,MACEI,EAAAA,SAAAA,SAAAA,SAAiD,CAAEmE,OADRvE,UApGnB,GA2G9B,KASF,SAAAihB,wBAAAjT,GAEIA,EACE5N,EAAAA,KADQ4N,GAGR5N,EADKuM,oBAZPsU,CA5G4BjT,WA6G5B,MAAAnJ,GACAzE,EAAAA,KAAAA,IAAAA,iBAAAA,MAAoDsP,IAClDtP,EAAAA,eAAAA,EADyDyE,OAyB/D,SAAAsX,uBAA+BzC,WAAAA,EAAAwH,MAA/BA,IAGMxH,IAAetZ,EAAnBoL,MACEpL,EAAAA,QAAAA,6BAD4C,GAK9C,GAAIA,EAAAA,WAAJya,uBAA4D,CAC1D,MAAMuF,EAAWhgB,EAAAA,UAAAA,YACDsZ,EAF0C,GAIpDjR,EAAgBrI,EAAAA,mBAAAA,aACNsZ,EAL0C,GAOtD0G,GAAJ3X,GACEA,EAAAA,SAD6B2X,GAKjCc,GACE9gB,EAAAA,KAAAA,IAAAA,mBAAAA,MAAsDsP,IACpDtP,EAAAA,YAAAA,EAD2D8gB,MAM/D9gB,EA3BoDof,gCA8BtD,SAAA/C,mBAA2B0E,KAA3BA,IAEE,IAFmCC,EAGnC,OAAAD,GACE,IAAA,SACEC,EAAOhO,EAAAA,YADTiO,OADF,MAIE,IAJF,YAKE,IAAA,UACED,EAAOhO,EAAAA,YADTkO,QALF,MAQE,IAAA,cACEF,EAAOhO,EAAAA,YADTmO,YARF,MAWE,IAAA,SACEH,EAAOhO,EAAAA,YADToO,OAXF,MAcE,IAAA,OACEJ,EAAOhO,EAAAA,YADTvP,KAdF,MAiBE,QACEc,OAAAA,WAAAA,MAA2B,sCAD7Bwc,GAjBF,OAqBA/gB,EAAAA,WAAAA,WAAAA,GAxBmC,GA2BrC,SAAAsc,qBAAAiE,GAGE,OAAQA,EAARc,QACE,IAAA,WACErhB,EAAAA,UAAAA,QAAAA,WADFshB,SADF,MAKE,IAAA,OACOthB,EAALR,wBACEQ,EAAAA,QADgDuhB,SANtD,MAWE,IAAA,QACEvhB,EADF2W,kBAXF,MAeE,IAAA,SACEgG,iBAKN,SAAAJ,iCAAAgE,GACEvgB,EAAAA,UAAAA,sBAAuDugB,EADViB,MAI/C,SAAApF,4BAAAmE,GACEvgB,EAAAA,kBAAAA,uBACEA,EAAAA,WAFsCya,uBAIxC,GAAIza,EAAJgC,iBAA2C,CAAA,IAAAyf,EAEzCzhB,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,GAAAA,EAAAA,IAAAA,cAA+CugB,EAA/CvgB,MAAAA,OAA+D,UAMnE,SAAAgc,wBAAAuE,GACE,MAAMmB,EAAWnB,EADmBmB,SAGnC,GAAI1hB,EAAJgC,iBAA2C,CAAA,IAAA2f,EAE1C,MAAMC,EAFoC,QAGtCF,IAAAA,EAAAA,YAAJ,OAAyCA,EAAAA,aACvCE,EAAAA,KAAgBF,EADqDpI,YAGnEoI,EAAJG,QACED,EAAAA,KAAgBF,EADEG,OAGhBH,EAAJI,OACEF,EAAAA,WAAsBF,EADLI,MAGfJ,EAAJK,MACEH,EAAAA,UAAqBF,EADLK,UAGdL,IAAAA,EAAAA,UAAJ,OAAuCA,EAAAA,WACrCE,EAAAA,SAAoBF,EAD6C5O,UAGnE9S,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,GAAAA,EAAAA,YAAAA,GAAAA,OAES,SAIX,MAAM2f,EAAO3f,EAAAA,eAAAA,aACX0hB,EA5BkCM,eA8BpChiB,EAAAA,UAAAA,QAAAA,aAAAA,KA9BoC2f,EA+BpC3f,EAAAA,UAAAA,iBAAAA,mBAAAA,KA/BoC2f,EAmCpC,MAAMsC,EAAcjiB,EAAAA,UAAAA,YACJA,EAAAA,KApCoB,GAsC9BkiB,GAAUD,MAAAA,OAAAA,EAAAA,EAAAA,kBAAgCE,EAAAA,gBAtCZC,SAuCpCpiB,EAAAA,QAAAA,4BAvCoCkiB,GA0CtC,SAAAzE,2BAAA8C,GACE,GAAIvgB,EAAJgC,iBAA2C,CAAA,IAAAqgB,EAEzCriB,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,GAAAA,EAAAA,IAAAA,aAA8CugB,EAA9CvgB,MAAAA,OAA8D,UAMlE,SAAA2d,2BAAA4C,GACE,GAAIvgB,EAAJgC,iBAA2C,CAAA,IAAAsgB,EAEzCtiB,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,GAAAA,EAAAA,IAAAA,aAA8CugB,EAA9CvgB,MAAAA,OAA8D,UAMlE,SAAA6b,kBACE,MAAMtb,YAAAA,EAAAG,UAAAA,GADmBV,EAEzB,IAAAO,EAAkB,OAGlB,MAAMyK,EAAoBtK,EALDsK,kBAOvBA,SAAAA,GAAAA,aACAA,GAFF,eAGEA,IAGAtK,EAAAA,kBAFAsK,GAIFtK,EAdyBgU,SAiB3B,SAAAoH,oBAAAyE,GAAkC,IAAAgC,EAChC,MAAM5d,EAAO4b,EADmB5b,KAEhCA,IAGK3E,EAALgC,iBAEW,QAAAugB,EAACviB,EAAAA,kBAAD,IAAAuiB,GAACviB,EAALwiB,oBACLxiB,EAAAA,eAAAA,QAD+D2E,GAD/D3E,EAAAA,gBAD0C2E,GAS5CsZ,EAA2B,SAAAsC,GAAe,IAAAkC,EACxC,GAAA,QAAAA,EAAIziB,EAAAA,iBAAJ,IAAAyiB,GAAIziB,EAAJ0K,qBAA0D,OAG1D,MAAMkD,EAAO2S,EAAAA,UAAAA,MAJ2B,GAMxC,GAAKloB,EAAAA,oBAALqqB,uBAMO,CACL1iB,EAAAA,iBAAsC4N,EADjC/Q,MAGL,MAAM8lB,EAAa,IAHdtC,WAILsC,EAAAA,OAAoB,SAAAC,gCAAAzE,GAClB,MAAM0E,EAAS1E,EAAAA,OADmD2E,OAElE9iB,EAAAA,KAA0B,IAAA+iB,WAFwCF,KAIpEF,EAAAA,kBARK/U,OAN0C,CAC/C,IAAIxL,EAAM4T,IAAAA,gBADqCpI,GAE3CA,EAAJ/Q,OACEuF,EAAM,CAAAA,IAAAA,EAAO6L,YAAaL,EAApB/Q,OAERmD,EAAAA,KAL+CoC,KAkBnD8b,EAAoB,SAAAqC,GAClB,MAAMJ,EAAoBngB,EAAAA,UADOmgB,kBAEjCjgB,SAAAA,eAAAA,GAFiC8iB,SAMrC,SAAAxG,4BACExc,EADmCyb,0BAGrC,SAAAgB,iBACEzc,EADwB2W,kBAG1B,SAAA+F,oBACE1c,EAAAA,eAAoC,CAAEoN,gBADX,aAG7B,SAAAuP,gBACE3c,EAAAA,eAAoC,CAAEoN,gBADf,SAGzB,SAAAwP,qBACM5c,EAAJO,cACEP,EAAAA,KADoC,GAIxC,SAAA6c,oBACM7c,EAAJO,cACEP,EAAAA,KAA4BA,EADQkL,YAIxC,SAAA4R,oBACE9c,EAAAA,UAD2BijB,WAG7B,SAAAlG,wBACE/c,EAAAA,UAD+BkjB,eAGjC,SAAAlG,kBACEhd,EADyByK,SAG3B,SAAAwS,mBACEjd,EAD0B6K,UAG5B,SAAAqS,qBACEld,EAD4B+K,YAG9B,SAAAoS,2BAAAoD,GACE,MAAM7f,EAAYV,EADqBU,UAIvC,KAAI6f,EAAAA,OACFvgB,EAAAA,eAAAA,SAA6CugB,EADzB/mB,OAOpB+mB,EAAAA,QAAc7f,EAAAA,kBAAd6f,YACAA,EAAAA,QAAc7f,EAFhBqY,kBAIE/Y,EAAAA,QAAAA,cACEU,EADFV,kBAEEU,EAHFqY,kBAOJ,SAAAqE,sBAAAmD,GACEvgB,EAAAA,UAAAA,kBAAmDugB,EADjB/mB,MAGpC,SAAA6jB,oBACErd,EAAAA,YAD2B,IAG7B,SAAAsd,qBACEtd,EAAAA,aAD4B,IAG9B,SAAAud,+BAAAgD,GACEvgB,EAAAA,UAAAA,6BAA8DugB,EADnB/V,QAG7C,SAAAgT,0BAAA+C,GACEvgB,EAAAA,UAAAA,WAA4CugB,EADNQ,KAGxC,SAAArD,0BAAA6C,GACEvgB,EAAAA,UAAAA,WAA4CugB,EADNQ,KAGxC,SAAAnD,8BACE5d,EAAAA,sBADqCuO,OAIvC,SAAAsP,yBAAA0C,GACEvgB,EAAAA,SAAAA,SAAAA,OAA+C,CAC7CmE,OAAQoc,EADqCpc,OAE7CwK,KAF6C,GAG7CwU,MAAO5C,EAHsC4C,MAI7CC,aAAc7C,EAJ+B6C,aAK7CC,eAL6C,EAM7CC,YAN6C,EAO7CC,eAP6C,EAQ7CC,aAR6C,EAS7CC,cAT6C,EAU7CC,cAV6C,IAcjD,SAAA5F,iCAAyC6F,aAAzCA,IACM3jB,EAAJR,uBACEQ,EAAAA,iBAAAA,uBAD+C2jB,GAG/C3jB,EAAAA,QAAAA,mBADK2jB,GAKT,SAAA5F,iCAAyCyD,MAAAA,EAAAoC,SAAAA,EAAAD,aAAAA,EAAAE,SAAzCA,IAMM7jB,EAAJR,uBACEQ,EAAAA,iBAAAA,uBAA6D,CAC3D8iB,OAD2DtB,EAE3DkC,aAF2DE,EAAAD,aAAAA,EAAAE,SAAAA,IAO7D7jB,EAAAA,QAAAA,cAAAA,EAAAA,EADK2jB,GAKT,SAAAzH,uBAAAqE,GACEvgB,EAAAA,QAAAA,aAA0CugB,EAA1CvgB,YAA2DugB,EADxBsB,OAGnC7hB,EAAAA,UAHmC0U,SAMrC,SAAAyH,0BAAAoE,GACEvgB,EAAAA,mBAAAA,cAAwDugB,EADlB5G,cAGtC3Z,EAHsC8J,iBAKtC9J,EAAAA,UAAAA,kBAAmDugB,EALbjH,WAQxC,SAAA2C,uBAA+B3C,WAAAA,EAAAwK,UAA/BA,IACE9jB,EAAAA,QAAAA,cAAAA,EADwD8jB,GAExD9jB,EAAAA,iBAAAA,cAFwDsZ,GAIpDtZ,EAAAA,WAAJya,wBACEza,EAAAA,mBAAAA,wBAD0DsZ,GAG5D,MAAMyK,EAAkB7jB,SAAAA,eAPgC,cAQxD,GAAA6jB,EAAqB,CACnB,MAAMC,EAAkB,IAAAC,YADL,eAEnBF,EAAAA,cAFmBC,IAMvB,SAAA3F,0BAAAkC,GACE,YAAIrgB,SAAAA,iBAEFgkB,yBAIJ,IAAIC,EAvtFJ,KAwtFA,SAAAD,yBACEC,GACEzS,aADuByS,GAGzBA,EAAsBxS,YAAW,WAC/BwS,EAD2C,OA5tF/C,KAiuFA,SAAAC,eAAA7D,GACE,MAAM7f,UAAAA,EAAAf,oCAAAA,GADqBK,EAI3B,GAAIU,EAAJgK,qBAAoC,OAIpC,MAAM2Z,GACH9D,EAAA1gB,QAAA,EAAD,IACC0gB,EAAA+D,OAAA,EADD,IAEC/D,EAAAgE,SAAA,EAFD,IAGChE,EAAAzgB,QAAA,EAZwB,GAc3B,GAAIqC,OAAAA,cAAuBA,OAAAA,aAAAA,EAA3B,SAA8D,OAK9D,MAAMqiB,EAAqB/nB,EAAAA,WAAAA,IAnBA,eAwB3B,GAFG8jB,EAAAA,SAAe5gB,EAAhBE,SAAiE0gB,EAAAA,SAAe5gB,EAtBvDG,QAuBD2kB,SAA4BD,EAvB3B,SAuB2DA,EAC/D,CAGrBjE,EAHqBG,iBAKrB,GAAIyD,GAAJ,WAA2BjkB,SAAAA,gBAAuC,OAIlE,MAAMwkB,EAAgBhkB,EATDikB,aAWfnJ,GAAQoJ,EAAAA,EAAAA,8BAXOrE,GAYrB,IAAItB,EAZiB,EAarB,GACEsB,EAAAA,YAAkBsE,WAAlBtE,gBACAA,EAAAA,YAAkBsE,WAFpBC,eASI7F,EADE5N,KAAAA,IAAAA,IAAJ,EACUA,KAAAA,KADgBmK,GAKhBxb,EAAAA,qBAHHwb,OAKF,CAEL,MAAMuJ,EAFD,GAGL9F,EAAQjf,EAAAA,qBACNwb,EAJGuJ,GAQH9F,EAAJ,EACEjf,EAAAA,SADaif,GAEJA,EAAJ,GACLjf,EAAAA,OADoBif,GAItB,MAAM0F,EAAejkB,EA1CAikB,aA2CrB,GAAID,IAAJC,EAAoC,CAIlC,MAAMK,EAAwBL,EAAAA,EAJI,EAK5BM,EAAOvkB,EAAAA,UALqBwkB,wBAM5BC,EAAK5E,EAAAA,QAAc0E,EANSnD,KAO5BsD,EAAK7E,EAAAA,QAAc0E,EAPSlD,IAQlCrhB,EAAAA,UAAAA,YAAkCykB,EARAH,EASlCtkB,EAAAA,UAAAA,WAAiC0kB,EATCJ,QAYpCd,yBAoBJ,SAAA3F,eAAAgC,GACE,IAAKvgB,EAAAA,iBAALqlB,OAAmD,OAGnD,MAAM/kB,EAAYN,EAJSM,UAK3B,GACEN,EAAAA,UAAAA,gBAA+CugB,EAA/CvgB,SACCM,EAAAA,QAAAA,UAAAA,SAAqCigB,EAArCjgB,SACCigB,EAAAA,SAAejgB,EAAAA,iBAHnBglB,aAIE,CACA,GACE/E,EAAAA,QACAA,EAAAA,OAAAA,gBAA6BjgB,EAAAA,iBAF/BglB,aAGE,OAGF,GACE/E,EAAAA,QACAA,EAAAA,OADAA,eAEAA,EAAAA,OAAAA,cAAAA,gBACEjgB,EAAAA,iBAJJglB,aAKE,OAIFtlB,EAAAA,iBAhBA8N,SAoBJ,SAAA0Q,iBAAA+B,GACE,GAAIvgB,EAAAA,eAAJulB,OAAgD,OAGhD,MAAMzjB,SAAAA,EAAApB,UAAAA,GAJuBV,EAKvBwlB,EAA6B9kB,EALNgK,qBAO7B,IAAI+a,GAAJ,EACEC,GAR2B,EAS7B,MAAMrB,GACH9D,EAAA1gB,QAAA,EAAD,IACC0gB,EAAA+D,OAAA,EADD,IAEC/D,EAAAgE,SAAA,EAFD,IAGChE,EAAAzgB,QAAA,EAb0B,GAe7B,GAAIqC,OAAAA,cAAuBA,OAAAA,aAAAA,EAAyBoe,EAApDoF,SAAkE,OAKlE,GAAItB,IAAAA,GAAAA,IAAaA,GAAbA,IAA0BA,GAA9B,KAA2CA,EAEzC,OAAQ9D,EAARoF,SACE,KAAA,GACE,IAAK3lB,EAADR,yBAAiD+gB,EAArDgE,SAAmE,CACjEvkB,EAAAA,QADiEuO,OAEjEkX,GAFiE,EAFvE,MAOE,KAAA,GACE,IAAKzlB,EAALR,uBAAkD,CAChD,MAAMgiB,MAAAA,GAAYxhB,EAD8BsH,eAEhD,GAAAka,EAAW,CACT,MAAMoE,EAAattB,OAAAutB,OAAcvtB,OAAAA,OAAd,MAAAkpB,EAA0C,CAC3Drd,OAD2DhC,OAE3DwM,KAF2D,QAG3D+U,aAAcW,IAAAA,GAH6C,KAGhCA,IAE7BviB,EAAAA,SAAAA,OANS8jB,GAQXH,GAVgD,EARtD,MAqBE,KArBF,GAsBE,KAtBF,IAuBE,KAvBF,IAwBE,KAAA,IACED,GACExlB,EAD+ByK,SAGjCgb,GAJF,EAxBF,MA8BE,KA9BF,IA+BE,KA/BF,IAgCE,KAAA,IACED,GACExlB,EAD+B6K,UAGjC4a,GAJF,EAhCF,MAsCE,KAtCF,GAuCE,KAAA,GACE,IAAAD,EAAiC,CAE/B7T,YAAW,WAET3R,EAFqB+K,eAIvB0a,GAN+B,EAxCrC,MAkDE,KAAA,GACE,GAAID,GAA8BxlB,EAAAA,KAAlC,EAAiE,CAC/DA,EAAAA,KAD+D,EAE/DylB,GAF+D,EAG/DC,GAH+D,EAnDrE,MAyDE,KAAA,GACE,GACEF,GACAxlB,EAAAA,KAA4BA,EAF9BkL,WAGE,CACAlL,EAAAA,KAA4BA,EAD5BkL,WAEAua,GAFA,EAGAC,GAHA,GAWN,GAAIrB,IAAAA,GAAJ,IAAiBA,EACf,OAAQ9D,EAARoF,SACE,KAAA,GACE7jB,EAAAA,SAAAA,WAA8B,CAAEqC,OADlChC,SAEEsjB,GAFF,EADF,MAME,KAAA,GAEI3jB,EAAAA,SAAAA,WAA8B,CAAEqC,OAD+BhC,SAE/DsjB,GAF+D,EAUzE,GAAIpB,IAAAA,GAAJ,KAAiBA,EACf,OAAQ9D,EAARoF,SACE,KAAA,GACE3lB,EADFyb,0BAEEgK,GAFF,EADF,MAKE,KAAA,GAEEzlB,EAAAA,UAAAA,QAAAA,WAFFshB,SAGEmE,GAHF,EAQJ,GAAAA,EAAa,CACPC,IAAJF,GACE9kB,EADsD6T,QAGxDgM,EAJWG,iBAAA,OAUb,MAAMoF,GAxIuB,EAAA1oB,EAAA2oB,6BAyIvBC,EAAoBF,MAAAA,OAApBE,EAAoBF,EAAAA,QAzIGG,cA0I7B,KACED,UAAAA,GAAAA,aACAA,GADAA,WAEAA,GACAF,MAAAA,GAAAA,EAJFI,oBAOE,KAAI3F,EAAAA,QAPN,CAaA,GAAA,IAAI8D,EAAW,CACb,IAAI8B,EAAJ,EACEC,GAFW,EAGb,OAAQ7F,EAARoF,SACE,KADF,GAEE,KAAA,GAEMjlB,EAAJ2lB,6BACED,GADwC,GAG1CD,GALF,EAFF,MASE,KAAA,EACEX,IACEY,GAD+B,GAGjCD,GAJF,EATF,MAeE,KAAA,GAEMzlB,EAAJ4lB,+BACEF,GAD0C,GAI9C,KArBF,GAsBE,KAAA,GACED,GADF,EAtBF,MAyBE,KAAA,GACE,GAAInmB,EAAAA,iBAAJqlB,OAAkD,CAChDrlB,EAAAA,iBADgD8N,QAEhD2X,GAFgD,EAIlD,IACGzlB,EAADR,wBACAQ,EAAAA,QAFFumB,OAGE,CACAvmB,EAAAA,QADA8N,QAEA2X,GAFA,EAjCN,MAsCE,KAtCF,GAuCE,KAAA,GAEM/kB,EAAJ2lB,6BACED,GADwC,GAG1CD,EALF,EAvCF,MA8CE,KA9CF,GA+CE,KAAA,GACEX,IACEY,GAD+B,GAGjCD,EAJF,EA/CF,MAqDE,KAAA,GAEMzlB,EAAJ4lB,+BACEF,GAD0C,GAI9C,KA3DF,GA4DE,KAAA,GACED,EADF,EA5DF,MAgEE,KAAA,GACE,GAAIX,GAA8BxlB,EAAAA,KAAlC,EAAiE,CAC/DA,EAAAA,KAD+D,EAE/DylB,GAF+D,EAG/DC,GAH+D,EAjErE,MAuEE,KAAA,GACE,GACEF,GACAxlB,EAAAA,KAA4BA,EAF9BkL,WAGE,CACAlL,EAAAA,KAA4BA,EAD5BkL,WAEAua,GAFA,EAGAC,GAHA,EA3EN,MAkFE,KAAA,GACE1lB,EAAAA,eAAAA,WAA+CwmB,EAAAA,WADjDC,QAlFF,MAqFE,KAAA,GACEzmB,EAAAA,eAAAA,WAA+CwmB,EAAAA,WADjDE,MArFF,MAyFE,KAAA,GACE1mB,EAAAA,YADF,IAzFF,MA6FE,KAAA,IACEA,EAAAA,WADFuhB,SAKF,GACE4E,IAAAA,KACCC,GAFH,aAEyB1lB,EAAAA,mBACvB,CACIylB,EAAJ,EACEzlB,EADgBuiB,WAGhBviB,EADKwiB,eAGPuC,GANA,GAWJ,GAAA,IAAIpB,EACF,OAAQ9D,EAARoF,SACE,KADF,GAEE,KAAA,GACE,IACEH,GADF,aAEE9kB,EAAAA,kBACA,MAGFA,EAPFwiB,eASEuC,GATF,EAFF,MAcE,KAAA,GACEzlB,EAAAA,aADF,IAQA0lB,IAAwBhlB,EAAAA,gBAA5BolB,IAIEplB,EAJiE6T,QAOnEkR,GACElF,EADWG,kBAKf,SAAAnH,aAAAgH,GACEA,EADyBG,iBAEzBH,EAAAA,YAFyB,GAGzB,OAHyB,EAO3B,MAAM/U,EAAyB,CAC7Bmb,SAAU,CACRpb,kBADQ,EAERqb,qBACE,MAAM,IAAAjqB,MADa,meC13EzB,SAAA0X,2BAAA6G,GACE,IAAIhI,EAAaC,EAAjB0T,SACEzT,EAAaC,EAF2B5P,KAI1C,OAAAyX,GACE,IAAA,aACEhI,EAAaC,EADf2T,KADF,MAIE,IAAA,YAJF,MAME,IAAA,cACE5T,EAAaC,EAPjB2T,KASE,IAAA,gBACE1T,EAAaC,EADf0T,IATF,MAYE,IAAA,eACE7T,EAAaC,EAbjB2T,KAeE,IAAA,iBACE1T,EAAaC,EADf2T,KAIF,MAAO,CAAA9T,WAAAA,EAAAE,WAAAA,+BAWT,SAAAgB,yBAAA2M,GACE,OAAAA,GACE,IAAA,UACE,OAAO/N,EAFXvP,KAGE,IAAA,YACE,OAAOuP,EAJXiO,OAKE,IAAA,cACE,OAAOjO,EANXkO,QAOE,IAAA,iBACE,OAAOlO,EARXmO,YASE,IAAA,QACE,OAAOnO,EAVXoO,OAYA,OAAOpO,EAb+BvP,4BA5jBxC,SAAAwjB,oBAAAC,GAEE,GAAI7V,KAAAA,MAAAA,KAAJ6V,EACE,MAAO,CAAAA,EAAA,GAET,MAAMC,EAAO,EALiBD,EAO9B,GAAIC,EAP0B,EAQ5B,MAAO,CAAA,EARqB,GASvB,GAAI9V,KAAAA,MAAAA,KAAJ8V,EACL,MAAO,CAAA,EAAAA,GAGT,MAAMC,EAAKF,EAAAA,EAAAA,EAbmBA,EAe9B,IAf8BpE,EAe1BuE,EAAJ,EACEC,EADF,EAEEC,EAFF,EAGEC,EAlB4B,EAoB9B,OAAa,CAEX,MAAMC,EAAIJ,EAAVE,EACEG,EAAIJ,EAHKE,EAIX,GAAIE,EAxBwB,EAwBb,MAGf,GAAIN,GAAMK,EAAVC,EAAiB,CACfH,EADeE,EAEfD,EAFeE,MAGV,CACLL,EADKI,EAELH,EAFKI,GAQP5E,EADEsE,EAAKC,EAALD,EAAaG,EAAAA,EAAjBH,EACWA,IAAAF,EAAW,CAAAG,EAAAC,GAAS,CAAAA,EAAAD,GAEpBD,IAAAF,EAAW,CAAAK,EAAAC,GAAS,CAAAA,EAAAD,GAE/B,OA1C8BzE,mJAogBhC,SAAAiD,4BACE,IAAI4B,EAD+BznB,SAE/B0nB,EACFD,EAAAA,eAAyBA,EAAAA,cAHQ,UAKnC,KAAA,QAAAE,EAAOD,SAAP,IAAAC,GAAOD,EAAPE,YAAuC,CAAA,IAAAD,EACrCF,EAAUC,EAD2BE,WAErCF,EACED,EAAAA,eAAyBA,EAAAA,cAHU,UAMvC,OAXmCC,oBAnrBrC,SAAAG,eAAAC,GACE,MAAMC,EAAmB9lB,OAAAA,kBADE,EAErB+lB,EACJF,EAAAA,8BACAA,EADAA,2BAEAA,EAFAA,wBAHyB,EAOrBG,EAAaF,EAPQC,EAQ3B,MAAO,CACLE,GADKD,EAELE,GAFKF,EAGLG,OAHK,IAGGH,wBAwOZ,SAAAI,mBAA2BvH,KAAAA,EAAAwH,SAAAA,EAAAC,OAA3BA,IACE,MAAMC,EAAAC,EAAAC,EAAAC,GAD+C7H,EAG/C8H,EAAoBL,EAAAA,KAH2B,EAK/CM,GAAUH,EAADF,GAAD,GALuCF,EAM/CQ,GAAWH,EAADF,GAAD,GANsCH,EAQrD,MAAO,CACLO,MAAOD,EAAAA,EADFC,EAELC,OAAQF,EAAAA,EAFHE,yBA8HT,SAAAC,oBAA4BC,SAAAA,EAAAC,MAAAA,EAAAC,iBAG1BA,GAH0B,EAAAC,WAI1BA,GAJ0B,EAAAC,IAK1BA,GALF,IAOE,MAAMvH,EAAMmH,EAAZrW,UACE0W,EAASxH,EAAMmH,EAFhBM,aAGK1H,EAAOoH,EAAbtW,WACE6W,EAAQ3H,EAAOoH,EAJhBQ,YA6BD,MAAMC,EAAN,GACEC,EAAM,IADR3mB,IAEE4mB,EAAWV,EA/BZ3iB,OAgCD,IAAIsjB,EAAyBC,sBAAAA,EAE3BV,EAZF,SAAAW,mCAAAhJ,GACE,MAAMiJ,EAAUjJ,EADgCkJ,IAE1CC,EAAcF,EAAAA,WAAqBA,EAFOG,WAG1CC,EAAeF,EAAcF,EAHaP,YAIhD,OAAOJ,EAAMa,EAANb,EAA4Be,EAJavI,GANlD,SAAAwI,4BAAAtJ,GACE,MAAMiJ,EAAUjJ,EADyBkJ,IAIzC,OADED,EAAAA,UAAoBA,EAApBA,UAAwCA,EAHDT,aAAAzH,IA0BzC+H,EAAAA,GACAA,EADAA,IADFT,IAUES,EAAyBS,kCAAAA,EAAAA,EANzBxI,IAqBF,IAAIyI,EAAWnB,EAAAA,GAlEd,EAoED,IAAK,IAAI/iB,EAATwjB,EAAqCxjB,EAArCujB,EAAmDvjB,IAAK,CACtD,MAAM0a,EAAOmI,EAAb7iB,GACE2jB,EAAUjJ,EAF0CkJ,IAGhDO,EAAeR,EAAAA,WAAqBA,EAHYG,WAIhDM,EAAgBT,EAAAA,UAAoBA,EAJYU,UAKhDC,EAAYX,EAAlBP,YACEmB,EAAaZ,EANuCT,aAOhDsB,EAAYL,EAPoCG,EAQhDG,EAAaL,EARmCG,EAUtD,IAAA,IAAIL,EAKEO,GAAJxB,IACEiB,EADwBO,QAGrB,IAAK1B,EAAAoB,EAADC,GAAJF,EAA4D,MAInE,GACEO,GAAAA,GACAL,GADAK,GAEAD,GAFAC,GAGAN,GAJFhB,EAKE,SAIF,MAAMuB,EACJ3Z,KAAAA,IAAAA,EAAY0Q,EAAZ1Q,GAAmCA,KAAAA,IAAAA,EAAY0Z,EAhCKxB,GAiChD0B,EACJ5Z,KAAAA,IAAAA,EAAYyQ,EAAZzQ,GAAmCA,KAAAA,IAAAA,EAAYyZ,EAlCKrB,GAqCpDyB,GAAiBN,EAADK,GArCoCL,EAsChDhc,GAFkBic,EAADG,GAAvBH,EAEiBM,EAAD,IAtCsC,EAwCtDxB,EAAAA,KAAa,CACXyB,GAAIpK,EADOoK,GAEXlE,EAFWuD,EAGXY,EAHWX,EAAA1J,KAAAA,EAAApS,QAAAA,EAMX0c,aAAc,IAACJ,EANJ,IAQbtB,EAAAA,IAAQ5I,EAhD8CoK,IAmDxD,MAAMG,EAAQ5B,EAAd,GACE6B,EAAO7B,EAAQA,EAAAA,OAxHhB,GA0HDP,GACEO,EAAAA,MAAa,SAAAtC,EAAAC,GACX,MAAMmE,EAAKpE,EAAAA,QAAYC,EADI1Y,QAE3B,OAAIyC,KAAAA,IAAAA,GAAJ,MAA0Boa,EAGnBpE,EAAAA,GAAOC,EALa8D,MAQ/B,MAAO,CAAAG,MAAAA,EAAAC,KAAAA,EAAerC,MAAfQ,EAAAC,IAAAA,4BAyDT,SAAA8B,sBAAAjf,GACE,OAAOA,EAAAA,OAAcA,EADcuc,0BApBrC,SAAAtP,gBAAAD,GACE,OAAOtc,OAAAA,UAAAA,IAA2Bsc,EAAAA,IADJ,uBAIhC,SAAAK,kBAAAiH,GACE,OACE5jB,OAAAA,UAAAA,IACA7E,OAAAA,OAAAA,GAAAA,SADA6E,IAEA4jB,IAAS5N,EAJoBF,6BAQjC,SAAA8G,kBAAAgH,GACE,OACE5jB,OAAAA,UAAAA,IACA7E,OAAAA,OAAAA,GAAAA,SADA6E,IAEA4jB,IAAS1N,EAJoBJ,gCA3CjC,SAAA9B,qBAAAoP,GACEA,EADiCG,6CAcnC,SAAAiL,yBAAApL,GACE,IAAI/E,EAAQoJ,6BADyBrE,GAAA,IASjCA,EAAAA,UACF/E,GAASoQ,IAV0B,IAW1BrL,EAAAA,YACT/E,GAZmC,IAcrC,OAdqCA,kFAtZvC,SAAA3W,iBAAAse,GACE,MAAMve,EAAS,IADgBinB,IAE/B,IAAA,MAAWrvB,EAAXhD,KAA2B,IAAAsyB,gBAA3B3I,GACEve,EAAAA,IAAWpI,EAAXoI,cADqDpL,GAGvD,OAL+BoL,mBA4FjC,SAAAmnB,cAAA7E,EAAAgD,GACE,MAAM8B,EAAI9E,EADmBgD,EAE7B,OAAO8B,IAAAA,EAAAA,EAAc3a,KAAAA,MAAW6V,EAAAA,EAFHgD,qBAnM/B,SAAA+B,eAAAhC,EAAAiC,EAAuCC,GAAvC,EAA8DC,GAA9D,GAOE,GAAInC,EAAAA,UAAAA,SAAJ,aAA6C,CAC3C1lB,OAAAA,WAAAA,IAD2C,6BAAA,OAM7C,IAAI8nB,EAASpC,EAbqEqC,aAclF,IAAAD,EAAa,CACX9nB,OAAAA,WAAAA,MADW,4CAAA,OAIb,IAAIgoB,EAAUtC,EAAAA,UAAoBA,EAlBgDU,UAmB9E6B,EAAUvC,EAAAA,WAAqBA,EAnB+CG,WAoBlF,KACGiC,EAAAA,eAAwBA,EAAxBA,cACCA,EAAAA,cAAuBA,EADzBI,aAECN,IACEE,EAAAK,UAAAC,SAAA,kBAJL,WAKMC,iBAAAA,GAAAA,WACJ,CACAL,GAAWF,EADXQ,UAEAL,GAAWH,EAFXS,WAIAT,EAASA,EAJTC,aAKA,IAAAD,EAAa,CAEX,GAAAD,GACMlsB,SAAAA,KAAAA,aAAJqsB,EAA0C,CAExCA,GAFwC,GAGxCpqB,OAAAA,SAAgBA,OAAhBA,QAHwCoqB,GAHjC,QAaf,GAAAL,EAAU,MACRnvB,IAAImvB,EAAAA,MACFK,GAAWL,EADenK,KAG5B,QAAAhlB,IAAImvB,EAAAA,KAAyB,CAC3BM,GAAWN,EADgBpK,KAE3BuK,EAAAA,WAF2BG,GAK/BH,EAAAA,UArDkFE,iBA4DpF,SAAAQ,YAAAC,EAAAtgB,GACE,MAAMugB,eAAiB,SAAA1M,GACrB2M,IAIAA,EAAM/qB,OAAAgrB,uBAA6B,SAAAC,0BACjCF,EADoE,KAGpE,MAAMG,EAAWL,EAHmDpa,WAI9D0a,EAAQ9L,EAJsD8L,MAKhED,IAAJC,IACE9L,EAAAA,MAAc6L,EADQC,GAGxB9L,EAAAA,MARoE6L,EASpE,MAAME,EAAWP,EATmDna,UAU9D2a,EAAQhM,EAVsDgM,MAWhED,IAAJC,IACEhM,EAAAA,KAAa+L,EADSC,GAGxBhM,EAAAA,MAdoE+L,EAepE7gB,EAfoE8U,QAmBlEA,EAAQ,CACZiI,OADY,EAEZgE,MAFY,EAGZH,MAAON,EAHKpa,WAIZ4a,MAAOR,EAJKna,UAKZ6a,cALYT,gBAQd,IAAIC,EAjC0C,KAkC9CF,EAAAA,iBAAAA,SAAAA,gBAlC8C,GAmC9C,OAnC8CxL,yBA1KhD,uBAAA,wBAAA,gBAAA,eAAA,mBAAA,mBAAA,yBAAA,sBAAA,oBA2BwB,CACtBmM,QADsB,EAEtBC,QAFsB,EAGtBC,OAHsB,EAItBzL,SAJsB,2BAOM,CAC5BnP,QAD4B,EAE5B6a,OAF4B,EAG5BC,SAH4B,EAI5BC,WAJ4B,GAO9B,MAAMhb,EAAc,CAClBC,SADkB,EAElBxP,KAFkB,EAGlBwd,OAHkB,EAIlBC,QAJkB,EAKlBC,YALkB,EAMlBC,OANkB,kCASC,CACnB6M,OADmB,SAEnB3T,IAFmB,uBAKC,CACpBlV,QADoB,EAEpB8oB,OAFoB,EAGpBC,eAHoB,GAMtB,MAAMhb,EAAa,CACjBF,SADiB,EAEjB4T,SAFiB,EAGjBuH,WAHiB,EAIjBC,QAJiB,EAKjBvH,KALiB,kBAQnB,MAAMzT,EAAa,CACjBJ,SADiB,EAEjBxP,KAFiB,EAGjBsjB,IAHiB,EAIjBC,KAJiB,oCArEnB,eAsOA,SAAA+C,sBAAAuE,EAAAC,GACE,IAAIC,EAD2C,EAE3CC,EAAWH,EAAAA,OAFgC,EAI/C,GAAIG,EAAAA,IAAiBF,EAAUD,EAA/BG,IACE,OAAOH,EADwC9nB,OAGjD,GAAI+nB,EAAUD,EAAdE,IACE,OAD8BA,EAIhC,KAAOA,EAAPC,GAA4B,CAC1B,MAAMC,EAAgBF,EAADC,GADK,EAGtBF,EADgBD,EAFMI,IAIxBD,EAD0BC,EAG1BF,EAAWE,EADN,EAIT,OApB+CF,EA2HjD,SAAAjE,kCAAAoE,EAAAxF,EAAApH,GAaE,GAAI4M,EAAJ,EACE,OADaA,EA2Bf,IAAIC,EAAMzF,EAAAA,GAxCkDe,IAyCxD2E,EAAUD,EAAAA,UAAgBA,EAzC8BjE,UA2C5D,GAAIkE,GAAJ9M,EAAoB,CAMlB6M,EAAMzF,EAAMwF,EAANxF,GANYe,IAOlB2E,EAAUD,EAAAA,UAAgBA,EAPRjE,UAkBpB,IAAK,IAAIrkB,EAAIqoB,EAAb,EAAwBroB,GAAxB,IAAAA,EAAqC,CACnCsoB,EAAMzF,EAAAA,GAD6Be,IAEnC,GAAI0E,EAAAA,UAAgBA,EAAhBA,UAAgCA,EAAhCA,cAAJC,EAAiE,MAMjEF,EARmCroB,EAUrC,OAvE4DqoB,EAgQ9D,SAAA/J,6BAAArE,GACE,IAAI/E,EAAQnK,KAAAA,MAAWkP,EAAXlP,OAAuBkP,EADMuO,QAEzC,MAAMrV,EAAQpI,KAAAA,MAAWkP,EAAXlP,OAAuBkP,EAFIwO,SAGrC,IAAQ1d,KAAR2d,GAAAvV,GAA2BA,EAAQ,IAAOpI,KAA9C2d,KAEExT,GAFqDA,GAIvD,OAPyCA,EAsD3C,MAAM/H,EAAmB,IAAA3N,SAAY,SAAA1B,GAWnCjC,OAAAA,QAAAA,mBAAiC,KAC/BA,OAAAA,sBADqCiC,4CASzC,MAAAuH,YACEjP,YAAAA,GAAgBssB,OAAAA,EAAAD,MAAAA,EAAAkG,MAAAA,GAAhBvyB,IACEkD,KAAA+pB,SAD6C,EAI7C/pB,KAAAsqB,IAAWhqB,SAAAA,cAAuBkrB,EAJW,cAMzCxrB,KAAJsqB,MACEtqB,KAAA8L,IAAW9L,KAAAsqB,IADCgF,YAKdtvB,KAAAopB,OAAcA,GAX+B,IAY7CppB,KAAAmpB,MAAaA,GAZgC,IAa7CnpB,KAAAqvB,MAAaA,GAbgC,IAgBzCrvB,KAAJsqB,MACEtqB,KAAAsqB,IAAAiF,MAAAnG,OAAwBppB,KAAAopB,OAAcppB,KAD1BqvB,OAGdrvB,KAAAgP,QAnB6C,EAsB/CwgB,aACE,GAAIxvB,KAAJyvB,eAAyB,CACvBzvB,KAAAsqB,IAAAwC,UAAArX,IADuB,iBAEvBzV,KAAAsqB,IAAAiF,MAAApG,MAAuBnpB,KAAAmpB,MAAanpB,KAFbqvB,MAAA,OAMrBrvB,KAAJsqB,KACEtqB,KAAAsqB,IAAAwC,UAAA4C,OADY,iBAId,MAAMC,EAAgB3vB,KAAAmpB,MAAanpB,KAAd4vB,SAXV,IAYP5vB,KAAJsqB,MACEtqB,KAAAsqB,IAAAiF,MAAApG,MAAuBwG,EAAe3vB,KAD1BqvB,OAKZrgB,cACF,OAAOhP,KADK4vB,SAIV5gB,YAAJtD,GACE1L,KAAAyvB,eAAsB9d,MADPjG,GAEf1L,KAAA4vB,SAlDJ,SAAAC,MAAAC,EAAAC,EAAAC,GACE,OAAOve,KAAAA,IAASA,KAAAA,IAAAA,EAATA,GADmBue,GAkDRH,CAAAA,EAAAA,EAFD,KAGf7vB,KAHewvB,aAMjB7b,SAAAA,GACE,IAAAjO,EAAa,OAGb,MACMuqB,EADYvqB,EAJH4pB,WAKQnnB,YAAwBzC,EALhCwqB,YAMf,GAAID,EAAJ,EAAwB,CACV3vB,SADU6D,gBAEtBgsB,MAAAA,YAruBN,0BAquBuD,GAAAF,QAIrDjkB,OACE,GAAKhM,KAAL+pB,QAAA,CAGA/pB,KAAA+pB,SAJK,EAKL/pB,KAAAsqB,IAAWhqB,SAAAA,cALN,kCAML,GAAIN,KAAJsqB,IAAc,CACZtqB,KAAA8L,IAAW9L,KAAAsqB,IADCgF,WAEZtvB,KAAA8L,IAAAghB,UAAArX,IAFY,UAKdnV,SAAAA,KAAAA,UAAAA,OAXK,sBAcP6O,OACE,IAAInP,KAAJ+pB,QAAA,CAGA/pB,KAAA+pB,SAJK,EAKL/pB,KAAA8L,IAAAghB,UAAA4C,OALK,kJCltBT,SAAAU,sBAA8BvP,OAAAA,EAAA5jB,KAAAA,EAAAozB,MAAgBA,EAA9C,IACE,OAAO,IAAAnqB,SAAY,SAAA1B,EAAA8rB,GACjB,GACE,iBAAAzP,IACE5jB,GADF,iBACUA,KACRM,OAAAgzB,UAAAF,IAA2BA,GAH/B,GAKE,MAAM,IAAAtzB,MADN,8CAIF,SAAAyzB,QAAAzhB,GACM8R,aAAJ1Z,SACE0Z,EAAAA,KAAAA,EAD8B4P,GAG9B5P,EAAAA,oBAAAA,EADK4P,GAIPjb,GACE1D,aADW0D,GAGbhR,EAVqBuK,GAavB,MAAM0hB,EAAeD,QAAAA,KAAAA,KAAmBE,EAtBIC,OAuBxC9P,aAAJ1Z,SACE0Z,EAAAA,IAAAA,EAD8B4P,GAG9B5P,EAAAA,iBAAAA,EADK4P,GAIP,MAAMG,EAAiBJ,QAAAA,KAAAA,KAAmBE,EA7BEG,SA8BtCrb,EAAUzD,WAAAA,EA9B4Bse,OAvBhD,MAAMK,EAAa,CACjBC,MADiB,QAEjBE,QAFiB,0BA6DnB,MAAA1pB,SACErK,cACEkD,KAAA8wB,WAAkBp4B,OAAAA,OADN,MASdq4B,GAAAA,EAAAA,EAAwB1zB,EAAxB0zB,MACE/wB,KAAA8V,IAAAkb,EAAAC,EAA8B,CAC5BC,UAD4B,EAE5Bnb,KAAM1Y,MAAAA,OAAN0Y,EAAM1Y,EAFsB0Y,OAWhCob,IAAAA,EAAAA,EAAyB9zB,EAAzB8zB,MACEnxB,KAAAoxB,KAAAJ,EAAAC,EAA+B,CAC7BC,UAD6B,EAE7Bnb,KAAM1Y,MAAAA,OAAN0Y,EAAM1Y,EAFuB0Y,OAUjCzR,SAAAA,EAAAA,GACE,MAAM+sB,EAAiBrxB,KAAA8wB,WADCE,GAExB,IAAIK,GAAJ,IAAuBA,EAAAA,OAA6B,OAGpD,IALwBC,EAQxB,IAAA,MAAWL,SAAAA,EAAAC,SAAAA,EAAAnb,KAAXA,KAA2Csb,EAAAA,MAA3C,GAAoE,CAClEtb,GACE/V,KAAAoxB,KAAAJ,EADQC,GAGVC,GACGI,IAAD,IAAA9X,KADYyX,GAIdA,EARkEvxB,GAYpE,GAAA4xB,EAAuB,CACrB,IAAA,MAAAL,KAAAK,EACEL,EADwCvxB,GAG1C4xB,EAJqB,MAWzBxb,IAAAA,EAAAA,EAAyBzY,EAAzByY,OAC0B9V,KAAA8wB,WAAAE,KADe,IAEvCK,KAAoB,CAAAJ,SAAAA,EAElBC,UAFkB,KAER7zB,MAAAA,OAAAA,EAAAA,EAAAA,UACV0Y,MAHkB,KAGZ1Y,MAAAA,OAAAA,EAAAA,EAAAA,QAOV+zB,KAAAA,EAAAA,EAA0B/zB,EAA1B+zB,MACE,MAAMC,EAAiBrxB,KAAA8wB,WADiBE,GAExC,GAAAK,EAGA,IAAK,IAAI3qB,EAAJ,EAAWC,EAAK0qB,EAArBzqB,OAA4CF,EAA5CC,EAAoDD,IAClD,GAAI2qB,EAAAA,GAAAA,WAAJJ,EAA6C,CAC3CI,EAAAA,OAAAA,EAD2C,GAAA,kDAWnD,MAAAnqB,2BAAAC,SACE7C,SAAAA,EAAAA,GAEI,MAAM,IAAAvH,MAFgB,uDCxJ5Bw0B,EAAAA,QAAiBhvB,OAAjBgvB,yHClBA,IAAAC,EAAA/zB,EAAA,GAAAD,EAAAC,EAAA,GAkBA,MAAMmpB,EAAa,CACjBC,OADiB,EAEjBC,KAFiB,EAGjB2K,KAHiB,mCAenB,MAAA1oB,eAIEjM,aAAYqL,UAAAA,EAAAjG,SAAAA,EAAApI,iBAAuBA,EAAmB8sB,EAAtD9pB,SACEkD,KAAAmI,UADyEA,EAEzEnI,KAAAkC,SAFyEA,EAIzElC,KAAA2lB,OAAciB,EAJ2DC,OAKzE7mB,KAAA0xB,6BALyE,KAOzE1xB,KAAA2xB,SAAgB,IAAAH,EAAAI,UAAc,CAC5BvH,QAASrqB,KAR8DmI,YAWzEnI,KAXyE6xB,qBAezE3rB,QAAAA,UAAAA,MAAuB,KACrBlG,KAAA8xB,WAD2Bh4B,MAQ3Bi4B,iBACF,OAAO/xB,KADQ2lB,OASjBmM,WAAAA,GACE,GAAA,OAAI9xB,KAAA0xB,6BAA4C,OAGhD,GAAIM,IAAShyB,KAAb2lB,OAA0B,OAI1B,MAAMsM,kBAAoB,KACxB,OAAQjyB,KAAR2lB,QACE,KAAKiB,EAALC,OADF,MAGE,KAAKD,EAALE,KACE9mB,KAAA2xB,SADFO,eASJ,OAAAF,GACE,KAAKpL,EAALC,OACEoL,oBAFJ,MAIE,KAAKrL,EAALE,KACEmL,oBACAjyB,KAAA2xB,SAFFQ,WAJF,MAUE,QACExtB,OAAAA,WAAAA,MAA2B,gBAAAqtB,+BAX/B,OAgBAhyB,KAAA2lB,OArCeqM,EAuCfhyB,KAvCeoyB,iBA6CjBA,iBACEpyB,KAAAkC,SAAAoC,SAAA,oBAA4C,CAC1CC,OAD0CvE,KAE1CgyB,KAAMhyB,KAFoC2lB,SAS9CkM,qBACE7xB,KAAAkC,SAAA4T,IAAA,oBAAsC6K,IACpC3gB,KAAA8xB,WAAgBnR,EAD2BqR,SAI7ChyB,KAAAkC,SAAA4T,IAAA,2BAA6C6K,IAC3C,OAAQA,EAARiB,OACE,KAAKyQ,EAAAA,sBAALjE,WAAuC,CACrC,MAAMkE,EAAmBtyB,KADY2lB,OAGrC3lB,KAAA8xB,WAAgBlL,EAHqBC,QAIrC7mB,KAAA0xB,6BAJqCY,EAAA,MAOvC,KAAKD,EAAAA,sBAALnE,OAAmC,CACjC,MAAMoE,EAAmBtyB,KADQ0xB,6BAGjC1xB,KAAA0xB,6BAHiC,KAIjC1xB,KAAA8xB,WAJiCQ,GAAA,0FCzH3C,MAAMC,EAjBN,+BAmBA,MAAAX,UASE90B,YAAAA,GACEkD,KAAAqqB,QAAehtB,EADIgtB,QAEnBrqB,KAAAM,SAAgBjD,EAAAA,QAFGm1B,cAGnB,mBAAWn1B,EAAPo1B,eACFzyB,KAAAyyB,aAAoBp1B,EAD0Bo1B,cAGhDzyB,KAAA0yB,gBAAuBr1B,EANJq1B,gBAUnB1yB,KAAAmyB,SAAgBnyB,KAAAmyB,SAAA5qB,KAVGvH,MAWnBA,KAAAkyB,WAAkBlyB,KAAAkyB,WAAA3qB,KAXCvH,MAYnBA,KAAA2hB,OAAc3hB,KAAA2hB,OAAApa,KAZKvH,MAanBA,KAAA2yB,aAAoB3yB,MAAK4yB,EAALrrB,KAbDvH,MAcnBA,KAAA6yB,aAAoB7yB,MAAK8yB,EAALvrB,KAdDvH,MAenBA,KAAA+yB,QAAe/yB,MAAKgzB,EAALzrB,KAfIvH,OAmBFA,KAAAizB,QAAe3yB,SAAAA,cAnBb,QAoBnB2yB,UApBmB,uBA0BrBd,WACE,IAAKnyB,KAAL2lB,OAAkB,CAAA,IAAAuN,EAChBlzB,KAAA2lB,QADgB,EAEhB3lB,KAAAqqB,QAAA8I,iBAAA,YAA2CnzB,KAA3C2yB,cAFgB,GAGhB3yB,KAAAqqB,QAAAyC,UAAArX,IAHgB8c,GAKhB,QAAAW,EAAAlzB,KAAA0yB,uBAAA,IAAAQ,GAAAA,EAAAE,KAAApzB,MALgB,IAYpBkyB,aACE,GAAIlyB,KAAJ2lB,OAAiB,CAAA,IAAA0N,EACfrzB,KAAA2lB,QADe,EAEf3lB,KAAAqqB,QAAAiJ,oBAAA,YAA8CtzB,KAA9C2yB,cAFe,GAGf3yB,KAHe+yB,UAIf/yB,KAAAqqB,QAAAyC,UAAA4C,OAJe6C,GAMf,QAAAc,EAAArzB,KAAA0yB,uBAAA,IAAAW,GAAAA,EAAAD,KAAApzB,MANe,IAUnB2hB,SACM3hB,KAAJ2lB,OACE3lB,KADekyB,aAGflyB,KADKmyB,WAYTM,aAAAA,GAEE,QAAInyB,SAAAA,cAAJ,eAMOizB,EAAAA,QARU,yEAanBX,GAAAA,GACE,GAAIrU,IAAAA,EAAAA,QAAsBve,KAAAyyB,aAAkBlU,EAA5CsC,QAA2D,OAG3D,GAAItC,EAAJiV,eACE,IAEEjV,EAAAA,eAFEkV,QAGF,MAAAC,GAAU,OAMd1zB,KAAA2zB,gBAAuB3zB,KAAAqqB,QAdLrX,WAelBhT,KAAA4zB,eAAsB5zB,KAAAqqB,QAfJpX,UAgBlBjT,KAAA6zB,aAAoBtV,EAhBFuV,QAiBlB9zB,KAAA+zB,aAAoBxV,EAjBFyV,QAoBlB,GAAIC,uBAAuBj0B,KAAvBi0B,aAA0Cj0B,KAA1Ci0B,aAAJ,cAAgF,OAGhF,GAAIA,uBAAuBj0B,KAAvBi0B,aAA0Cj0B,KAA1Ci0B,aAAJ,cAAgF,OAKhFj0B,KAAAM,SAAA6yB,iBAAA,YAA4CnzB,KAA5C6yB,cA5BkB,GA6BlB7yB,KAAAM,SAAA6yB,iBAAA,UAA0CnzB,KAA1C+yB,SA7BkB,GAiClB/yB,KAAAqqB,QAAA8I,iBAAA,SAAwCnzB,KAAxC+yB,SAjCkB,GAkClBxU,EAlCkBuC,iBAmClBvC,EAnCkB2V,kBAqClB,MAAMC,EAAiB7zB,SArCL8zB,cAsCdD,IAAmBA,EAAAA,SAAwB5V,EAA/CsC,SACEsT,EAD4DE,OAKhEvB,GAAAA,GACE9yB,KAAAqqB,QAAAiJ,oBAAA,SAA2CtzB,KAA3C+yB,SADkB,GAElB,KAAA,EAAMxU,EAAA+V,SAAoB,CAExBt0B,KAFwB+yB,UAAA,OAK1B,MAAMwB,EAAQhW,EAAAA,QAAgBve,KAPZ6zB,aAQZW,EAAQjW,EAAAA,QAAgBve,KARZ+zB,aASZ9gB,EAAYjT,KAAA4zB,eATAY,EAUZxhB,EAAahT,KAAA2zB,gBAVDY,EAWlB,GAAIv0B,KAAAqqB,QAAJoK,SACEz0B,KAAAqqB,QAAAoK,SAAsB,CACpBtS,IADoBlP,EAEpBiP,KAFoBlP,EAGpB0hB,SAHoB,gBAKjB,CACL10B,KAAAqqB,QAAApX,UADKA,EAELjT,KAAAqqB,QAAArX,WAFKA,EAIFhT,KAAAizB,QAAL3D,YACEhvB,SAAAA,KAAAA,YAA0BN,KADEizB,SAKhCD,KACEhzB,KAAAqqB,QAAAiJ,oBAAA,SAA2CtzB,KAA3C+yB,SADQ,GAER/yB,KAAAM,SAAAgzB,oBAAA,YAA+CtzB,KAA/C6yB,cAFQ,GAGR7yB,KAAAM,SAAAgzB,oBAAA,UAA6CtzB,KAA7C+yB,SAHQ,GAKR/yB,KAAAizB,QALQvD,WAUZ,SAAAuE,uBAAA3M,EAAAmE,EAAAkJ,GACE,MAAOC,EAAmBt0B,SAAAA,uBADmBq0B,GAE7C,GAAIC,GAAJ,IAAwBA,EAAAA,OAA+B,CACrD,IAAIzS,IAAAA,EAAA0H,MAAAA,EAAAF,OAAAA,EAAAzH,KAAAA,GAA6B0S,EAAAA,GADoBtP,wBAErD,GAAImG,GAAAA,GAAYA,GAAhB9B,GACMrC,GAAAA,GAAcA,GAAlBpF,EACE,OAD2B,EAKjC,OAV6C,sGC1K/C,MAAA9a,eACEtK,cACEkD,KAAA60B,UADY,GAEZ70B,KAAA80B,QAFY,KAGZ90B,KAAA+0B,cAAqB/0B,KAAAg1B,SAAAztB,KAHTvH,MAMV2lB,aACF,OAAO3lB,KADI80B,QAiBbxxB,eAAArG,EAAAotB,EAGE4K,EAHF,KAIEC,GAJF,GAME,IADA/sB,EAEA,KAAIlL,GAAAotB,IAAuBliB,EAAYkiB,EAAvCiF,aACE,MAAM,IAAAvyB,MADoD,0BAErD,GAAIiD,KAAA60B,UAAJ53B,GACL,MAAM,IAAAF,MADyB,sCAGjCiD,KAAA60B,UAAA53B,GAAuB,CAAAotB,QAAAA,EAAAliB,UAAAA,EAAA8sB,kBAAAA,EAAAC,cAAAA,GAazB5xB,iBAAArG,GACE,IAAK+C,KAAA60B,UAAL53B,GACE,MAAM,IAAAF,MADmB,+BAEpB,GAAIiD,KAAA80B,UAAJ73B,EACL,MAAM,IAAAF,MAD0B,4DAG3BiD,KAAA60B,UANc53B,GAcvBqG,WAAArG,GACE,IAAK+C,KAAA60B,UAAL53B,GACE,MAAM,IAAAF,MADmB,+BAEpB,GAAIiD,KAAJ80B,QAAkB,CACvB,IAAI90B,KAAA60B,UAAA53B,GAAJi4B,cAEO,MAAIl1B,KAAA80B,UAAJ73B,EACC,IAAAF,MAD0B,kCAG1B,IAAAA,MADD,wCAHLiD,KADsCm1B,sBAQ1Cn1B,KAAA80B,QAZe73B,EAaf+C,KAAA60B,UAAe70B,KAAf80B,SAAAzK,QAAAyC,UAAA4C,OAbe,UAcf1vB,KAAA60B,UAAe70B,KAAf80B,SAAA3sB,UAAA2kB,UAAA4C,OAde,UAgBfntB,OAAAA,iBAAAA,UAAmCvC,KAhBpB+0B,eAwBjBzxB,YAAArG,GACE,IAAK+C,KAAA60B,UAAL53B,GACE,MAAM,IAAAF,MADmB,+BAEpB,IAAKiD,KAAL80B,QACL,MAAM,IAAA/3B,MADkB,wCAEnB,GAAIiD,KAAA80B,UAAJ73B,EACL,MAAM,IAAAF,MAD0B,wCAGlCiD,KAAA60B,UAAe70B,KAAf80B,SAAA3sB,UAAA2kB,UAAArX,IARgB,UAShBzV,KAAA60B,UAAe70B,KAAf80B,SAAAzK,QAAAyC,UAAArX,IATgB,UAUhBzV,KAAA80B,QAVgB,KAYhBvyB,OAAAA,oBAAAA,UAAsCvC,KAZtB+0B,eAkBlBC,SAAAA,GACE,GAAIh1B,KAAA80B,SAAJ,KAAoBnU,EAAAA,QAAgC,CAClD3gB,KADkDm1B,sBAElDxU,EAFkDG,kBAStDqU,sBACMn1B,KAAA60B,UAAe70B,KAAf80B,SAAJG,mBACEj1B,KAAA60B,UAAe70B,KAAf80B,SADkDG,oBAGhDj1B,KAAJ80B,SACE90B,KAAAkO,MAAWlO,KADK80B,+FCtItB,IAAAl3B,EAAAH,EAAA,oBA8BA,MAAA4L,eAQEvM,YAAAA,EAAAA,EAAAA,EAA2CwF,GAA3CxF,GACEkD,KAAAo1B,YAAmB/3B,EADgD+3B,YAEnEp1B,KAAAmI,UAAiB9K,EAFkD8K,UAGnEnI,KAAAiZ,MAAa5b,EAHsD4b,MAInEjZ,KAAAq1B,MAAah4B,EAJsDg4B,MAKnEr1B,KAAAs1B,aAAoBj4B,EAL+Ci4B,aAMnEt1B,KAAAu1B,aAAoBl4B,EAN+Ck4B,aAOnEv1B,KAAA8B,eAPmEA,EAQnE9B,KAAAmC,KARmEA,EASnEnC,KAAAw1B,kBATmElzB,EAWnEtC,KAAAyO,eAXmE,KAYnEzO,KAAA6E,OAZmE,KAenE7E,KAAAs1B,aAAAnC,iBAAA,QAA4CnzB,KAAAy1B,OAAAluB,KAfuBvH,OAgBnEA,KAAAu1B,aAAApC,iBAAA,QAA4CnzB,KAAAkO,MAAA3G,KAhBuBvH,OAiBnEA,KAAAq1B,MAAAlC,iBAAA,WAAuCO,IACrC,KAAIA,EAAAA,SACF1zB,KADkCy1B,YAKtCz1B,KAAA8B,eAAA4zB,SACE11B,KADFo1B,YAEEp1B,KAFFmI,UAGEnI,KAAAkO,MAAA3G,KAHFvH,OAvBmE,GA+BrEsD,mBACQtD,KAAA8B,eAAA6M,KAAyB3O,KADpBo1B,aAEXp1B,KAAAq1B,MAAAtmB,KAFW,WAGX/O,KAAAq1B,MAHW1gB,QAKX,MAAMghB,EACJ31B,KAAA6E,SAAgB+wB,EAAAA,kBANPC,mBAQN71B,KAADw1B,oBAAJG,GACE31B,KAAAq1B,MADgD1gB,QAGlD3U,KAAAiZ,MAAA6c,kBAA+B91B,KAAAmC,KAAAsN,IAC7B,aAAYkmB,EAAAA,UAAZ,UAIJznB,QACElO,KAAA8B,eAAAoM,MAA0BlO,KAA1Bo1B,aAAA/wB,MAAiD,KAC/CrE,KAAAq1B,MAAAtmB,KADqD,GAErD/O,KAAAq1B,MAAAz7B,MAFqD,MAMzD67B,SACE,MAAMM,EAAW/1B,KAAAq1B,MADVz7B,MAEP,IAAIm8B,MAAAA,OAAAA,EAAAA,EAAAA,QAAJ,EAA0B,CACxB/1B,KADwBkO,QAExBlO,KAAAyO,eAFwBsnB,IAM5BrnB,kBAAAA,EAAAA,GACE1O,KAAAyO,eADwCA,EAExCzO,KAAA6E,OAFwCA,6FCrF5C,IAAAjH,EAAAH,EAAA,GAfAu4B,EAAAv4B,EAAA,IA8BA,MAAAiM,4BAAAssB,EAAAC,eAIEn5B,YAAAA,GACEo5B,MADmB74B,GAEnB2C,KAAA6B,gBAAuBxE,EAFJwE,gBAInB7B,KAAAkC,SAAA4T,IAAA,2BAEE9V,KAAAm2B,kBAAA5uB,KANiBvH,OAUrB8N,MAAMsoB,GAANtoB,GACEooB,MADoCpoB,QAEpC9N,KAAAq2B,aAFoC,KAIpCD,IAGEp2B,KAAAs2B,qBAH2B,EAAA14B,EAAA4C,4BAKzBR,KAAJu2B,uBACEzkB,aAAa9R,KADiBu2B,uBAGhCv2B,KAAAu2B,sBAZoC,KAkBtCnE,eAAAA,GACEpyB,KAAAs2B,oBAD+B9xB,UAG/B,GAAIxE,KAAJu2B,sBAAgC,CAC9BzkB,aAAa9R,KADiBu2B,uBAE9Bv2B,KAAAu2B,sBAF8B,KAIhC,IAAIC,EAeJx2B,KAAAkC,SAAAoC,SAAA,oBAA4C,CAC1CC,OAD0CvE,KAAAw2B,iBAAAA,IAV1Cx2B,KAAAu2B,sBAA6BxkB,YAAW,KACtC/R,KAAAkC,SAAAoC,SAAA,oBAA4C,CAC1CC,OAD0CvE,KAE1Cw2B,iBAF0C,IAI5Cx2B,KAAAu2B,sBAL4C,QAmBlDE,UAAAA,GAAmBC,QAAAA,EAAA7mB,SAAnB4mB,IACEpM,EAAAA,QAAkB,KAChBrqB,KAAA6B,gBAAA80B,mBAAAtM,EAAAqM,EADsB7mB,GAEtB,OAFsB,GAS1BqF,QAAOC,YAAAA,EAAAihB,uBAAeA,GAAtBlhB,IACMlV,KAAJq2B,cACEr2B,KAAA8N,MADqBsoB,GAGvBp2B,KAAAq2B,aAAoBlhB,GAJkC,KAMtD,IAAAA,EAAkB,CAChBnV,KAAAoyB,eADgB,GAAA,OAIlB,MAAMwE,EAAQl+B,OAAAm+B,KAAA1hB,GAAA2hB,MAA8B,SAAArP,EAAAC,GAC1C,OAAOD,EAAAA,cAAAA,cAA8BC,EADqBjP,kBAItDse,EAAWz2B,SAdqC02B,yBAetD,IAAIR,EAfkD,EAgBtD,IAAA,MAAAv5B,KAAA25B,EAA0B,CACxB,MAAMK,EAAO9hB,EADWlY,GAElBy5B,EAAUO,EAAhBP,QACE7mB,GAAWtD,EAAAA,EAAAA,oBAAmB0qB,EAHRpnB,UAKlBya,EAAMhqB,SAAAA,cALY,OAMxBgqB,EAAAA,UANwB,WAQxB,MAAMD,EAAU/pB,SAAAA,cARQ,KASxBN,KAAAy2B,UAAApM,EAAwB,CAAAqM,QAAAA,EAAA7mB,SAAAA,IACxBwa,EAAAA,YAAsBrqB,KAAAk3B,sBAVErnB,GAYxBya,EAAAA,YAZwBD,GAcxB0M,EAAAA,YAdwBzM,GAexBkM,IAGFx2B,KAAAm3B,iBAAAJ,EAlCsDP,GAyCxDL,mBAAkB3K,GAAAA,EAAA3b,SAAAA,EAAA6mB,QAAlBP,IACE,MAAMiB,EAAkBp3B,KAAAs2B,oBADmB1rB,QAG3CwsB,EAAAA,MAAqB,KACnB,GAAIA,IAAoBp3B,KAAAs2B,oBAAxB1rB,QAA0D,OAG1D,IAAIuK,EAAcnV,KAJOq2B,aAMzB,GAAAlhB,GAGE,IAAA,MAAAlY,KAAAkY,EACE,GAAIqW,IAAJvuB,EAAiB,YAHnBkY,EAAczc,OAAAA,OADE,MASlByc,EAAAA,GAAkB,CAAAtF,SAAAA,EAAA6mB,QAAAA,GAIlB12B,KAAAkV,OAAY,CAAAC,YAAAA,EAEVihB,wBAFU,sICtKlB,IAAAx4B,EAAAH,EAAA,GAiBA,MACM45B,EAlBN,WAoBA,MAAApB,eACEn5B,YAAAA,GACE,GAAIkD,KAAAlD,cAAJm5B,eACE,MAAM,IAAAl5B,MADiC,qCAGzCiD,KAAAmI,UAAiB9K,EAJE8K,UAKnBnI,KAAAkC,SAAgB7E,EALG6E,SAOnBlC,KAPmB8N,QAUrBA,QACE9N,KAAAs3B,aADM,KAENt3B,KAAAu3B,mBAFM,EAGNv3B,KAAAw3B,iBAHM,KAMNx3B,KAAAmI,UAAA2tB,YANM,GASN91B,KAAAmI,UAAA2kB,UAAA4C,OATM,uBAeR0C,eAAAA,GACE,MAAM,IAAAr1B,MADc,mCAOtB05B,UAAAA,EAAAA,GACE,MAAM,IAAA15B,MADmB,8BAO3Bm6B,sBAAAA,GAGE,OACEO,EAAAA,EAAAA,sBAAAA,GAAAA,IAJuB,IAc3BC,iBAAAA,EAAsBC,GAAtBD,GACE,MAAME,EAAUt3B,SAAAA,cADoB,OAEpCs3B,EAAAA,UAFoC,kBAGpCD,GACEC,EAAAA,UAAAA,IADU,mBAGZA,EAAAA,QAAkBjX,IAChBA,EADuBuT,kBAEvB0D,EAAAA,UAAAA,OAFuB,mBAIvB,GAAIjX,EAAJgE,SAAkB,CAChB,MAAMkT,GAAiBD,EAAAA,UAAAA,SADP,mBAEhB53B,KAAA83B,gBAAAxN,EAFgBuN,KAKpBvN,EAAAA,aAAAA,EAA0BA,EAfUyN,YA0BtCD,gBAAAA,EAAsB3oB,GAAtB2oB,GACE93B,KAAAu3B,kBADkCpoB,EAElC,IAAA,MAAAyoB,KAAsBI,EAAAA,iBAAtB,oBACEJ,EAAAA,UAAAA,OAAAA,mBAD+DzoB,GASnE8oB,sBACEj4B,KAAA83B,gBAAqB93B,KAArBmI,WAAsCnI,KADlBu3B,mBAOtBJ,iBAAAA,EAAAA,EAAkCe,GAAlCf,GACE,GAAAe,EAAmB,CACjBl4B,KAAAmI,UAAA2kB,UAAArX,IADiB,uBAGjBzV,KAAAu3B,mBAA0BR,EAAAA,cAHT,oBAKnB/2B,KAAAmI,UAAAgwB,YANuDpB,GAQvD/2B,KAAAoyB,eARuDgG,GAWzDljB,OAAAA,GACE,MAAM,IAAAnY,MADO,2BAOfs7B,uBAAuBC,EAAvBD,MACE,GAAIr4B,KAAJw3B,iBAA2B,CAEzBx3B,KAAAw3B,iBAAA1K,UAAA4C,OAFyB2H,GAGzBr3B,KAAAw3B,iBAHyB,KAK3B,GAAAc,EAAc,CACZA,EAAAA,UAAAA,IADYjB,GAEZr3B,KAAAw3B,iBAFYc,GAShBC,yBAAAA,GACE,IAAAD,EAAe,OAKf,IAAIE,EAAcF,EANehJ,WAOjC,KAAOkJ,GAAeA,IAAgBx4B,KAAtCmI,WAAsD,CACpD,GAAIqwB,EAAAA,UAAAA,SAAJ,YAAgD,CAC9C,MAAMZ,EAAUY,EAD8BC,kBAE9Cb,MAAAA,GAAAA,EAAAA,UAAAA,OAF8C,mBAIhDY,EAAcA,EALsClJ,WAOtDtvB,KAAAq4B,uBAdiCC,GAgBjCt4B,KAAAmI,UAAAssB,SACE6D,EADFpL,WAEEoL,EAAAA,WAxJsB,iICF5B,IAAA16B,EAAAH,EAAA,GAKAD,EAAAC,EAAA,GAEA,MAGMi7B,EAAqB,CAAA,QAAA,QAAA,MAIrBC,EAAgB,CACpB,SADoB,SAEpB,SAFoB,SAIhBC,EAAoB,CACxB,UADwB,KAExB,UAFwB,MAK1B,SAAAC,YAAAhsB,EAAAisB,EAAAC,GAIE,OAAOA,EAAU,GAHHD,EAAajsB,EAAbisB,MAA0BjsB,EADQuc,UAEjC0P,EAAajsB,EAAbisB,OAA2BjsB,EAFMsc,iCAelD,MAAAtgB,sBAOE/L,aACEs4B,YAAAA,EAAA4D,OAAAA,EAAA7wB,UAAAA,EAAAgJ,YADFrU,GAAAA,EAAAA,EAAAA,GAMEkD,KAAAo1B,YADAA,EAEAp1B,KAAAg5B,OAFAA,EAGAh5B,KAAAmI,UAHAA,EAIAnI,KAAA8B,eAJAA,EAKA9B,KAAAmC,KALAA,EAOAnC,KAPAi5B,SASA9nB,EAAAA,iBAAAA,QAAsCnR,KAAAkO,MAAA3G,KATtCvH,OAWAA,KAAA8B,eAAA4zB,SACE11B,KADFo1B,YAEEp1B,KAFFmI,UAGEnI,KAAAkO,MAAA3G,KAdFvH,OAiBAkC,EAAAA,IAAAA,gBAA6Bye,IAC3B3gB,KAAAk5B,mBAA0BvY,EADQjH,cAGpCxX,EAAAA,IAAAA,oBAAiCye,IAC/B3gB,KAAAm5B,eAAsBxY,EADgB5G,iBAIxC/Z,KAAAo5B,oBAxBA,EAyBAj3B,EAAAA,cAAAA,MAAwBiE,IACtBpG,KAAAo5B,mBAA0BV,EAAAA,SADMtyB,MAQpC9C,aACE,MAAM+1B,gBAAkB35B,IACtBhH,OAAAA,eAAAA,KAAAA,YAAyC,CACvCkB,MAAOlB,OAAAA,OADgCgH,GAEvC45B,UAFuC,EAGvCC,YAHuC,EAIvCC,cAJuC,WAQrCtzB,QAAAuQ,IAAY,CAChBzW,KAAA8B,eAAA6M,KAAyB3O,KADTo1B,aAEhBp1B,KAAAy5B,yBAFgB7uB,UAIlB,MAAMa,EAAoBzL,KAdfk5B,mBAeLnf,EAAgB/Z,KAfXm5B,eAmBX,GACEn5B,KAAA05B,WACAjuB,IAAsBzL,KAAA05B,UADtBR,oBAEAnf,IAAkB/Z,KAAA05B,UAHpBP,eAIE,CACAn5B,KADA25B,YAAA,OAMF,MAAM3iB,KAAAA,EAAAC,2BAAAA,EAAAC,cAAAA,SAKIlX,KAAAW,YAlCCwW,eAoCLyiB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,SAOI/zB,QAAAuQ,IAAY,CACpBQ,IAA8B5K,EAAAA,EAAAA,uBAAsBrM,KADhCwC,KAEpBxC,KAAAk6B,eAFoBhjB,GAGpBlX,KAAAm6B,WAAgBnjB,EAHIojB,cAIpBp6B,KAAAm6B,WAAgBnjB,EAJIqjB,SAKpBr6B,KAAAW,YAAA25B,QAAA7uB,GAAApH,MAAiDqP,GACxC1T,KAAAu6B,gBAAoB5R,EAAAA,EAAAA,mBAApBjV,GADmDqG,KAG5D/Z,KAAAw6B,oBAAyBxjB,EARLyjB,gBAWtBpB,gBAAgB,CAAAO,SAAAA,EAAAC,SAAAA,EAGdztB,MAAO4K,EAHOa,MAId6iB,OAAQ1jB,EAJM2jB,OAKdC,QAAS5jB,EALK6jB,QAMdC,SAAU9jB,EANI+jB,SAAAjB,aAAAA,EAAAC,iBAAAA,EASdiB,QAAShkB,EATKQ,QAUdgB,SAAUxB,EAVIM,SAWd1G,QAASoG,EAXKK,iBAYd4jB,UAAWj7B,KAAAW,YAZG4K,SAAAyuB,SAAAA,EAcdkB,WAdcjB,EAedf,mBAfcztB,EAgBd0tB,eAhBcpf,IAkBhB/Z,KAxEW25B,YA4EX,MAAM/yB,OAAAA,SAAmB5G,KAAAW,YA5Edw6B,kBA6EX,GAAIjkB,IAAJtQ,EAA8B,OAG9B,MAAMlH,EAAOhH,OAAAA,OAAcA,OAAAA,OAAdA,MAAmCsH,KAhFrC05B,WAiFXh6B,EAAAA,eAAsBM,KAAAk6B,eAjFXtzB,GAmFXyyB,gBAnFW35B,GAoFXM,KApFW25B,YA0FbzrB,QACElO,KAAA8B,eAAAoM,MAA0BlO,KADpBo1B,aAaRznB,YAAAA,EAAyBnL,EAAzBmL,MACE,GAAI3N,KAAJW,YAAsB,CACpBX,KADoBi5B,SAEpBj5B,KAAA25B,WAFoB,GAItB,GAAAh5B,EAAA,CAGAX,KAAAW,YARmCA,EASnCX,KAAAwC,IATmCA,EAWnCxC,KAAAy5B,yBAXmCj1B,WAiBrCy0B,SACEj5B,KAAAW,YADO,KAEPX,KAAAwC,IAFO,YAIAxC,KAJA05B,UAKP15B,KAAAy5B,0BALO,EAAA77B,EAAA4C,2BAMPR,KAAAk5B,mBANO,EAOPl5B,KAAAm5B,eAPO,EAgBTQ,UAAU7rB,GAAV6rB,GACE,IAAI7rB,GAAU9N,KAAd05B,WAMA,GAAI15B,KAAA8B,eAAA6jB,SAA+B3lB,KAAnCo1B,YAKA,IAAA,MAAA5J,KAAiBxrB,KAAjBg5B,OAA8B,CAC5B,MAAMtC,EAAU12B,KAAA05B,UADYlO,GAE5BxrB,KAAAg5B,OAAAxN,GAAAsK,YACEY,GAAAA,IAAWA,EAAXA,EAzPR,UA4OM,IAAA,MAAAlL,KAAiBxrB,KAAjBg5B,OACEh5B,KAAAg5B,OAAAxN,GAAAsK,YA7OR,IAgQExyB,qBAAqBu2B,EAArB,GACE,MAAMuB,EAAKvB,EAAX,KACEwB,EAAKD,EAF0B,KAGjC,GAAAA,EAGA,OAAOp7B,KAAAmC,KAAAsN,IAAc,wBAAuB4rB,GAAAA,EAAAA,KAAvB,MAAgD,CACnEC,QAASD,GAAAA,KAAaA,EAAAA,YAAF,IAD+CE,iBAEnEC,QAASH,EAAAA,KAAYD,EAAAA,YAAF,IAFgDG,iBAGnEE,OAAQ5B,EAH2D0B,mBAUvEj4B,qBAAAo4B,EAAA3hB,GACE,IAAA2hB,EACE,OAGE3hB,EAAAA,KAAJ,IACE2hB,EAAiB,CACfvS,MAAOuS,EADQtS,OAEfA,OAAQsS,EAFOvS,QAKnB,MAAM2P,GAAahN,EAAAA,EAAAA,uBAX+B4P,GAalD,IAAIC,EAAa,CACfxS,MAAO1X,KAAAA,MAAAA,IAAWiqB,EAAAA,OADH,IAEftS,OAAQ3X,KAAAA,MAAAA,IAAWiqB,EAAAA,QAFJ,KAKbE,EAAkB,CACpBzS,MAAO1X,KAAAA,MAAWiqB,KAAAA,EAAAA,MAAXjqB,IADa,GAEpB2X,OAAQ3X,KAAAA,MAAWiqB,KAAAA,EAAAA,OAAXjqB,IAFY,IAKlBoqB,EACFhD,YAAAA,EAAAA,EAAAA,IACAA,YAAAA,EAAAA,EAzBgDD,GA2BlD,KACEiD,GAEEt+B,OAAAgzB,UAAiBqL,EAAjBzS,QACA5rB,OAAAA,UAAiBq+B,EAJrBxS,SAME,CAIA,MAAM0S,EAAmB,CACvB3S,MADuB,KAChBuS,EAAAA,MACPtS,OAFuB,KAEfsS,EAAAA,QAEJK,EAAiB,CACrB5S,MAAO1X,KAAAA,MAAWmqB,EADGzS,OAErBC,OAAQ3X,KAAAA,MAAWmqB,EAFExS,SAMvB,GACE3X,KAAAA,IAASqqB,EAAAA,MAAyBC,EAAlCtqB,OAAAA,IACAA,KAAAA,IAASqqB,EAAAA,OAA0BC,EAAnCtqB,QAFF,GAGE,CACAoqB,EAAUhD,YAAAA,EAAAA,EADVD,GAEA,GAAAiD,EAAa,CAGXF,EAAa,CACXxS,MAAO1X,KAAAA,MAAYsqB,EAAAA,MAAD,KAAXtqB,KADI,IAEX2X,OAAQ3X,KAAAA,MAAYsqB,EAAAA,OAAD,KAAXtqB,KAFG,KAIbmqB,EAPWG,IAYjB,OAAO5S,MAAAA,EAAAC,OAADA,GAAA4S,EAAA/+B,EAAAg/B,SAAqD/1B,QAAAuQ,IAAY,CACrEzW,KAAAo5B,mBAAAuC,EADqEC,EAErE57B,KAAAmC,KAAAsN,IACE,uCACEzP,KAAAo5B,mBAAA,SADF,gBAIFyC,GACE77B,KAAAmC,KAAAsN,IACE,sCAAsCosB,EAAtCpjB,iBAEJzY,KAAAmC,KAAAsN,IACE,8CACEqpB,EAAAA,WADF,gBAMJ,OAAO94B,KAAAmC,KAAAsN,IACL,2CAA2CxS,EAAAA,QAA3C,WACA,CACEksB,MAAOA,EADToS,iBAEEnS,OAAQA,EAFVmS,iBAAAS,KAAAA,EAAA/+B,KAAAA,EAAAg/B,YAAAA,IAaJ34B,iBAAA44B,GACE,MAAMC,EAAaC,EAAAA,cAAAA,aADOF,GAE1B,GAAAC,EAGA,OAAOn8B,KAAAmC,KAAAsN,IAAA,kCAAiD,CACtD4sB,KAAMF,EADgDG,qBAEtDC,KAAMJ,EAFgDK,uBAS1DhC,oBAAAA,GACE,OAAOx6B,KAAAmC,KAAAsN,IACL,mCAAkCwqB,EAAAA,MAAlC,yFCjYN,IAAA97B,EAAAV,EAAA,iBAyBA,MAAAmL,WACE9L,YAAAA,EAAAA,EAAAA,GACEkD,KAAA2mB,QADmC,EAGnC3mB,KAAA8L,IAAWzO,EAHwByO,IAInC9L,KAAA0lB,aAAoBroB,EAJeqoB,aAKnC1lB,KAAAy8B,UAAiBp/B,EALkBo/B,UAMnCz8B,KAAA6jB,aAAoBxmB,EANeq/B,qBAOnC18B,KAAAqiB,YAAmBhlB,EAPgBs/B,wBAQnC38B,KAAA48B,UAAiBv/B,EARkBw/B,mBASnC78B,KAAAyjB,cAAqBpmB,EATcy/B,sBAUnC98B,KAAA0jB,WAAkBrmB,EAViB0/B,mBAWnC/8B,KAAAg9B,QAAe3/B,EAXoB2/B,QAYnCh9B,KAAAi9B,iBAAwB5/B,EAZW4/B,iBAanCj9B,KAAAk9B,mBAA0B7/B,EAbS6/B,mBAcnCl9B,KAAAm9B,eAAsB9/B,EAda8/B,eAenCn9B,KAAAo9B,mBAA0B//B,EAAAA,oBAfS,KAgBnC2C,KAAAq9B,oBAA2BhgC,EAAAA,iCAhBQ,KAiBnC2C,KAAA2jB,cAAqBtmB,EAAAA,uBAjBc,KAkBnC2C,KAAA4jB,YAAmBvmB,EAAAA,eAlBgB,KAoBnC2C,KAAAkC,SApBmCA,EAqBnClC,KAAAmC,KArBmCA,EAwBnCnC,KAAA0lB,aAAAyN,iBAAA,SAA4C,KAC1CnzB,KADgD2hB,YAIlD3hB,KAAAo9B,mBAAAjK,iBAAA,SAAkD,KAEhDnzB,KAAAs9B,cAFsD,OAKxDt9B,KAAAy8B,UAAAtJ,iBAAA,SAAyC,KACvCnzB,KAAAs9B,cAD6C,OAI/Ct9B,KAAA8L,IAAAqnB,iBAAA,WAAqCO,IACnC,OAAQA,EAAR3N,SACE,KAAA,GACM2N,EAAAA,SAAa1zB,KAAjBy8B,WACEz8B,KAAAs9B,cAAA,QAA4B5J,EADG/O,UAFrC,MAME,KAAA,GACE3kB,KADFkO,YAMJlO,KAAAk9B,mBAAA/J,iBAAA,SAAkD,KAChDnzB,KAAAs9B,cAAA,SADsD,MAIxDt9B,KAAAm9B,eAAAhK,iBAAA,SAA8C,KAC5CnzB,KAAAs9B,cAAA,SADkD,MAIpDt9B,KAAA6jB,aAAAsP,iBAAA,SAA4C,KAC1CnzB,KAAAs9B,cADgD,yBAIlDt9B,KAAAyjB,cAAA0P,iBAAA,SAA6C,KAC3CnzB,KAAAs9B,cADiD,4BAInDt9B,KAAA0jB,WAAAyP,iBAAA,SAA0C,KACxCnzB,KAAAs9B,cAD8C,uBAIhDt9B,KAAAq9B,oBAAAlK,iBAAA,SAAmD,KAEjDnzB,KAAAs9B,cAFuD,gCAKzDt9B,KAAA2jB,cAAAwP,iBAAA,SAA6C,KAE3CnzB,KAAAs9B,cAFiD,0BAKnDt9B,KAAA4jB,YAAAuP,iBAAA,SAA2C,KACzCnzB,KAAAs9B,cAD+C,wBAIjDt9B,KAAAqiB,YAAA8Q,iBAAA,SAA2C,KACzCnzB,KAAAs9B,cAD+C,wBAIjDt9B,KAAA48B,UAAAzJ,iBAAA,SAAyC,KACvCnzB,KAAAs9B,cAD6C,sBAI/Ct9B,KAAAkC,SAAA4T,IAAA,SAA4B9V,KAAAu9B,aAAAh2B,KA5FOvH,OA+FrC8N,QACE9N,KADMw9B,gBAIRF,cAAAA,EAAoBG,GAApBH,GACEt9B,KAAAkC,SAAAoC,SAAA,OAA+B,CAC7BC,OAD6BvE,KAAA+O,KAAAA,EAG7BwU,MAAOvjB,KAAAo9B,mBAAAtQ,UAAAC,SAAA,UACH/sB,KAAAy8B,UADG7iC,MAEHoG,KAAAo9B,mBALyBxjC,MAM7B4pB,cAAexjB,KAAAq9B,oBANcK,QAO7Bja,cAAezjB,KAAAyjB,cAPcia,QAQ7Bha,WAAY1jB,KAAA0jB,WARiBga,QAS7B/Z,cAAe3jB,KAAA2jB,cATc+Z,QAU7B9Z,YAAa5jB,KAAA4jB,YAVgB8Z,QAW7B7Z,aAAc7jB,KAAA6jB,aAXe6Z,QAY7Brb,YAAariB,KAAAqiB,YAZgBqb,QAa7Bd,UAAW58B,KAAA48B,UAbkBhjC,MAc7BkqB,aAd6B2Z,IAkBjCD,cAAAA,EAAAA,EAAAA,GACE,IAAIR,EAAU92B,QAAAA,QAD6B,IAEvCy3B,EAFuC,GAI3C,OAAA/b,GACE,KAAKgc,EAAAA,UAALC,MADF,MAGE,KAAKD,EAAAA,UAALE,QACEH,EADF,UAHF,MAME,KAAKC,EAAAA,UAALG,UACEf,EAAUh9B,KAAAmC,KAAAsN,IADZ,kBAEEkuB,EAFF,WANF,MAUE,KAAKC,EAAAA,UAALnP,QACEuO,EAAUh9B,KAAAmC,KAAAsN,IAAc,iBAAgBuU,EAAAA,MAAhB,WAG5BhkB,KAAAy8B,UAAAuB,aAAA,cAlB2CL,GAmB3C39B,KAAAo9B,mBAAAtQ,UAAAnL,OAAA,WAnB2C,aAmBUgc,GACrD39B,KAAAo9B,mBAAAY,aAAA,cApB2CL,GAsB3CX,EAAAA,MAAattB,IACX1P,KAAAg9B,QAAAlH,YADkBpmB,EAElB1P,KAFkBu9B,kBAKpBv9B,KAAAi+B,mBA3B2Cla,GA8B7Cka,oBAAmBC,QAAEA,EAAF,EAAArvB,MAAeA,EAAf,GAAnBovB,IAEE,IAAIE,EAAgBj4B,QAAAA,QAF8B,IAIlD,GAAI2I,EAAJ,EACE,GAAIA,EAnLV,IAmLyB,CACjB,IAAIjS,EADa,yBAQjBuhC,EAAgBn+B,KAAAmC,KAAAsN,IAAA7S,EAAmB,CARlBwhC,MAnLzB,UA4La,CACL,IAAIxhC,EADC,mBAQLuhC,EAAgBn+B,KAAAmC,KAAAsN,IAAA7S,EAAmB,CAAAshC,QAAAA,EAAArvB,MAAAA,IAGvCsvB,EAAAA,MAAmBzuB,IACjB1P,KAAAi9B,iBAAAnH,YADwBpmB,EAExB1P,KAAAi9B,iBAAAnQ,UAAAnL,OAAA,UAFwB9S,GAKxB7O,KALwBu9B,kBAS5B5uB,OACE,IAAK3O,KAAL2mB,OAAkB,CAChB3mB,KAAA2mB,QADgB,EAEhB3mB,KAAA0lB,aAAAoH,UAAArX,IAFgB,WAGhBzV,KAAA0lB,aAAAsY,aAAA,gBAHgB,QAIhBh+B,KAAA8L,IAAAghB,UAAA4C,OAJgB,UAMlB1vB,KAAAy8B,UAPK/a,SAQL1hB,KAAAy8B,UARK9nB,QASL3U,KAAAs9B,cATK,IAWLt9B,KAXKu9B,eAcPrvB,QACE,GAAKlO,KAAL2mB,OAAA,CAGA3mB,KAAA2mB,QAJM,EAKN3mB,KAAA0lB,aAAAoH,UAAA4C,OALM,WAMN1vB,KAAA0lB,aAAAsY,aAAA,gBANM,SAONh+B,KAAA8L,IAAAghB,UAAArX,IAPM,UASNzV,KAAAkC,SAAAoC,SAAA,eAAuC,CAAEC,OATnCvE,QAYR2hB,SACM3hB,KAAJ2mB,OACE3mB,KADekO,QAGflO,KADK2O,OAQT4uB,eACE,IAAKv9B,KAAL2mB,OAAkB,OAQlB3mB,KAAA8L,IAAAghB,UAAA4C,OATa,kBAWS1vB,KAAA8L,IAXT8d,aAYgB5pB,KAAA8L,IAAA2sB,kBAZhB7O,cAkBX5pB,KAAA8L,IAAAghB,UAAArX,IAJwC,uHCnQ9C,IAAA7X,EAAAH,EAAA,GAAA4gC,EAAA5gC,EAAA,IAAA6gC,EAAA7gC,EAAA,IAAA8gC,EAAA9gC,EAAA,IAAAD,EAAAC,EAAA,GAyBA,MAAMmgC,EAAY,CAChBC,MADgB,EAEhBE,UAFgB,EAGhBtP,QAHgB,EAIhBqP,QAJgB,iBAOlB,MAIMU,EAA0B,CAC9B,IAD8B,IAE9B,IAF8B,IAG9B,IAH8B,IAI9B,IAJ8B,IAK9B,IAL8B,IAM9B,IAN8B,IAO9B,IAP8B,IAQ9B,IAR8B,IAS9B,IAT8B,IAU9B,IAV8B,MAW9B,IAX8B,MAY9B,IAZ8B,OAehC,IAAIC,EAnDJ,KAoDA,SAAAC,UAAAC,GACE,IAAAF,EAAyB,CAGvB,MAAMG,EAAUlmC,OAAAA,KAAAA,GAAAA,KAHO,IAIvB+lC,EAAqB,IAAAI,OAAW,IAAAD,KAJT,KAMzB,IAAIE,EAPmB,KAiBvB,MAAO,CATgBH,EAAAC,QAAAH,GAAiC,SAAAM,EAAAhQ,GACtD,MAAMiQ,EAAeR,EAArBO,GACEE,EAAOD,EAAAA,OAAsBD,EAF4Cn4B,OAG3E,IAAIq4B,IACDH,IAAD,IAAAtlB,KAAoB,CAAAuV,EAAAkQ,IAEtB,OAN2ED,KAStEF,GAMT,SAAAI,iBAAAC,EAAsCL,EAAtC,MACE,IAAAA,EACE,OADUK,EAGZ,IAAIC,EAJ8C,EAKlD,IAAA,MAAWrQ,EAAXkQ,KAAAH,EAAmC,CACjC,MAAMhQ,EAAeC,EADYqQ,EAGjC,GAAItQ,GAAJqQ,EAAgC,MAGhC,GAAIrQ,EAAAA,EAAJqQ,EAAsC,CACpCC,GAAaD,EADuBrQ,EAAA,MAItCsQ,GAViCH,EAYnC,OAAOE,EAjB2CC,sBA6BpD,MAAAz3B,kBAKE7K,aAAY8K,YAAAA,EAAA1F,SAAAA,EAAA2F,aAAZ/K,IACEkD,KAAAq/B,aADmDz3B,EAEnD5H,KAAAs/B,UAFmDp9B,EAGnDlC,KAAAu/B,cAHmD13B,EAKnD7H,KALmDi5B,SAMnD/2B,EAAAA,IAAAA,OAAqBlC,KAAAw/B,QAAAj4B,KAN8BvH,OAOnDkC,EAAAA,IAAAA,eAA6BlC,KAAAy/B,gBAAAl4B,KAPsBvH,OAUjDA,KAAA0/B,eAAsB,CAAAjb,EAAA7C,KACpBjd,OAAAA,WAAAA,MACE,2HAIF,MAAMqhB,EAAattB,OAAAA,OAAcA,OAAAA,OAAdA,MAAAA,EAA0C,CAC3DqW,KAAM0V,EAAAA,UAAc,OAPc7d,UASpC5G,KAAAw/B,QAToCxZ,IActC2Z,uBACF,OAAO3/B,KADc4/B,kBAInBC,kBACF,OAAO7/B,KADS8/B,aAIdC,uBAEF,OAAO//B,KAFcggC,kBAKnBC,wBACF,OAAOjgC,KADekgC,mBAIpBC,eACF,OAAOngC,KADMogC,UAIXxe,YACF,OAAO5hB,KADGqgC,OAUZ1yB,YAAAA,GACM3N,KAAJs3B,cACEt3B,KADqBi5B,SAGvB,GAAAt4B,EAAA,CAGAX,KAAAs3B,aAPuB32B,EAQvBX,KAAAsgC,qBARuB97B,WAczBg7B,QAAAA,GACE,IAAA5d,EAAY,OAGZ,MAAMjhB,EAAcX,KAJPs3B,cAKPvoB,KAAAA,GALO6S,GAOT,OAAA5hB,KAAAqgC,QAAwBrgC,KAAAugC,kBAA5B3e,MACE5hB,KAAAwgC,aADyD,GAG3DxgC,KAAAqgC,OAVaze,EAWb,uBAAI7S,GACF/O,KAAAygC,eAAoB7C,EADaE,SAInC99B,KAAAsgC,qBAAA11B,QAAAvG,MAAuC,KAGrC,IACGrE,KAADs3B,cACC32B,GAAeX,KAAAs3B,eAFlB32B,EAGE,OAGFX,KAT2C0gC,eAW3C,MAAMC,GAAiB3gC,KAXoB4/B,kBAYrCgB,IAAmB5gC,KAZkB6gC,aAc3C,GAAI7gC,KAAJ6gC,aAAuB,CACrB/uB,aAAa9R,KADQ6gC,cAErB7gC,KAAA6gC,aAFqB,KAIvB,GAAA9xB,EAOO,GAAI/O,KAAJwgC,YAGLxgC,KAH2B8gC,kBAItB,GAAA,UAAI/xB,EAAkB,CAC3B/O,KAD2B8gC,aAKvBH,GAAiB3gC,KAAAqgC,OAArBxc,cACE7jB,KAD6C+gC,uBAG1C,GAAA,uBAAIhyB,EAA+B,CAGxC6xB,EACE5gC,KADkB8gC,aAGlB9gC,KAAA4/B,mBADK,EAGP5/B,KARwC+gC,uBAUxC/gC,KADK8gC,kBAzBL9gC,KAAA6gC,aAAoB9uB,YAAW,KAC7B/R,KADmC8gC,aAEnC9gC,KAAA6gC,aAFmC,OAtN7C,QAqPEG,qBAAoB3W,QAClBA,EADkB,KAAA4W,aAElBA,EAFkB,EAAAC,UAGlBA,GAAY,EAHM/B,WAIlBA,GAAa,IAEb,IAAKn/B,KAADmhC,iBAAJ9W,EAAsC,OAE/B,IAAI8U,IAAAA,GAAqBA,IAAen/B,KAAAogC,UAAxCgB,SAAiE,OAEjE,IAAIF,IAAAA,GAAoBA,IAAclhC,KAAAogC,UAAtCiB,QAA8D,OAGrErhC,KAAAmhC,gBARC,EAUD,MAAM7U,EAAO,CACXnK,KApO0B,GAqO1BD,KAAM+e,GApOqB,MAuO7B5U,EAAAA,EAAAA,gBAAAA,EAAAA,GAAAA,EAfC,oBAeyDrsB,KAAAu/B,eAI5DtG,SACEj5B,KAAA4/B,mBADO,EAEP5/B,KAAAmhC,gBAFO,EAGPnhC,KAAAs3B,aAHO,KAIPt3B,KAAA8/B,aAJO,GAKP9/B,KAAAkgC,mBALO,GAMPlgC,KAAAggC,kBANO,GAOPhgC,KAAAqgC,OAPO,KASPrgC,KAAAogC,UAAiB,CACfiB,SADe,EAEfD,UAFe,GAKjBphC,KAAAshC,QAAe,CACbD,QADa,KAEbD,SAFa,KAGbG,SAHa,GAKfvhC,KAAAwhC,qBAnBO,GAoBPxhC,KAAAyhC,cApBO,GAqBPzhC,KAAA0hC,WArBO,GAsBP1hC,KAAA2hC,mBAtBO,EAuBP3hC,KAAA4hC,eAvBO,KAwBP5hC,KAAA6hC,oBAA2B,IAxBpBx+B,IAyBPrD,KAAA8hC,eAzBO,KA0BP9hC,KAAAwgC,aA1BO,EA2BP1uB,aAAa9R,KA3BN6gC,cA4BP7gC,KAAA6gC,aA5BO,KA8BP7gC,KAAAsgC,sBA9BO,EAAA1iC,EAAA4C,2BAoCLuhC,aACF,GAAI/hC,KAAAqgC,OAAA9c,QAAsBvjB,KAA1BgiC,UAA0C,CACxChiC,KAAAgiC,UAAiBhiC,KAAAqgC,OADuB9c,OAEvCvjB,KAADiiC,kBAA0BvD,UAAU1+B,KAAAqgC,OAFI9c,OAI1C,OAAOvjB,KALIiiC,iBAQb1B,kBAAAA,GAGE,GAAI3e,EAAAA,QAAgB5hB,KAAAqgC,OAApB9c,MACE,OADqC,EAGvC,OAAQ3B,EAAR7S,MACE,IAAA,QACE,MAAM2K,EAAa1Z,KAAAogC,UAAAiB,QADrB,EAEQz5B,EAAc5H,KAFtBq/B,aAWE,OACE3lB,GAAAA,GACAA,GAAc9R,EADd8R,YAEAA,IAAe9R,EAFf8R,OAGC9R,EAAAA,cAJH8R,GASF,IAAA,qBACE,OAtBJ,EAwBA,OA9BuB,EAuCzBwoB,gBAAAA,EAAAA,EAAAA,EAAAA,GAME,SAAAC,UAAArT,GACE,MAAMsT,EAAcC,EADWvT,GAEzBwT,EAAWD,EAAkBvT,EAFJ,GAK/B,GACEA,EAAeuT,EAAAA,OAAfvT,GACAsT,EAAAA,QAAsBE,EAFxBC,MAGE,CACAH,EAAAA,SADA,EAEA,OAFA,EAMF,IAAK,IAAI17B,EAAIooB,EAAb,EAA+BpoB,GAA/B,EAAuCA,IAAK,CAC1C,MAAM87B,EAAWH,EADyB37B,GAE1C,IAAI87B,EAAJC,QAAA,CAGA,GAAID,EAAAA,MAAiBA,EAAjBA,YAAwCJ,EAA5CG,MAA+D,MAG/D,GACEC,EAAAA,MAAiBA,EAAjBA,aACAJ,EAAAA,MAAoBA,EAFtBM,YAGE,CACAN,EAAAA,SADA,EAEA,OAFA,IAKJ,OA9B+B,EAmCjCC,EAAAA,MAAuB,SAAA5a,EAAAC,GACrB,OAAOD,EAAAA,QAAYC,EAAZD,MACHA,EAAAA,YAAgBC,EADbD,YAEHA,EAAAA,MAAUC,EAHuB6a,SAKvC,IAAK,IAAI77B,EAAJ,EAAWi8B,EAAMN,EAAtBz7B,OAAgDF,EAAhDi8B,EAAyDj8B,IACvD,IAAIy7B,UAAJz7B,GAAA,CAGAk8B,EAAAA,KAAaP,EAAAA,GAJ+CE,OAK5DM,EAAAA,KAAmBR,EAAAA,GALyCK,aAM5DI,EAAAA,KAAkBT,EAAAA,GAN0CU,QAchEC,cAAAA,EAAAA,EAAAA,GACE,GAAIC,EAAJ,EAAkB,CAChB,MAAMtX,EAAQ+K,EAAAA,WADEuM,GAEV7E,EAAQ1H,EAAAA,WAAmBuM,EAFjB,GAGhB,IAAIC,EAAAA,EAAAA,kBAAAA,MAA4BA,EAAAA,EAAAA,kBAAhC9E,GACE,OADuD,EAI3D,MAAM+E,EAASF,EAAAA,EARwB,EASvC,GAAIE,EAASzM,EAAAA,OAAb,EAAiC,CAC/B,MAAM9K,EAAO8K,EAAAA,WADkByM,GAEzB/E,EAAQ1H,EAAAA,WAAmByM,EAFF,GAG/B,IAAID,EAAAA,EAAAA,kBAAAA,MAA2BA,EAAAA,EAAAA,kBAA/B9E,GACE,OADsD,EAI1D,OAhBuC,EAmBzCgF,qBAAAA,EAAAA,EAAAA,EAAAA,GACE,MAAMR,EADuD,GAEvDC,EAFuD,GAIvDQ,EAAW9f,EAJ4C3c,OAKvD08B,EAAWD,EAAAA,EAAAA,EAL4C,EAMvDE,EAAc9xB,KAAAA,MAAW4xB,EAN8B,GAOvDG,EAAajgB,EAAAA,UAAAA,EAP0C+f,GAQvDjmC,EAAU,CACdomC,aAT2D,GAY7D,IAAK,IAAI/8B,EAAT,EAAgBA,EAAIg9B,EAAAA,OAApBL,EAAmD38B,IAAK,CACtD,MAAMi9B,EAAsBD,EAAAA,UAAAA,EAAyBh9B,EADC48B,GAEtD,GAAIM,EAAAA,YAAAA,SAAAA,EAAAA,EAAAA,GAAJ,EAAwE,CACtE,MAAMC,EAAiBH,EAAAA,UAAAA,EAAyBh9B,EADsB28B,GAGhES,EAAWF,EAAAA,YAAAA,SAAAA,EAAAA,EAHqDvmC,GAItE,GAAIymC,GAAJP,EAA6B,CAG3B,GAAI78B,EAAAA,EAAQg9B,EAAAA,OAAZL,EAA2C,CACzC,MAAMU,EAAqBL,EAAAA,UAAsBh9B,EAAtBg9B,EAA6Bh9B,EAAAA,EADf28B,GAGzC,GAAIS,GADiBF,EAAAA,YAAAA,SAAAA,EAAAA,EAFoBvmC,GAGX,SAKhC,MAAM2mC,EAAmB9E,iBAAAA,EAAzB+E,GAEEC,EACEhF,iBAFSx4B,EAAAA,EADb,EAGIw4B,GAAAA,EAduB,EAgB3B0D,EAAAA,KAhB2BoB,GAiB3BnB,EAAAA,KAjB2BqB,GAkB3Bx9B,GAAK28B,EAlBsB,IAsBjCrjC,KAAA8/B,aAAAoB,GAxC6D0B,EAyC7D5iC,KAAAkgC,mBAAAgB,GAzC6D2B,EA4C/DsB,sBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GASE,GAAAxgB,EAAmB,CAEjB+f,GAAcU,EAAAA,EAAAA,QAFGV,GAGjBngB,GAAQ6gB,EAAAA,EAAAA,QAHS7gB,GAMnB,MAAMqf,EAAN,GACEC,EATF,GAUMQ,EAAW9f,EAVjB3c,OAYA,IAAIw6B,GAZJiC,EAaA,OAAa,CACXjC,EAAWsC,EAAAA,QAAAA,EAA2BtC,EAD3BiC,GAEX,IAAA,IAAIjC,EAAiB,MAGrB,GAAI1d,IAAe1jB,KAAAgjC,cAAAU,EAAAtC,EAAnBiC,GAAwE,SAGxE,MAAMW,EAAmB9E,iBAAAA,EAAzB+E,GAEEC,EACEhF,iBAFSkC,EAAAA,EADb,EAGIlC,GAAAA,EAXO,EAaX0D,EAAAA,KAbWoB,GAcXnB,EAAAA,KAdWqB,GAgBblkC,KAAA8/B,aAAAoB,GA7BA0B,EA8BA5iC,KAAAkgC,mBAAAgB,GA9BA2B,EAiCFwB,oBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GASE,GAAA1gB,EAAmB,CAEjB+f,GAAcU,EAAAA,EAAAA,QAFGV,GAGjBngB,GAAQ6gB,EAAAA,EAAAA,QAHS7gB,GAKnB,MAAM8e,EAPN,GAUMiC,EAAa/gB,EAAAA,SAAAA,MACfA,EAAAA,OAAAA,MADeA,QAEfA,EAAAA,OAAAA,MAZJ,QAcA,IAAK,IAAI7c,EAAJ,EAAWi8B,EAAM2B,EAAtB19B,OAAyCF,EAAzCi8B,EAAkDj8B,IAAK,CACrD,MAAM69B,EAAWD,EADoC59B,GAE/C89B,EAAcD,EAFiC39B,OAGrD,GAAA,IAAI49B,EAAmB,SAIvB,IAAIpD,GAPiDoD,EAQrD,OAAa,CACXpD,EAAWsC,EAAAA,QAAAA,EAA8BtC,EAD9BoD,GAEX,IAAA,IAAIpD,EAAiB,MAGrB,GACE1d,IACC1jB,KAAAgjC,cAAAU,EAAAtC,EAFHoD,GAGE,SAGF,MAAMR,EAAmB9E,iBAAAA,EAAzB+E,GAEEC,EACEhF,iBAFSkC,EAAAA,EADb,EAGIlC,GAAAA,EAdO,EAiBXmD,EAAAA,KAAuB,CACrBE,MADqByB,EAErBtB,YAFqBwB,EAGrBzB,SAHqB,EAIrBM,MAJqBr8B,KAU3B1G,KAAAkgC,mBAAAgB,GAjDA,GAkDAlhC,KAAAggC,kBAAAkB,GAlDA,GAmDAlhC,KAAA8/B,aAAAoB,GAnDA,GAuDAlhC,KAAAkiC,gBAAAG,EAEEriC,KAAA8/B,aAFFoB,GAGElhC,KAAAkgC,mBAHFgB,GAIElhC,KAAAggC,kBA3DFkB,IAgEFuD,gBAAgBj5B,EAAhBi5B,EAA0BC,EAA1BD,WACE,IACE,IAAAC,EACE,OADyB,EAI3B,OADcA,EAAAA,MAJZ,KAKKlzB,MAAWmzB,GAAS3kC,KAAA4kC,eAAAp5B,EALzBm5B,KAMF,MAAAjR,GACA,OADU,GAKdkR,eAAep5B,EAAfo5B,EAAyBD,EAAzBC,OACE,IACE,IAAAD,EACE,OADU,EAGZ,GAAIA,EAAAA,SAAJ,KAAyB,CACvB,MAAMnzB,EAAQmzB,EAAAA,MADS,KAEjBE,EAAOrzB,EAAAA,GAFU+F,OAGvB,GAAIstB,EAAAA,OAAJ,GACMr5B,EAAOjO,OAAXsnC,GACE,OADuB,EAI3B,MAAMC,EAAKtzB,EAAAA,GARY+F,OASvB,GAAIutB,EAAAA,OAAJ,GACMt5B,EAAOjO,OAAXunC,GACE,OADqB,MAIpB,CACL,MAAMD,EAAOF,EADRptB,OAEL,GAAIstB,EAAAA,OAAJ,EACE,OAAItnC,OAAAA,KAAJiO,EAOJ,OA5BE,EA6BF,MAAAkoB,GACA,OADU,GAMdqR,gBAAAA,GACE,IAAK/kC,KAAL4hB,MAAiB,OAGjB,IAAI8hB,EAAc1jC,KAAAyhC,cAJOP,GAKzB,MAAM+C,EAAYjkC,KAAA0hC,WALOR,GAMzB,IAAI3d,EAAQvjB,KANa+hC,OAOzB,MAAMte,cAAAA,EAAAC,WAAAA,EAAAC,cAAAA,EAAAC,YAAAA,EAAAJ,aAAAA,EAAAnB,YAAAA,EAAAua,UAAAA,GAQF58B,KAfqBqgC,OAkBzB,IAAI2E,GAlBqB,EAmBzB,GAAA3iB,GACM6e,IAAclhC,KAAAq/B,aAAA7zB,KAAlB,EAA8C,CAE5Cw5B,GAF4C,EAG5ChlC,KAAA8/B,aAAAoB,GAH4C,GAMhD,IAAKlhC,KAAAykC,gBAAqBvD,EAArB,EAALtE,GAAqD,CACnDoI,GADmD,EAEnDhlC,KAAA8/B,aAAAoB,GAFmD,GAMrD,GAAA,IAAI3d,EAAAA,OAAoB,OAIxB,IAAAyhB,EAAwB,CACtB,IAAAvhB,EAAoB,CAClBigB,EAAcA,EADIjrB,cAElB8K,EAAQA,EAFU9K,cAKpBmL,EACML,EAAAA,QAAJ,EACEvjB,KAAAmkC,sBAAA5gB,EAAA2d,EAAAwC,EAAAO,GADqB,GASrBjkC,KAAAojC,qBAAA7f,EAAA2d,EAAAwC,EADKO,GAGFzgB,EACLxjB,KAAAmkC,sBAAA5gB,EAAA2d,EAAAwC,EAAAO,EAAAvgB,EADuBC,GAUvB3jB,KAAAqkC,oBAAA9gB,EAAA2d,EAAAwC,EAAAO,EAAAvgB,EADKC,GAaL3jB,KAAAqgC,OAAJxc,cACE7jB,KAAAilC,YAD4B/D,GAG9B,GAAIlhC,KAAA8hC,iBAAJZ,EAAuC,CACrClhC,KAAA8hC,eADqC,KAErC9hC,KAFqCklC,iBAMvC,MAAMC,EAAmBnlC,KAAA8/B,aAAAoB,GArFAt6B,OAsFzB,GAAIu+B,EAAJ,EAA0B,CACxBnlC,KAAA2hC,oBADwBwD,EAExBnlC,KAFwBolC,6BAGflE,EAAAA,IAAkBlhC,KAAAyhC,cAAlBP,QAAJ,IAAmDlhC,KAAA2hC,oBACxD3hC,KADuFolC,wBAK3F1E,eAEE,GAAI1gC,KAAAwhC,qBAAA56B,OAAJ,EAA0C,OAI1C,IAAIgE,EAAU1E,QAND1B,UAOb,IAAK,IAAIkC,EAAJ,EAAWC,EAAK3G,KAAAq/B,aAArB/zB,WAAmD5E,EAAnDC,EAA2DD,IAAK,CAC9D,MAAM2+B,GADwD,EAAAznC,EAAA4C,2BAE9DR,KAAAwhC,qBAAA96B,GAA+B2+B,EAF+Bz6B,QAI9DA,EAAUA,EAAAvG,MAAa,IACjBrE,KAAAs3B,cAAqBt3B,KAAAwhC,qBAAA56B,OAAzB,EACS5G,KAAAs3B,aAAAgD,QACI5zB,EADJ,GAAArC,MAECqP,GACGA,EAAAA,eAAuB,CAC5B4xB,qBAFa,MAFZjhC,MAQHyxB,IACE,MAAMyP,EAAYzP,EADLpH,MAEP8W,EAFO,GAIb,IAAK,IAAIC,EAAJ,EAAWC,EAAKH,EAArB3+B,OAAuC6+B,EAAvCC,EAA+CD,IAC7CD,EAAAA,KAAYD,EAAAA,GADsCI,MAKnD3lC,KAAAyhC,cAAD/6B,GAAwB1G,KAAA0hC,WAAxBh7B,IAA8Cg4B,UAC5C8G,EAAAA,KAVW,KAabH,EAAAA,QAba3+B,MAef7B,IACEF,OAAAA,WAAAA,MACE,uCAAuC+B,EAAvC,IAFM7B,GAMR7E,KAAAyhC,cAAA/6B,GANQ,GAOR1G,KAAA0hC,WAAAh7B,GAPQ,KAQR2+B,EAAAA,QARQ3+B,MAaTR,QAtCoB1B,aA2CjCygC,YAAAA,GACMjlC,KAAAmhC,gBAAuBnhC,KAAAogC,UAAAiB,UAA3BtS,IAIE/uB,KAAAq/B,aAAA7zB,KAAyBujB,EAJkC,GAO7D/uB,KAAAs/B,UAAAh7B,SAAA,yBAAkD,CAChDC,OADgDvE,KAEhDkhC,UAFgDnS,IAMpDgS,kBACE/gC,KAAAs/B,UAAAh7B,SAAA,yBAAkD,CAChDC,OADgDvE,KAEhDkhC,WAFgD,IAMpDJ,aACE,MAAM9c,EAAWhkB,KAAAqgC,OADNvc,aAEL8hB,EAAmB5lC,KAAAq/B,aAAA7zB,KAFd,EAGLD,EAAWvL,KAAAq/B,aAHN/zB,WAKXtL,KAAA4/B,mBALW,EAOX,GAAI5/B,KAAJwgC,YAAsB,CAEpBxgC,KAAAwgC,aAFoB,EAGpBxgC,KAAAogC,UAAAiB,QAAyBrhC,KAAAogC,UAAAgB,UAHL,EAIpBphC,KAAAshC,QAAAD,QAJoBuE,EAKpB5lC,KAAAshC,QAAAF,SALoB,KAMpBphC,KAAAshC,QAAAC,SANoB,EAOpBvhC,KAAA8hC,eAPoB,KAQpB9hC,KAAA8/B,aAAAl5B,OARoB,EASpB5G,KAAAkgC,mBAAAt5B,OAToB,EAUpB5G,KAAAggC,kBAAAp5B,OAVoB,EAWpB5G,KAAA2hC,mBAXoB,EAapB3hC,KAboB+gC,kBAiBpB,MAAM1e,YAAAA,GAAkBriB,KAjBJ4hB,MAkBpB,IAAIikB,EAlBgB,EAmBhBC,EAAYv6B,EAnBI,EAoBpB,GAAA8W,EAAiB,CACfwjB,EAAY7lC,KAAAq/B,aAAA7zB,KADG,EAEfs6B,EAFeD,EAKjB,IAAK,IAAIn/B,EAATm/B,EAAwBn/B,GAAxBo/B,EAAwCp/B,IAGtC,IAAI1G,KAAA6hC,oBAAAkE,IAAJr/B,GAAA,CAGA1G,KAAA6hC,oBAAApsB,IAN2C/O,GAO3C1G,KAAAwhC,qBAAA96B,GAAArC,MAAkCg9B,IAChCrhC,KAAA6hC,oBAAAtsB,OAD2C8rB,GAE3CrhC,KAAA+kC,gBAF2C1D,OAQjD,GAAA,KAAIrhC,KAAA+hC,OAAoB,CACtB/hC,KAAAygC,eAAoB7C,EADEC,OAAA,OAKxB,GAAI79B,KAAJ8hC,eAAyB,OAIzB,MAAMkE,EAAShmC,KAxDJshC,QA0DXthC,KAAA4hC,eA1DWr2B,EA6DX,GAAA,OAAIy6B,EAAAA,SAA0B,CAC5B,MAAMC,EAAiBjmC,KAAA8/B,aAAkBkG,EAAlB3E,SADKz6B,OAE5B,IACGod,GAAagiB,EAAAA,SAAAA,EAAdC,GACCjiB,GAAYgiB,EAAAA,SAFf,EAGE,CAGAA,EAAAA,SAAkBhiB,EAAWgiB,EAAAA,SAAXhiB,EAAiCgiB,EAAAA,SAHnD,EAIAhmC,KAAAkmC,cAJA,GAAA,OASFlmC,KAAAmmC,mBAd4BniB,GAiB9BhkB,KA9EWklC,iBAiFbkB,cAAAA,GACE,MAAMJ,EAAShmC,KADMshC,QAEf+E,EAAazD,EAFEh8B,OAGfod,EAAWhkB,KAAAqgC,OAHIvc,aAKrB,GAAAuiB,EAAgB,CAEdL,EAAAA,SAAkBhiB,EAAWqiB,EAAXriB,EAFJ,EAGdhkB,KAAAkmC,cAHc,GAId,OAJc,EAOhBlmC,KAAAmmC,mBAZqBniB,GAarB,GAAIgiB,EAAJzE,QAAoB,CAClByE,EAAAA,SADkB,KAElB,GAAIhmC,KAAA4hC,eAAJ,EAA6B,CAE3B5hC,KAAAkmC,cAF2B,GAK3B,OAL2B,GAS/B,OAxBqB,EA2BvBhB,iBACE,OAAIllC,KAAA8hC,gBACFn9B,OAAAA,WAAAA,MADgC,uCAIlC,IAAIi+B,EALW,KAMf,EAAG,CACD,MAAMvB,EAAUrhC,KAAAshC,QADfD,QAEDuB,EAAU5iC,KAAA8/B,aAFTuB,GAGD,IAAAuB,EAAc,CAGZ5iC,KAAA8hC,eAHYT,EAAA,cAMNrhC,KAAAomC,cAfKxD,IAkBjBuD,mBAAAA,GACE,MAAMH,EAAShmC,KADYshC,QAErB/1B,EAAWvL,KAAAq/B,aAFU/zB,WAG3B06B,EAAAA,QAAiBhiB,EAAWgiB,EAAAA,QAAXhiB,EAAgCgiB,EAAAA,QAHtB,EAI3BA,EAAAA,SAJ2B,KAM3BhmC,KAN2B4hC,iBAQ3B,GAAIoE,EAAAA,SAAAA,GAA8BA,EAAAA,QAAlC,EAAsD,CACpDA,EAAAA,QAAiBhiB,EAAWzY,EAAXyY,EADmC,EAEpDgiB,EAAAA,SAFoD,GAMxDE,aAAaI,GAAbJ,GACE,IAAItkB,EAAQgc,EADcG,UAE1B,MAAMwD,EAAUvhC,KAAAshC,QAFUC,QAG1BvhC,KAAAshC,QAAAC,SAH0B,EAK1B,GAAA+E,EAAW,CACT,MAAMhjB,EAAetjB,KAAAogC,UADZiB,QAETrhC,KAAAogC,UAAAiB,QAAyBrhC,KAAAshC,QAFhBD,QAGTrhC,KAAAogC,UAAAgB,SAA0BphC,KAAAshC,QAHjBF,SAITxf,EAAQ2f,EAAU3D,EAAV2D,QAA8B3D,EAJ7BC,OAOLva,IAAAA,GAAuBA,IAAiBtjB,KAAAogC,UAA5CiB,SACErhC,KAAAilC,YADkE3hB,GAKtEtjB,KAAAygC,eAAA7e,EAA2B5hB,KAAAqgC,OAjBDvc,cAkB1B,IAAA,IAAI9jB,KAAAogC,UAAAiB,QAA+B,CAEjCrhC,KAAAmhC,gBAFiC,EAIjCnhC,KAAAilC,YAAiBjlC,KAAAogC,UAJgBiB,UAQrC5B,gBAAAA,GACE,MAAM9+B,EAAcX,KADDs3B,aAKnBt3B,KAAAsgC,qBAAA11B,QAAAvG,MAAuC,KAErC,GACGrE,KAADs3B,gBACC32B,GAAeX,KAAAs3B,eAFlB32B,GAAA,CAOA,GAAIX,KAAJ6gC,aAAuB,CACrB/uB,aAAa9R,KADQ6gC,cAErB7gC,KAAA6gC,aAFqB,KAQvB,GAAI7gC,KAAJ8hC,eAAyB,CACvB9hC,KAAA8hC,eADuB,KAEvB9hC,KAAAwgC,aAFuB,EAKzBxgC,KAAAygC,eAAoB7C,EAtBuBC,OAwB3C79B,KAAA4/B,mBAxB2C,EAyB3C5/B,KAzB2C+gC,sBA6B/CwF,uBACE,MAAMlF,QAAAA,EAAAD,SAAAA,GAAwBphC,KADTogC,UAErB,IAAIlC,EAAJ,EACErvB,EAAQ7O,KAHW2hC,mBAIrB,IAAA,IAAIP,EAAiB,CACnB,IAAK,IAAI16B,EAAT,EAAgBA,EAAhB26B,EAA6B36B,IAAK,CAAA,IAAA8/B,EAChCtI,IAAW,QAAAsI,EAAAxmC,KAAA8/B,aAAAp5B,UAAA,IAAA8/B,OAAA,EAAAA,EAAA5/B,SADqB,EAGlCs3B,GAAWkD,EAJQ,GASjBlD,EAAAA,GAAeA,EAAnBrvB,KACEqvB,EAAUrvB,EADwB,GAGpC,MAAO,CAAAqvB,QAAAA,EAAArvB,MAAAA,GAGTu2B,wBACEplC,KAAAs/B,UAAAh7B,SAAA,yBAAkD,CAChDC,OADgDvE,KAEhD+jB,aAAc/jB,KAFkCumC,yBAMpD9F,eAAAA,EAAsBzc,GAAtByc,GAAwC,IAAAgG,EACtCzmC,KAAAs/B,UAAAh7B,SAAA,yBAAkD,CAChDC,OADgDvE,KAAA4hB,MAAAA,EAAAoC,SAAAA,EAIhDD,aAAc/jB,KAJkCumC,uBAKhDtiB,UAAU,QAAAwiB,EAAAzmC,KAAAqgC,cAAA,IAAAoG,OAAA,EAAAA,EAAAljB,QALsC,4EC1wB/C,SAAA6gB,OAAAsC,GAEL,OADAA,EAxBF,SAAAxtB,SAAAtf,GACE,OAAOA,MAAAA,EAAAA,GApFT,SAAA+sC,aAAA/sC,GAEE,GAAA,iBAAIA,EACF,OAD4BA,EAG9B,GAoDF,SAAAgtC,SAAAhtC,GACE,MAAO,iBAAAA,GAtBT,SAAAitC,aAAAjtC,GACE,QAAOA,GADoB,iBACTA,EAsBfitC,CAAAA,IAAuBC,EAAAA,KAAAA,IAFHC,EApDnBH,CAAJhtC,GACE,OAAOotC,EAAiBA,EAAAA,KAAjBA,GADY,GAGrB,IAAI9jB,EAAUtpB,EARa,GAS3B,MAAQspB,KAAAA,GAAkB,EAADtpB,IAAe,EAAA,EAAjC,KAToBspB,EAoFCyjB,CADL/sC,GAwBdsf,CADoBwtB,KAEZA,EAAAA,QAAAA,EAAAA,GAAAA,QAAAA,EAFY,KAlP/B,IAGIK,EAbJ,kBAgBIE,EAhBJ,8CA6BIC,EAAcrI,OANJ,kDAvBd,KA0FIsI,EAAa,iBAAAC,QAAAA,QAAuCA,OAAAA,SAAvC1uC,QA1FjB0uC,OA6FIC,EAAW,iBAAAC,MAAAA,MAAmCA,KAAAA,SAAnC5uC,QA7Ff4uC,KAgGItP,EAAOmP,GAAAA,GAA0BI,SAhGrC,cAgGqCA,GAuBrC,IAAIC,EAdJ,SAAAC,eAAAC,GACE,OAAO,SAAA9qC,GACL,OAAO8qC,MAAAA,OAAAA,EAA6BA,EADjB9qC,IAaJ6qC,CAvFG,CAEpB,IAFoB,IAEN,IAFM,IAEO,IAFP,IAEoB,IAFpB,IAEiC,IAFjC,IAE8C,IAF9C,IAGpB,IAHoB,IAGN,IAHM,IAGO,IAHP,IAGoB,IAHpB,IAGiC,IAHjC,IAG8C,IAH9C,IAIpB,IAJoB,IAIN,IAJM,IAKpB,IALoB,IAKN,IALM,IAMpB,IANoB,IAMN,IANM,IAMO,IANP,IAMoB,IANpB,IAOpB,IAPoB,IAON,IAPM,IAOO,IAPP,IAOoB,IAPpB,IAQpB,IARoB,IAQN,IARM,IAQO,IARP,IAQoB,IARpB,IASpB,IAToB,IASN,IATM,IASO,IATP,IASoB,IATpB,IAUpB,IAVoB,IAUN,IAVM,IAWpB,IAXoB,IAWN,IAXM,IAWO,IAXP,IAWoB,IAXpB,IAWiC,IAXjC,IAW8C,IAX9C,IAYpB,IAZoB,IAYN,IAZM,IAYO,IAZP,IAYoB,IAZpB,IAYiC,IAZjC,IAY8C,IAZ9C,IAapB,IAboB,IAaN,IAbM,IAaO,IAbP,IAaoB,IAbpB,IAcpB,IAdoB,IAcN,IAdM,IAcO,IAdP,IAcoB,IAdpB,IAepB,IAfoB,IAeN,IAfM,IAeO,IAfP,IAgBpB,IAhBoB,KAgBN,IAhBM,KAiBpB,IAjBoB,KAiBN,IAjBM,KAkBpB,IAlBoB,KAoBpB,IApBoB,IAoBJ,IApBI,IAoBW,IApBX,IAqBpB,IArBoB,IAqBJ,IArBI,IAqBW,IArBX,IAsBpB,IAtBoB,IAsBJ,IAtBI,IAsBW,IAtBX,IAsB0B,IAtB1B,IAuBpB,IAvBoB,IAuBJ,IAvBI,IAuBW,IAvBX,IAuB0B,IAvB1B,IAwBpB,IAxBoB,IAwBJ,IAxBI,IAwBW,IAxBX,IAwB0B,IAxB1B,IAyBpB,IAzBoB,IAyBJ,IAzBI,IAyBW,IAzBX,IAyB0B,IAzB1B,IAyByC,IAzBzC,IA0BpB,IA1BoB,IA0BJ,IA1BI,IA0BW,IA1BX,IA0B0B,IA1B1B,IA0ByC,IA1BzC,IA2BpB,IA3BoB,IA2BJ,IA3BI,IA2BW,IA3BX,IA2B0B,IA3B1B,IA4BpB,IA5BoB,IA4BJ,IA5BI,IA4BW,IA5BX,IA4B0B,IA5B1B,IA6BpB,IA7BoB,IA6BJ,IA7BI,IA6BW,IA7BX,IA6B0B,IA7B1B,IA8BpB,IA9BoB,IA8BJ,IA9BI,IA8BW,IA9BX,IA8B0B,IA9B1B,IA8ByC,IA9BzC,IA+BpB,IA/BoB,IA+BJ,IA/BI,IA+BW,IA/BX,IA+B0B,IA/B1B,IA+ByC,IA/BzC,IAgCpB,IAhCoB,IAgCJ,IAhCI,IAiCpB,IAjCoB,IAiCJ,IAjCI,IAiCW,IAjCX,IAkCpB,IAlCoB,IAkCJ,IAlCI,IAkCW,IAlCX,IAkC0B,IAlC1B,IAkCyC,IAlCzC,IAmCpB,IAnCoB,IAmCJ,IAnCI,IAmCW,IAnCX,IAmC0B,IAnC1B,IAmCyC,IAnCzC,IAoCpB,IApCoB,IAoCJ,IApCI,IAoCW,IApCX,IAoC0B,IApC1B,IAqCpB,IArCoB,IAqCJ,IArCI,IAqCW,IArCX,IAqC0B,IArC1B,IAsCpB,IAtCoB,IAsCJ,IAtCI,IAsCW,IAtCX,IAuCpB,IAvCoB,IAuCJ,IAvCI,IAuCW,IAvCX,IAwCpB,IAxCoB,IAwCJ,IAxCI,IAwCW,IAxCX,IAyCpB,IAzCoB,IAyCJ,IAzCI,IAyCW,IAzCX,IA0CpB,IA1CoB,IA0CJ,IA1CI,IA0CW,IA1CX,IA0C0B,IA1C1B,IA2CpB,IA3CoB,IA2CJ,IA3CI,IA2CW,IA3CX,IA2C0B,IA3C1B,IA4CpB,IA5CoB,IA4CJ,IA5CI,IA4CW,IA5CX,IA6CpB,IA7CoB,IA6CJ,IA7CI,IA6CW,IA7CX,IA8CpB,IA9CoB,IA8CJ,IA9CI,IA8CW,IA9CX,IA8C0B,IA9C1B,IA8CyC,IA9CzC,IA8CwD,IA9CxD,IA+CpB,IA/CoB,IA+CJ,IA/CI,IA+CW,IA/CX,IA+C0B,IA/C1B,IA+CyC,IA/CzC,IA+CwD,IA/CxD,IAgDpB,IAhDoB,IAgDJ,IAhDI,IAiDpB,IAjDoB,IAiDJ,IAjDI,IAiDW,IAjDX,IAkDpB,IAlDoB,IAkDJ,IAlDI,IAkDW,IAlDX,IAmDpB,IAnDoB,IAmDJ,IAnDI,IAmDW,IAnDX,IAoDpB,IApDoB,KAoDJ,IApDI,KAqDpB,IArDoB,KAqDJ,IArDI,KAsDpB,IAtDoB,KAsDJ,IAtDI,OAiGlBX,EAPcpuC,OA1HlBivC,UAAAzuB,SAoII0uB,EAAS5P,EApIb4P,OAuIIC,EAAcD,EAASA,EAATA,eAAlBzqC,EACI6pC,EAAiBa,EAAcA,EAAdA,cAxIrB1qC,sGCiFA,SAAA+lC,iBAAA4E,GACE,GAxDF,SAAAC,qBAAAD,GACE,OAAOA,EAD+B,MAwDlCC,CAAJD,GACE,OArDJ,SAAAE,QAAAF,GACE,OADyB,IAClB,MAACA,GAoDFE,CAAJF,GAtCJ,SAAAG,aAAAH,GACE,OACEA,KAAAA,GAAAA,IACAA,GADAA,KAEAA,GAJ4B,KAK5BA,EAkCMG,CAAJH,GACSI,EADmBC,MAlDlC,SAAAC,aAAAN,GACE,OACGA,GAAAA,IAA8BA,GAA/B,KACCA,GAAAA,IAA8BA,GAHH,GAqDxBM,CAAAA,IA9CR,SAAAC,aAAAP,GACE,OAAOA,GAAAA,IAA8BA,GADP,GA+CxBO,CADAD,IADK,KAGLN,EAEOI,EADPI,aAGKJ,EAVcK,MAV3B,SAAAC,OAAAV,GACE,OADwB,OACjB,MAACA,GAoBKU,CAAJV,GACEI,EADoBO,YAEtB,MAAIX,EACFI,EADkCC,MAGpCD,EAjB2BI,aAoBpC,GAhDF,SAAAI,MAAAZ,GACE,OACGA,GAAAA,OAAsBA,GAAvB,OACCA,GAAAA,OAAsBA,GAHF,MAgDnBY,CAAJZ,GACE,OAAOI,EADYS,WAEd,GA3CT,SAAAC,WAAAd,GACE,OAAOA,GAAAA,OAAsBA,GADD,MA2CjBc,CAAJd,GACL,OAAOI,EADwBW,gBAE1B,GAzCT,SAAAC,WAAAhB,GACE,OAAOA,GAAAA,OAAsBA,GADD,MAyCjBgB,CAAJhB,GACL,OAAOI,EADwBa,gBAE1B,GAvCT,SAAAC,oBAAAlB,GACE,OAAOA,GAAAA,OAAsBA,GADQ,MAuC1BkB,CAAJlB,GACL,OAAOI,EADiCe,0BAG1C,OAAOf,EA9B2BI,cAlEpC,MAAMJ,EAAgB,CACpBC,MADoB,EAEpBG,aAFoB,EAGpBC,MAHoB,EAIpBI,WAJoB,EAKpBE,gBALoB,EAMpBE,gBANoB,EAOpBE,0BAPoB,EAQpBR,YARoB,oGCbtB,IAFAS,EAIA,IACEA,EAAuBC,KAAAA,SAAAA,MAAqB,CAAEC,YAD5C,SAEF,MAAAC,GACA,IACEH,EAAuBC,KAAAA,SAAAA,UAAyB,CAAEC,YADhD,SAEF,MAAAE,GAEAJ,OAFyB/rC,GAO7B,MAAMosC,EAhBN,GAiBMC,EAjBN,iBAmBO,MAAA5F,YAWL5mC,gBAAAysC,EAAAC,EAAArsC,GACE,MAAMomC,EAAcpmC,GAAAA,GAAmCA,EADpBomC,YAG7BkG,EAAUF,EAHmB7iC,OAI7BgjC,EAAUF,EAJmB9iC,OAOnC,GAAA,IAAI+iC,EACF,OADiBC,EAGnB,GAAA,IAAIA,EACF,OADiBD,EAKnB,IAAAE,EAAAC,EAAApjC,EAAA++B,EAfmCsE,EAAAC,EAkBnC,IAAKtjC,EAAL,EAAYA,EAAZkjC,IAAAljC,EAA8B,CAC5B6iC,EAAAA,GAD4B7iC,EAE5B8iC,EAAAA,GAA0BE,EAAAA,WAFEhjC,GAI9B6iC,EAAAA,GAtBmCK,EAyBnC,GAAAnG,EAEE,IAAK/8B,EAAL,EAAYA,EAAZijC,IAAAjjC,EAA8B,CAC5BojC,EAAUpjC,EADkB,EAG5B,IAAK++B,EAAL,EAAYA,EAAZmE,IAAAnE,EAA8B,CAC5BoE,EAD4BC,EAI5BE,EAJ4B,IAK1Bd,EAAAA,QACEO,EAAAA,OADFP,GAEEe,OAAAA,aAAoBT,EAFtBN,KAKFY,EAAUP,EAAAA,IAA0BS,EAAA,EAVR,GAa5BD,EAAMF,EAbsB,EAcxBC,EAAJC,IACED,EADiBC,GAInBA,EAAMR,EAAoB9D,EAApB8D,GAlBsB,EAmBxBO,EAAJC,IACED,EADiBC,GAKnBR,EAAAA,GAxB4BM,EA4B9BN,EAAAA,GA/B4BO,OAmC9B,IAAKpjC,EAAL,EAAYA,EAAZijC,IAAAjjC,EAA8B,CAC5BojC,EAAUpjC,EADkB,EAG5B,IAAK++B,EAAL,EAAYA,EAAZmE,IAAAnE,EAA8B,CAC5BoE,EAD4BC,EAI5BE,EAASP,EAAAA,WAAAA,KAAuBD,EAJJ/D,GAM5BqE,EAAUP,EAAAA,IAA0BS,EAAA,EANR,GAS5BD,EAAMF,EATsB,EAUxBC,EAAJC,IACED,EADiBC,GAInBA,EAAMR,EAAoB9D,EAApB8D,GAdsB,EAexBO,EAAJC,IACED,EADiBC,GAKnBR,EAAAA,GApB4BM,EAwB9BN,EAAAA,GA3B4BO,EA8BhC,OA5FmCA,gKCZvC,IAAAtsC,EAAAC,EAAA,GAlBAE,EAAAF,EAAA,GAsDA,SAAAysC,iBACE,OAAO5pC,SAAAA,SADiByE,kBAI1B,MAAA2D,WAIE5L,aAAY8K,YAAAA,EAAA1F,SAAZpF,IACEkD,KAAA4H,YADqCA,EAErC5H,KAAAkC,SAFqCA,EAIrClC,KAAAmqC,cAJqC,EAKrCnqC,KAAAoqC,aALqC,GAMrCpqC,KANqC8N,QAQrC9N,KAAA4C,aARqC,KASrC5C,KAAAqqC,6BATqC,EAYrCrqC,KAAAkC,SAAA4T,IAAA,2BAA6C6K,IAC3C3gB,KAAAqqC,4BACE1pB,EAAAA,QAAc0R,EAAAA,sBAFkCnE,UAIpDluB,KAAAkC,SAAA4T,IAAA,aAA+B,KAC7B9V,KAAAsqC,gBADmC,EAGnCtqC,KAAAkC,SAAA4T,IAAA,eAEE6K,IACE3gB,KAAAsqC,iBAAwB3pB,EADnBrV,aAGP,CAAEyK,MAR+B,OAkBvCzL,YAAW8J,YAAAA,EAAAgF,aAAeA,GAAf,EAAAC,UAAqCA,GAAhD/O,IACE,IAAI8J,GAAJ,iBAAoBA,EAAiC,CACnDzP,OAAAA,WAAAA,MADmD,wEAAA,OAOjD3E,KAAJmqC,cACEnqC,KADqB8N,QAGvB,MAAMy8B,EACJ,KAAAvqC,KAAAoqC,cAA4BpqC,KAAAoqC,eAZqCh2B,EAanEpU,KAAAoqC,aAbmEh2B,EAcnEpU,KAAAwqC,YAdmE,IAcjDnxB,EAElBrZ,KAAAmqC,cAhBmE,EAiBnEnqC,KAjBmEyqC,cAkBnE,MAAM7oB,EAAQrf,OAAAA,QAlBqDqf,MAoBnE5hB,KAAA0qC,qBApBmE,EAqBnE1qC,KAAA2qC,iBArBmE,EAsBnE3qC,KAAA4qC,aAAoBV,iBACpBlqC,KAAA6qC,oBAvBmE,EAyBnE7qC,KAAA8qC,KAAY9qC,KAAA+qC,QAzBuD,EA0BnE/qC,KAAAgrC,aA1BmE,KA2BnEhrC,KAAAirC,UA3BmE,KA6BnE,IAAKjrC,KAAAkrC,cAAAtpB,GAAD,IAAJxI,EAA0E,CACxE,MAAMrU,KAAAA,EAAAyG,KAAAA,EAAA0H,SAAAA,GAA2BlT,KAAAmrC,mBADuC,GAKxE,IAAIpmC,GAAAwlC,GAAJnxB,EAA4C,CAE1CpZ,KAAAorC,oBAAA,MAF0C,GAAA,OAO5CprC,KAAAorC,oBACE,CAAArmC,KAAAA,EAAAyG,KAAAA,EAAA0H,SAAAA,IAbsE,GAAA,OAqB1E,MAAMm4B,EAAczpB,EAlD+CypB,YAmDnErrC,KAAAsrC,qBAAAD,EAEEzpB,EAFF2pB,KAnDmE,QAyDnEpuC,IAAIkuC,EAAAA,WACFrrC,KAAAwrC,iBAAwBH,EADcn4B,UAGxC,GAAIm4B,EAAJ/2B,KAAsB,CACpBtU,KAAAyrC,iBAAwBlyB,KAAAA,UAAe8xB,EADnB/2B,MAMpBtU,KAAAgrC,aAAAx/B,KANoB,UAOX6/B,EAAJtmC,KACL/E,KAAAyrC,iBAAwBJ,EADGtmC,KAElBsmC,EAAJ7/B,OAELxL,KAAAyrC,iBAAwB,QAAQJ,EAAR7/B,QAQ5BsC,QACE,GAAI9N,KAAJmqC,aAAuB,CACrBnqC,KADqB0rC,YAGrB1rC,KAAAmqC,cAHqB,EAIrBnqC,KAJqB2rC,gBAMvB,GAAI3rC,KAAJ4rC,uBAAiC,CAC/B95B,aAAa9R,KADkB4rC,wBAE/B5rC,KAAA4rC,uBAF+B,KAIjC5rC,KAAAyrC,iBAXM,KAYNzrC,KAAAwrC,iBAZM,KAmBRhyB,MAAKqyB,UAAEA,EAAF,KAAApyB,aAAAA,EAAAC,WAALF,IACE,IAAKxZ,KAALmqC,aAAwB,OAGxB,GAAI0B,GAAJ,iBAAiBA,EAA+B,CAC9ClnC,OAAAA,WAAAA,MAEI,qBAAAknC,0CAH0C,OAMzC,IAAKC,MAAAA,QAALryB,GAAkC,CACvC9U,OAAAA,WAAAA,MAEI,qBAAA8U,6CAHmC,OAMlC,IAAKzZ,KAAA+rC,aAALryB,KAGDA,OAAAA,GAAuB1Z,KAA3BgrC,cAA8C,CAC5CrmC,OAAAA,WAAAA,MAEI,qBAAA+U,2CAHwC,OAShD,MAAM3U,EAAO8mC,GAAatyB,KAAAA,UA5ByBE,GA6BnD,IAAA1U,EAAW,OAMX,IAAIinC,GAnC+C,EAoCnD,GACEhsC,KAAAgrC,eACCiB,kBAAkBjsC,KAAAgrC,aAAlBjmC,KAAAA,IACCmnC,kBAAkBlsC,KAAAgrC,aAAlBkB,KAHJzyB,IAIE,CAMA,GAAIzZ,KAAAgrC,aAAJx/B,KAA4B,OAG5BwgC,GATA,EAWF,IAAIhsC,KAAA0qC,qBAAJsB,EAAA,CAIAhsC,KAAAorC,oBACE,CACE92B,KADFmF,EAAA1U,KAAAA,EAGEyG,KAHFkO,EAIExG,SAAUlT,KAAA4H,YAJZsL,UAxDiD84B,GAiEnD,IAAKhsC,KAAL0qC,oBAA+B,CAG7B1qC,KAAA0qC,qBAH6B,EAM7BxkC,QAAAA,UAAAA,MAAuB,KACrBlG,KAAA0qC,qBAD2B,OAWjCyB,SAAAA,GAAqB,IAAAC,EACnB,GAAKpsC,KAALmqC,aAGA,GAAKnqC,KAAA+rC,aAALryB,IAOA,IAAI,QAAA0yB,EAAApsC,KAAAgrC,oBAAA,IAAAoB,OAAA,EAAAA,EAAA5gC,QAAJkO,IAKI1Z,KAAJ0qC,oBAAA,CAIA1qC,KAAAorC,oBAAyB,CAEvB92B,KAFuB,KAGvBvP,KAAM,QAAA2U,IACNlO,KAJuBkO,EAKvBxG,SAAUlT,KAAA4H,YALasL,WAQzB,IAAKlT,KAAL0qC,oBAA+B,CAG7B1qC,KAAA0qC,qBAH6B,EAM7BxkC,QAAAA,UAAAA,MAAuB,KACrBlG,KAAA0qC,qBAD2B,YA7B7B/lC,OAAAA,WAAAA,MACE,yBAAA+U,kCAqCN2yB,sBACOrsC,KAADmqC,eAAsBnqC,KAA1B0qC,qBAGA1qC,KAJoBssC,0BAWtBC,OACE,IAAKvsC,KAADmqC,cAAsBnqC,KAA1B0qC,oBAAoD,OAGpD,MAAM9oB,EAAQrf,OAAAA,QAJTqf,MAKD5hB,KAAAkrC,cAAAtpB,IAA6BA,EAAAA,IAAjC,GACErf,OAAAA,QAD8CgqC,OASlDC,UACE,IAAKxsC,KAADmqC,cAAsBnqC,KAA1B0qC,oBAAoD,OAGpD,MAAM9oB,EAAQrf,OAAAA,QAJNqf,MAKJ5hB,KAAAkrC,cAAAtpB,IAA6BA,EAAAA,IAAY5hB,KAA7C+qC,SACExoC,OAAAA,QADyDiqC,UASzD5pB,yBACF,OACE5iB,KAAAmqC,eACCnqC,KAAA0qC,qBAA4B1qC,KAAA2qC,iBAHR,GAOrBtqC,sBACF,OAAOL,KAAAmqC,aAAoBnqC,KAApByrC,iBADa,KAIlBnyB,sBACF,OAAOtZ,KAAAmqC,aAAoBnqC,KAApBwrC,iBADa,KAOtBJ,oBAAAA,EAAiCY,GAAjCZ,GACE,MAAMqB,EAAgBT,IAAiBhsC,KADcgrC,aAE/C0B,EAAW,CACft4B,YAAapU,KADEoqC,aAEfmB,IAAKkB,EAAgBzsC,KAAhBysC,KAA4BzsC,KAAA8qC,KAFlB,EAAAO,YAAAA,GAcjBrrC,KAAAsrC,qBAAAD,EAAuCqB,EAhBcnB,KAkBrD,IAlBqDoB,EAmBrD,GAAI3sC,KAAAwqC,YAAAxqC,MAAmBqrC,GAAAA,EAAvBtmC,KAA0C,CACxC,MAAMtC,EAAUnC,SAAAA,SAAAA,KAAAA,MAAAA,KADwB,GAGnCmC,EAAAA,WAAL,aACEkqC,EAAS,GAAAlqC,KAAc4oC,EAAdtmC,QAGb0nC,EACElqC,OAAAA,QAAAA,aAAAA,EAAAA,GADiBoqC,GAGjBpqC,OAAAA,QAAAA,UAAAA,EAAAA,GADKoqC,GAiBTL,wBAAwBM,GAAxBN,GACE,IAAKtsC,KAALirC,UAAqB,OAGrB,IAAI4B,EAAW7sC,KAJ0BirC,UAKzC,GAAA2B,EAAe,CACbC,EAAWn0C,OAAAA,OAAcA,OAAAA,OAAdA,MAAmCsH,KADjCirC,WAEb4B,EAAAA,WAFa,EAKf,IAAK7sC,KAALgrC,aAAwB,CACtBhrC,KAAAorC,oBADsByB,GAAA,OAIxB,GAAI7sC,KAAAgrC,aAAJ4B,UAAiC,CAE/B5sC,KAAAorC,oBAAAyB,GAF+B,GAAA,OAKjC,GAAI7sC,KAAAgrC,aAAAjmC,OAA2B8nC,EAA/B9nC,KAA8C,OAG9C,IACG/E,KAAAgrC,aAADx/B,MAEExL,KAAA6qC,qBA9bR,GA+bM,OAQF,IAAImB,GAlCqC,EAmCzC,GACEhsC,KAAAgrC,aAAAx/B,MAA0BqhC,EAA1BlhB,OACA3rB,KAAAgrC,aAAAx/B,MAA0BqhC,EAF5BrhC,KAGE,CAMA,QAAIrO,IAAA6C,KAAAgrC,aAAA12B,OAAyCtU,KAAAgrC,aAA7Crf,MAAsE,OAItEqgB,GAVA,EAYFhsC,KAAAorC,oBAAAyB,EAlDyCb,GAwD3CD,aAAAA,GACE,OACExuC,OAAAA,UAAAA,IAAyBmO,EAAzBnO,GAAoCmO,GAAO1L,KAAA4H,YAF7B0D,WASlB4/B,cAAAA,EAAqB4B,GAArB5B,GACE,IAAAtpB,EACE,OADU,EAGZ,GAAIA,EAAAA,cAAsB5hB,KAA1BoqC,aAA6C,CAC3C,IAAA0C,EAgBE,OAHK,EAbU,CAGf,GACE,iBAAOlrB,EAAPxN,aACAwN,EAAAA,YAAAA,SAA6B5hB,KAAAoqC,aAF/BxjC,OAIE,OADA,EAGF,MAAMmmC,GAAcC,YAAAA,iBATL,cAUf,GAAA,YAAID,MAAAA,OAAAA,EAAAA,EAAAA,MACF,OADgC,GAStC,SAAKxvC,OAAAA,UAAiBqkB,EAAlB2pB,MAAgC3pB,EAAAA,IAApC,KAGIA,OAAAA,EAAAA,aAAJ,iBAAyCA,EAAPypB,aASpCC,qBAAAA,EAAAA,EAAuC2B,GAAvC3B,GACE,GAAItrC,KAAJ4rC,uBAAiC,CAI/B95B,aAAa9R,KAJkB4rC,wBAK/B5rC,KAAA4rC,uBAL+B,KAO7BqB,GAAAA,MAAmB5B,GAAAA,EAAvBuB,kBAGSvB,EAHsCuB,UAK/C5sC,KAAAgrC,aAb8DK,EAc9DrrC,KAAA8qC,KAd8DS,EAe9DvrC,KAAA+qC,QAAet5B,KAAAA,IAASzR,KAATyR,QAf+C85B,GAiB9DvrC,KAAA6qC,oBAjB8D,EAuBhEM,kBAAkB+B,GAAlB/B,GACE,MAAMpmC,EAAOooC,SAASjD,kBAATiD,UAD2B,GAElCnoC,GAASC,EAAAA,EAAAA,kBAFyBF,GAIlCqoC,EAAYpoC,EAAAA,IAAAA,cAJsB,GAKxC,IAAIwG,EALoC,EAK7BxG,EAAAA,IAAAA,UAENhF,KAAA+rC,aAADvgC,IAA6B0hC,GAAkBE,EAAAA,OAAnD,KACE5hC,EADwE,MAG1E,MAAO,CAAAzG,KAAAA,EAAAyG,KAAAA,EAAc0H,SAAUlT,KAAA4H,YAAxBsL,UAMTm6B,iBAAgBvrB,SAAhBurB,IACE,GAAIrtC,KAAJ4rC,uBAAiC,CAC/B95B,aAAa9R,KADkB4rC,wBAE/B5rC,KAAA4rC,uBAF+B,KAKjC5rC,KAAAirC,UAAiB,CACflmC,KAAM/E,KAAAqqC,4BACF,QAAQvoB,EAARpI,aACAoI,EAAAA,cAAAA,UAHW,GAIftW,KAAMxL,KAAA4H,YAJS4D,KAKfmgB,MAAO7J,EALQpI,WAMfxG,SAAU4O,EANK5O,UASjB,IAAIlT,KAAJ0qC,oBAAA,CAME1qC,KADAstC,gBAEAttC,KAFAstC,eAGCttC,KAAAgrC,aAJHx/B,MAcExL,KATA6qC,sBA4BA7qC,KAAA4rC,uBAA8B75B,YAAW,KAClC/R,KAAL0qC,qBACE1qC,KAAAssC,yBAD6B,GAG/BtsC,KAAA4rC,uBAJ6C,OArmBrD,MAinBE2B,WAAU3rB,MAAV2rB,IACE,MAAMC,EAAUtD,iBACduD,EAAcztC,KAAA4qC,eAFG4C,EAGnBxtC,KAAA4qC,aAHmB4C,EAKnB,IAAA5rB,EAME,CAEA5hB,KAFA8qC,OAIA,MAAM/lC,KAAAA,EAAAyG,KAAAA,EAAA0H,SAAAA,GAA2BlT,KAJjCmrC,oBAKAnrC,KAAAorC,oBACE,CAAArmC,KAAAA,EAAAyG,KAAAA,EAAA0H,SAAAA,IANF,GAAA,OAWF,IAAKlT,KAAAkrC,cAALtpB,GAAgC,OAQhC5hB,KAAA0qC,qBA9BmB,EAgCnB,GAAA+C,EAAiB,CAUfztC,KAVe2qC,oBAWfva,EAAAA,EAAAA,sBAAqB,CACnBvP,OADmBte,OAEnBtF,KAFmB,aAGnBozB,MA/pBR,MA4pBMD,MAIQ,KACNpwB,KADY2qC,sBAMhB,MAAMU,EAAczpB,EArDDypB,YAsDnBrrC,KAAAsrC,qBAAAD,EAEEzpB,EAFF2pB,KAtDmB,IA4DfzxB,EAAAA,EAAAA,iBAAgBuxB,EAApBn4B,YACElT,KAAA4H,YAAAsL,SAA4Bm4B,EADan4B,UAGvCm4B,EAAJ/2B,KACEtU,KAAA4H,YAAA8lC,gBAAiCrC,EADb/2B,MAEX+2B,EAAJtmC,KACL/E,KAAA4H,YAAAyS,QAAyBgxB,EADEtmC,MAElBsmC,EAAJ7/B,OAELxL,KAAA4H,YAAA4D,KAAwB6/B,EAFG7/B,MAO7BtF,QAAAA,UAAAA,MAAuB,KACrBlG,KAAA0qC,qBAD2B,KAQ/BgB,YAMO1rC,KAADgrC,eAAsBhrC,KAAAgrC,aAA1B4B,WACE5sC,KADqDssC,0BAQzD7B,cACE,IAAIzqC,KAAJ4C,aAAA,CAGA5C,KAAA4C,aAAoB,CAClB+qC,eAAgB3tC,KAAAqtC,gBAAA9lC,KADEvH,MAElB4tC,SAAU5tC,KAAAutC,UAAAhmC,KAFQvH,MAGlB6tC,SAAU7tC,KAAA0rC,UAAAnkC,KAHQvH,OAMpBA,KAAAkC,SAAA4T,IAAA,iBAAoC9V,KAAA4C,aAVxB+qC,gBAWZprC,OAAAA,iBAAAA,WAAoCvC,KAAA4C,aAXxBgrC,UAYZrrC,OAAAA,iBAAAA,WAAoCvC,KAAA4C,aAZxBirC,WAkBdlC,gBACE,GAAK3rC,KAAL4C,aAAA,CAGA5C,KAAAkC,SAAAkvB,KAAA,iBAAqCpxB,KAAA4C,aAJvB+qC,gBAKdprC,OAAAA,oBAAAA,WAAuCvC,KAAA4C,aALzBgrC,UAMdrrC,OAAAA,oBAAAA,WAAuCvC,KAAA4C,aANzBirC,UAQd7tC,KAAA4C,aARc,QAYlB,SAAAqpC,kBAAA6B,EAAAC,GACE,GAAI,iBAAAD,GAAJ,iBAAoCC,EAClC,OADgE,EAGlE,GAAID,IAAJC,EACE,OADyB,EAI3B,OADkB9oC,EAAAA,EAAAA,kBAAAA,GAAAA,IAP2B,eAQ7C8oC,EAMF,SAAA7B,kBAAA8B,EAAAC,GACE,SAAAC,aAAAviB,EAAAwiB,GACE,UAAIxiB,UAAJwiB,EACE,OADkC,EAGpC,GAAIrC,MAAAA,QAAAA,IAAwBA,MAAAA,QAA5BqC,GACE,OADiD,EAGnD,GAAIxiB,OAAAA,GAAAA,iBAAkBA,GAAtB,OAAmDwiB,EAAiB,CAClE,GAAIz1C,OAAAA,KAAAA,GAAAA,SAA8BA,OAAAA,KAAAA,GAAlCkO,OACE,OAD4D,EAG9D,IAAA,MAAAhK,KAAA+uB,EACE,IAAKuiB,aAAaviB,EAAbuiB,GAAyBC,EAA9BvxC,IACE,OAD0C,EAI9C,OATkE,EAWpE,OAAO+uB,IAAAA,GAAqBpuB,OAAAA,MAAAA,IAAuBA,OAAAA,MAlBhB4wC,GAqBrC,IAAMrC,MAAAsC,QAAAJ,KAA4BlC,MAAAA,QAAlCmC,GACE,OAD4D,EAG9D,GAAID,EAAAA,SAAqBC,EAAzBrnC,OACE,OAD0C,EAG5C,IAAK,IAAIF,EAAJ,EAAWC,EAAKqnC,EAArBpnC,OAAuCF,EAAvCC,EAA+CD,IAC7C,IAAKwnC,aAAaF,EAAbE,GAA2BD,EAAhCvnC,IACE,OAD8C,EAIlD,OAjCgD,uFC7vBlD,IAAAsvB,EAAAv4B,EAAA,IA+BA,MAAAmM,uBAAAosB,EAAAC,eACEn5B,YAAAA,GACEo5B,MADmB74B,GAEnB2C,KAAAmC,KAAY9E,EAFO8E,KAInBnC,KAAAkC,SAAA4T,IAAA,cAAiC9V,KAAAquC,aAAA9mC,KAJdvH,OAKnBA,KAAAkC,SAAA4T,IAAA,mBAAsC9V,KAAAi4B,oBAAA1wB,KALnBvH,OAQrB8N,QACEooB,MADMpoB,QAEN9N,KAAAsuC,uBAFM,KAQRlc,eAAAA,GACEpyB,KAAAkC,SAAAoC,SAAA,eAAuC,CACrCC,OADqCvE,KAAAuuC,YAAAA,IASzC9X,UAAAA,GAAmB+X,QAAAA,EAAAnZ,MAAnBoB,IACE,MAAMgY,cAAgB,KACpBzuC,KAAAsuC,uBAAAG,cAAAD,EAAmDnZ,EADzBqI,SAG1B19B,KAAAkC,SAAAoC,SAAA,wBAAgD,CAC9CC,OAD8CvE,KAE9C4K,QAAS1E,QAAAA,QAAgBlG,KAFqBsuC,2BAMlDjkB,EAAAA,QAAkB1J,IAChB,GAAIA,EAAAA,SAAJ0U,EAA0B,CACxBoZ,gBACA,OAFwB,EAGnB,GAAI9tB,EAAAA,SAAJ0J,EACL,OADiC,EAGnCgL,EAAAA,SAAiBA,EAPMqI,QAQvB+Q,gBACA,OATuB,GAgB3BnrC,qBAAA+mB,GAA8BptB,KAAEA,EAAF,OAC5B,GAAA,iBAAIA,EAAJ,CAIAotB,EAAAA,kBAA4BrqB,KAAAmC,KAAAsN,IALiB,qBAM7C4a,EAAAA,MAAAA,UAN6C,cAE3CA,EAAAA,YAAsBrqB,KAAAk3B,sBADMj6B,GAWhCy6B,iBAAAA,GAAsBz6B,KAAEA,EAAF,OACpBi5B,MAAAwB,iBAAApN,EADqC,OACMrtB,GAM7Cg7B,sBACOj4B,KAALsuC,wBAGApY,MAJoB+B,sBAUtB/iB,QAAOE,sBAAAA,EAAAzU,YAAPuU,IACMlV,KAAJsuC,wBACEtuC,KAD+B8N,QAGjC9N,KAAAsuC,uBAA8Bl5B,GAJe,KAK7CpV,KAAAs3B,aAAoB32B,GALyB,KAO7C,MAAM+tC,EAASt5B,MAAAA,OAATs5B,EAASt5B,EAP8Bu5B,WAQ7C,IAAAD,EAAa,CACX1uC,KAAAoyB,eADW,GAAA,OAKb,MAAM2E,EAAWz2B,SAAjB02B,yBACE4X,EAAQ,CAAC,CAAEniB,OAAFsK,EAAA2X,OAAAA,IACX,IAAIH,EAAJ,EACErW,GAhB2C,EAiB7C,KAAO0W,EAAAA,OAAP,GAAyB,CACvB,MAAMC,EAAYD,EADKE,QAEvB,IAAA,MAAAN,KAAsBK,EAAtBH,OAAwC,CACtC,MAAMpkB,EAAMhqB,SAAAA,cAD0B,OAEtCgqB,EAAAA,UAFsC,WAItC,MAAMD,EAAU/pB,SAAAA,cAJsB,KAKtCgqB,EAAAA,YALsCD,GAOtC,GAAA,iBAAImkB,EAA6B,CAC/BtW,GAD+B,EAE/Bl4B,KAAA03B,iBAAApN,EAF+BkkB,GAG/BxuC,KAAA+uC,eAAA1kB,EAH+BmkB,GAK/B,MAAMQ,EAAW1uC,SAAAA,cALc,OAM/B0uC,EAAAA,UAN+B,YAO/B1kB,EAAAA,YAP+B0kB,GAS/BJ,EAAAA,KAAW,CAAEniB,OAAFuiB,EAAoBN,OAAQF,EAA5BS,YACN,CACL,MAAMC,EAAQ95B,EAAAA,SADTo5B,GAGCnZ,EAAQ/0B,SAAAA,cAHT,SAILN,KAAAy2B,UAAApM,EAAwB,CAAAmkB,QAAAA,EAAAnZ,MAAAA,IACxBA,EAAAA,KALK,WAMLA,EAAAA,GANKmZ,EAOLnZ,EAAAA,QAAgB6Z,EAPXnlB,QASL,MAAM9Q,EAAQ3Y,SAAAA,cATT,SAUL2Y,EAAAA,aAAAA,MAVKu1B,GAWLv1B,EAAAA,YAAoBjZ,KAAAk3B,sBAA2BgY,EAX1CjyC,MAaLotB,EAAAA,YAbKgL,GAcLhL,EAAAA,YAdKpR,GAgBLs1B,IAGFM,EAAAA,OAAAA,YApCsCvkB,IAwC1CtqB,KAAAm3B,iBAAAJ,EAAAwX,EA3D6CrW,GAiE/C50B,qBACE,IAAKtD,KAALsuC,uBAAkC,OAIlC,MAAMl5B,QACEpV,KAAAs3B,aANW6X,2BAQnBnvC,KAAAkC,SAAAoC,SAAA,wBAAgD,CAC9CC,OAD8CvE,KAE9C4K,QAAS1E,QAAAA,QAFqCkP,KAMhDpV,KAAAkV,OAAY,CAAAE,sBAAAA,EAEVzU,YAAaX,KAFHs3B,wJC9KhB,IAAA15B,EAAAH,EAAA,GAlBAD,EAAAC,EAAA,oBAuCA,MAAA+J,eAIE1K,aAAYoF,SAAAA,EAAA3H,mBAEVA,EAFU,KAAAD,gBAGVA,EAHU,KAAAG,sBAIVA,GAJU,GAAZqC,IAMEkD,KAAAkC,SADMA,EAENlC,KAAAzF,mBAFMA,EAGNyF,KAAA1F,gBAHMA,EAIN0F,KAAA4N,qBAJM,EAKN5N,KAAAovC,uBALM30C,EAONuF,KAAAyC,QAPM,KAQNzC,KAAAW,YARM,KASNX,KAAAc,UATM,KAUNd,KAAAoB,WAVM,KAYNpB,KAAAqvC,eAZM,KAeR1hC,YAAAA,EAAyBlL,EAAzBkL,MACE3N,KAAAyC,QADuCA,EAEvCzC,KAAAW,YAFuCA,EAGvCX,KAAAqvC,eAAsB32C,OAAAA,OAHiB,MAMzC42C,UAAAA,GACEtvC,KAAAc,UADmBA,EAIrByuC,WAAAA,GACEvvC,KAAAoB,WADqBA,EAOnBkK,iBACF,OAAOtL,KAAAW,YAAmBX,KAAAW,YAAnB4K,SADQ,EAObC,WACF,OAAOxL,KAAAc,UADE2K,kBAOPD,SAAJ5R,GACEoG,KAAAc,UAAA2K,kBADc7R,EAOZsZ,eACF,OAAOlT,KAAAc,UADMiZ,cAOX7G,aAAJtZ,GACEoG,KAAAc,UAAAiZ,cADkBngB,EAOpB41C,uBAAAA,EAAgC3D,EAAhC2D,KAAAA,GAEE,MAAMC,EAAUh2B,EAF8C,GAG9D,IAH8DC,EAK9D,GAAI,iBAAA+1B,GAAJ,OAAmCA,EAAkB,CACnD/1B,EAAa1Z,KAAA0vC,kBADsCD,GAGnD,IAAA/1B,EAAiB,CAGf1Z,KAAAW,YAAAgvC,aAAAF,GAAAprC,MAEQ68B,IACJlhC,KAAA4vC,aAAkB1O,EAAlB,EADiBuO,GAEjBzvC,KAAAwvC,uBAAAK,EAAAhE,EAFiBpyB,MAFrBtH,OAMS,KACLxN,OAAAA,WAAAA,MACE,2CAAA8qC,+CACEI,UAZO,YAiBZ,CAAA,IAAItyC,OAAAA,UAAJkyC,GAEA,CACL9qC,OAAAA,WAAAA,MACE,2CAAA8qC,sDACEI,OAHC,OADLn2B,EAAa+1B,EADuB,EAStC,IAAI/1B,GAAeA,EAAf,GAAiCA,EAAa1Z,KAAlDsL,WACE3G,OAAAA,WAAAA,MACE,2CAAA+U,4CACEm2B,WAHN,CAQA,GAAI7vC,KAAJoB,WAAqB,CAGnBpB,KAAAoB,WAHmBirC,sBAInBrsC,KAAAoB,WAAAoY,KAAqB,CAAAqyB,UAAAA,EAAApyB,aAAAA,EAAAC,WAAAA,IAGvB1Z,KAAAc,UAAAgvC,mBAAkC,CAAAp2B,WAAAA,EAEhCq2B,UAFgCt2B,EAGhChf,sBAAuBuF,KAHSovC,0BAYpC9rC,sBAAAgR,GACE,IAAKtU,KAALW,YAAuB,OAGvB,IAAAkrC,EAJ0BpyB,EAK1B,GAAA,iBAAInF,EAA0B,CAC5Bu3B,EAD4Bv3B,EAE5BmF,QAAqBzZ,KAAAW,YAAAqvC,eAFO17B,OAGvB,CACLu3B,EADK,KAELpyB,QAFKnF,EAIFw3B,MAAAA,QAALryB,GAOAzZ,KAAAwvC,uBAAAl7B,EAAAu3B,EAnB0BpyB,GAaxB9U,OAAAA,WAAAA,MACE,oCAAA8U,kDACEnF,OAYR27B,SAAAA,GACE,IAAKjwC,KAALW,YAAuB,OAGvB,MAAM+Y,EACH,iBAAAhO,GAA2B1L,KAAAc,UAAAovC,sBAA5BxkC,IALU,EAMVA,EACF,GAEInO,OAAAgzB,UAAA7W,IACAA,EADA,GAEAA,GAAc1Z,KAJlBsL,WAAA,CAWA,GAAItL,KAAJoB,WAAqB,CAGnBpB,KAAAoB,WAHmBirC,sBAInBrsC,KAAAoB,WAAA+qC,SAJmBzyB,GAOrB1Z,KAAAc,UAAAgvC,mBAAkC,CAzBtBp2B,WAAAA,SAcV/U,OAAAA,WAAAA,MAA2B,6BAAA+G,2BAoB/BykC,kBAAAA,EAAAA,EAA6BC,GAA7BD,IACEA,EAAAA,EAAAA,mBAAAA,EAAwB,CAAA3tC,IAAAA,EAEtBqe,OAAQuvB,EAAYxsC,EAAAA,WAAZwsC,MAA+BpwC,KAFjBzF,mBAGtB81C,IAAKrwC,KAHiB1F,gBAItBqL,QAAS3F,KAJa4N,sBAY1B0iC,mBAAAA,GACE,GAAA,iBAAIh8B,GACF,GAAIA,EAAAA,OAAJ,EACE,OAAOtU,KAAAuwC,aAAkB,IAAMC,OADZl8B,SAGhB,GAAIw3B,MAAAA,QAAJx3B,GAAyB,CAC9B,MAAMqxB,EAAMpsB,KAAAA,UADkBjF,GAE9B,GAAIqxB,EAAAA,OAAJ,EACE,OAAO3lC,KAAAuwC,aAAkB,IAAMC,OADb7K,IAItB,OAAO3lC,KAAAuwC,aAXgB,IAoBzBA,aAAAA,GACE,OAAQvwC,KAAAyC,SAAD,IADYguC,EAOrBp2B,QAAAA,GACE,IAAKra,KAALW,YAAuB,OAGvB,IAAA+Y,EAJYpF,EAKZ,GAAIvP,EAAAA,SAAJ,KAAwB,CACtB,MAAMC,GAASC,EAAAA,EAAAA,kBADOF,GAElBC,EAAAA,IAAJ,WACEhF,KAAAkC,SAAAoC,SAAA,kBAA0C,CACxCC,OADwCvE,KAExCujB,MAAOve,EAAAA,IAAAA,UAAAA,QAAAA,KAFiC,IAGxCwe,aAHwC,SAG1Bxe,EAAAA,IAAAA,YAIdA,EAAAA,IAAJ,UACE0U,EAAa1U,EAAAA,EAAAA,IAAAA,SADS,GAGxB,GAAIA,EAAAA,IAAJ,QAAwB,CAEtB,MAAM0rC,EAAW1rC,EAAAA,IAAAA,QAAAA,MAFK,KAGhB2rC,EAAUD,EAHM,GAIhBE,EAAgBC,WAJAF,GAMjBA,EAAAA,SAAL,OAWMA,QAAAA,GAAJ,SAAyBA,EACvBr8B,EAAO,CAAA,KAAO,CAAErX,KAAT0zC,IAEPA,SAAAA,GAAAA,UACAA,GADAA,SAEAA,GAHK,UAILA,EAEAr8B,EAAO,CAAA,KAEL,CAAErX,KAFG0zC,GAGLD,EAAAA,OAAAA,EAAAA,EAAsBA,EAAAA,GAHjB,MAKF,SAAIC,EACT,IAAID,EAAAA,OACF/rC,OAAAA,WAAAA,MADyB,6DAKzB2P,EAAO,CAAA,KAEL,CAAErX,KAFG0zC,GAAA,EAGLD,EAAAA,GAHK,EAILA,EAAAA,GAJK,EAKLA,EAAAA,GALK,EAMLA,EAAAA,IAIJ/rC,OAAAA,WAAAA,MACE,4BAAAgsC,iCAtCJr8B,EAAO,CAAA,KAEL,CAAErX,KAFG,OAGLyzC,EAAAA,OAAAA,EAAAA,EAAsBA,EAAAA,GAHjB,KAILA,EAAAA,OAAAA,EAAAA,EAAsBA,EAAAA,GAJjB,KAKLE,EAAgBA,EAAhBA,IALKD,GA4CXr8B,EACEtU,KAAAc,UAAAgvC,mBAAkC,CAChCp2B,WAAYA,GAAc1Z,KADMwL,KAEhCukC,UAFgCz7B,EAGhCw8B,qBAHgC,IAK7Bp3B,IACL1Z,KAAAwL,KADqBkO,GAGnB1U,EAAAA,IAAJ,aACEhF,KAAAkC,SAAAoC,SAAA,WAAmC,CACjCC,OADiCvE,KAEjCmhB,KAAMnc,EAAAA,IAF2B,cAOjCA,EAAAA,IAAJ,cACEhF,KAAA0tC,gBAAqB1oC,EAAAA,IADM,kBAGxB,CAELsP,EAAO64B,SAFFpoC,GAGL,IACEuP,EAAOiF,KAAAA,MADLjF,GAGGw3B,MAAAA,QAALx3B,KAGEA,EAAOA,EAHiB4E,YAK1B,MAAA1M,IAEF,GAAI,iBAAA8H,GA2FV,SAAAy8B,2BAAAz8B,GACE,IAAKw3B,MAAAA,QAALx3B,GACE,OADwB,EAG1B,MAAM08B,EAAa18B,EAJqB1N,OAKxC,GAAIoqC,EAAJ,EACE,OADkB,EAGpB,MAAMxlC,EAAO8I,EAR2B,GASxC,KAEI,iBAAA9I,GACAjO,OAAAA,UAAiBiO,EADjBylC,MAEA1zC,OAAAA,UAAiBiO,EAHnB0lC,MAKE3zC,OAAAgzB,UAAA/kB,IAA0BA,GAN9B,GAQE,OADA,EAGF,MAAMuH,EAAOuB,EAnB2B,GAoBxC,GAAM,iBAAAvB,GAAN,iBAAyCA,EAAP9V,KAChC,OADgE,EAGlE,IAAIk0C,GAvBoC,EAwBxC,OAAQp+B,EAAR9V,MACE,IAAA,MACE,GAAA,IAAI+zC,EACF,OADoB,EAF1B,MAME,IANF,MAOE,IAAA,OACE,OARJ,IAQWA,EACT,IATF,OAUE,IAVF,QAWE,IAXF,OAYE,IAAA,QACE,GAAA,IAAIA,EACF,OADoB,EAb1B,MAiBE,IAAA,OACE,GAAA,IAAIA,EACF,OADoB,EAGtBG,GAJF,EAjBF,MAuBE,QACE,OAxBJ,EA0BA,IAAK,IAAIzqC,EAAT,EAAgBA,EAAhBsqC,EAAgCtqC,IAAK,CACnC,MAAM0qC,EAAQ98B,EADqB5N,GAEnC,KAAM,iBAAA0qC,GAA8BD,GAApC,OAAiDC,GAC/C,OADiE,EAIrE,OAxDwC,EA3FJL,CAAhCz8B,GAAkE,CAChEtU,KAAA0tC,gBADgEp5B,GAAA,OAIlE3P,OAAAA,WAAAA,MACE,4BAA4BwoC,SAA5BpoC,oCASNssC,mBAAAA,GAA2B,IAAApkC,EAAAqkC,EAEzB,OAAA7vB,GACE,IAAA,SACE,QAAAxU,EAAAjN,KAAAoB,kBAAA,IAAA6L,GAAAA,EADFs/B,OADF,MAKE,IAAA,YACE,QAAA+E,EAAAtxC,KAAAoB,kBAAA,IAAAkwC,GAAAA,EADF9E,UALF,MASE,IAAA,WACExsC,KAAAc,UADFuiB,WATF,MAaE,IAAA,WACErjB,KAAAc,UADFwiB,eAbF,MAiBE,IAAA,WACEtjB,KAAAwL,KAAYxL,KADdsL,WAjBF,MAqBE,IAAA,YACEtL,KAAAwL,KADF,EAQFxL,KAAAkC,SAAAoC,SAAA,cAAsC,CACpCC,OADoCvE,KAAAyhB,OAAAA,IAUxCmuB,aAAAA,EAAAA,GACE,IAAA2B,EAAc,OAGd,MAAMC,EACJD,IAAAA,EAAAA,IAAoB,GAAGA,EAAHN,OAAoB,GAAGM,EAAHN,OAAkBM,EAAlBL,MAC1ClxC,KAAAqvC,eAAAmC,GAN6BC,EAY/B/B,kBAAAA,GAA2B,IAAAgC,EACzB,IAAAH,EACE,OADY,KAGd,MAAMC,EACJD,IAAAA,EAAAA,IAAoB,GAAGA,EAAHN,OAAoB,GAAGM,EAAHN,OAAkBM,EAAlBL,MAC1C,OAAO,QAAAQ,EAAA1xC,KAAAqvC,sBAAA,IAAAqC,OAAA,EAAAA,EAAAF,KANkB,KAY3BG,cAAAA,GACE,OAAO3xC,KAAAc,UAAA6wC,cADiBj4B,GAO1Bk4B,aAAAA,GACE,OAAO5xC,KAAAc,UAAA8wC,aADgBl4B,yBAmE3B,MAAAm4B,kBACE/0C,cACEkD,KAAA4N,qBADY,EAOVtC,iBACF,OADe,EAObE,WACF,OADS,EAOPA,SAAJ5R,IAKIsZ,eACF,OADa,EAOXA,aAAJtZ,IAKA0J,sBAAAgR,IAKA27B,SAAAA,IAOAE,kBAAAA,EAAAA,EAA6BC,GAA7BD,IACEA,EAAAA,EAAAA,mBAAAA,EAAwB,CAAA3tC,IAAAA,EAAOmD,QAAS3F,KAAhB4N,sBAO1B0iC,mBAAAA,GACE,MADuB,IAQzBC,aAAAA,GACE,MADiB,IAOnBl2B,QAAAA,IAKAg3B,mBAAAA,IAMAzB,aAAAA,EAAAA,IAKA+B,cAAAA,GACE,OADwB,EAO1BC,aAAAA,GACE,OADuB,0FCvnB3B,IAAA5b,EAAAv4B,EAAA,IAAAG,EAAAH,EAAA,GAAAD,EAAAC,EAAA,GAgCA,MAAA+L,yBAAAwsB,EAAAC,eAIEn5B,YAAAA,GACEo5B,MADmB74B,GAEnB2C,KAAA4H,YAAmBvK,EAFAuK,YAInB5H,KAAAkC,SAAA4T,IAAA,oBAAuC9V,KAAAi4B,oBAAA1wB,KAJpBvH,OAKnBA,KAAAkC,SAAA4T,IAAA,qBAEE9V,KAAA8xC,oBAAAvqC,KAPiBvH,OAUnBA,KAAAkC,SAAA4T,IAAA,gBAAkC6K,IAChC3gB,KAAAk5B,mBAA0BvY,EADajH,cAGzC1Z,KAAAkC,SAAA4T,IAAA,eAAiC6K,IAC/B3gB,KAAAsqC,iBAAwB3pB,EADcrV,WAMpCtL,KAAA+xC,gCACC/xC,KAAA+xC,8BAFHrnC,SAIE1K,KAAA+xC,8BAAAvtC,QACkBxE,KAFlBsqC,mBAMJtqC,KAAAkC,SAAA4T,IAAA,sBAAwC6K,IACtC3gB,KAAAgyC,aAAoBrxB,EADyBS,QAKjDtT,QACEooB,MADMpoB,QAEN9N,KAAAiyC,SAFM,KAINjyC,KAAAkyC,gCAJM,KAKNlyC,KAAAk5B,mBALM,EAMNl5B,KAAAsqC,eANM,KASJtqC,KAAA+xC,gCACC/xC,KAAA+xC,8BAFHrnC,SAIE1K,KAAA+xC,8BAAAvtC,SADA,GAGFxE,KAAA+xC,8BAdM,KAoBR3f,eAAAA,GAA6B,IAAA+f,EAC3BnyC,KAAA+xC,+BAD2B,EAAAn0C,EAAA4C,2BAGzB4xC,IAAAA,GAAAA,QAAAA,EACApyC,KAAAs3B,oBADA8a,IAAAA,GACAD,EAAAvgC,cAFFlW,iBAIEsE,KAAA+xC,8BAAAvtC,SADA,GAEK,OAAIxE,KAAAsqC,gBACTtqC,KAAA+xC,8BAAAvtC,QACkBxE,KAFqBsqC,gBAMzCtqC,KAAAkC,SAAAoC,SAAA,gBAAwC,CACtCC,OADsCvE,KAAAoyC,aAAAA,EAGtCC,0BAA2BryC,KAAA+xC,8BAHWnnC,UAU1C6rB,UAAAA,GAAmBj0B,IAAAA,EAAA4tC,UAAAA,EAAA97B,KAAnBmiB,IACE,MAAM7uB,YAAAA,GADqC5H,KAG3C,GAAAwC,EACEoF,EAAAA,kBAAAA,EAAAA,EADOwoC,OAAT,CAKA/lB,EAAAA,KAAeziB,EAAAA,mBAR4B0M,GAS3C+V,EAAAA,QAAkB1J,IAChB3gB,KAAAq4B,uBAA4B1X,EAAAA,OADL2O,YAGvBhb,GACE1M,EAAAA,gBADQ0M,GAGV,OANuB,IAa3Bg+B,WAAAA,GAAoBC,KAAAA,EAAAC,OAApBF,IACEC,IACEloB,EAAAA,MAAAA,WADQ,QAGVmoB,IACEnoB,EAAAA,MAAAA,UADU,UAQdqN,iBAAAA,GAAsBU,MAAAA,EAAA1J,MAAtBgJ,IACE,IAAIC,GADkC,EAEtC,GAAIS,EAAJ,EAAe,CACb,IAAIqa,EAAa/jB,EADJ9nB,OAEb,GAAI6rC,EAAJ,EAAoB,CAClB,MAAM7D,EAAQ,IADIlgB,GAElB,KAAOkgB,EAAAA,OAAP,GAAyB,CACvB,MAAQxW,MAAFsa,EAAsBhkB,MAAtBikB,GAA6C/D,EAD5BE,QAEvB,GAAI4D,EAAAA,GAAmBC,EAAAA,OAAvB,EAA+C,CAC7CF,GAAcE,EAD+B/rC,OAE7CgoC,EAAAA,QAF6C+D,KAM/ClhC,KAAAA,IAAAA,KAAJghC,IACE9a,GADkC,GAItCzB,MAAAwB,iBAAApN,EAlBsCqN,GAwBxCM,sBACOj4B,KAALiyC,UAGA/b,MAJoB+B,sBAUtB/iB,QAAOD,QAAAA,EAAAtU,YAAPuU,IACMlV,KAAJiyC,UACEjyC,KADiB8N,QAGnB9N,KAAAiyC,SAAgBh9B,GAJe,KAK/BjV,KAAAs3B,aAAoB32B,GALW,KAO/B,IAAAsU,EAAc,CACZjV,KAAAoyB,eADY,GAAA,OAKd,MAAM2E,EAAWz2B,SAZc02B,yBAazB4X,EAAQ,CAAC,CAAEniB,OAAFsK,EAAoBrI,MAApBzZ,IACf,IAAIm9B,EAAJ,EACEla,GAf6B,EAgB/B,KAAO0W,EAAAA,OAAP,GAAyB,CACvB,MAAMC,EAAYD,EADKE,QAEvB,IAAA,MAAA7X,KAAmB4X,EAAnBngB,MAAoC,CAClC,MAAMpE,EAAMhqB,SAAAA,cADsB,OAElCgqB,EAAAA,UAFkC,WAIlC,MAAMD,EAAU/pB,SAAAA,cAJkB,KAKlCN,KAAAy2B,UAAApM,EALkC4M,GAMlCj3B,KAAAsyC,WAAAjoB,EANkC4M,GAOlC5M,EAAAA,YAAsBrqB,KAAAk3B,sBAA2BD,EAPf7qB,OASlCke,EAAAA,YATkCD,GAWlC,GAAI4M,EAAAA,MAAAA,OAAJ,EAA2B,CACzBiB,GADyB,EAEzBl4B,KAAA03B,iBAAApN,EAFyB2M,GAIzB,MAAM+X,EAAW1uC,SAAAA,cAJQ,OAKzB0uC,EAAAA,UALyB,YAMzB1kB,EAAAA,YANyB0kB,GAQzBJ,EAAAA,KAAW,CAAEniB,OAAFuiB,EAAoBtgB,MAAOuI,EAA3BvI,QAGbmgB,EAAAA,OAAAA,YAtBkCvkB,GAuBlC8nB,KAIJpyC,KAAAm3B,iBAAAJ,EAAAqb,EA7C+Bla,GAoDjC50B,4BACE,IAAKtD,KAALsqC,eACE,MAAM,IAAAvtC,MADkB,wDAG1B,IAAKiD,KAADiyC,WAAmBjyC,KAAvBs3B,aAA0C,OAI1C,MAAMsb,QAA6B5yC,KAAA6yC,yBACjC7yC,KATwBs3B,cAW1B,GAAAsb,EAAA,CAGA5yC,KAAAq4B,uBAd0B,MAgB1B,GAAIr4B,KAAAgyC,eAAsB5+B,EAAAA,YAA1BkO,QAKA,IAAK,IAAI5a,EAAI1G,KAAbk5B,mBAAsCxyB,EAAtC,EAA6CA,IAAK,CAChD,MAAMonC,EAAW8E,EAAAA,IAD+BlsC,GAEhD,IAAAonC,EAAe,SAGf,MAAMgF,EAAc9yC,KAAAmI,UAAA4qC,cAA6B,WAAAjF,OACjD,GAAAgF,EAAA,CAGA9yC,KAAAu4B,yBAA8Bua,EATkBxjB,YAAA,SAqBpDhsB,+BAAA3C,GACE,GAAIX,KAAJkyC,gCACE,OAAOlyC,KAAAkyC,gCADiCtnC,QAG1C5K,KAAAkyC,iCAJ0C,EAAAt0C,EAAA4C,2BAM1C,MAAMoyC,EAAuB,IAA7B3mB,IACE+mB,EAAoB,IAPoB/mB,IAQpC2iB,EAAQ,CAAC,CAAEqE,QAAF,EAAcvkB,MAAO1uB,KAArBiyC,WACf,KAAOrD,EAAAA,OAAP,GAAyB,CACvB,MAAMC,EAAYD,EAAlBE,QACEoE,EAAiBrE,EAFIoE,QAGvB,IAAA,MAAW3+B,KAAAA,EAAAoa,MAAXA,KAA8BmgB,EAA9BngB,MAA+C,CAC7C,IAAAjV,EAD6CC,EAE7C,GAAA,iBAAIpF,EAA0B,CAC5BmF,QAAqB9Y,EAAAA,eADO2T,GAG5B,GAAI3T,IAAgBX,KAApBs3B,aACE,OADqC,UAIvC7d,EADKnF,EAGP,GAAIw3B,MAAAA,QAAJryB,GAAiC,CAC/B,MAAMg2B,GADyBh2B,EAG/B,GAAI,iBAAAg2B,GAAJ,OAAmCA,EAAkB,CACnD/1B,EAAa1Z,KAAA4H,YAAA8nC,kBADsCD,GAGnD,IAAA/1B,EACE,IACEA,QAAoB/Y,EAAAA,aAAP8uC,GADX,EAGF,GAAI9uC,IAAgBX,KAApBs3B,aACE,OADqC,KAGvCt3B,KAAA4H,YAAAgoC,aAAAl2B,EANE+1B,GAOF,MAAAjjC,UAIKjP,OAAAA,UAAJkyC,KACL/1B,EAAa+1B,EADuB,GAItC,GACElyC,OAAAA,UAAAA,MACEq1C,EAAAA,IAADl5B,IACCw5B,EAAiBF,EAAAA,IAHrBt5B,IAIE,CACA,MAAMo0B,EAAW9tC,KAAA4H,YAAA0oC,mBADjBh8B,GAEAs+B,EAAAA,IAAAA,EAFA9E,GAGAkF,EAAAA,IAAAA,EAHAE,IAOAxkB,EAAAA,OAAJ,GACEkgB,EAAAA,KAAW,CAAEqE,QAASC,EAAX,EAAAxkB,MAAAA,KAKjB1uB,KAAAkyC,gCAAA1tC,QACEouC,EAAAA,KAAAA,EAAAA,EA/DwC,MAiE1C,OAAO5yC,KAAAkyC,gCAjEmCtnC,sIClQ9C,IAAApN,EAAAC,EAAA,GAOA,MAEM01C,EAxBN,sBAyBMC,EAzBN,8BAkCMC,EAAwB5hC,KAAAA,GAlC9B,wBA2CA,MAAAtI,oBAIErM,aAAYqL,UAAAA,EAAArH,UAAAA,EAAAoB,SAAZpF,IACEkD,KAAAmI,UAD8CA,EAE9CnI,KAAAc,UAF8CA,EAG9Cd,KAAAkC,SAH8CA,EAK9ClC,KAAA2lB,QAL8C,EAM9C3lB,KAAAiO,KAN8C,KAO9CjO,KAAAszC,iBAP8C,EAQ9CtzC,KAAAuzC,qBAR8C,EAS9CvzC,KAAAwzC,iBAT8C,EAU9CxzC,KAAAyzC,gBAV8C,KAiBhD13B,UACE,GAAI/b,KAAA0zC,kBAAyB1zC,KAAzB2lB,SAAyC3lB,KAAAc,UAA7CwK,WACE,OADsE,EAGxEtL,KAJQ2zC,gCAKR3zC,KALQ4zC,uBAMR5zC,KANQ6zC,qBAeN,GAAI7zC,KAAAmI,UAAJ2rC,kBACE9zC,KAAAmI,UADoC2rC,yBAE/B,GAAI9zC,KAAAmI,UAAJ4rC,qBACL/zC,KAAAmI,UAD8C4rC,2BAEzC,CAAA,IAAI/zC,KAAAmI,UAAJ6rC,wBAML,OADK,EAHL1zC,SAAAA,KAAAA,wBAAsC2zC,QAFWC,sBAGjDl0C,KAHiDm0C,yBAWrDn0C,KAAAiO,KAAY,CACVyL,WAAY1Z,KAAAc,UADF2K,kBAEV2oC,WAAYp0C,KAAAc,UAFFsK,kBAGVkI,WAAYtT,KAAAc,UAHFwS,WAIVE,WAAYxT,KAAAc,UAJF0S,YAOZ,OArCQ,EA2CV6gC,YAAAA,GACE,IAAKr0C,KAAL2lB,OAAkB,OAIlBhF,EALeG,iBAOf,MAAMlF,GAAQmQ,EAAAA,EAAAA,0BAPCpL,GAQT2zB,EAAcC,KARLC,MASTC,EAAaz0C,KATJuzC,qBAYf,KACEe,EAAAA,GACAA,EAAAA,EAzHN,IAuHI,EAQGt0C,KAAAwzC,iBAAA,GAA6B53B,EAA9B,GACC5b,KAAAwzC,iBAAA,GAA6B53B,EAFhC,IAIE5b,KADA00C,yBAGF10C,KAAAwzC,kBAzBe53B,EA2Bf,GAAInK,KAAAA,IAASzR,KAATyR,mBAtIR,GAsIkE,CAC5D,MAAMkjC,EAAa30C,KADyCwzC,iBAE5DxzC,KAF4D00C,0BAI1DC,EAAAA,EACI30C,KAAAc,UADJ6zC,eAEI30C,KAAAc,UANsDuiB,cAQ1DrjB,KAAAuzC,qBADWe,KAMbM,mBAIF,SACEt0C,SAAAu0C,mBACAv0C,SADAw0C,eAEAx0C,SAPey0C,oBAcnBlB,qBACE,IAAIjyB,EAAQyQ,EAAAA,sBADOnE,OAEfluB,KAAJ0zC,iBACE9xB,EAAQyQ,EAAAA,sBADiBlE,SAEhBnuB,KAAJ2lB,SACL/D,EAAQyQ,EAAAA,sBADcjE,YAGxBpuB,KAAAkC,SAAAoC,SAAA,0BAAkD,CAChDC,OADgDvE,KAAA4hB,MAAAA,IAepDgyB,uBACM5zC,KAAJ0zC,kBACE5hC,aAAa9R,KADY0zC,kBAG3B1zC,KAAA0zC,iBAAwB3hC,YAAW,KACjC/R,KADuCg1C,0CAEhCh1C,KAFgC0zC,iBAGvC1zC,KAHuC6zC,uBA3L7C,MAqMEoB,yBACE,GAAIj1C,KAAJ0zC,iBAA2B,CACzB5hC,aAAa9R,KADY0zC,yBAElB1zC,KAFkB0zC,kBAS7BwB,SACEl1C,KAAA2lB,QADO,EAEP3lB,KAFOi1C,yBAGPj1C,KAHO6zC,qBAIP7zC,KAAAmI,UAAA2kB,UAAArX,IAJO09B,GAQPphC,YAAW,KACT/R,KAAAc,UAAAwS,WAA4BC,EAAAA,WADb2T,KAEflnB,KAAAc,UAAA0S,WAA4BC,EAAAA,WAFb5P,KAGf7D,KAAAc,UAAA2K,kBAAmCzL,KAAAiO,KAHpByL,WAIf1Z,KAAAc,UAAAsK,kBAJe,aARV,GAePpL,KAfOm1C,sBAgBPn1C,KAhBOo1C,gBAiBPp1C,KAAAszC,iBAjBO,EAsBP/wC,OAAAA,eAtBO8yC,kBA4BTC,QACEt1C,KADMu1C,wBAEN,MAAM77B,EAAa1Z,KAAAc,UAFb2K,kBAGNzL,KAAAmI,UAAA2kB,UAAA4C,OAHMyjB,GAONphC,YAAW,KACT/R,KAAA2lB,QADe,EAEf3lB,KAFeg1C,mCAGfh1C,KAHe6zC,qBAKf7zC,KAAAc,UAAAwS,WAA4BtT,KAAAiO,KALbqF,WAMftT,KAAAc,UAAA0S,WAA4BxT,KAAAiO,KANbuF,WAOfxT,KAAAc,UAAAsK,kBAAmCpL,KAAAiO,KAPpBmmC,WAQfp0C,KAAAc,UAAA2K,kBAReiO,EASf1Z,KAAAiO,KATe,OAPX,GAmBNjO,KAnBMw1C,yBAoBNx1C,KApBMy1C,gBAqBNz1C,KArBM00C,yBAsBN10C,KAAAszC,iBAtBM,EA0BRa,yBACE,MAAMuB,EAAap1C,SAAAA,uBAAAA,QAAAA,GADIq1C,cAEjBlpB,EAASipB,EAFQC,cAGvB31C,KAAA41C,aAHuBnpB,EAIvB,IAAK,IAAI/lB,EAAT,EAAgBA,EAAI+lB,EAApBopB,kBAA8CnvC,IACxC+lB,EAAAA,SAAAA,KAAAA,KAAJipB,IACE11C,KAAA81C,kBAD0CpvC,GAI9C+lB,EAAAA,YATuBipB,GAUvBp1C,SAAAA,KAAAA,OAVuBo1C,GAWvB,MAAMK,EAAWz1C,SAAAA,KAXM01C,SAYvB,IAAK,IAAItvC,EAAT,EAAgBA,EAAIqvC,EAApBnvC,OAAqCF,IAAK,CACxC,MAAMuvC,EAAIF,EAAAA,KAD8BrvC,GAEpCuvC,IAAAA,GAAoBA,aAAxBC,aACED,EAAAA,UAAAA,IADgD,wBAIpD31C,SAAAA,eAAAA,oBAAAA,UAAAA,IAlBuB,wBAmBvBA,SAAAA,uBAAAA,WAAAA,GAAAA,UAAAA,IAnBuB,wBAsBzBi1C,wBACE,GAAIv1C,KAAJ41C,aAAuB,CACrB,MAAMF,EAAap1C,SAAAA,uBAAAA,QAAAA,GADEq1C,cAErBr1C,SAAAA,KAAAA,YAFqBo1C,GAGjB11C,KAAA81C,mBAA0B91C,KAAA41C,aAA9BC,kBACE71C,KAAA41C,aAAAO,OADiET,GAGjE11C,KAAA41C,aAAAQ,aAAAV,EAA2C11C,KAAA41C,aAAAI,SAAA/e,KAAgCj3B,KADtE81C,oBAGP91C,KAAA41C,kBARqBz4C,EASrB,MAAM44C,EAAWz1C,SAAAA,KATI01C,SAUrB,IAAK,IAAItvC,EAAT,EAAgBA,EAAIqvC,EAApBnvC,OAAqCF,IAAK,CACxC,MAAMuvC,EAAIF,EAAAA,KAD8BrvC,GAEpCuvC,IAAAA,GAAoBA,aAAxBC,aACMD,EAAAA,UAAAA,SAAJ,yBACEA,EAAAA,UAAAA,OADgD,wBAMtD31C,SAAAA,eAAAA,oBAAAA,UAAAA,OAnBqB,wBAoBrBA,SAAAA,uBAAAA,WAAAA,GAAAA,UAAAA,OApBqB,yBA6BzB+1C,WAAAA,GACE,GAAIr2C,KAAJszC,gBAAA,CACEtzC,KAAAszC,iBADwB,EAExB3yB,EAFwBG,sBAK1B,GAAA,IAAIH,EAAAA,OAAkB,CAKpB,KADEA,EAAAA,OAAAA,MAAmBA,EAAAA,OAAAA,UAAAA,SAJD,iBAKC,CAEnBA,EAFmBG,iBAIfH,EAAJgE,SACE3kB,KAAAc,UADgBwiB,eAGhBtjB,KAAAc,UADKuiB,aAUbizB,eACEt2C,KAAAszC,iBADa,EAOf8B,gBACMp1C,KAAJu2C,gBACEzkC,aAAa9R,KADWu2C,iBAGxBv2C,KAAAmI,UAAA2kB,UAAArX,IADK29B,GAGPpzC,KAAAu2C,gBAAuBxkC,YAAW,KAChC/R,KAAAmI,UAAA2kB,UAAA4C,OADsC0jB,UAE/BpzC,KAF+Bu2C,kBAjW5C,KA0WEd,gBACE,GAAKz1C,KAALu2C,gBAAA,CAGAzkC,aAAa9R,KAJCu2C,iBAKdv2C,KAAAmI,UAAA2kB,UAAA4C,OALc0jB,UAMPpzC,KANOu2C,iBAchB7B,yBACE10C,KAAAuzC,qBADuB,EAEvBvzC,KAAAwzC,iBAFuB,EAQzBgD,YAAAA,GACE,GAAKx2C,KAAL2lB,OAGA,GAAIhF,EAAAA,QAAAA,OAAJ,EAEE3gB,KAAAyzC,gBAF0B,UAM5B,OAAQ9yB,EAAR5R,MACE,IAAA,aACE/O,KAAAyzC,gBAAuB,CACrBgD,OAAQ91B,EAAAA,QAAAA,GADa+1B,MAErBC,OAAQh2B,EAAAA,QAAAA,GAFai2B,MAGrBC,KAAMl2B,EAAAA,QAAAA,GAHe+1B,MAIrBI,KAAMn2B,EAAAA,QAAAA,GAJei2B,OAF3B,MASE,IAAA,YACE,GAAA,OAAI52C,KAAAyzC,gBAA+B,OAGnCzzC,KAAAyzC,gBAAAoD,KAA4Bl2B,EAAAA,QAAAA,GAJ9B+1B,MAKE12C,KAAAyzC,gBAAAqD,KAA4Bn2B,EAAAA,QAAAA,GAL9Bi2B,MAQEj2B,EARFG,iBATF,MAmBE,IAAA,WACE,GAAA,OAAI9gB,KAAAyzC,gBAA+B,OAGnC,IAAI73B,EAJN,EAKE,MAAM2J,EAAKvlB,KAAAyzC,gBAAAoD,KAA4B72C,KAAAyzC,gBALzCgD,OAMQjxB,EAAKxlB,KAAAyzC,gBAAAqD,KAA4B92C,KAAAyzC,gBANzCkD,OAOQI,EAAWtlC,KAAAA,IAASA,KAAAA,MAAAA,EAP5B8T,IASI9T,KAAAA,IAAAA,GAtaV,KAuaWslC,GAAA1D,GACC0D,GAAYtlC,KAAAA,GAHhB4hC,GAMEz3B,EAFA2J,EAIA9T,KAAAA,IAAAA,GA7aV,IA8aUA,KAAAA,IAASslC,EAAWtlC,KAAAA,GAApBA,IAFK4hC,IAKLz3B,EAFA4J,GAIE5J,EAAJ,EACE5b,KAAAc,UADawiB,eAEJ1H,EAAJ,GACL5b,KAAAc,UADoBuiB,YAU5B8xB,sBACEn1C,KAAAg3C,iBAAwBh3C,KAAAo1C,cAAA7tC,KADJvH,MAEpBA,KAAAi3C,cAAqBj3C,KAAAq2C,WAAA9uC,KAFDvH,MAGpBA,KAAAk3C,eAAsBl3C,KAAAq0C,YAAA9sC,KAHFvH,MAIpBA,KAAAm3C,0BAAiCn3C,KAAA00C,uBAAAntC,KAJbvH,MAKpBA,KAAAo3C,gBAAuBp3C,KAAAs2C,aAAA/uC,KALHvH,MAMpBA,KAAAq3C,eAAsBr3C,KAAAw2C,YAAAjvC,KANFvH,MAQpBuC,OAAAA,iBAAAA,YAAqCvC,KARjBg3C,kBASpBz0C,OAAAA,iBAAAA,YAAqCvC,KATjBi3C,eAUpB10C,OAAAA,iBAAAA,QAAiCvC,KAAjCuC,eAAsD,CAAEmc,SAVpC,IAWpBnc,OAAAA,iBAAAA,UAAmCvC,KAXfm3C,2BAYpB50C,OAAAA,iBAAAA,cAAuCvC,KAZnBo3C,iBAapB70C,OAAAA,iBAAAA,aAAsCvC,KAblBq3C,gBAcpB90C,OAAAA,iBAAAA,YAAqCvC,KAdjBq3C,gBAepB90C,OAAAA,iBAAAA,WAAoCvC,KAfhBq3C,gBAqBtB7B,yBACEjzC,OAAAA,oBAAAA,YAAwCvC,KADjBg3C,kBAEvBz0C,OAAAA,oBAAAA,YAAwCvC,KAFjBi3C,eAGvB10C,OAAAA,oBAAAA,QAAoCvC,KAApCuC,eAAyD,CACvDmc,SAJqB,IAMvBnc,OAAAA,oBAAAA,UAAsCvC,KANfm3C,2BAOvB50C,OAAAA,oBAAAA,cAA0CvC,KAPnBo3C,iBAQvB70C,OAAAA,oBAAAA,aAAyCvC,KARlBq3C,gBASvB90C,OAAAA,oBAAAA,YAAwCvC,KATjBq3C,gBAUvB90C,OAAAA,oBAAAA,WAAuCvC,KAVhBq3C,uBAYhBr3C,KAZgBg3C,wBAahBh3C,KAbgBi3C,qBAchBj3C,KAdgBk3C,sBAehBl3C,KAfgBm3C,iCAgBhBn3C,KAhBgBo3C,uBAiBhBp3C,KAjBgBq3C,eAuBzBC,oBACMt3C,KAAJ40C,aACE50C,KADqBk1C,SAGrBl1C,KADKs1C,QAQT3B,gCACE3zC,KAAAu3C,qBAA4Bv3C,KAAAs3C,kBAAA/vC,KADEvH,MAG9BuC,OAAAA,iBAAAA,mBAA4CvC,KAHdu3C,sBAK5Bh1C,OAAAA,iBAAAA,sBAA+CvC,KALnBu3C,sBAM5Bh1C,OAAAA,iBAAAA,yBAEEvC,KAR0Bu3C,sBAgBhCvC,mCACEzyC,OAAAA,oBAAAA,mBAA+CvC,KADdu3C,sBAG/Bh1C,OAAAA,oBAAAA,sBAEEvC,KAL6Bu3C,sBAO/Bh1C,OAAAA,oBAAAA,yBAEEvC,KAT6Bu3C,6BAa1Bv3C,KAb0Bu3C,8GCtgBrC,IAAA35C,EAAAH,EAAA,GAAAD,EAAAC,EAAA,uBA4BA,MAAA4J,kBACEvK,cACEkD,KAAAc,UADY,KAEZd,KAAAe,mBAFY,KAGZf,KAAAw3C,OAHY,KAIZx3C,KAAAy3C,oBAJY,KAMZz3C,KAAA03C,YANY,KAOZ13C,KAAA2a,UAPY,EAQZ3a,KAAA4a,wBARY,EAcd00B,UAAAA,GACEtvC,KAAAc,UADmBA,EAOrB62C,mBAAAA,GACE33C,KAAAe,mBADqCA,EAQvC62C,kBAAAA,GACE,OAAO53C,KAAAy3C,sBAA6Br2B,EADdy2B,YAOxBC,YACE,QAAS93C,KADCc,UAOZga,sBAAAA,GAA6C,IAAAi9B,EAC3C,GAAI/3C,KAAJ03C,YAAsB,CACpB5lC,aAAa9R,KADO03C,aAEpB13C,KAAA03C,YAFoB,KAMlB13C,KAAAc,UAAAoJ,eAAJ8tC,IAKEh4C,KAAA4a,wBAAA,QAAAm9B,EACA/3C,KAAAe,0BADA,IAAAg3C,GACAA,EAFF7tC,kBAOIlK,KAAJ2a,UAKI3a,KAAJw3C,SACEx3C,KAAA03C,YAAmB3lC,WAAW/R,KAAAw3C,OAAAjwC,KAAXwK,MAhGzB,MA0GEkmC,mBAAAA,EAAAA,EAAAA,EAAiDC,GAAjDD,GAUE,MAAME,EAAepuB,EAArBR,MACE6uB,EAAaD,EAXwDvxC,OAavE,GAAA,IAAIwxC,EACF,OADoB,KAGtB,IAAK,IAAI1xC,EAAT,EAAgBA,EAAhB0xC,EAAgC1xC,IAAK,CACnC,MAAM0a,EAAO+2B,EAAAA,GADsB/2B,KAEnC,IAAKphB,KAAAq4C,eAALj3B,GACE,OAD8BA,EAIlC,MAAMk3B,EAAUvuB,EAAAA,MAAhByB,GACE+sB,EAASxuB,EAAAA,KAvB4DyB,GA2BvE,GAAI+sB,EAAAA,EAAAA,EAAJH,EAAuC,CACrC,MAAMI,EAAazuB,EADkBC,IAErC,IAAK,IAAItjB,EAAJ,EAAWC,EAAK4xC,EAArBD,EAAuC5xC,EAAvCC,EAA+CD,IAAK,CAClD,MAAM+xC,EAASC,EAAeJ,EAAfI,EAA6BH,EADM7xC,EAElD,GAAI8xC,EAAAA,IAAJC,GAA4B,SAG5B,MAAME,EAAWpvB,EAAMkvB,EAL2B,GAMlD,IAAKz4C,KAAAq4C,eAALM,GACE,OADkCA,GAQxC,IAAIC,EAAiBF,EAAAA,EAAwBJ,EA3C0B,EA4CnEO,EAAgBtvB,EA5CmDqvB,GA8CvE,GAAIC,IAAkB74C,KAAAq4C,eAAtBQ,GACE,OADwDA,EAG1D,GAAAX,EAAoB,CAClBU,GAAkBF,EAAAA,GADA,EAElBG,EAAgBtvB,EAFEqvB,GAIlB,GAAIC,IAAkB74C,KAAAq4C,eAAtBQ,GACE,OADwDA,EAK5D,OA1DuE,KAiEzER,eAAAA,GACE,OAAOj3B,EAAAA,iBAAwBmB,EAAAA,gBADZC,SAWrBs2B,WAAAA,GACE,OAAQ13B,EAAR23B,gBACE,KAAKx2B,EAAAA,gBAALC,SACE,OAFJ,EAGE,KAAKD,EAAAA,gBAAL0L,OACEjuB,KAAAy3C,oBAA2Br2B,EAD7By2B,YAEEz2B,EAFF43B,SAHF,MAOE,KAAKz2B,EAAAA,gBAALyL,QACEhuB,KAAAy3C,oBAA2Br2B,EAD7By2B,YAPF,MAUE,KAAKt1B,EAAAA,gBAALwL,QACE/tB,KAAAy3C,oBAA2Br2B,EAD7By2B,YAEEz2B,EAAAA,OAAAA,SAEW,KACPphB,KADa8a,2BAFjBsG,OAKSvc,IACDA,aAAJjH,EAAAq7C,6BAGAt0C,OAAAA,WAAAA,MAA2B,gBAAAE,SAInC,OA1Be,6FCrKnB,IAAArH,EAAAC,EAAA,GACAG,EAAAH,EAAA,yBAcA,MAAAqK,oBAIEhL,aAAYoF,SAAAA,EAAA6F,iBAEVA,EAFU,KAAAC,iBAGVA,EAHU,KAAAC,oBAIVA,EAJFnL,OAMEkD,KAAAs3B,aADC,KAEDt3B,KAAAk5C,WAFC,KAGDl5C,KAAAm5C,iBAHC,KAIDn5C,KAAAo5C,mBAJC,KAMDp5C,KAAAq5C,WANC,KAODr5C,KAAAs5C,YAAmB5gD,OAAAA,OAPlB,MAQDsH,KAAAu5C,QARC,EAUDv5C,KAAAs/B,UAVCp9B,EAWDlC,KAAAw5C,kBAXCzxC,EAYD/H,KAAAy5C,kBAZCzxC,EAaDhI,KAAA05C,qBAbCzxC,EA+BHqnC,UAAAA,GACEtvC,KAAAk5C,WADmBp4C,EAIrBwC,kBAAA3C,GAA+B,IAAAg5C,EACzB35C,KAAJs3B,oBACQt3B,KADe45C,oBAGvB55C,KAAAs3B,aAJ6B32B,EAM7B,IAAAA,EAAkB,OAGlB,MAAMk5C,EAAAC,EAAAC,SAAgD7zC,QAAAuQ,IAAY,CAChE9V,EADgEq5C,kBAEhEr5C,EAFgEs5C,yBAGhEt5C,EAHgEu5C,iBAMlE,GAAIL,GAAJE,GAKA,GAAIp5C,IAAgBX,KAApBs3B,aAAA,CAGA,IACEt3B,KAAAq5C,WAAkBr5C,KADhBm6C,mBAEF,MAAAj5B,GACAvc,OAAAA,WAAAA,MAA2B,qCAAqCuc,MAAAA,OAArC,EAAqCA,EAArCpc,mBAErB9E,KAHQ45C,oBAAA,OAOhB55C,KAAAo6C,gBAAAC,IAAA,qBAA8C97B,KACxCA,MAAAA,OAAAA,EAAAA,EAAAA,UAAJhc,QAGAvC,KAAAs6C,mBAAwB/7B,EAJ6BC,WAMvDxe,KAAAo6C,gBAAAC,IAAA,0BAAmD97B,IAAS,IAAAg8B,EAC1D,QAAAA,EAAAv6C,KAAAq5C,kBAAA,IAAAkB,GAAAA,EAAAC,uBAAwCj8B,EADkBC,WAI5Dxe,KAAAo6C,gBAAAC,IAAA,gBAAyC,EAAC3gC,WAAAA,EAADsK,SAAAA,MACvC,GAAItK,IAAJsK,EAAA,CAGAhkB,KAAAy6C,mBAJqEz2B,GAKrEhkB,KAAA06C,kBALqEhhC,OAOvE1Z,KAAAo6C,gBAAAC,IAAA,gBAAyC,EAAA3gC,WAAAA,MAClC1Z,KAAA26C,iBAAA5U,IAALrsB,IAGIA,IAAe1Z,KAAAk5C,WAAnBztC,mBAGAzL,KAAA06C,kBAP2DhhC,MAS7D1Z,KAAAo6C,gBAAAC,IAAA,gBAAyC/2C,MAAAA,IAAe,IAAAs3C,EAAAC,QAChD76C,KAAAy6C,mBAAwBz6C,KAAAk5C,WADwBztC,yBAGtD,QAAAmvC,EAAM56C,KAAAq5C,kBAAN,IAAAuB,OAAA,EAAMA,EAAAJ,uBAAwC,CAC5ChvB,GAD4C,MAE5CvuB,KAF4C,eAK9C,QAAA49C,EAAA76C,KAAAm5C,wBAAA,IAAA0B,GAAAA,EARsDr2C,aAWxDxE,KAAA86C,WAAAT,IAAA,aAAiC97B,IAC/Bve,KAAAs5C,YAAAyB,QADwC,KAG1C/6C,KAAA86C,WAAAT,IAAA,WAA+B97B,IAC7Bve,KAAAs5C,YAAAyB,QADsC,KAIxC,IAAA,MAAW99C,EAAXg0B,KAA+BjxB,KAA/Bo6C,gBACEp6C,KAAAs/B,UAAAxpB,IAAA7Y,EADmDg0B,GAGrD,IAAA,MAAWh0B,EAAXg0B,KAA+BjxB,KAA/B86C,WACEv4C,OAAAA,iBAAAA,EAD8C0uB,GAIhD,IACE,MAAM+pB,QAAsBh7C,KAD1Bi7C,oBAEF,GAAIt6C,IAAgBX,KAApBs3B,aAAuC,aAIjCt3B,KAAAq5C,WAAA6B,cAA8B,CAAArB,QAAAA,EAAAC,iBAAAA,EAGlCqB,QAAS,CACPtiD,SAAUD,UADHC,SAEP2D,SAAU5D,UAFH4D,UAIT4+C,QAAS,IAAAJ,EAEPK,QAFOtB,KAMX/5C,KAAAs/B,UAAAh7B,SAAA,iBAA0C,CAAEC,OAnB1CvE,OAoBF,MAAAkhB,GACAvc,OAAAA,WAAAA,MAA2B,qCAAqCuc,MAAAA,OAArC,EAAqCA,EAArCpc,mBAErB9E,KAHQ45C,oBAAA,aAOhB,QAAAD,EAAM35C,KAAAq5C,kBAAN,IAAAM,OAAA,EAAMA,EAAAa,uBAAwC,CAC5ChvB,GAD4C,MAE5CvuB,KAF4C,gBAIxC+C,KAAA06C,kBACJ16C,KAAAk5C,WADIztC,mBAlHuB,GAwH7BvF,QAAAA,UAAAA,MAAuB,KACjBvF,IAAgBX,KAApBs3B,eACEt3B,KAAAu5C,QADqC,kBAxGjCv5C,KAFqB45C,oBAgH/Bt2C,uBAAAkb,GAA+B,IAAA88B,EAC7B,OAAA,QAAAA,EAAOt7C,KAAAq5C,kBAAP,IAAAiC,OAAA,EAAOA,EAAAd,uBAAwC,CAC7ChvB,GAD6C,MAE7CvuB,KAF6C,aAMjDqG,sBAAAkb,GAA8B,IAAA+8B,EAC5B,OAAA,QAAAA,EAAOv7C,KAAAq5C,kBAAP,IAAAkC,OAAA,EAAOA,EAAAf,uBAAwC,CAC7ChvB,GAD6C,MAE7CvuB,KAF6C,YAMjDqG,wBAAAkb,GAAgC,IAAAg9B,EAC9B,OAAA,QAAAA,EAAOx7C,KAAAq5C,kBAAP,IAAAmC,OAAA,EAAOA,EAAAhB,uBAAwC,CAC7ChvB,GAD6C,MAE7CvuB,KAF6C,cAMjDqG,uBAAAkb,GAA+B,IAAAi9B,EAC7B,OAAA,QAAAA,EAAOz7C,KAAAq5C,kBAAP,IAAAoC,OAAA,EAAOA,EAAAjB,uBAAwC,CAC7ChvB,GAD6C,MAE7CvuB,KAF6C,aAM7Cy+C,iBACF,OAAO17C,KADQs5C,YAIbzrC,qBAAiB,IAAA8tC,EACnB,OAAO,QAAAA,EAAA37C,KAAAo5C,0BAAA,IAAAuC,OAAA,EAAAA,EAAA/wC,UADY,KAIjB+U,YACF,OAAO3f,KADGu5C,OAORa,sBACF,OAAOv6C,EAAAA,EAAAA,QAAAA,KAAAA,kBAAgC,IADnBosB,KAOlB6uB,iBACF,OAAOj7C,EAAAA,EAAAA,QAAAA,KAAAA,aAA2B,IADnBosB,KAOb0uB,uBACF,OAAO96C,EAAAA,EAAAA,QAAAA,KAAAA,mBAAiC,IADnBwD,KAOnBu4C,oBACF,OAAO/7C,EAAAA,EAAAA,QAAAA,KAAAA,gBAA8B,IADnBosB,KAOpB3oB,yBAAAkb,GAEE,MAAM1T,EACJ9K,KAAAk5C,WAAApuC,sBACA9K,KAAAk5C,WAJ6B2C,4BAMzBrwB,GAAAA,EAAAuqB,SAAAA,EAAA+F,QAAAA,EAAAliD,MAAAA,GANyB4kB,EAO/B,IAAAgN,EAAS,CACP,OAAAswB,GACE,IAAA,QACEn3C,OAAAA,WADFoI,QADF,MAIE,IAAA,QACEpI,OAAAA,WAAAA,MADF/K,GAJF,MAOE,IAAA,SACE,GAAAkR,EAA0B,OAG1B,MAAMixC,GAAQtnC,EAAAA,EAAAA,4BAJhB7a,GAKEoG,KAAAk5C,WAAA1lC,WAA6BuoC,EAL/BvoC,WAPF,MAcE,IAAA,WACExT,KAAAk5C,WAAAztC,kBAAoC7R,EADtC,EAdF,MAiBE,IAAA,cACQoG,KAAAk5C,WADRvmC,aAEE3S,KAAAs/B,UAAAh7B,SAAA,QAAiC,CAAEC,OAFrCvE,OAjBF,MAqBE,IAAA,UACE2E,OAAAA,WAAAA,IADF/K,GArBF,MAwBE,IAAA,OACE,GAAAkR,EAA0B,OAG1B9K,KAAAk5C,WAAA9tC,kBAJFxR,EAxBF,MA8BE,IAAA,SACEoG,KAAAs/B,UAAAh7B,SAAA,OAAgC,CAAEC,OADpCvE,OA9BF,MAiCE,IAAA,YACEA,KAAAk5C,WAAAztC,kBADF,EAjCF,MAoCE,IAAA,WACEzL,KAAAk5C,WAAAztC,kBAAoCzL,KAAAk5C,WADtC5tC,WApCF,MAuCE,IAAA,WACEtL,KAAAk5C,WADF71B,WAvCF,MA0CE,IAAA,WACErjB,KAAAk5C,WADF51B,eA1CF,MA6CE,IAAA,aACE,GAAAxY,EAA0B,OAG1B9K,KAAAk5C,WAJFnuC,gBA7CF,MAmDE,IAAA,cACE,GAAAD,EAA0B,OAG1B9K,KAAAk5C,WAJFhuC,gBApDK,OA8DT,GAAAJ,GACM0T,EAAJ7J,MAAkB,cAIb6J,EA1EwBgN,UA2ExBhN,EA3EwBu3B,SA6E/B,MAAM/rB,EAAM+rB,EAAW,CAAAvqB,KAAAuqB,GAAoB,CA7EZvqB,GA8E/B,IAAA,MAAAwwB,KAAAhyB,EAA6B,CAC3B,MAAMK,EAAU/pB,SAAAA,eADW07C,GAE3B,GAAA3xB,EACEA,EAAAA,cAAsB,IAAAhG,YAAA,oBAAqC,CADhD7F,OAAAA,SAEN,CAAA,IAAA2zB,EAEL,QAAAA,EAAAnyC,KAAAs3B,oBAAA,IAAA6a,GAAAA,EAAA9kC,kBAAA4uC,SAAAD,OAAA7+C,EAFKqhB,KAUXlb,wBAAAoW,EAAoCpP,GAApC,GACE,MAAM3J,EAAcX,KAApBs3B,aACE4kB,EAAel8C,KAFqC47C,cAItDtxC,IACEtK,KAAAm5C,kBADc,EAAAv7C,EAAA4C,4BAGhB,IAAKR,KAALm5C,iBAA4B,OAG5B,MAAM/4B,EAAWpgB,KAAAk5C,WAAAiD,YAA0CziC,EAVL,GAYtD,IAAI0G,MAAAA,OAAAA,EAAAA,EAAAA,kBAA6BmC,EAAAA,gBAAjCC,SAA2D,CACzDxiB,KAAA26C,iBAAAllC,IADyDiE,GAAA,OAI3D1Z,KAAA26C,iBAAAplC,OAhBsDmE,GAkBtD,MAAM0iC,EAAkB,WAAY,IAAAl8B,EAAAm8B,EAElC,MAAMhB,QAAkBa,EAAAA,IAADxiC,GAFW,KAEX,QAAAwG,EACnBE,EAAAA,eADmB,IAAAF,OAAA,EACnBE,EADmB85B,gBAGnBv5C,IAAgBX,KAApBs3B,oBAIA,QAAA+kB,EAAMr8C,KAAAq5C,kBAAN,IAAAgD,OAAA,EAAMA,EAAA7B,uBAAwC,CAC5ChvB,GAD4C,OAE5CvuB,KAF4C,WAAAyc,WAAAA,EAAA2hC,QAAAA,MATxB,GAgBxBa,EAAAA,IAAAA,EAlCsDE,GAwCxD94C,yBAAAoW,GAAqC,IAAA4iC,EACnC,MAAM37C,EAAcX,KAApBs3B,aACE4kB,EAAel8C,KAFkB47C,cAInC,IAAK57C,KAALm5C,iBAA4B,OAG5B,GAAIn5C,KAAA26C,iBAAA5U,IAAJrsB,GAA2C,OAG3C,MAAM0iC,EAAiBF,EAAAA,IAVYxiC,GAWnC,GAAA0iC,EAAA,CAGAF,EAAAA,IAAAA,EAdmC,YAAAE,EAkB/Bz7C,IAAgBX,KAApBs3B,oBAIA,QAAAglB,EAAMt8C,KAAAq5C,kBAAN,IAAAiD,OAAA,EAAMA,EAAA9B,uBAAwC,CAC5ChvB,GAD4C,OAE5CvuB,KAF4C,YAAAyc,WAAAA,MAahDpW,0BACE,GAAItD,KAAJ05C,qBACE,OAAO15C,KAAA05C,qBAA0B15C,KADJs3B,cAQ/B,MAAM,IAAAv6B,MATkB,mDAe1Bo9C,mBACEn6C,KAAAo5C,oBADiB,EAAAx7C,EAAA4C,2BAGjB,GAAIR,KAAJq5C,WACE,MAAM,IAAAt8C,MADa,+CAGrB,GAAIiD,KAAJy5C,kBACE,OAAOz5C,KAAAy5C,kBAAA8C,gBAAuC,CAC5Cx0C,iBAAkB/H,KAFMw5C,oBAU5B,MAAM,IAAAz8C,MAhBW,8CAsBnBuG,0BAA0B,IAAAk5C,EACxB,GAAKx8C,KAALq5C,WAAA,CAMA,GAAIr5C,KAAJm5C,iBAA2B,OACnBjzC,QAAA0O,KAAa,CACjB5U,KAAAm5C,iBADiBvuC,QAEjB,IAAA1E,SAAY1B,IAEVuN,WAAAA,EAFqB,UAFnBI,OAMGtN,QAGT7E,KAAAm5C,iBAVyB,KAY3Bn5C,KAAAs3B,aAnBwB,KAqBxB,UACQt3B,KAAAq5C,WADJoD,iBAEF,MAAAjwC,IAEF,IAAA,MAAWvP,EAAXg0B,KAA+BjxB,KAA/Bo6C,gBACEp6C,KAAAs/B,UAAAlO,KAAAn0B,EADmDg0B,GAGrDjxB,KAAAo6C,gBA5BwBrtC,QA8BxB,IAAA,MAAW9P,EAAXg0B,KAA+BjxB,KAA/B86C,WACEv4C,OAAAA,oBAAAA,EAD8C0uB,GAGhDjxB,KAAA86C,WAjCwB/tC,QAmCxB/M,KAAA26C,iBAnCwB5tC,QAoCxB/M,KAAA47C,cApCwB7uC,QAsCxB/M,KAAAq5C,WAtCwB,YAuCjBr5C,KAAAs5C,YAvCiByB,OAwCxB/6C,KAAAu5C,QAxCwB,EA0CxB,QAAAiD,EAAAx8C,KAAAo5C,0BAAA,IAAAoD,GAAAA,EA1CwBh4C,cACxB,CAAsB,IAAAk4C,EACpB18C,KAAAs3B,aADoB,KAGpB,QAAAolB,EAAA18C,KAAAo5C,0BAAA,IAAAsD,GAAAA,EAHoBl4C,6FChd1B,IAAAhH,EAAAC,EAAA,GAMA,MAAMk/C,EArBN,sCA8DA,MAAA7yC,WAIEhN,aAAYiN,SAAAA,EAAAjJ,UAAAA,EAAAC,mBAAAA,EAAAmB,SAAAA,EAAAC,KAAZrF,IACEkD,KAAAylB,QADuE,EAEvEzlB,KAAA2lB,OAAcvS,EAAAA,YAFyDiO,OAGvErhB,KAAAoC,kBAHuE,EASvEpC,KAAAiK,UATuE,KAWvEjK,KAAAc,UAXuEA,EAYvEd,KAAAe,mBAZuEA,EAcvEf,KAAA48C,eAAsB7yC,EAdiD6yC,eAevE58C,KAAAyF,gBAAuBsE,EAfgDtE,gBAgBvEzF,KAAA0lB,aAAoB3b,EAhBmD2b,aAkBvE1lB,KAAA68C,gBAAuB9yC,EAlBgD8yC,gBAmBvE78C,KAAA88C,cAAqB/yC,EAnBkD+yC,cAoBvE98C,KAAA+8C,kBAAyBhzC,EApB8CgzC,kBAqBvE/8C,KAAAg9C,aAAoBjzC,EArBmDizC,aAuBvEh9C,KAAAyI,cAAqBsB,EAvBkDtB,cAwBvEzI,KAAAyJ,YAAmBM,EAxBoDN,YAyBvEzJ,KAAA2J,gBAAuBI,EAzBgDJ,gBA0BvE3J,KAAA6J,WAAkBE,EA1BqDF,WA4BvE7J,KAAAi9C,yBAAgClzC,EA5BuCmzC,wBA6BvEl9C,KAAAm9C,0BAAiCpzC,EA7BsCqzC,yBA+BvEp9C,KAAAkC,SA/BuEA,EAgCvElC,KAAAmC,KAhCuEA,EAkCvEnC,KAlCuE6xB,qBAqCzEvuB,cACEtD,KAAAoC,kBADY,EAGZpC,KAAAq9C,qBAHY,GAIZr9C,KAAAs9C,WAAgBlqC,EAAAA,YAJJiO,QAMZrhB,KAAA88C,cAAAS,UANY,EAOZv9C,KAAA+8C,kBAAAQ,UAPY,EAQZv9C,KAAAg9C,aAAAO,UARY,EAUZv9C,KAAA88C,cAAAnlB,QAVY,EAWZ33B,KAAA+8C,kBAAAplB,QAXY,EAYZ33B,KAAAg9C,aAAArlB,QAZY,EAcZ33B,KAAAm9C,0BAAAI,UAdY,EAoBVC,kBACF,OAAOx9C,KAAAylB,OAAczlB,KAAd2lB,OAA4BvS,EAAAA,YADnBvP,KAIdgX,6BACF,OAAO7a,KAAAylB,QAAezlB,KAAA2lB,SAAgBvS,EAAAA,YADXiO,OAIzBo8B,2BACF,OAAOz9C,KAAAylB,QAAezlB,KAAA2lB,SAAgBvS,EAAAA,YADbkO,QAIvBo8B,+BACF,OAAO19C,KAAAylB,QAAezlB,KAAA2lB,SAAgBvS,EAAAA,YADTmO,YAI3Bo8B,0BACF,OAAO39C,KAAAylB,QAAezlB,KAAA2lB,SAAgBvS,EAAAA,YADdoO,OAQ1B9M,eAAe0M,EAAOhO,EAAAA,YAAtBsB,MACE,IAAI1U,KAAJoC,iBAAA,CAGApC,KAAAoC,kBAJsC,EAQlCgf,IAAShO,EAAAA,YAATgO,MAA6BA,IAAShO,EAAAA,YAA1CC,SAMKrT,KAAA49C,YAAAx8B,GAAL,IALEphB,KAD6DoyB,kBAiBjE9uB,iBAAA8d,EAAuBy8B,GAAvB,SACQ79C,KAAA49C,YAAAx8B,EADkCy8B,GAQ1Cv6C,kBAAA8d,EAAwBy8B,GAAxB,GACE,MAAMC,EAAgB18B,IAASphB,KADU2lB,OAEzC,IAAIo4B,GAFqC,EAIzC,OAAA38B,GACE,KAAKhO,EAAAA,YAALvP,KACE,GAAI7D,KAAJylB,OAAiB,CACfzlB,KADekO,QAEf,OAFe,EAIjB,OANJ,EAOE,KAAKkF,EAAAA,YAALiO,OACMrhB,KAAAylB,QAAJq4B,IACEC,GADgC,GARtC,MAYE,KAAK3qC,EAAAA,YAALkO,QACE,GAAIthB,KAAA88C,cAAJS,SACE,OAD+B,EAbrC,MAiBE,KAAKnqC,EAAAA,YAALmO,YACE,GAAIvhB,KAAA+8C,kBAAJQ,SACE,OADmC,EAlBzC,MAsBE,KAAKnqC,EAAAA,YAALoO,OACE,GAAIxhB,KAAAg9C,aAAJO,SACE,OAD8B,EAvBpC,MA2BE,QACE54C,OAAAA,WAAAA,MAA2B,4BAAAyc,2BAC3B,OA7BJ,EAiCAphB,KAAA2lB,OArCyCvE,EAwCzCphB,KAAA68C,gBAAA/vB,UAAAnL,OAAA,UAEEP,IAAShO,EAAAA,YA1C8BiO,QA4CzCrhB,KAAA88C,cAAAhwB,UAAAnL,OAAA,UAEEP,IAAShO,EAAAA,YA9C8BkO,SAgDzCthB,KAAA+8C,kBAAAjwB,UAAAnL,OAAA,UAEEP,IAAShO,EAAAA,YAlD8BmO,aAoDzCvhB,KAAAg9C,aAAAlwB,UAAAnL,OAAA,UAA8CP,IAAShO,EAAAA,YApDdoO,QAsDzCxhB,KAAAyI,cAAAqkB,UAAAnL,OAAA,SAA8CP,IAAShO,EAAAA,YAtDdiO,QAuDzCrhB,KAAAyJ,YAAAqjB,UAAAnL,OAAA,SAA4CP,IAAShO,EAAAA,YAvDZkO,SAwDzCthB,KAAA2J,gBAAAmjB,UAAAnL,OAAA,SAEEP,IAAShO,EAAAA,YA1D8BmO,aA4DzCvhB,KAAA6J,WAAAijB,UAAAnL,OAAA,SAA2CP,IAAShO,EAAAA,YA5DXoO,QA+DzCxhB,KAAAi9C,yBAAAnwB,UAAAnL,OAAA,SAEEP,IAAShO,EAAAA,YAjE8BkO,SAoEzC,GAAIu8B,IAAc79C,KAAlBylB,OAA+B,OACvBzlB,KADuB2O,OAE7B,OAF6B,QAIzB3O,KAAAe,mBAxEmCi9C,mBAyEzC,GAAAD,EAA0B,CACxB/9C,KADwBi+C,yBAExBj+C,KAFwBk+C,kBAI1BJ,GACE99C,KADiBoyB,iBAGnB,OAhFyC0rB,EAmF3Cx6C,aACE,IAAItD,KAAJylB,OAAA,OAGMzlB,KAAAe,mBAJKi9C,mBAKXh+C,KAAAylB,QALW,EAMXzlB,KAAA0lB,aAAAoH,UAAArX,IANW,WAOXzV,KAAA0lB,aAAAsY,aAAA,gBAPW,QASXh+B,KAAA48C,eAAA9vB,UAAArX,IAAA,gBATW,eAWPzV,KAAA2lB,SAAgBvS,EAAAA,YAApBiO,QACErhB,KADsCi+C,yBAGxCj+C,KAdWk+C,kBAeXl+C,KAfWoyB,iBAiBXpyB,KAjBWq9C,uBAoBbnvC,QACE,GAAKlO,KAALylB,OAAA,CAGAzlB,KAAAylB,QAJM,EAKNzlB,KAAA0lB,aAAAoH,UAAA4C,OALM,WAMN1vB,KAAA0lB,aAAAsY,aAAA,gBANM,SAQNh+B,KAAA48C,eAAA9vB,UAAArX,IARM,iBASNzV,KAAA48C,eAAA9vB,UAAA4C,OATM,eAWN1vB,KAXMk+C,kBAYNl+C,KAZMoyB,kBAeRzQ,SACM3hB,KAAJylB,OACEzlB,KADekO,QAGflO,KADK2O,OAQTyjB,iBACEpyB,KAAAkC,SAAAoC,SAAA,qBAA6C,CAC3CC,OAD2CvE,KAE3CohB,KAAMphB,KAFqCw9C,cAS/CU,kBACE,GAAIl+C,KAAJiK,UACEjK,KADkBiK,gBAEb,CAELjK,KAAAc,UAFKoJ,iBAGLlK,KAAAe,mBAHKmJ,kBAUT+zC,yBACE,MAAMn9C,UAAAA,EAAAC,mBAAAA,GADiBf,KAIjBsL,EAAaxK,EAJIwK,WAKvB,IAAK,IAAI41B,EAAT,EAAwBA,EAAxB51B,EAAgD41B,IAAa,CAC3D,MAAM9gB,EAAWtf,EAAAA,YAD0CogC,GAE3D,IAAI9gB,MAAAA,OAAAA,EAAAA,EAAAA,kBAA6BmC,EAAAA,gBAAjCC,SAA2D,CACnCzhB,EAAAA,aADmCmgC,GAEzDz4B,SAFyD2X,IAK7Drf,EAAAA,wBAA2CD,EAZpB2K,mBAkBzB0yC,sBACEn+C,KAAAmC,KAAAsN,IAAA,sCAAApL,MAAyDqL,IACvD1P,KAAA0lB,aAAAtZ,MAD8DsD,KAI3D1P,KAALylB,QAGEzlB,KAAA0lB,aAAAoH,UAAArX,IAHgBknC,GAUpBU,oBAAoBvvC,GAApBuvC,IACMr9C,KAAAylB,QAAJ3X,IAGE9N,KAAA0lB,aAAAoH,UAAA4C,OAHwBitB,GAM1B7uC,GACE9N,KAAAmC,KAAAsN,IAAA,wBAAApL,MAA2CqL,IACzC1P,KAAA0lB,aAAAtZ,MADgDsD,KAStDmiB,qBACE7xB,KAAAyF,gBAAA0tB,iBAAA,iBAAuDxS,IACjDA,EAAAA,SAAe3gB,KAAnByF,iBACEzF,KAAA48C,eAAA9vB,UAAA4C,OADuC,oBAK3C1vB,KAAA0lB,aAAAyN,iBAAA,SAA4C,KAC1CnzB,KADgD2hB,YAKlD3hB,KAAA68C,gBAAA1pB,iBAAA,SAA+C,KAC7CnzB,KAAAs9C,WAAgBlqC,EAAAA,YADmCiO,WAIrDrhB,KAAA88C,cAAA3pB,iBAAA,SAA6C,KAC3CnzB,KAAAs9C,WAAgBlqC,EAAAA,YADiCkO,YAGnDthB,KAAA88C,cAAA3pB,iBAAA,YAAgD,KAC9CnzB,KAAAkC,SAAAoC,SAAA,oBAA4C,CAAEC,OADMvE,UAItDA,KAAA+8C,kBAAA5pB,iBAAA,SAAiD,KAC/CnzB,KAAAs9C,WAAgBlqC,EAAAA,YADqCmO,gBAIvDvhB,KAAAg9C,aAAA7pB,iBAAA,SAA4C,KAC1CnzB,KAAAs9C,WAAgBlqC,EAAAA,YADgCoO,WAGlDxhB,KAAAg9C,aAAA7pB,iBAAA,YAA+C,KAC7CnzB,KAAAkC,SAAAoC,SAAA,cAAsC,CAAEC,OADWvE,UAKrDA,KAAAm9C,0BAAAhqB,iBAAA,SAAyD,KACvDnzB,KAAAkC,SAAAoC,SAAA,qBAA6C,CAAEC,OADcvE,UAK/D,MAAMo+C,aAAe,CAAAhmB,EAAAimB,EAAAj9B,KACnBi9B,EAAAA,UAD4CjmB,EAG5CimB,EAAAA,QAH4CjmB,EAM5CA,EACEp4B,KADSm+C,sBAEAn+C,KAAA2lB,SAAJvE,GAGLphB,KAAAs9C,WAAgBlqC,EAAAA,YAHeiO,SAOnCrhB,KAAAkC,SAAA4T,IAAA,iBAAmC6K,IACjCy9B,aAAaz9B,EAAby9B,aAA+Bp+C,KAA/Bo+C,cAAmDhrC,EAAAA,YADXkO,SAGpCX,EAAJ29B,gCAEM39B,EAAJ0xB,2BACA1xB,EAAAA,0BAAAA,MAAmChb,IAC7B3F,KAALoC,mBAGApC,KAAAm9C,0BAAAI,UAJ6C53C,SASlD3F,KAAAkC,SAAA4T,IAAA,qBAAuC6K,IACrCy9B,aACEz9B,EADFy9B,iBAEEp+C,KAFFo+C,kBAGEhrC,EAAAA,YAJ0CmO,gBAQ9CvhB,KAAAkC,SAAA4T,IAAA,gBAAkC6K,IAChCy9B,aAAaz9B,EAAby9B,YAA8Bp+C,KAA9Bo+C,aAAiDhrC,EAAAA,YADVoO,WAKzCxhB,KAAAkC,SAAA4T,IAAA,2BAA6C6K,IAEzCA,EAAAA,QAAc0R,EAAAA,sBAAd1R,QACA3gB,KAFF6a,wBAIE7a,KADAi+C,mHCtcR,MAEMM,EAjBN,sCA2BA,MAAAp0C,kBAMErN,YAAAA,EAAAA,EAAAA,GACEkD,KAAAw+C,OADmC,EAEnCx+C,KAAAy+C,aAFmC,EAGnCz+C,KAAAmwB,IAAW7vB,SAHwB6D,gBAInCnE,KAAA0+C,OAJmC,KAKnC1+C,KAAA2+C,qBALmC,KAMnC3+C,KAAA4C,aAAoBlK,OAAAA,OANe,MAQnCsH,KAAA48C,eAAsBv/C,EARau/C,eASnC58C,KAAA4+C,QAAevhD,EAToBuhD,QAUnC5+C,KAAAkC,SAVmCA,EAYnCC,EAAAA,eAAAA,MAAyBkE,IACvBrG,KAAAw+C,MAD8B,QACjBn4C,KAEfrG,KAfmC6xB,qBAqBjCgtB,0BACF,OAAQ7+C,KAAA2+C,uBAA8B3+C,KAAA48C,eADd9yB,YAQ1Bg1B,aAAa31B,EAAb21B,GAGE,MAAMC,EAAWttC,KAAAA,MAAWzR,KAAA6+C,oBAHN,GAIlB11B,EAAJ41B,IACE51B,EADoB41B,GAGlB51B,EArER,MAsEMA,EAtEN,KAyEI,GAAIA,IAAUnpB,KAAd0+C,OACE,OADyB,EAG3B1+C,KAAA0+C,OAdsBv1B,EAetBnpB,KAAAmwB,IAAAZ,MAAAyvB,YA7EJ,kBA6EkD,GAAA71B,OAC9C,OAhBsB,EAsBxB81B,WAAAA,GACE,IAAI91B,EAAQxI,EADEmT,QAGV9zB,KAAJw+C,QACEr1B,EAAQnpB,KAAA6+C,oBADM11B,GAGhBnpB,KAAA8+C,aANc31B,GAYhB+1B,SAAAA,GAEEl/C,KAAA48C,eAAA9vB,UAAA4C,OAFY6uB,GAIZv+C,KAAAkC,SAAAoC,SAAA,SAAiC,CAAEC,OAJvBvE,OAMZ,MAAM4C,EAAe5C,KANT4C,aAOZL,OAAAA,oBAAAA,YAAwCK,EAP5Bu8C,WAQZ58C,OAAAA,oBAAAA,UAAsCK,EAR1Bw8C,SAcdvtB,qBACE,MAAMjvB,EAAe5C,KADF4C,aAEnBA,EAAAA,UAAyB5C,KAAAi/C,WAAA13C,KAFNvH,MAGnB4C,EAAAA,QAAuB5C,KAAAk/C,SAAA33C,KAHJvH,MAKnBA,KAAA4+C,QAAAzrB,iBAAA,aAA2CxS,IACzC,GAAA,IAAIA,EAAAA,OAAJ,CAKA3gB,KAAA48C,eAAA9vB,UAAArX,IANgD8oC,GAQhDh8C,OAAAA,iBAAAA,YAAqCK,EARWu8C,WAShD58C,OAAAA,iBAAAA,UAAmCK,EATaw8C,aAYlDp/C,KAAAkC,SAAA4T,IAAA,sBAAwC6K,IACtC3gB,KAAAy+C,cAAqB99B,MAAAA,IAAAA,EADwBS,SAI/CphB,KAAAkC,SAAA4T,IAAA,UAA4B6K,IAG1B,IAAIA,MAAAA,OAAAA,EAAAA,EAAAA,UAAJpe,OAA4B,OAI5BvC,KAAA2+C,qBAPiC,KASjC,IAAK3+C,KAAL0+C,OAAkB,OAMlB,IAAK1+C,KAALy+C,YAAuB,CACrBz+C,KAAA8+C,aAAkB9+C,KADG0+C,QAAA,OAIvB1+C,KAAA48C,eAAA9vB,UAAArX,IAnBiC8oC,GAoBjC,MAAMc,EAAUr/C,KAAA8+C,aAAkB9+C,KApBD0+C,QAsBjCx4C,QAAAA,UAAAA,MAAuB,KACrBlG,KAAA48C,eAAA9vB,UAAA4C,OAD2B6uB,GAI3Bc,GACEr/C,KAAAkC,SAAAoC,SAAA,SAAiC,CAAEC,OADxBvE,uGCvIrB,IAAAxC,EAAAC,EAAA,GAOA6hD,EAAA7hD,EAAA,IAEA,MACM8hD,EAhCN,gCA+CA,MAAA/2C,mBAIE1L,aAAYqL,UAAAA,EAAAjG,SAAAA,EAAA0F,YAAAA,EAAAS,eAAAA,EAAAlG,KAAZrF,IACEkD,KAAAmI,UADsEA,EAEtEnI,KAAA4H,YAFsEA,EAGtE5H,KAAAqI,eAHsEA,EAItErI,KAAAmC,KAJsEA,EAMtEnC,KAAAga,QAAcmT,EAAAA,EAAAA,aAAYntB,KAAZmtB,UAA4BntB,KAAAw/C,eAAAj4C,KAN4BvH,OAOtEA,KAPsEy/C,aAStEv9C,EAAAA,IAAAA,gCAA6C,KAG3ClC,KAAA0/C,mBAHiD,KAUrDF,iBACEx/C,KAAAqI,eADeyS,wBAIjB6kC,aAAAA,GACE,OAAO3/C,KAAA4/C,YADW7wB,GAOpB8wB,oBACE,OAAO,EAAAriD,EAAA6rB,oBAAmB,CACxBC,SAAUtpB,KADcmI,UAExBohB,MAAOvpB,KAFiB4/C,cAM5BE,wBAAAA,GACE,IAAK9/C,KAALW,YAAuB,OAGvB,MAAM8H,EAAgBzI,KAAA4/C,YAAiBlmC,EAJL,GAMlC,IAAAjR,EAAoB,CAClB9D,OAAAA,WAAAA,MADkB,4DAAA,OAKpB,GAAI+U,IAAe1Z,KAAnBk5B,mBAA4C,CAChBl5B,KAAA4/C,YAAiB5/C,KAAAk5B,mBADD,GAG1C6mB,IAAAA,UAAAA,OAH0CR,GAK1C92C,EAAAA,IAAAA,UAAAA,IAL0C82C,GAO5C,MAAM5zB,MAAAA,EAAAC,KAAAA,EAAArC,MAAAA,GAAyBvpB,KAlBG6/C,oBAqBlC,GAAIt2B,EAAAA,OAAJ,EAAsB,CACpB,IAAIy2B,GADgB,EAEpB,GAAItmC,GAAciS,EAAdjS,IAA0BA,GAAckS,EAA5CJ,GACEw0B,GADmD,OAGnD,IAAA,MAAWx0B,GAAAA,EAAAxc,QAAXA,KAAAua,EACE,GAAIiC,IAAJ9R,EAAA,CAGAsmC,EAAehxC,EAJoB,IAAA,MAQvCgxC,IACE3zB,EAAAA,EAAAA,gBAAe5jB,EAAf4jB,IAAkC,CAAElK,KA5FZ,KAgG5BniB,KAAAk5B,mBAvCkCxf,EA0ChCK,oBACF,OAAO/Z,KADWm5B,eAIhBpf,kBAAJ7G,GACE,KAAK4G,EAAAA,EAAAA,iBAAL5G,GACE,MAAM,IAAAnW,MADwB,sCAGhC,IAAKiD,KAALW,YAAuB,OAGvB,GAAIX,KAAAm5B,iBAAJjmB,EAAsC,OAGtClT,KAAAm5B,eAV0BjmB,EAY1B,MAAM+sC,EAAa,CAZO/sC,SAAAA,GAa1B,IAAA,MAAAgtC,KAAwBlgD,KAAxB4/C,YACEM,EAAAA,OADwCD,GAK5ClyC,UACE,IAAK,IAAIrH,EAAJ,EAAWC,EAAK3G,KAAA4/C,YAArBh5C,OAA8CF,EAA9CC,EAAsDD,IAElD1G,KAAA4/C,YAAAl5C,IACA1G,KAAA4/C,YAAAl5C,GAAAqyC,iBAAuCx2B,EAAAA,gBAFzCC,UAIExiB,KAAA4/C,YAAAl5C,GADAoH,QAIJqyC,EAAAA,iBATQC,gBAeVX,aACEz/C,KAAA4/C,YADW,GAEX5/C,KAAAk5B,mBAFW,EAGXl5B,KAAAqgD,YAHW,KAIXrgD,KAAAm5B,eAJW,EAKXn5B,KAAAsgD,8BALW,KAMXtgD,KAAA0/C,mBANW,EASX1/C,KAAAmI,UAAA2tB,YATW,GAebnoB,YAAAA,GACE3N,KAAAyK,aADuB,EAEvB,GAAIzK,KAAJW,YAAsB,CACpBX,KADoBugD,mBAEpBvgD,KAFoBy/C,aAKtBz/C,KAAAW,YAPuBA,EAUzB2C,yBACE,IAAKtD,KAALW,YAAuB,OAGvB,GAAIX,KAAJyK,YAAsB,OAGtBzK,KAAAyK,aAPuB,EAQvB,MAAM9J,EAAcX,KARGW,YASjBqR,EAAmBrR,EAAAA,QATF,GAUjB0a,EAA+B1a,EAVdwuC,2BAWvB,IACE,MAAMqR,QADJxuC,EAEFhS,KAAAsgD,8BAFEjlC,EAIF,MAAM/P,EAAa3K,EAJjB4K,SAKIk1C,EAAWD,EAAAA,YAAyB,CAAEv+B,MAL1C,IAMIy+B,sBAAwB,IACrB1gD,KAD2B0/C,kBAIpC,IAAK,IAAIjO,EAAT,EAAsBA,GAAtBnmC,IAAAmmC,EAAwD,CACtD,MAAMyO,EAAY,IAAAZ,EAAAqB,iBAAqB,CACrCx4C,UAAWnI,KAD0BmI,UAErCqjB,GAFqCimB,EAGrCmP,gBAAiBH,EAHoBI,QAAAxlC,6BAAAA,EAKrCzT,YAAa5H,KALwB4H,YAMrCS,eAAgBrI,KANqBqI,eAAAq4C,sBAAAA,sBAQrCv+C,KAAMnC,KAR+BmC,OAUvCnC,KAAA4/C,YAAApmC,KAXsD0mC,GAgBxD,MAAMY,EAAqB9gD,KAAA4/C,YA1BzB,GA2BFkB,GACEA,EAAAA,WADsBN,GAKFxgD,KAAA4/C,YAAiB5/C,KAAAk5B,mBAhCrC,GAiCFzwB,IAAAA,UAAAA,IAjCE82C,GAkCF,MAAA16C,GACAF,OAAAA,WAAAA,MAAAA,wCADeE,IAQnB07C,mBACE,IAAK,IAAI75C,EAAJ,EAAWC,EAAK3G,KAAA4/C,YAArBh5C,OAA8CF,EAA9CC,EAAsDD,IAChD1G,KAAA4/C,YAAJl5C,IACE1G,KAAA4/C,YAAAl5C,GADuBq6C,kBAS7BC,cAAAA,GACE,GAAKhhD,KAALW,YAAA,CAGA,GAAAiY,EAEO,GACHkzB,MAAAsC,QAAAx1B,IAAyB5Y,KAAAW,YAAA4K,WAA8BqN,EADpDhS,OAML5G,KAAAqgD,YADKznC,MAHL,CACA5Y,KAAAqgD,YADA,KAEA17C,OAAAA,WAAAA,MAFA,+DAHA3E,KAAAqgD,YADW,KAWb,IAAK,IAAI35C,EAAJ,EAAWC,EAAK3G,KAAA4/C,YAArBh5C,OAA8CF,EAA9CC,EAAsDD,IAAK,CAAA,IAAAu6C,EACzDjhD,KAAA4/C,YAAAl5C,GAAAw6C,cAAiC,QAAAD,EAAAjhD,KAAAqgD,mBAAA,IAAAY,OAAA,EAAAA,EAAAv6C,KADwB,QAS7DpD,QAAA69C,GACE,GAAIA,EAAJztC,QACE,OAAOytC,EADcztC,QAGvB,IACE,MAAMA,QAAgB1T,KAAAW,YAAA25B,QAAyB6mB,EAD7C31B,IAEG21B,EAALztC,SACEytC,EAAAA,WADsBztC,GAGxB,OALEA,EAMF,MAAA7O,GACAF,OAAAA,WAAAA,MAAAA,oCADeE,GAEf,OAFe,MAMnBu8C,GAAAA,GAAyB,IAAAC,EAAAC,EACvB,OAAA,KAAIv3B,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,OAAAA,EAAAA,EAAAA,MAEOA,QAAAA,EAAAA,EAAAA,YAAAA,IAAAA,OAAAA,EAAAA,EAAAA,MAAqB/pB,KAAA4/C,YAAzBh5C,QAGA5G,KAAAga,OANgB6T,KASzB3jB,iBACE,MAAMq3C,EAAgBvhD,KADP6/C,oBAET2B,EAAcxhD,MAAKohD,EAFVG,GAGTJ,EAAYnhD,KAAAqI,eAAA4vC,mBAAAsJ,EAEhBvhD,KAFgB4/C,YAHH4B,GAQf,GAAAL,EAAe,CACbnhD,MAAKyhD,EAALN,GAAA98C,MAA0C,KACxCrE,KAAAqI,eAAAywC,WAD8CqI,MAGhD,OAJa,EAMf,OAde,6GC5RnB,IAAA3jD,EAAAC,EAAA,GArBAG,EAAAH,EAAA,GA2CA,MAAA0iD,iBACEnjD,SADqB,KAGrBA,iBAAAmsB,EAAAC,GACE,MAAMs4B,EAAc1hD,MAAK0hD,IAAgBphD,SAAAA,cADX,UAE9BohD,EAAAA,MAF8Bv4B,EAG9Bu4B,EAAAA,OAH8Bt4B,EAW5Bs4B,EAAAA,WAX4B,EAc9B,MAAMt5B,EAAMs5B,EAAAA,WAAAA,KAA4B,CAAEC,OAdZ,IAe9Bv5B,EAf8B7a,OAgB9B6a,EAAAA,UAhB8B,qBAiB9BA,EAAAA,SAAAA,EAAAA,EAAAA,EAjB8BgB,GAkB9BhB,EAlB8Bw5B,UAmB9B,MAAO,CAAAF,EAAaA,EAAAA,WAAb,OAGT1kD,uBACE,MAAM0kD,EAAa1hD,MAAK0hD,EACxB,GAAAA,EAAgB,CAGdA,EAAAA,MAHc,EAIdA,EAAAA,OAJc,EAMhB1hD,MAAK0hD,EARgB,6DAezB,MAAAf,iBAIE7jD,aAAYqL,UAAAA,EAAAqjB,GAAAA,EAAAo1B,gBAAAA,EAAAvlC,6BAAAA,EAAAzT,YAAAA,EAAAS,eAAAA,EAAAq4C,sBAAAA,EAAAv+C,KAAZrF,IAUEkD,KAAAwrB,GADCA,EAEDxrB,KAAA63C,YAAmB,YAFlBrsB,EAGDxrB,KAAAkkB,UAHC,KAKDlkB,KAAA0T,QALC,KAMD1T,KAAAkT,SANC,EAODlT,KAAAygD,SAPCG,EAQD5gD,KAAA6hD,cAAqBjB,EARpB1tC,SASDlT,KAAAsgD,8BAAqCjlC,GATpC,KAWDrb,KAAA4H,YAXCA,EAYD5H,KAAAqI,eAZCA,EAcDrI,KAAA8hD,WAdC,KAeD9hD,KAAA+4C,eAAsBx2B,EAAAA,gBAfrBwL,QAgBD/tB,KAAAg5C,OAhBC,KAiBDh5C,KAAA+hD,uBACErB,GACA,WACE,OADU,GAId,MAAMsB,EAAYhiD,KAAAygD,SAAlBt3B,MAEE84B,EAAYD,EADChiD,KAAAygD,SADfr3B,OAIAppB,KAAAkiD,YA3HJ,GA4HIliD,KAAAmiD,aAAqBniD,KAAAkiD,YAADD,EA5BnB,EA6BDjiD,KAAAiiB,MAAajiB,KAAAkiD,YA7BZF,EA+BDhiD,KAAAmC,KA/BCA,EAiCGI,OAAJ6/C,sBACE7/C,OAAAA,sBAAAA,KAAAA,EAAAA,EAAAA,EAA+DvC,KAD/BqiD,iBAGhCriD,KAAAsiD,gBAAAtiD,KAAA4H,EAAA4jB,EAAArjB,EAAuDnI,KADlDqiD,iBAKTC,gBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACE,MAAM7R,EAASnwC,SAAAA,cADoE,KAEnFmwC,EAAAA,KAAc7oC,EAAAA,aAAyB,SAF4C4jB,GAGnF+2B,EAAAA,MAA2B7yC,IACzB+gC,EAAAA,MADgC/gC,KAGlC+gC,EAAAA,QAAiB,WACf7oC,EAAAA,SAD2B4jB,GAE3B,OAF2B,GAI7Bg3B,EAAAA,OAVmF/R,EAYnF,MAAMnmB,EAAMhqB,SAAAA,cAZuE,OAanFgqB,EAAAA,UAbmF,YAcnFA,EAAAA,aAAAA,mBAAqCtqB,KAd8CwrB,IAenFg3B,EAAAA,IAfmFl4B,EAiBnF,MAAMm4B,EAAOniD,SAAAA,cAjBsE,OAkBnFmiD,EAAAA,UAlBmF,yBAoBnFA,EAAAA,MAAAA,MAAmBziD,KAAAkiD,YADM,EAnB0D,KAqBnFO,EAAAA,MAAAA,OAAoBziD,KAAAmiD,aAFK,EAnB0D,KAsBnFK,EAAAA,KAtBmFC,EAwBnFn4B,EAAAA,YAxBmFm4B,GAyBnFhS,EAAAA,YAzBmFnmB,GA0BnFniB,EAAAA,YA1BmFsoC,GA6BrFiS,WAAAA,GACE1iD,KAAA0T,QADkBA,EAElB1T,KAAA6hD,cAAqBnuC,EAFHmV,OAGlB,MAAM85B,GAAiB3iD,KAAAkT,SAAgBlT,KAAjB6hD,eAHJ,IAIlB7hD,KAAAygD,SAAgB/sC,EAAAkvC,YAAoB,CAAE3gC,MAAF,EAAY/O,SAAZyvC,IACpC3iD,KALkB8N,QAQpBA,QACE9N,KADM+gD,kBAEN/gD,KAAA+4C,eAAsBx2B,EAAAA,gBAFhBwL,QAIN,MAAMi0B,EAAYhiD,KAAAygD,SAAlBt3B,MAEE84B,EAAYD,EADChiD,KAAAygD,SADfr3B,OAIAppB,KAAAmiD,aAAqBniD,KAAAkiD,YAADD,EARd,EASNjiD,KAAAiiB,MAAajiB,KAAAkiD,YATPF,EAWNhiD,KAAAsqB,IAAAu4B,gBAXM,eAYN,MAAMJ,EAAOziD,KAZPyiD,KAaNA,EAAAA,YAbM,GAeNA,EAAAA,MAAAA,MAAmBziD,KAAAkiD,YADM,EAdnB,KAgBNO,EAAAA,MAAAA,OAAoBziD,KAAAmiD,aAFK,EAdnB,KAkBN,GAAIniD,KAAJ8iD,OAAiB,CAGf9iD,KAAA8iD,OAAA35B,MAHe,EAIfnpB,KAAA8iD,OAAA15B,OAJe,SAKRppB,KALQ8iD,OAOjB,GAAI9iD,KAAJ+iD,MAAgB,CACd/iD,KAAA+iD,MAAAF,gBADc,cAEP7iD,KAFO+iD,OAMlBjuC,QAAO5B,SAAEA,EAAF,OACL,iBAAIA,IACFlT,KAAAkT,SADgCA,GAGlC,MAAMyvC,GAAiB3iD,KAAAkT,SAAgBlT,KAAjB6hD,eAJI,IAK1B7hD,KAAAygD,SAAgBzgD,KAAAygD,SAAAI,MAAoB,CAClC5+B,MADkC,EAElC/O,SAFkCyvC,IAIpC3iD,KAT0B8N,QAgB5BizC,kBACE,GAAI/gD,KAAJ8hD,WAAqB,CACnB9hD,KAAA8hD,WADmBkB,SAEnBhjD,KAAA8hD,WAFmB,KAIrB9hD,KAAAg5C,OALgB,KAWlBiK,oBAAoBC,EAApBD,GAGE,MAAMH,EAASxiD,SAAAA,cAHsB,UASnCwiD,EAAAA,WATmC,EAWrC,MAAM16B,EAAM06B,EAAAA,WAAAA,KAAwB,CAAEnB,OAXD,IAY/BwB,GAAch7B,EAAAA,EAAAA,gBAZiBC,GAcrC06B,EAAAA,MAAgBI,EAAgBljD,KAAhBkjD,YAAmCC,EAApC36B,GAdsB,EAerCs6B,EAAAA,OAAiBI,EAAgBljD,KAAhBkjD,aAAoCC,EAArC16B,GAfqB,EAqBrC,MAAO,CAAAL,IAAAA,EAAA06B,OAAAA,EAAAM,UAJWD,EAAAz6B,OACd,CAACy6B,EAAD36B,GAAA,EAAA,EAAuB26B,EAAvB16B,GAAA,EAAA,GAlBiC,MA2BvC46B,sBAAAA,GACE,GAAIrjD,KAAA+4C,iBAAwBx2B,EAAAA,gBAA5BC,SACE,MAAM,IAAAzlB,MAD8C,sDAGtD,MAAMumD,EAAgBtjD,KAAAujD,aAJMT,GAMtBC,EAAQziD,SAAAA,cANc,OAO5ByiD,EAAAA,UAP4B,iBAQ5B/iD,KAAAwjD,iBAAAn/C,MAA2BqL,IACzBqzC,EAAAA,aAAAA,aADgCrzC,MAGlCqzC,EAAAA,MAAAA,MAAoB/iD,KAAAkiD,YAXQ,KAY5Ba,EAAAA,MAAAA,OAAqB/iD,KAAAmiD,aAZO,KAc5BY,EAAAA,IAAYO,EAdgBG,YAe5BzjD,KAAA+iD,MAf4BA,EAiB5B/iD,KAAAsqB,IAAA0T,aAAA,eAjB4B,GAkB5Bh+B,KAAAyiD,KAAAtqB,YAlB4B4qB,GAsB5BO,EAAAA,MAtB4B,EAuB5BA,EAAAA,OAvB4B,EA0B9BI,OACE,GAAI1jD,KAAA+4C,iBAAwBx2B,EAAAA,gBAA5BwL,QAAqD,CACnDppB,OAAAA,WAAAA,MADmD,uCAEnD,OAAOuB,QAF4C1B,UAIrD,MAAMkP,QAAAA,GALD1T,KAOL,IAAA0T,EAAc,CACZ1T,KAAA+4C,eAAsBx2B,EAAAA,gBADVC,SAEZ,OAAOtc,QAAAA,OAAe,IAAAnJ,MAFV,0BAKdiD,KAAA+4C,eAAsBx2B,EAAAA,gBAZjByL,QAcL,MAAM21B,iBAAmBrgD,MAAO4d,EAAP,QAInB4gC,IAAe9hD,KAAnB8hD,aACE9hD,KAAA8hD,WADkC,MAIpC,KAAI5gC,aAAJtjB,EAAAq7C,6BAAA,CAGAj5C,KAAA+4C,eAAsBx2B,EAAAA,gBAXyBC,SAY/CxiB,KAAAqjD,sBAZ+CP,GAc/C,GAAA5hC,EACE,MADSA,KAUPkH,IAAAA,EAAA06B,OAAAA,EAAAM,UAAAA,GACJpjD,KAAAijD,oBAnUN,GAmVUW,EAAgB,CACpBC,cADoBz7B,EAAAg7B,UAAAA,EAGpB3C,SAlBmBzgD,KAAAygD,SAAAI,MAAoB,CACvC5+B,MArUN,EAqUmCjiB,KAzC1BiiB,QA2DH5G,6BAA8Brb,KAJVsgD,8BAKpBwD,WAAY1sC,4BAAAA,IALQ,uBAOhB0qC,EAAc9hD,KAAA8hD,WAAkBpuC,EAAAA,OA9DjCkwC,GA+DL9B,EAAAA,WApB+BiC,IAC7B,GAAK/jD,KAAAqI,eAAAuvC,kBAAL53C,MAQA+jD,QARA,CACE/jD,KAAA+4C,eAAsBx2B,EAAAA,gBAD0B0L,OAEhDjuB,KAAAg5C,OAAc,KACZh5C,KAAA+4C,eAAsBx2B,EAAAA,gBADJyL,QAElB+1B,OAiBN,MAAMC,EAAgBlC,EAAAl3C,QAAAvG,MACpB,WACE,OAAOs/C,iBADG,SAGZ,SAAAziC,GACE,OAAOyiC,iBADQziC,MAInB8iC,EAAAA,SAAsB,KAGpBlB,EAAAA,MAH0B,EAI1BA,EAAAA,OAJ0B,EAS1B,IADmB9iD,KAAA4H,YAAAgqC,aAA8B5xC,KARvBwrB,IAST,CAAA,IAAAy4B,EACf,QAAAA,EAAAjkD,KAAA0T,eAAA,IAAAuwC,GAAAA,EADel2C,cAKnB,OAvFKi2C,EA0FPE,SAAAA,GACE,GAAIlkD,KAAJ+hD,yBAAmC,OAGnC,GAAI/hD,KAAA+4C,iBAAwBx2B,EAAAA,gBAA5BwL,QAAqD,OAGrD,MAAM+0B,OAAAA,EAAApvC,QAAAA,GAPW0M,EAQjB,GAAA0iC,EAAA,CAGK9iD,KAAL0T,SACE1T,KAAA0iD,WADiBhvC,GAGnB1T,KAAA+4C,eAAsBx2B,EAAAA,gBAdLC,SAejBxiB,KAAAqjD,sBAfiBP,IAqBnBS,aAAAA,GACE,MAAMn7B,IAAAA,EAAA06B,OAAAA,GAAkB9iD,KADRijD,sBAGhB,GAAIkB,EAAAA,OAAa,EAAIrB,EAArB35B,MAAmC,CACjCf,EAAAA,UAAAA,EAAAA,EAAAA,EAIE+7B,EAJF/7B,MAKE+7B,EALF/7B,OAAAA,EAAAA,EAQE06B,EARF16B,MASE06B,EAV+B15B,QAYjC,OAZiC05B,EAenC,IAAIsB,EAAetB,EAAAA,OA7ZvB,EA8ZQuB,EAAgBvB,EAAAA,QA9ZxB,EA+ZI,MAAMwB,EAAAC,GAAkCpE,iBAAAA,UAAAA,EApBxBkE,GAyBhB,KAAOD,EAAeD,EAAfC,OAA4BC,EAAgBF,EAAnD/6B,QAA+D,CAC7Dg7B,IAD6D,EAE7DC,IAF6D,EAI/DE,EAAAA,UAAAA,EAAAA,EAAAA,EAIEJ,EAJFI,MAKEJ,EALFI,OAAAA,EAAAA,EAAAA,EA7BgBF,GAwChB,KAAOD,EAAe,EAAItB,EAA1B35B,OAAwC,CACtCo7B,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAQEH,GARFG,EASEF,GAVoC,GAYtCD,IAZsC,EAatCC,IAbsC,EAexCj8B,EAAAA,UAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAQE06B,EARF16B,MASE06B,EAhEc15B,QAkEhB,OAlEgB05B,EAqEdT,sBACF,OAAOriD,KAAAmC,KAAAsN,IAAA,mBAAkC,CACvCjE,KAAMxL,KAAAkkB,WAAkBlkB,KAFNwrB,KAMlBg4B,uBACF,OAAOxjD,KAAAmC,KAAAsN,IAAA,oBAAmC,CACxCjE,KAAMxL,KAAAkkB,WAAkBlkB,KAFLwrB,KASvB01B,aAAAA,GACElhD,KAAAkkB,UAAiB,iBAAAjL,EAAAA,EADC,KAGlBjZ,KAAAqiD,gBAAAh+C,MAA0BqL,IACxB1P,KAAAywC,OAAArkC,MAD+BsD,KAI7B1P,KAAA+4C,iBAAwBx2B,EAAAA,gBAA5BC,UAIAxiB,KAAAwjD,iBAAAn/C,MAA2BqL,IAAO,IAAA80C,EAChC,QAAAA,EAAAxkD,KAAA+iD,aAAA,IAAAyB,GAAAA,EAAAxmB,aAAA,aADgCtuB,6GC3dtC,IAAAlS,EAAAC,EAAA,GAfAgnD,EAAAhnD,EAAA,IAkBA,MAAA2K,kBAAAq8C,EAAAC,kCAEA,MAAAC,4BAAAF,EAAAC,WACEjF,aACEvpB,MADWupB,aAEXz/C,KAAA4kD,YAAmBrxC,EAAAA,WAFR2T,KAGXlnB,KAAA6kD,YAAmBpxC,EAAAA,WAHR5P,KAOTyP,eAAJ6N,IAEA2jC,qBAGItxC,eAAJ2N,IAEA4jC,sLCJF,IAAAnnD,EAAAH,EAAA,GAOAD,EAAAC,EAAA,GAtCAunD,EAAAvnD,EAAA,IAAAwnD,EAAAxnD,EAAA,IAAAynD,EAAAznD,EAAA,IAAA0nD,EAAA1nD,EAAA,IAAAgB,EAAAhB,EAAA,IAAAa,EAAAb,EAAA,IAAA2nD,EAAA3nD,EAAA,IAAA4nD,EAAA5nD,EAAA,IAAA6nD,EAAA7nD,EAAA,IAAA8nD,EAAA9nD,EAAA,IA0EA,MACM+nD,EA3EN,oBA6EMC,EAAkB,CACtBC,uBADsB,KAEtBC,qBAFsB,KAGtBC,sBAHsB,yBA6CxB,MAAAC,kBAEEC,GAAO,IAFeziD,IAItBwJ,GAJsB,EAMtB/P,YAAAA,GACEkD,MAAK6M,EADWA,EAIlB2M,KAAAA,GACE,MAAMssC,EAAM9lD,MAAK8lD,EACbA,EAAAA,IAAJ1kC,IACE0kC,EAAAA,OADiB1kC,GAGnB0kC,EAAAA,IALS1kC,GAOL0kC,EAAAA,KAAW9lD,MAAK6M,GAClB7M,MAAK+lD,IAWTC,OAAAA,EAAgBC,EAAhBD,MACEhmD,MAAK6M,EAD2Bq5C,EAGhC,MAAMJ,EAAM9lD,MAAK8lD,EACjB,GAAAG,EAAe,CACb,MAAMt/C,EAAKm/C,EADEj5C,KAEb,IAAInG,EAFS,EAGb,IAAA,MAAA0a,KAAA0kC,EAAwB,CACtB,GAAIG,EAAAA,IAAc7kC,EAAlBoK,IAA4B,CAC1Bs6B,EAAAA,OAD0B1kC,GAE1B0kC,EAAAA,IAF0B1kC,GAI5B,KAAI1a,EAAJC,EAAc,OAMlB,KAAOm/C,EAAAA,KAAW9lD,MAAK6M,GACrB7M,MAAK+lD,IAIThgB,IAAAA,GACE,OAAO/lC,MAAK8lD,EAAL/f,IADC3kB,GAIV,CAACwmB,OAAOue,YACN,OAAOnmD,MAAK8lD,EADMjvB,OAIpBkvB,KACE,MAAMK,EAAYpmD,MAAK8lD,EAALjvB,OAAAwvB,OADAzsD,MAGlBwsD,MAAAA,GAAAA,EAHkB14C,UAIlB1N,MAAK8lD,EAALvwC,OAJkB6wC,0CAgBtB,MAAA1B,WACEzhC,GADe,KAGftpB,GAAkB2sD,EAAAA,eAHHC,aAKfC,GALe,KAOfrsD,IAPe,EASfssD,GATe,EAWfC,GAXe,KAgBf5pD,YAAAA,GAAqB,IAAA6pD,EAAAC,EACnB,GAAI5mD,KAAAlD,cAAJ4nD,WACE,MAAM,IAAA3nD,MAD6B,iCAGrC,MAAM8pD,EAJa,WAMnB,GAAIj2C,EAAAA,UAAJi2C,EACE,MAAM,IAAA9pD,MACJ,oBAAAa,EAAAgT,0DAGJ5Q,KAAAmI,UAAiB9K,EAXE8K,UAYnBnI,KAAA0F,OAAcrI,EAAAA,QAAkBA,EAAAA,UAZbo7B,kBAenBz4B,KAAA6H,aAAoBxK,EAAAA,cAfD,WAsBjB,GAEI,SAAA,QAAAspD,EAAA3mD,KAAAmI,iBAAA,IAAAw+C,OAAA,EAAAA,EAAAlzB,QAAApN,gBAFJ,SAGI,QAAAugC,EAAA5mD,KAAA0F,cAAA,IAAAkhD,OAAA,EAAAA,EAAAnzB,QAAApN,eAGF,MAAM,IAAAtpB,MADN,+CAIF,GACEiD,KAAAmI,UAAAukB,cADF,aAEEM,iBAAiBhtB,KAAjBgtB,WAAAA,SAEA,MAAM,IAAAjwB,MADN,kDAIJiD,KAAAkC,SAAgB7E,EAtCG6E,SAuCnBlC,KAAA4H,YAAmBvK,EAAAA,aAAuB,IAvCvBiB,EAAAuzC,kBAwCnB7xC,KAAA6B,gBAAuBxE,EAAAA,iBAxCJ,KAyCnB2C,KAAA0H,eAAsBrK,EAAAA,gBAzCH,KA0CnB2C,KAAA8mD,kBAAyBzpD,EAAAA,kBA1CN,KA2CnB2C,KAAAjF,kBAAyBsC,EAAAA,oBA3CN,EA4CnB2C,KAAA5E,cAAqBiC,EAAAA,eAAyBkI,EAAAA,cA5C3B+oB,OA6CnBtuB,MAAKrG,EACH0D,EAAAA,gBAA0BipD,EAAAA,eA9CTC,aA+CnBvmD,KAAAtF,mBAA0B2C,EAAAA,oBA/CP,GAgDnB2C,KAAA5F,sBAA6BiD,EAAAA,wBAhDV,EAiDnB2C,KAAAhF,SAAgBqC,EAAAA,UAAoBod,EAAAA,aAjDjB4T,OAkDnBruB,KAAA3E,eAAsBgC,EAAAA,iBAlDH,EAmDnB2C,KAAArF,gBAAuB0C,EAnDJ1C,gBAoDnBqF,KAAAmC,KAAY9E,EAAAA,MApDO4nD,EAAA8B,SAqDnB/mD,MAAK7F,EAAqBkD,EAAAA,oBArDP,EAuDnB2C,KAAAgnD,uBAA8B3pD,EAvDXgL,eAwDnB,GAAIrI,KAAJgnD,sBAAgC,CAE9BhnD,KAAAqI,eAAsB,IAFQ5J,EAAA4I,kBAG9BrH,KAAAqI,eAAAinC,UAH8BtvC,WAK9BA,KAAAqI,eAAsBhL,EADjBgL,eAGPrI,KAAAinD,KAAY3mD,SA/DO6D,gBAiEnBnE,KAAAga,QAAcmT,EAAAA,EAAAA,aAAYntB,KAAZmtB,UAA4BntB,KAAAknD,cAAA3/C,KAjEvBvH,OAkEnBA,KAAAmnD,sBAA6B90B,EAAAA,sBAlEVhf,QAmEnBrT,KAAAonD,cAAqBpnD,KAAAqnD,aAnEF,KAoEnBrnD,KApEmBy/C,aAsEfz/C,KAAJjF,mBACEiF,KAAA0F,OAAAonB,UAAArX,IAD0B,qBAK5BvP,QAAAA,UAAAA,MAAuB,KACrBlG,KAAAkC,SAAAoC,SAAA,iBAAyC,CAAEC,OADhBvE,UAK3BsL,iBACF,OAAOtL,KAAAsnD,OADQ1gD,OAIjBu1C,YAAAA,GACE,OAAOn8C,KAAAsnD,OADUv4B,GAOf9T,qBACF,QAAKjb,KAAAunD,iBAAL78C,SAKO1K,KAAAsnD,OAAAE,OAAkB,SAAApnC,GACvB,OAAOA,MAAAA,OAAP,EAAOA,EADoC1M,WAQ3CwE,kBACF,OAAOlY,MAAKrG,IAAoB2sD,EAAAA,eADhBC,aAOdlsD,sBACF,QAAS2F,KADW8mD,kBAOlBr7C,wBACF,OAAOzL,KADek5B,mBAOpBztB,sBAAJC,GACE,IAAKnO,OAAAA,UAALmO,GACE,MAAM,IAAA3O,MADoB,wBAG5B,IAAKiD,KAALW,YAAuB,OAKvB,MAAM8mD,EAAOh2C,KAAAA,IAASzR,KAAAk5B,mBAATznB,GATY,EAapBzR,KAAA0nD,sBAAAh8C,GAAL,IACE/G,OAAAA,WAAAA,MAA2B,uBAAA+G,2BAG7B,GAAI1L,KAAJ2nD,SACE,GAAAF,EAAU,CACR9iD,OAAAA,WAAAA,IADQ,QAER3E,KAAA2nD,SAAAF,KAAmB/7C,EAFX,OAGH,CACL/G,OAAAA,WAAAA,IADK,gBAEL3E,KAAA2nD,SAAAC,WAAyBl8C,EAFpB,IASXm8C,mCACE,SAAI7nD,KAAA6H,eACG7H,KAAL2nD,UACE51C,YAAW,KACT,IAAK/R,KAAL2nD,SAAoB,CAClB,MAAMG,EAAQ9nD,KAAAsnD,OAAA,GADIh9B,IAEZy9B,EAAoBD,EAFRnS,cAGZjwC,EAASqiD,EAHGpS,cAIlBjwC,EAAAA,MAAAA,MAAqB,EAAIoiD,EAAJh+B,YAJH,KAKlBpkB,EAAAA,MAAAA,SALkB,SAMlBA,EAAAA,MAAAA,WANkB,OAOlBA,EAAAA,MAAAA,YAPkB,OAQlB1F,KAAA2nD,SAAgB,IAAAzC,EAAA8C,SAAAD,EAAgC,CAC9C5+B,MAAO2+B,EADuCh+B,YAE9CV,OAAQ0+B,EAFsCl+B,aAG9Cq+B,WAH8C,EAI9Cp7C,KAJ8C,UAMhD7M,KAAA2nD,SAAAO,aAA2B5nD,SAAAA,iBAdT,UAelBN,KAfkBmoD,+BAiBlBnoD,KAAA2nD,SAAA52B,GAAA,QAAyB2C,IACnB1zB,KAAAk5B,qBAA4BxF,EAAAA,KAAhC,GACE1zB,KAAA0nD,sBAA2Bh0B,EAAAA,KAA3B,GAD0C,SApBhC,MAoCxBg0B,sBAAAA,EAA2BU,GAA3BV,GAAyD,IAAAzG,EACvD,GAAIjhD,KAAAk5B,qBAAJxtB,EAAqC,CACnC08C,GACEpoD,KADwBqoD,wBAG1B,OAJmC,EAOrC,KAAM,EAAA38C,GAAWA,GAAO1L,KAAxBsL,YACE,OADwC,EAG1C,MAAM0Y,EAAWhkB,KAXsCk5B,mBAYvDl5B,KAAAk5B,mBAZuDxtB,EAevD1L,KAfuD6nD,mCAiBvD,GAAI,SAAA7nD,KAAA6H,cAAJ,oBAAoC7H,KAAA6H,aAAyC,CAC3E,MAAMuY,EAAWpgB,KAAAsnD,OAAYtnD,KAAAyL,kBAD8C,GAE3E,GAAI2U,EAAAA,IAAAA,cAAAA,UAAAA,SAAJ,UACEA,EAAAA,IAAAA,cAAAA,WAAAA,SAA8CkK,IAC5C,MAAM5Q,EAAanc,OAAO+sB,EAAAA,aADyB,qBAE7Cg+B,EAAKtoD,KAAAsnD,OAAY5tC,EAF4B,GAGnD1Z,MAAKyhD,EAAL6G,GAAAjkD,MAAmC,KACjCrE,KAAAqI,eAAAywC,WADuCwP,MAGzCh+B,EAAAA,MAAAA,QANmD,sBAQhD,CACLtqB,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,MAI/C,SAAIpgB,KAAA6H,cACF7H,KADgCmoD,gCAQtCnoD,KAAAkC,SAAAoC,SAAA,eAAuC,CACrCC,OADqCvE,KAErC0Z,WAFqChO,EAGrCwY,WAAW,QAAA+8B,EAAAjhD,KAAAqgD,mBAAA,IAAAY,OAAA,EAAAA,EAAmBv1C,EAAnB,KAH0B,KAAAsY,SAAAA,IAOvCokC,GACEpoD,KADwBqoD,wBAG1B,OAnDuD,EA6DzDE,qBAAqBrnB,EAArBqnB,GACE,GAAIrnB,GAAAA,GAAkBA,GAAalhC,KAAAsnD,OAAA1gD,OAAnC,EAA2D,CACzD,MAAMwZ,EAAWpgB,KAAAsnD,OADwCpmB,GAGzD,GADkB9gB,EAAAA,IAAAA,cAFuC,gBAG1C,CACbpgB,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,MAG/C,OAJa,GAOjB,OAXkC,EAgBpC+nC,+BACE,IAAK5lD,OAALimD,oBAAiC,CAC/BjmD,OAAAA,oBAA6Boe,IAC3Bhc,OAAAA,WAAAA,IAAAA,WADkCgc,GAElC,IAAIP,EAAWpgB,KAAAsnD,OAAY71C,KAAAA,IAASzR,KAAAsnD,OAAA1gD,OAAT6K,EAAiCzR,KAF1ByL,oBAGlC,GAAA2U,EAAc,CACZ,IAAIqoC,EAAYroC,EAAAA,IAAAA,cADJ,gBAEZ,GAAAqoC,EAAe,CACb9jD,OAAAA,WAAAA,IADa,4BAEb3E,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,UAG1C,CACLA,EAAWpgB,KAAAsnD,OAAY71C,KAAAA,IAASzR,KAAAsnD,OAAA1gD,OAAT6K,EAAiCzR,KAAAyL,kBADnD,IAELg9C,EAAYroC,EAAAA,IAAAA,cAFP,gBAGL,GAAAqoC,EAAe,CACb9jD,OAAAA,WAAAA,IADa,gCAEb3E,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,UAG1C,CACLA,EAAWpgB,KAAAsnD,OAAY71C,KAAAA,IAASzR,KAAAsnD,OAAA1gD,OAAT6K,EAAiCzR,KAAAyL,kBADnD,IAELg9C,EAAYroC,EAAAA,IAAAA,cAFP,gBAGL,GAAAqoC,EAAe,CACb9jD,OAAAA,WAAAA,IADa,gCAEb3E,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,UAG1C,CACLA,EAAWpgB,KAAAsnD,OAAY71C,KAAAA,IAASzR,KAAAsnD,OAAA1gD,OAAT6K,EAAiCzR,KAAAyL,kBADnD,IAELg9C,EAAYroC,EAAAA,IAAAA,cAFP,gBAGL,GAAAqoC,EAAe,CACb9jD,OAAAA,WAAAA,IADa,gCAEb3E,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,UAG1C,CACLA,EAAWpgB,KAAAsnD,OAAY71C,KAAAA,IAAAA,EAAYzR,KAAAyL,kBAD9B,IAELg9C,EAAYroC,EAAAA,IAAAA,cAFP,gBAGL,GAAAqoC,EAAe,CACb9jD,OAAAA,WAAAA,IADa,+BAEb3E,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,UAG1C,CACLA,EAAWpgB,KAAAsnD,OAAY71C,KAAAA,IAAAA,EAAYzR,KAAAyL,kBAD9B,IAELg9C,EAAYroC,EAAAA,IAAAA,cAFP,gBAGL,GAAAqoC,EAAe,CACb9jD,OAAAA,WAAAA,IADa,gCAEb3E,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,WAI/Czb,OAAAA,WAAAA,IADK,wCAUrB3E,KAAAkC,SAAA4T,IAAA,eAAkCvT,OA7DHimD,qBA+DjCjmD,OAhE6BimD,sBAwE3BrvC,uBAAmB,IAAAuvC,EACrB,OAAO,QAAAA,EAAA1oD,KAAAqgD,mBAAA,IAAAqI,OAAA,EAAAA,EAAmB1oD,KAAAk5B,mBAAnB,KADc,KAOnB/f,qBAAJzN,GACE,IAAK1L,KAALW,YAAuB,OAGvB,IAAI6K,EAJoB,EAIbE,EACX,GAAI1L,KAAJqgD,YAAsB,CACpB,MAAM35C,EAAI1G,KAAAqgD,YAAAsI,QADUj9C,GAEhBhF,GAAJ,IACE8E,EAAO9E,EADG,GAKT1G,KAAA0nD,sBAAAl8C,GAAL,IACE7G,OAAAA,WAAAA,MAA2B,sBAAA+G,2BAO3BqZ,mBACF,OAAO/kB,KAAA4oD,gBAAAprD,EAAAqrD,cACH7oD,KADG4oD,cADUprD,EAAAsrD,cASf/jC,iBAAJrZ,GACE,GAAIiG,MAAJjG,GACE,MAAM,IAAA3O,MADQ,0BAGXiD,KAALW,aAGAX,KAAA+oD,UAAAr9C,GAPoB,GAalBN,wBACF,OAAOpL,KADegpD,mBAOpB59C,sBAAJM,GACO1L,KAALW,aAGAX,KAAA+oD,UAAAr9C,GAJyB,GAUvBqO,oBACF,OAAO/Z,KADWm5B,eAOhBpf,kBAAJ7G,GACE,KAAK4G,EAAAA,EAAAA,iBAAL5G,GACE,MAAM,IAAAnW,MADwB,iCAGhC,IAAKiD,KAALW,YAAuB,QAIvBuS,GAR0B,KAS1B,IACEA,GADgB,KAGlB,GAAIlT,KAAAm5B,iBAAJjmB,EAAsC,OAGtClT,KAAAm5B,eAf0BjmB,EAiB1B,MAAMwG,EAAa1Z,KAjBOk5B,mBAmBpB+mB,EAAa,CAnBO/sC,SAAAA,GAoB1B,IAAA,MAAAkN,KAAuBpgB,KAAvBsnD,OACElnC,EAAAA,OADkC6/B,GAKhCjgD,KAAJgpD,oBACEhpD,KAAA+oD,UAAe/oD,KAAfgpD,oBAD2B,GAI7BhpD,KAAAkC,SAAAoC,SAAA,mBAA2C,CACzCC,OADyCvE,KAEzC+Z,cAFyC7G,EAAAwG,WAAAA,IAMvC1Z,KAAJgnD,uBACEhnD,KAD8B8U,SAK9B9C,uBACF,OAAOhS,KAAAW,YAAmBX,KAAAsgC,qBAAnB11B,QADc,KAInB8H,sBACF,OAAO1S,KAAAW,YAAmBX,KAAAipD,2BAAnBr+C,QADa,KAIlB+H,mBACF,OAAO3S,KAAAW,YAAmBX,KAAAunD,iBAAnB38C,QADU,KAOnBs+C,GAAAA,GACE,GAAAC,EAAA,CAIKA,EAAAA,SAAqBC,EAAAA,eAA1BC,OACErpD,KAAA0F,OAAAonB,UAAArX,IAD8C+vC,GAIhD,IACG2D,EAAAA,SAAqBC,EAAAA,eAAtBE,sBACCH,EAAAA,SAAqBC,EAAAA,eAFxBG,yBAIMvpD,MAAKrG,IAAoB2sD,EAAAA,eAA7BC,aAA0D,CACxDvmD,MAAKwmD,EAA0BxmD,MAAKrG,EACpCqG,MAAKrG,EAAkB2sD,EAAAA,eAFiCh4B,SAO9Dk7B,KASE,OACGxpD,KAAAmI,UAADukB,cADF,IAEE1sB,KAAAypD,mBAAAlgC,MAAA3iB,OAIK5G,KAAAipD,2BAfsBr+C,QAapB1E,QADP1B,UASJmJ,YAAAA,GACE,GAAI3N,KAAJW,YAAsB,CACpBX,KAAAkC,SAAAoC,SAAA,eAAuC,CAAEC,OADrBvE,OAGpBA,KAHoBugD,mBAIpBvgD,KAJoBy/C,aAMhBz/C,KAAJ0H,gBACE1H,KAAA0H,eAAAiG,YADuB,MAGrB3N,KAAJ8mD,mBACE9mD,KAAA8mD,kBAAAn5C,YAD0B,MAK9B3N,KAAAW,YAfuBA,EAgBvB,IAAAA,EAAkB,OAGlB,MAAMoX,EAAYpX,EAnBKoX,UAoBjBzM,EAAa3K,EApBI4K,SAqBjByG,EAAmBrR,EAAAA,QArBF,GAuBjB0a,EAA+B1a,EAvBdwuC,2BAwBjBua,EAAqB1pD,MAAK7F,EAC5BwG,EADuBgpD,iBAEvBzjD,QA1BmB1B,UA8BvB,GAAI8G,EAAam6C,EAAjBC,uBAAyD,CACvDkE,QAAAA,KADuD,qFAIvD,MAAMzoC,EAAQnhB,KAAA4kD,YAAmBrxC,EAAAA,WAJsB2T,KAKvDlnB,KAAAkC,SAAAoC,SAAA,oBAA4C,CAAEC,OAAFvE,KAAAmhB,KAAAA,IAG9CnhB,KAAAunD,iBAAA38C,QAAAvG,MACE,KACErE,KAAAkC,SAAAoC,SAAA,cAAsC,CAAEC,OAAFvE,KAAAsL,WAAAA,OAExC,SAKFtL,KAAAonD,cAAqBzmC,IACnB,MAAMP,EAAWpgB,KAAAsnD,OAAY3mC,EAAAA,WADH,GAE1BP,GAKApgB,MAAKijB,EAALzJ,KAP0B4G,IAS5BpgB,KAAAkC,SAAA4T,IAAA,aAAgC9V,KAxDTonD,eA0DvBpnD,KAAAqnD,aAAoB1mC,IAClB,IAAIA,EAAAA,eAAoB3gB,KAAAipD,2BAAxBv+C,QAAA,CAGA1K,KAAAipD,2BAAAzkD,QAAwC,CAAEwQ,UAAW2L,EAJ5B3L,YAMzBhV,KAAAkC,SAAAkvB,KAAA,eAAmCpxB,KANVqnD,cAOzBrnD,KAAAqnD,aAPyB,OAS3BrnD,KAAAkC,SAAA4T,IAAA,eAAkC9V,KAnEXqnD,cAuEvBnhD,QAAAA,IAAY,CAAA8L,EAAA03C,IAAZxjD,MACQ,EAACs6C,EAAD2I,MACJ,GAAIxoD,IAAgBX,KAApBW,YAAsC,OAGtCX,KAAAsgC,qBAAA97B,QAJqCg8C,GAKrCxgD,KAAAsgD,8BALqCjlC,EAMrCrb,MAAKkpD,EANgCC,GAQrC,MAAMU,EACJ7pD,KAAA4kD,cAAqBrxC,EAAAA,WAArB2T,KAAA,KAA8ClnB,KATX0F,OAU/Buc,EAAQjiB,KAVuB+kB,aAW/B07B,EAAWD,EAAAA,YAAyB,CACxCv+B,MAAOA,EAAQ6nC,EAAAA,cAZoBC,mBAc/BC,EACJhqD,KAAA5E,gBAAuBmK,EAAAA,cAAvBC,SAAAuS,EAfmC,KAenC/X,KAGIiqD,EACJjqD,MAAKrG,IAAoB2sD,EAAAA,eAAzB9gD,QAAAxF,KAnBmC,KAoB/BkqD,EAAkBnyC,EAAAA,KApBa,KAsBrC,IAAK,IAAI05B,EAAT,EAAsBA,GAAtBnmC,IAAAmmC,EAAwD,CACtD,MAAMrxB,EAAW,IAAA+kC,EAAAgF,YAAgB,CAC/BhiD,UAD+B0hD,EAE/B3nD,SAAUlC,KAFqBkC,SAG/BspB,GAH+BimB,EAAAxvB,MAAAA,EAK/B2+B,gBAAiBH,EALcI,QAAAxlC,6BAAAA,EAO/BhT,eAAgBrI,KAPeqI,eAAA2hD,iBAAAA,EAS/B5uD,cAAe4E,KATgB5E,cAAA6uD,uBAAAA,EAW/BtwD,eAAgBqG,MAAKrG,EAXUuwD,gBAAAA,EAa/BE,uBAb+BpqD,KAc/BqqD,uBAd+BrqD,KAe/BtF,mBAAoBsF,KAfWtF,mBAgB/BK,kBAAmBiF,KAhBYjF,kBAiB/BC,SAAUgF,KAjBqBhF,SAkB/BK,eAAgB2E,KAlBe3E,eAmB/BV,gBAAiBqF,KAnBcrF,gBAoB/BwH,KAAMnC,KApByBmC,OAsBjCnC,KAAAsnD,OAAA9tC,KAvBsD4G,GA4BxD,MAAMkqC,EAAgBtqD,KAAAsnD,OAlDe,GAmDrC,GAAAgD,EAAmB,CACjBA,EAAAA,WADiB9J,GAEjBxgD,KAAA4H,YAAAgoC,aAAA,EAAiC4Q,EAFhB+J,KAKfvqD,KAAA4kD,cAAqBrxC,EAAAA,WAAzB2T,KAEElnB,MAAKwqD,IACIxqD,KAAA6kD,cAAqBpxC,EAAAA,WAAzB5P,MACL7D,KAD+C+kD,oBAOjD/kD,MAAKwpD,IAALnlD,MAAyCf,UACnCtD,KAAJ0H,gBACE1H,KAAA0H,eAAAiG,YADuBhN,GAGrBX,KAAJ8mD,mBACE9mD,KAAA8mD,kBAAAn5C,YAD0BhN,GAM5B,GACEA,EAAAA,cAAAA,kBACA2K,EAAam6C,EAFfE,qBAGE,CAEA3lD,KAAAunD,iBAFA/iD,UAAA,OAKF,IAAIimD,EAAen/C,EAlBgC,EAoBnD,GAAIm/C,GAAJ,EACEzqD,KAAAunD,iBADqB/iD,eAIvB,IAAK,IAAIitC,EAAT,EAAsBA,GAAtBnmC,IAAAmmC,EAAwD,CACtD,MAAM7mC,EAAUjK,EAAA25B,QAAAmX,GAAAptC,MACdqP,IACE,MAAM0M,EAAWpgB,KAAAsnD,OAAY7V,EADpB,GAEJrxB,EAAL1M,SACE0M,EAAAA,WADqB1M,GAGvB1T,KAAA4H,YAAAgoC,aAAA6B,EAAuC/9B,EAL9B62C,KAMT,KAAIE,GACFzqD,KAAAunD,iBADwB/iD,aAI5BK,IACEF,OAAAA,WAAAA,MACE,sBAAA8sC,yBAFM5sC,GAKR,KAAI4lD,GACFzqD,KAAAunD,iBADwB/iD,aAM1BitC,EAAUgU,EAAVhU,uBAAJ,SAA2D7mC,MAO/D5K,KAxHqC6nD,mCA2HrC7nD,KAAAkC,SAAAoC,SAAA,YAAoC,CAAEC,OA3HDvE,OA6HrCW,EAAAA,cAAAA,MAA+B,EAAAqW,KAAAA,MACzBrW,IAAgBX,KAApBW,aAGIqW,EAAJU,WACE1X,KAAA0F,OAAAiS,KAAmBX,EADFU,aAKjB1X,KAAJgnD,uBACEhnD,KAD8B8U,YAvIpC5O,OA2ISrB,IACLF,OAAAA,WAAAA,MAAAA,8BADeE,GAGf7E,KAAAunD,iBAAAj3B,OAHezrB,MAUrBm8C,cAAAA,GACE,GAAKhhD,KAALW,YAAA,CAGA,GAAAiY,EAEO,GACHkzB,MAAAsC,QAAAx1B,IAAyB5Y,KAAAW,YAAA4K,WAA8BqN,EADpDhS,OAML5G,KAAAqgD,YADKznC,MAHL,CACA5Y,KAAAqgD,YADA,KAEA17C,OAAAA,WAAAA,MAFA,4CAHA3E,KAAAqgD,YADW,KAWb,IAAK,IAAI35C,EAAJ,EAAWC,EAAK3G,KAAAsnD,OAArB1gD,OAAyCF,EAAzCC,EAAiDD,IAAK,CAAA,IAAAgkD,EACpD1qD,KAAAsnD,OAAA5gD,GAAAw6C,cAA4B,QAAAwJ,EAAA1qD,KAAAqgD,mBAAA,IAAAqK,OAAA,EAAAA,EAAAhkD,KADwB,QAKxD+4C,aACEz/C,KAAAsnD,OADW,GAEXtnD,KAAAk5B,mBAFW,EAGXl5B,KAAA4oD,cAHWprD,EAAAqrD,cAIX7oD,KAAAgpD,mBAJW,KAKXhpD,KAAAqgD,YALW,KAOX,MAAMsK,EAAaptD,OAAO6Z,4BAAAA,IAAP7Z,sBA78BvB,GA88BIyC,MAAKijB,EAAU,IAAA4iC,kBARJ8E,GAUX3qD,KAAA4qD,UAVW,KAWX5qD,KAAAm5B,eAXW,EAYXn5B,KAAAsgD,8BAZW,KAaXtgD,KAAAsgC,sBAbW,EAAA1iC,EAAA4C,2BAcXR,KAAAipD,4BAdW,EAAArrD,EAAA4C,2BAeXR,KAAAunD,kBAfW,EAAA3pD,EAAA4C,2BAgBXR,KAAA4kD,YAAmBrxC,EAAAA,WAhBR0T,SAiBXjnB,KAAA6qD,oBAA2Bt3C,EAAAA,WAjBhBF,QAkBXrT,KAAA6kD,YAAmBpxC,EAAAA,WAlBR5P,KAoBX7D,MAAK0mD,EAAuB,CAC1BoE,mBAD0B,EAE1BC,YAF0B,EAG1BC,MAH0B,IAM5B,GAAIhrD,KAAJonD,cAAwB,CACtBpnD,KAAAkC,SAAAkvB,KAAA,aAAiCpxB,KADXonD,eAEtBpnD,KAAAonD,cAFsB,KAIxB,GAAIpnD,KAAJqnD,aAAuB,CACrBrnD,KAAAkC,SAAAkvB,KAAA,eAAmCpxB,KADdqnD,cAErBrnD,KAAAqnD,aAFqB,KAKvBrnD,KAAA0F,OAAAowB,YAnCW,GAqCX91B,KArCW8kD,oBAuCX9kD,KAAA0F,OAAAm9C,gBAvCW,QAyCX7iD,KAAA0F,OAAAonB,UAAA4C,OAzCW81B,GA2CX,GAAA,OAAIxlD,MAAKwmD,EAAkC,CACzCxmD,MAAKrG,EAAkBqG,MAAKwmD,EAC5BxmD,MAAKwmD,EAFoC,MAM7CgE,KACE,GAAIxqD,KAAA4kD,cAAqBrxC,EAAAA,WAAzB2T,KACE,MAAM,IAAAnqB,MADkC,qDAG1C,MAAM2c,EAAa1Z,KAAnBk5B,mBACEtX,EAAQ5hB,MAAK0mD,EACbhhD,EAAS1F,KANY0F,OASvBA,EAAAA,YATuB,GAWvBkc,EAAAA,MAAAA,OAXuB,EAavB,GAAI5hB,KAAA6kD,cAAqBpxC,EAAAA,WAAzB5P,KAA0C,CAExC,MAAMuc,EAAWpgB,KAAAsnD,OAAY5tC,EAFW,GAIxC,GAAI1Z,KAAJ8K,qBAA+B,CAC7B,MAAMmP,EAAS3Z,SAAAA,cADc,OAE7B2Z,EAAAA,UAF6B,SAG7B,MAAMgxC,EAAY3qD,SAAAA,cAHW,OAI7B2qD,EAAAA,UAJ6B,YAK7BA,EAAAA,MAAAA,OAAyB,GAAGjrD,KAAAmI,UAAHyhB,iBAEzB3P,EAAAA,YAP6BgxC,GAQ7BhxC,EAAAA,YAAmBmG,EARUkK,KAS7B5kB,EAAAA,YAT6BuU,QAW7BvU,EAAAA,YAAmB0a,EADdkK,KAIP1I,EAAAA,MAAAA,KAlBwCxB,OAmBnC,CACL,MAAM8qC,EAAe,IAArB7nD,IACE8nD,EAASnrD,KAAA6kD,YAFN,EAKL,GAAInrC,EAAAA,IAAJyxC,EAA+B,CAE7BD,EAAAA,IAAiBxxC,EAFY,GAG7BwxC,EAAAA,IAH6BxxC,OAIxB,CAELwxC,EAAAA,IAAiBxxC,EAFZ,GAGLwxC,EAAAA,IAAiBxxC,EAHZ,GAOP,IAAIO,EAhBC,KAiBL,IAAA,MAAAvT,KAAAwkD,EAA8B,CAC5B,MAAM9qC,EAAWpgB,KAAAsnD,OADW5gD,GAE5B,GAAA0Z,EAAA,CAGA,GAAA,OAAInG,EAAiB,CACnBA,EAAS3Z,SAAAA,cADU,OAEnB2Z,EAAAA,UAFmB,SAGnBvU,EAAAA,YAHmBuU,QAId,GAAIvT,EAAAA,IAAJykD,EAAsB,CAC3BlxC,EAASA,EAAAA,WADkB,GAE3BvU,EAAAA,YAF2BuU,GAI7BA,EAAAA,YAAmBmG,EAbSkK,KAe5B1I,EAAAA,MAAAA,KAf4BxB,KAmBhCwB,EAAAA,WAAmBlI,GAAckI,EApEVkpC,mBAqEvBlpC,EAAAA,mBArEuBlI,EAwEzBwtC,gBACE,IAAIlnD,KAAAsL,YAGJtL,KAJc8U,SAOhBs2C,iBAAgBC,QAAAA,EAAAC,SAAWA,EAAX,KAAA5xC,WAA4BA,EAA5C0xC,OACE,GAAIprD,KAAA4kD,cAAqBrxC,EAAAA,WAAzB2T,KAA0C,CACxCxN,GAEE1Z,KAAA0nD,sBAFchuC,GAIhB1Z,MAAKwqD,IAGLxqD,KARwC8U,SAW1C,IAAIw2C,IAActrD,KAAlB8K,qBAA6C,CAC3C,MAAMoX,EAAOmpC,EAAAA,WAAqBA,EADS7gC,WAErCX,EAAQ3H,EAAOmpC,EAFsBvhC,aAGrC9W,WAAAA,EAAA8W,YAAAA,GAA8B9pB,KAHOmI,WAKzCnI,KAAA4kD,cAAqBrxC,EAAAA,WAArBib,YACAtM,EADAlP,GAEA6W,EAAQ7W,EAHV8W,KAKEwhC,EAAW,CAAEppC,KAAF,EAAWC,IAAX,KAGfkK,EAAAA,EAAAA,gBAAAA,EAAAA,GAAAA,EAxB+D,oBAwBtBrsB,KAAA6H,cAO3C0jD,GAAAA,GACE,QACEvrD,KAAA8K,sBACA9K,KAAAmI,UAAAyhB,eAAgC5pB,MAAKymD,KAOrC+E,IAAaxrD,KAAbwrD,eACA/5C,KAAAA,IAAS+5C,EAAWxrD,KAApByR,eAXmB,OAevBg6C,qBAAAA,EAAAA,EAAyCC,GAAzCD,EAA2DE,GAA3DF,GACEzrD,KAAAgpD,mBAA0B4C,EAD+C1yC,WAGzE,GAAIlZ,MAAKurD,EAATC,GAAiC,CAC/BG,GACE3rD,KAAAkC,SAAAoC,SAAA,gBAAwC,CACtCC,OADsCvE,KAEtCiiB,MAFsCupC,EAGtCK,YAHsCD,IAFX,OAWjC5rD,KAAAinD,KAAA13B,MAAAyvB,YAAA,gBAdyEwM,GAezExrD,KAAAinD,KAAA13B,MAAAyvB,YAAA,0BAEEwM,EAAW1B,EAAAA,cAjB4DC,kBAoBzE,MAAM9J,EAAa,CAAEh+B,MApBoDupC,GAqBzE,IAAA,MAAAprC,KAAuBpgB,KAAvBsnD,OACElnC,EAAAA,OADkC6/B,GAGpCjgD,KAAA4oD,cAxByE4C,EA0BzE,IAAAE,EAAe,CACb,IADap3C,EACT9I,EAAOxL,KAAXk5B,mBAEA,GACEl5B,KAAA4qD,YACE5qD,KAAA8K,uBAA6B9K,KAFjC67C,2BAGE,CACArwC,EAAOxL,KAAA4qD,UADPlxC,WAEApF,EAAO,CAAA,KAEL,CAAErX,KAFG,OAGL+C,KAAA4qD,UAHK1oC,KAILliB,KAAA4qD,UAJKzoC,IAAA,MAQTniB,KAAA8vC,mBAAwB,CACtBp2B,WADsBlO,EAEtBukC,UAFsBz7B,EAGtBw8B,qBAHsB,IAO1B9wC,KAAAkC,SAAAoC,SAAA,gBAAwC,CACtCC,OADsCvE,KAEtCiiB,MAFsCupC,EAGtCK,YAAaF,EAAAA,OAHyBxuD,IAMpC6C,KAAJgnD,uBACEhnD,KAD8B8U,SAIhC9U,MAAKymD,EAA2BzmD,KAAAmI,UA3DyCyhB,aAiEvEkiC,4BACF,OACE9rD,KAAA6kD,cAAqBpxC,EAAAA,WAArB5P,MACA7D,KAAA4kD,cAAqBrxC,EAAAA,WAFvBib,WAGE,EAJwB,EAU5Bu6B,UAAAA,EAAiB2C,GAAjB3C,GAEM,OAAJnvD,IACEA,EADkB,QAIpB,IAAIqoB,EAAQ4uB,WANqBj3C,GAQjC,GAAIqoB,EAAJ,EACEjiB,KAAAyrD,qBAAAxpC,EAAAroB,EAAA8xD,GADa,OAER,CACL,MAAMrpC,EAAcriB,KAAAsnD,OAAYtnD,KAAAk5B,mBAD3B,GAEL,IAAA7W,EAAkB,OAGlB,IAAI0pC,EAAJvuD,EAAAwuD,kBACEC,EANGzuD,EAAA0uD,iBAQDlsD,KAAJ8K,qBACEihD,EAAWE,EADkB,EAEpBjsD,KAAJjF,oBACLgxD,EAAWE,EADsB,GAG/BjsD,KAAA4kD,cAAqBrxC,EAAAA,WAAzBib,cACEu9B,EAAAE,GAAuB,CAAAA,EAAAF,IAEzB,MAAMI,GACDnsD,KAAAmI,UAAA2hB,YAADiiC,GAA0C1pC,EAA3C8G,MACC9G,EADFJ,MAEAjiB,KAnBG8rD,sBAoBCM,GACFpsD,KAAAmI,UAAAyhB,aAADqiC,GAA2C5pC,EAA5C+G,OACA/G,EAtBGJ,MAuBL,OAAAroB,GACE,IAAA,cACEqoB,EADF,EADF,MAIE,IAAA,aACEA,EADFkqC,EAJF,MAOE,IAAA,cACElqC,EADFmqC,EAPF,MAUE,IAAA,WACEnqC,EAAQxQ,KAAAA,IAAAA,EADV26C,GAVF,MAaE,IAAA,OAGE,MAAMC,GAAkBvgC,EAAAA,EAAAA,uBAAAA,GAAAA,EAEpBra,KAAAA,IAAAA,EALN06C,GAMElqC,EAAQxQ,KAAAA,IAAAA,EAAAA,eANV46C,GAbF,MAqBE,QACE1nD,OAAAA,WAAAA,MAA2B,eAAA/K,gCAtB/B,OAyBAoG,KAAAyrD,qBAAAxpC,EAAAroB,EAAA8xD,GAhDK,IAwDTrD,wBACMroD,KAAJ8K,sBAEE9K,KAAA+oD,UAAe/oD,KAAfgpD,oBAF6B,GAK/B,MAAM5oC,EAAWpgB,KAAAsnD,OAAYtnD,KAAAk5B,mBANP,GAOtBl5B,KAAAorD,gBAAqB,CAAEC,QAASjrC,EAPVkK,MAexB4lB,sBAAAA,GACE,IAAKlwC,KAALqgD,YACE,OADqB,KAGvB,MAAM35C,EAAI1G,KAAAqgD,YAAAsI,QAJiB1vC,GAK3B,OAAIvS,EAAJ,EAAW,KAGJA,EARoB,EA0B7BopC,oBAAmBp2B,WAAAA,EAAAq2B,UAEjBA,EAFiB,KAAAe,oBAGjBA,GAHiB,EAAAr2C,sBAIjBA,GAJFq1C,IAME,IAAK9vC,KAALW,YAAuB,OAGvB,MAAMyf,EACJ7iB,OAAAA,UAAAA,IAAgCyC,KAAAsnD,OAAY5tC,EAL7C,GAMD,IAAA0G,EAAe,CACbzb,OAAAA,WAAAA,MACE,wBAAA+U,2CAFW,OAOf,GAAI1Z,KAAA8K,uBAAJilC,EAA6C,CAC3C/vC,KAAA0nD,sBAAAhuC,GAD2C,GAAA,OAI7C,IAEA4yC,EAnBCC,EAiBGjlC,EAAJ,EACEmE,EAlBD,EAmBGtC,EAAJ,EACEC,EADF,EAIA,MAAMF,EAAoB9I,EAAAA,SAAAA,KAvBzB,EAwBK4hC,GACH94B,EAAoB9I,EAApBgJ,OAAsChJ,EAAvC+I,OACA/I,EADA6B,MAEA6nC,EAAAA,cA3BDC,iBA4BKyC,GACHtjC,EAAoB9I,EAApB+I,MAAqC/I,EAAtCgJ,QACAhJ,EADA6B,MAEA6nC,EAAAA,cA/BDC,iBAgCD,IAAI9nC,EAhCH,EAiCD,OAAQ8tB,EAAAA,GAAR9yC,MACE,IAAA,MACEqqB,EAAIyoB,EADN,GAEEtkB,EAAIskB,EAFN,GAGE9tB,EAAQ8tB,EAHV,GAQEzoB,EAAIA,OAAAA,EAAAA,EARN,EASEmE,EAAIA,OAAAA,EAAAA,EATN+gC,EADF,MAYE,IAZF,MAaE,IAAA,OACEvqC,EADF,WAbF,MAgBE,IAhBF,OAiBE,IAAA,QACEwJ,EAAIskB,EADN,GAEE9tB,EAFF,aAKE,GAAIwJ,OAAAA,GAAczrB,KAAlB4qD,UAAkC,CAChCtjC,EAAItnB,KAAA4qD,UAD4B1oC,KAEhCuJ,EAAIzrB,KAAA4qD,UAF4BzoC,SAGvB,iBAAAsJ,GAAyBA,EAA7B,KAGLA,EAHyC+gC,GAzB/C,MA+BE,IA/BF,OAgCE,IAAA,QACEllC,EAAIyoB,EADN,GAEE5mB,EAFF64B,EAGE54B,EAHFojC,EAIEvqC,EAJF,cAhCF,MAsCE,IAAA,OACEqF,EAAIyoB,EADN,GAEEtkB,EAAIskB,EAFN,GAGE5mB,EAAQ4mB,EAAAA,GAHVzoB,EAIE8B,EAAS2mB,EAAAA,GAJXtkB,EAKE,MAAMsgC,EAAW/rD,KAAAjF,kBAAA,EALnByC,EAAAwuD,kBAMQC,EAAWjsD,KAAAjF,kBAAA,EANnByC,EAAA0uD,iBAQEI,GACGtsD,KAAAmI,UAAA2hB,YAADiiC,GAAA5iC,EAEA2gC,EAAAA,cAXJC,iBAYEwC,GACGvsD,KAAAmI,UAAAyhB,aAADqiC,GAAA7iC,EAEA0gC,EAAAA,cAfJC,iBAgBE9nC,EAAQxQ,KAAAA,IAASA,KAAAA,IAATA,GAA+BA,KAAAA,IAhBzC86C,IAtCF,MAwDE,QACE5nD,OAAAA,WAAAA,MACE,wBAAwBorC,EAAAA,GAAxB9yC,0CA1DN,OA+DAxC,IACMwnB,GAASA,IAAUjiB,KAAvB4oD,cACE5oD,KAAAoL,kBADyC6W,EAEhCjiB,KAAA4oD,gBAAJprD,EAAAqrD,gBACL7oD,KAAAoL,kBAD+C5N,EAAA6N,sBAMnDrL,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,GAEzCpgB,KAAAyL,oBAAJiO,IACE1Z,KAAAyL,kBADyCiO,MAO7C,GAAIuI,aAAAA,IAAyB8tB,EAA7B,GAA2C,CACzC/vC,KAAAorD,gBAAqB,CACnBC,QAASjrC,EADUkK,IAAA5Q,WAAAA,IADoB,OAQ3C,MAAM+yC,EAAe,CACnBrsC,EAAAA,SAAAA,uBAAAA,EADmBqL,GAEnBrL,EAAAA,SAAAA,uBAAyCkH,EAAzClH,EAAoDqL,EAFjCrC,IAIrB,IAAIlH,EAAOzQ,KAAAA,IAASg7C,EAAAA,GAATh7C,GAA6Bg7C,EAAAA,GA9HvC,IA+HGtqC,EAAM1Q,KAAAA,IAASg7C,EAAAA,GAATh7C,GAA6Bg7C,EAAAA,GA/HtC,IAiID,IAAA3b,EAA0B,CAIxB5uB,EAAOzQ,KAAAA,IAAAA,EAJiB,GAKxB0Q,EAAM1Q,KAAAA,IAAAA,EALkB,GAO1BzR,KAAAorD,gBAAqB,CACnBC,QAASjrC,EADUkK,IAEnBghC,SAAU,CAAAppC,KAAAA,EAAAC,IAAAA,GAFSzI,WAAAA,IAOvBgzC,gBAAAA,GACE,MAAM3nC,EAAe/kB,KADI4oD,cAEnBx9C,EAAoBpL,KAFDgpD,mBAGnB2D,EACJ9b,WAAAA,KAAAA,EACIp/B,KAAAA,MAAAA,IAAWsT,GADf8rB,IAJuBzlC,EAQnBsO,EAAakzC,EARMphC,GASzB,IAAIpJ,EAAgB,SATK1I,EAUzB0I,GAAiB,SAVQuqC,EAWzB,MAAME,EAAkB7sD,KAAAsnD,OAAY5tC,EAXX,GAYnBvR,EAAYnI,KAZOmI,UAanB2kD,EAAUD,EAAAA,aACd1kD,EAAAA,WAAuBykD,EADTC,EAEd1kD,EAAAA,UAAsBykD,EAfCnhC,GAiBnBshC,EAAUt7C,KAAAA,MAAWq7C,EAjBF,IAkBnBE,EAASv7C,KAAAA,MAAWq7C,EAlBD,IAmBzB1qC,GAAiB,IAAA2qC,EAAA,IAnBQC,EAqBzBhtD,KAAA4qD,UAAiB,CAAAlxC,WAAAA,EAEfuI,MAFe0qC,EAGfxqC,IAHe6qC,EAIf9qC,KAJe6qC,EAKf75C,SAAUlT,KALKm5B,eAAA/W,cAAAA,GAUnBtN,SACE,MAAMiV,EAAU/pB,KADTypD,mBAEDwD,EAAeljC,EAArBR,MACE2jC,EAAkBD,EAHbrmD,OAKP,GAAA,IAAIsmD,EAAuB,OAI3B,MAAMvC,EAAaptD,OAAO6Z,4BAAAA,IAAP7Z,sBAt+CvB,GAu+CU4vD,EAAe17C,KAAAA,IAAAA,EAAqB,EAAAy7C,EAVnC,GAYPltD,MAAKijB,EAAL+iC,OAAAmH,EAAkCpjC,EAZ3BC,KAcPhqB,KAAAqI,eAAAyS,sBAdOiP,GAgBP,IAAK/pB,KAAL8K,qBAAgC,CAC9B,MAAMsiD,EACJptD,KAAA6kD,cAAqBpxC,EAAAA,WAArB5P,OACC7D,KAAA4kD,cAAqBrxC,EAAAA,WAArB2T,MACClnB,KAAA4kD,cAAqBrxC,EAAAA,WAJK0T,UAK9B,IAAIomC,EAAYrtD,KALck5B,mBAM1Bo0B,GAN0B,EAQ9B,IAAA,MAAA9hD,KAAAyhD,EAAiC,CAC/B,GAAIzhD,EAAAA,QAAJ,IAAwB,MAGxB,GAAIA,EAAAA,KAAAA,GAAJ4hD,EAA6C,CAC3CE,GAD2C,EAAA,OAK/CA,IACED,EAAYJ,EAAAA,GADUzhC,IAGxBxrB,KAAA0nD,sBApB8B2F,GAuBhCrtD,KAAA0sD,gBAAqB3iC,EAvCd4B,OAwCP3rB,KAAAkC,SAAAoC,SAAA,iBAAyC,CACvCC,OADuCvE,KAEvC8hB,SAAU9hB,KAF6B4qD,YAKzC5qD,KA7CO6nD,mCAiDT0F,gBAAAA,GACE,OAAOvtD,KAAAmI,UAAA4kB,SADgB1C,GAIzB1V,QACE3U,KAAAmI,UADMwM,QAIJ64C,sBACF,MADoB,QACbxgC,iBAAiBhtB,KAAjBgtB,WAAAA,UAGLliB,2BACF,OAAO9K,KAAAmnD,wBAA+B90B,EAAAA,sBADbjE,WAIvBytB,iCACF,OAAO77C,KAAAmnD,wBAA+B90B,EAAAA,sBADPlE,SAI7BzH,mCACF,OAAO1mB,KAAA8K,sBAEH9K,KAAAmI,UAAA0kB,YAA6B7sB,KAAAmI,UAHA2hB,YAM/BrD,iCACF,OAAOzmB,KAAA8K,sBAEH9K,KAAAmI,UAAAslD,aAA8BztD,KAAAmI,UAHHyhB,aAWjC8jC,yBACE,IAAK1tD,KAALsL,WACE,MAAO,CAAEie,MADW,IAGtB,MAAMnJ,EAAWpgB,KAAAsnD,OAAYtnD,KAAAk5B,mBAJN,GAOjB7O,EAAUjK,EAPOkK,IASjBlJ,EAAO,CACXoK,GAAIpL,EADOoL,GAEXlE,EAAG+C,EAAAA,WAAqBA,EAFbG,WAGXiB,EAAGpB,EAAAA,UAAoBA,EAHZU,UAIX3J,KAJWhB,GAQb,MAAO,CAAEuL,MAAFvK,EAAewK,KAAfxK,EAA2BmI,MAAO,CAAlCnI,GAAA4I,IAFK,IAAA3mB,IAAQ,CAAC+c,EAfEoL,MAoBzBi+B,mBACE,GAAIzpD,KAAJ8K,qBAGE,OAAO9K,KAHsB0tD,yBAK/B,MAAMnkC,EACFvpB,KAAA4kD,cAAqBrxC,EAAAA,WAArB2T,KACIlnB,MAAK0mD,EADTsE,MAEIhrD,KAHRsnD,OAIE79B,EAAazpB,KAAA4kD,cAAqBrxC,EAAAA,WAJpCib,WAKE9E,EAAMD,GAAczpB,KAXLwtD,gBAajB,OAAO,EAAAhwD,EAAA6rB,oBAAmB,CACxBC,SAAUtpB,KADcmI,UAAAohB,MAAAA,EAGxBC,kBAHwB,EAAAC,WAAAA,EAAAC,IAAAA,IAY5BioB,cAAAA,GACE,IAAK3xC,KAALW,YACE,OADqB,EAGvB,KAEIpD,OAAAgzB,UAAA7W,IACAA,EADA,GAEAA,GAAc1Z,KAJlBsL,YAME,CACA3G,OAAAA,WAAAA,MAA2B,mBAAA+U,2BAC3B,OAFA,EAIF,OAAO1Z,KAAAypD,mBAAAz/B,IAAA+b,IAdiBrsB,GAoB1Bk4B,aAAAA,GACE,IAAK5xC,KAALW,YACE,OADqB,EAGvB,KAEIpD,OAAAgzB,UAAA7W,IACAA,EADA,GAEAA,GAAc1Z,KAJlBsL,YAME,CACA3G,OAAAA,WAAAA,MAA2B,kBAAA+U,2BAC3B,OAFA,EAIF,MAAM0G,EAAWpgB,KAAAsnD,OAAY5tC,EAdN,GAevB,OAAO1Z,MAAKijB,EAAL8iB,IAfgB3lB,GAkBzBrS,UACE,IAAK,IAAIrH,EAAJ,EAAWC,EAAK3G,KAAAsnD,OAArB1gD,OAAyCF,EAAzCC,EAAiDD,IAE7C1G,KAAAsnD,OAAA5gD,IACA1G,KAAAsnD,OAAA5gD,GAAAqyC,iBAAkCx2B,EAAAA,gBAFpCC,UAIExiB,KAAAsnD,OAAA5gD,GADAoH,QASNyyC,mBACE,IAAK,IAAI75C,EAAJ,EAAWC,EAAK3G,KAAAsnD,OAArB1gD,OAAyCF,EAAzCC,EAAiDD,IAC3C1G,KAAAsnD,OAAJ5gD,IACE1G,KAAAsnD,OAAA5gD,GADkBq6C,kBAUxBz9C,QAAA8c,GACE,GAAIA,EAAJ1M,QACE,OAAO0M,EADa1M,QAGtB,IACE,MAAMA,QAAgB1T,KAAAW,YAAA25B,QAAyBla,EAD7CoL,IAEGpL,EAAL1M,SACE0M,EAAAA,WADqB1M,GAGlB1T,KAAA4H,YAAA8nC,kBAAmCh8B,EAAxC62C,MACEvqD,KAAA4H,YAAAgoC,aAA8BxvB,EAA9BoL,GAA2C9X,EADS62C,KAGtD,OARE72C,EASF,MAAA7O,GACAF,OAAAA,WAAAA,MAAAA,mCADeE,GAEf,OAFe,MAMnBu8C,GAAAA,GAAyB,IAAAC,EAAAC,EACvB,GAAA,KAAIv3B,QAAAA,EAAAA,EAAAA,aAAAA,IAAAA,OAAAA,EAAAA,EAAAA,IACF,OAD2B,EAEtB,IAAIA,QAAAA,EAAAA,EAAAA,YAAAA,IAAAA,OAAAA,EAAAA,EAAAA,MAAqB/pB,KAAzBsL,WACL,OAD+C,EAGjD,OAAQtL,KAAR4kD,aACE,KAAKrxC,EAAAA,WAAL2T,KACE,OAAOlnB,MAAK0mD,EAFhBqE,WAGE,KAAKx3C,EAAAA,WAALib,WACE,OAAOxuB,KAAAga,OAJX6P,MAMA,OAAO7pB,KAAAga,OAZgB6T,KAkBzB8/B,GAAAA,GACE,IAAA,MAAAniC,KAAAgtB,EAA6B,CAC3B,MAAMp4B,EAAWpgB,KAAAsnD,OAAY97B,EADF,GAE3BpL,MAAAA,GAAAA,EAAAA,0BAF2B,GAI7B,IAAA,MAAAA,KAAuBpgB,MAAKijB,EACtBu1B,EAAAA,IAAep4B,EAAnBoL,KAIApL,EAAAA,0BALmC,GASvClW,eAAAA,GACE,MAAM+iD,EAAejV,GAAyBh4C,KADVypD,mBAE9BjI,EAAcxhD,MAAKohD,EAFW6L,GAG9B/U,EACJl4C,KAAA6kD,cAAqBpxC,EAAAA,WAArB5P,MACA7D,KAAA4kD,cAAqBrxC,EAAAA,WALaib,WAO9BpO,EAAWpgB,KAAAqI,eAAA4vC,mBAAAgV,EAEfjtD,KAFesnD,OAAA9F,EAPmBtJ,GAapCl4C,MAAK2tD,EAA0BV,EAbKjjC,KAepC,GAAA5J,EAAc,CACZpgB,MAAKyhD,EAALrhC,GAAA/b,MAAyC,KACvCrE,KAAAqI,eAAAywC,WAD6C14B,MAG/C,OAJY,EAMd,OArBoC,EAiCtCwtC,uBAAAA,EAAAA,EAAAA,EAIEC,GAJFD,EAAAA,EAAAA,GAQE,OAAO,IAAAtI,EAAAwI,iBAAqB,CAAAC,aAAAA,EAAA7rD,SAAAA,EAAAg/B,UAAAA,EAAAuf,SAAAA,EAK1BoN,sBAAsB7tD,KAAA8K,sBALI+iD,EAAAG,YAAAA,IAiB9BC,sBAAAA,EAAAA,GACE,OAAO,IAAA5I,EAAA6I,gBAAoB,CAAAhsD,SAAAA,EAAAg/B,UAAAA,EAGzBx5B,eAAgB1H,KAAA8K,qBAAA,KAAmC9K,KAH1B0H,iBAwB7BymD,6BAAAA,EAAAA,EAGE9gD,EAHF8gD,KAIEzzD,EAJFyzD,GAKEj2C,GALFi2C,EAMEhsD,EANFgsD,EAAAA,SAOE9zD,EAPF8zD,KAQEC,EARFD,KASEzS,EATFyS,KAUEE,EAVFF,KAWEG,EAXFH,MAYE,IAAAnhD,EAAAsD,EAAAmL,EAAA8yC,EACA,OAAO,IAAAvJ,EAAAwJ,uBAA2B,CAAAnD,QAAAA,EAAA33C,QAAAA,EAGhCrG,kBACEA,IAAAA,QAAAA,EAAqBrN,KAAAW,mBAArB0M,IAAAA,OAAAA,EAAqBL,EAJSK,mBAAA3S,mBAAAA,EAAAwd,YAAAA,EAOhCtQ,YAAa5H,KAPmB4H,YAQhC/F,gBAAiB7B,KARe6B,gBAAAM,KAAAA,EAUhC9H,gBAAiBA,GAAmB2F,KAVJ3F,gBAWhC+zD,oBACEA,IAAAA,QAAAA,EAAuBpuD,KAAAW,mBAAvBytD,IAAAA,OAAAA,EAAuB99C,EAZOm+C,gBAahCJ,oBACEA,IAAAA,QAAAA,EAAuBruD,KAAAW,mBAAvB0tD,IAAAA,OAAAA,EAAuB5yC,EAdOu+B,mBAehC0B,WAAYA,IAAAA,QAAAA,EAAc17C,KAAA8mD,yBAAdpL,IAAAA,OAAAA,EAAc6S,EAfM7S,YAAA4S,oBAAAA,IA2BpCI,sBAAAA,EAAAA,EAAwCrhD,EAAxCqhD,MAAkE,IAAAC,EAChE,OAAO,IAAApJ,EAAAqJ,gBAAoB,CAAAvD,QAAAA,EAAA33C,QAAAA,EAGzBrG,kBACEA,IAAAA,QAAAA,EAAqBrN,KAAAW,mBAArB0M,IAAAA,OAAAA,EAAqBshD,EAJEthD,mBAKzBzF,YAAa5H,KALY4H,cAa7BinD,6BAAAA,GACE,OAAO,IAAAzJ,EAAA0J,uBAA2B,CADEp7C,QAAAA,IAUlCmB,wBACF,MAAMy1C,EAAgBtqD,KAAAsnD,OADA,GAEtB,IAAK,IAAI5gD,EAAJ,EAAWC,EAAK3G,KAAAsnD,OAArB1gD,OAAyCF,EAAzCC,IAAAD,EAAsD,CACpD,MAAM0Z,EAAWpgB,KAAAsnD,OADmC5gD,GAEpD,GACE0Z,EAAAA,QAAmBkqC,EAAnBlqC,OACAA,EAAAA,SAAoBkqC,EAFtBlhC,OAIE,OADA,EAIJ,OAXsB,EAkBxBjO,mBACE,OAAOnb,KAAAsnD,OAAAyH,KAAgB3uC,IACrB,MAAMqgC,EAAWrgC,EAAAA,QAAAA,YAA6B,CAAE6B,MADf,IAGjC,OAAKjiB,KAAD5F,wBAA+B0xB,EAAAA,EAAAA,uBAAnC20B,GACS,CACLt3B,MAAOs3B,EADFt3B,MAELC,OAAQq3B,EAFHr3B,OAGLlW,SAAUutC,EAHLvtC,UAOF,CACLiW,MAAOs3B,EADFr3B,OAELA,OAAQq3B,EAFHt3B,MAGLjW,UAAWutC,EAAAvtC,SAAD,IAHL,QAWPmI,mCACF,OAAKrb,KAALW,YAGKX,KAALsgD,8BAKOtgD,KAT0BsgD,8BAOxBtgD,KAAAW,YAHgCwuC,2BAFhCjpC,QAAAA,QADc,MAerBmV,iCAAJzQ,GACE,KAAMA,aAAN1E,SACE,MAAM,IAAAnJ,MAAU,yCAAA6N,KAElB,IAAK5K,KAALW,YAAuB,OAGvB,IAAKX,KAALsgD,8BAAyC,OAKzCtgD,KAAAsgD,8BAZwC11C,EAcxC,MAAMq1C,EAAa,CAAE5kC,6BAdmBzQ,GAexC,IAAA,MAAAwV,KAAuBpgB,KAAvBsnD,OACElnC,EAAAA,OADkC6/B,GAGpCjgD,KAlBwC8U,SAoBxC9U,KAAAkC,SAAAoC,SAAA,+BAAuD,CACrDC,OADqDvE,KAAA4K,QAAAA,IASrD0I,iBACF,OAAOtT,KADQ4kD,YASbtxC,eAAJ6N,GACE,GAAInhB,KAAA4kD,cAAJzjC,EAAA,CAGA,KAAKjH,EAAAA,EAAAA,mBAALiH,GACE,MAAM,IAAApkB,MAAU,wBAAAokB,KAElB,KAAInhB,KAAAsL,WAAkBm6C,EAAtBC,wBAAA,CAGA1lD,KAAA6qD,oBAA2B7qD,KAVR4kD,YAYnB5kD,KAAA4kD,YAZmBzjC,EAanBnhB,KAAAkC,SAAAoC,SAAA,oBAA4C,CAAEC,OAAFvE,KAAAmhB,KAAAA,IAE5CnhB,KAAA8kD,kBAA0C9kD,KAfvBk5B,sBAkBrB4rB,kBAAkBprC,EAAlBorC,MACE,MAAMxxC,EAAatT,KAAnB4kD,YACEl/C,EAAS1F,KAFwB0F,OAInCA,EAAAA,UAAAA,OAAAA,mBAEE4N,IAAeC,EAAAA,WANkBib,YAQnC9oB,EAAAA,UAAAA,OAAAA,gBAAyC4N,IAAeC,EAAAA,WARrBkb,SAUnC,GAAKzuB,KAADW,aAAJ+Y,EAAA,CAIIpG,IAAeC,EAAAA,WAAnB2T,KACElnB,MAAKwqD,IACIxqD,KAAA6qD,sBAA6Bt3C,EAAAA,WAAjC2T,MAGLlnB,KAHuD+kD,oBAQrD/kD,KAAAgpD,oBAA2Br3C,MAAM3R,KAArCgpD,qBACEhpD,KAAA+oD,UAAe/oD,KAAfgpD,oBAD6D,GAG/DhpD,KAAA0nD,sBAAAhuC,GA3BmC,GA4BnC1Z,KA5BmC8U,UAkCjCtB,iBACF,OAAOxT,KADQ6kD,YASbrxC,eAAJ2N,GACE,GAAInhB,KAAA6kD,cAAJ1jC,EAAA,CAGA,KAAKhH,EAAAA,EAAAA,mBAALgH,GACE,MAAM,IAAApkB,MAAU,wBAAAokB,KAElBnhB,KAAA6kD,YAPmB1jC,EAQnBnhB,KAAAkC,SAAAoC,SAAA,oBAA4C,CAAEC,OAAFvE,KAAAmhB,KAAAA,IAE5CnhB,KAAA+kD,kBAA0C/kD,KAVvBk5B,qBAarB6rB,kBAAkBrrC,EAAlBqrC,MACE,IAAK/kD,KAALW,YAAuB,OAGvB,MAAM+E,EAAS1F,KAAf0F,OACEslD,EAAQhrD,KALyBsnD,OAOnC,GAAItnD,KAAA4kD,cAAqBrxC,EAAAA,WAAzB2T,KACElnB,MAAKwqD,QACA,CAEL9kD,EAAAA,YAFK,GAIL,GAAI1F,KAAA6kD,cAAqBpxC,EAAAA,WAAzB5P,KACE,IAAK,IAAI6C,EAAJ,EAAWC,EAAKqkD,EAArBpkD,OAAmCF,EAAnCC,IAAAD,EACEhB,EAAAA,YAAmBslD,EAAAA,GAD2B1gC,SAG3C,CACL,MAAM6gC,EAASnrD,KAAA6kD,YADV,EAEL,IAAI5qC,EAFC,KAGL,IAAK,IAAIvT,EAAJ,EAAWC,EAAKqkD,EAArBpkD,OAAmCF,EAAnCC,IAAAD,EAAgD,CAC9C,GAAA,OAAIuT,EAAiB,CACnBA,EAAS3Z,SAAAA,cADU,OAEnB2Z,EAAAA,UAFmB,SAGnBvU,EAAAA,YAHmBuU,QAId,GAAIvT,EAAAA,IAAJykD,EAAsB,CAC3BlxC,EAASA,EAAAA,WADkB,GAE3BvU,EAAAA,YAF2BuU,GAI7BA,EAAAA,YAAmB+wC,EAAAA,GAT2B1gC,OAepDtqB,KAnCmC6nD,mCAsCnC,GAAAnuC,EAAA,CAMI1Z,KAAAgpD,oBAA2Br3C,MAAM3R,KAArCgpD,qBACEhpD,KAAA+oD,UAAe/oD,KAAfgpD,oBAD6D,GAG/DhpD,KAAA0nD,sBAAAhuC,GA/CmC,GAgDnC1Z,KAhDmC8U,UAsDrCk6C,gBAAAA,EAAmChrC,GAAnCgrC,GACE,OAAQhvD,KAAR4kD,aACE,KAAKrxC,EAAAA,WAALkb,QAAyB,CACvB,MAAMlF,MAAAA,GAAYvpB,KAAlBypD,mBACEz1C,EAAa,IAFQiY,IAKvB,IAAA,MAAWT,GAAAA,EAAAC,EAAAA,EAAAzc,QAAAA,EAAA0c,aAAXA,KAAAnC,EAAsD,CACpD,GAAIva,IAAAA,GAAiB0c,EAArB,IAAyC,SAGzC,IAAIujC,EAASj7C,EAAAA,IAJuCyX,GAKpDwjC,GACEj7C,EAAAA,IAAAA,EAAmBi7C,IADR,IAGbA,EAAAA,KARoDzjC,GAWtD,IAAA,MAAAyjC,KAAqBj7C,EAArBk7C,SAA0C,CACxC,MAAMpgC,EAAemgC,EAAAA,QADmBxjD,GAExC,IAAA,IAAIqjB,EAAqB,SAGzB,MAAMvjB,EAAW0jD,EALuBroD,OAMxC,GAAA,IAAI2E,EAAgB,MAIpB,GAAAyY,EACE,IAAK,IAAItd,EAAIooB,EAAR,EAA0BnoB,EAA/B,EAAuCD,GAAvCC,EAAgDD,IAAK,CACnD,MAAM2mD,EAAY4B,EAAlBvoD,GACEyoD,EAAaF,EAAOvoD,EAAPuoD,GAFoC,EAGnD,GAAI5B,EAAJ8B,EACE,OAAO1jD,EADmB0jD,OAK9B,IAAK,IAAIzoD,EAAIooB,EAAR,EAA0BnoB,EAA/B4E,EAA8C7E,EAA9CC,EAAsDD,IAAK,CACzD,MAAM2mD,EAAY4B,EAAlBvoD,GACEyoD,EAAaF,EAAOvoD,EAAPuoD,GAF0C,EAGzD,GAAI5B,EAAJ8B,EACE,OAAOA,EADmB1jD,EAMhC,GAAAuY,EAAc,CACZ,MAAMs0B,EAAU2W,EADJ,GAEZ,GAAI3W,EAAJ7sC,EACE,OAAOA,EAAAA,EADwB,MAG5B,CACL,MAAM8sC,EAAS0W,EAAO1jD,EADjB,GAEL,GAAIgtC,EAAJ9sC,EACE,OAAO8sC,EAAAA,EADuB,EAnCM,MAhBnB,MA2DzB,KAAKhlC,EAAAA,WAALib,WAA4B,MAG5B,KAAKjb,EAAAA,WA/DP2T,KAgEE,KAAK3T,EAAAA,WAAL0T,SAA0B,CACxB,GAAIjnB,KAAA6kD,cAAqBpxC,EAAAA,WAAzB5P,KAA0C,MAG1C,MAAMsnD,EAASnrD,KAAA6kD,YAJS,EAMxB,GAAI7gC,GAAYvY,EAAAA,IAAhB0/C,EAAkD,MAE3C,IAAInnC,GAAavY,EAAAA,IAAjB0/C,EAAmD,MAG1D,MAAM5hC,MAAAA,GAAYvpB,KAAlBypD,mBACE0F,EAAanrC,EAAWvY,EAAXuY,EAAmCvY,EAZ1B,EAcxB,IAAA,MAAW+f,GAAAA,EAAAxc,QAAAA,EAAA0c,aAAXA,KAAAnC,EACE,GAAIiC,IAAJ2jC,EAAA,CAGA,GAAIngD,EAAAA,GAAJ,MAAmB0c,EACjB,OADuC,EAJQ,MAd3B,OA0B5B,OA3FmD,EAkGrDrI,WACE,MAAM5X,EAAoBzL,KAA1Bk5B,mBACE5tB,EAAatL,KAFNsL,WAIT,GAAIG,GAAJH,EACE,OADmC,EAGrC,MAAM8jD,EACJpvD,KAAAgvD,gBAAAvjD,GAAA,IARO,EAUTzL,KAAAyL,kBAAyBgG,KAAAA,IAAShG,EAATgG,EAVhBnG,GAWT,OAXS,EAkBXgY,eACE,MAAM7X,EAAoBzL,KADbk5B,mBAGb,GAAIztB,GAAJ,EACE,OAD0B,EAG5B,MAAM2jD,EACJpvD,KAAAgvD,gBAAAvjD,GAAA,IAPW,EASbzL,KAAAyL,kBAAyBgG,KAAAA,IAAShG,EAATgG,EATZ,GAUb,OAVa,EAiBf1G,cAAcC,EAAdD,GACE,IAAIygD,EAAWxrD,KADQ4oD,cAGnByG,EAAW9xD,OAAO6Z,4BAAAA,IAHC,YAIvBi4C,IACEA,EADa7xD,EAAA8xD,WAGf,EAAG,CACD9D,GAAYA,EAADhuD,EAAA+xD,qBAAAC,QADV,GAEDhE,EAAW/5C,KAAAA,KAAAA,GAAU+5C,GAFpB,GAGDA,EAAW/5C,KAAAA,IAAAA,EAHV+5C,WAIMxgD,EAAA,GAAewgD,EAXD6D,GAavBrvD,KAAAoL,kBAbuBogD,EAoBzBtgD,cAAcF,EAAdE,GACE,IAAIsgD,EAAWxrD,KADQ4oD,cAGnB6G,EAAWlyD,OAAO6Z,4BAAAA,IAHC,YAIvBq4C,IACEA,EADajyD,EAAAkyD,WAGf,EAAG,CACDlE,GAAYA,EAADhuD,EAAA+xD,qBAAAC,QADV,GAEDhE,EAAW/5C,KAAAA,MAAAA,GAAW+5C,GAFrB,GAGDA,EAAW/5C,KAAAA,IAAAA,EAHV+5C,WAIMxgD,EAAA,GAAewgD,EAXDiE,GAavBzvD,KAAAoL,kBAbuBogD,uHC9tE3B,IAAA5tD,EAAAH,EAAA,GAAAwnD,EAAAxnD,EAAA,6BA4CA,MAAA+wD,uBAIE1xD,aAAYuuD,QAAAA,EAAA33C,QAAAA,EAAA9L,YAAAA,EAAA/F,gBAAAA,EAAAwL,kBAKVA,EALU,KAAA3S,mBAMVA,EANU,GAAAwd,YAOVA,GAPU,EAAA/V,KAQVA,EARU8iD,EAAA8B,SAAA1sD,gBASVA,GATU,EAAA+zD,oBAUVA,EAVU,KAAAC,oBAWVA,EAXU,KAAA3S,WAYVA,EAZU,KAAA4S,oBAaVA,EAbFxxD,OAeEkD,KAAAqrD,QADCA,EAEDrrD,KAAA0T,QAFCA,EAGD1T,KAAA4H,YAHCA,EAID5H,KAAA6B,gBAJCA,EAKD7B,KAAAtF,mBALCA,EAMDsF,KAAAkY,YANCA,EAODlY,KAAAmC,KAPCA,EAQDnC,KAAAqN,kBARCA,EASDrN,KAAA3F,gBATCA,EAUD2F,KAAA2vD,qBAVCvB,EAWDpuD,KAAA4vD,qBAXCvB,EAYDruD,KAAAs5C,YAZCoC,EAaD17C,KAAA6vD,qBAbCvB,EAeDtuD,KAAAsqB,IAfC,KAgBDtqB,KAAA8vD,YAhBC,EAyBHxsD,aAAAm9C,EAAuBsP,EAAvB,WACE,MAAMC,EAAcvB,GAAd,EAAoCwB,EAApC,YACE/pD,QAAAuQ,IAAY,CAChBzW,KAAA0T,QAAAw8C,eAA4B,CADZH,OAAAA,IAEhB/vD,KAFgB2vD,qBAGhB3vD,KAHgB4vD,uBAMpB,GAAI5vD,KAAA8vD,YAAJ,IAAuBE,EAAAA,OAA0B,OAIjD,MAAM5hD,EAAa,CACjBqyC,SAAUA,EAAAA,MAAe,CAAE0P,UADV,IAEjB7lC,IAAKtqB,KAFYsqB,IAAA0lC,YAAAA,EAIjBxkD,KAAMxL,KAJW0T,QAKjBhZ,mBAAoBsF,KALHtF,mBAMjBwd,YAAalY,KANIkY,YAOjBtQ,YAAa5H,KAPI4H,YAQjB/F,gBAAiB7B,KARA6B,gBASjBwL,kBAAmBrN,KATFqN,kBAUjBhT,gBAAiB2F,KAVA3F,gBAAAo0D,aAAAA,EAAAwB,aAAAA,EAajBvU,WAAY17C,KAbKs5C,YAcjBgV,oBAAqBtuD,KAdJ6vD,sBAiBnB,GAAI7vD,KAAJsqB,IAGE8lC,EAAAA,gBAAAA,OAHYhiD,OAIP,CAGLpO,KAAAsqB,IAAWhqB,SAAAA,cAHN,OAILN,KAAAsqB,IAAA+lC,UAJK,kBAKLrwD,KAAAqrD,QAAAlzB,YAAyBn4B,KALpBsqB,KAMLlc,EAAAA,IAAiBpO,KANZsqB,IAQL8lC,EAAAA,gBAAAA,OARKhiD,GASLpO,KAAAmC,KAAAiC,UAAoBpE,KATfsqB,MAaT04B,SACEhjD,KAAA8vD,YADO,EAIT9jD,OACOhM,KAALsqB,MAGAtqB,KAAAsqB,IAAAqN,QAJK,iGCtBT,SAAA24B,cAAAC,GACE,OAAOC,EAAmBD,MAAAA,OAAnBC,EAAmBD,EAAnBC,gBADwBD,qCAjGjC,MAAME,EAAuB,CAC3BC,SAD2B,oBAE3BC,cAF2B,qCAI3BC,uBAJ2B,oCAK3BC,uBAL2B,oCAM3BC,gCAN2B,qBAO3BC,0CAP2B,KAQ3BC,+CAR2B,KAS3BC,mDAT2B,WAU3BC,oDAV2B,YAW3BC,sCAX2B,KAY3BC,sCAZ2B,KAa3BC,0CAb2B,SAc3BC,yCAd2B,QAe3BC,+CAf2B,oDAiB3BC,oDAjB2B,8DAmB3BC,mCAnB2B,MAoB3BC,kCApB2B,KAsB3BC,uBAtB2B,gBAwB3B,uBAxB2B,iBAyB3B,qCAzB2B,gEA4B3BC,kBA5B2B,oBA6B3BC,cA7B2B,gBA8B3BC,iBA9B2B,gBA+B3BC,kBA/B2B,6BAiC3BC,iBAjC2B,iDAkC3BC,oBAlC2B,8CAmC3B,wBAnC2B,iCAoC3B,0BApC2B,mCAqC3B,8BArC2B,4BAsC3B,gCAtC2B,8BAuC3BC,eAvC2B,mBAyC3BC,mBAzC2B,yCA0C3BC,cA1C2B,uBA2C3BC,YA3C2B,mBA4C3BC,WA5C2B,iBA6C3BC,WA7C2B,iBA8C3BC,gBA9C2B,8CAgD3BC,iBAhD2B,aAiD3BC,eAjD2B,WAkD3BC,gBAlD2B,iBAmD3BC,kBAnD2B,cAoD3BC,mBApD2B,aAsD3BvwC,QAtD2B,WAuD3BwwC,cAvD2B,2CAwD3BC,mBAxD2B,iCAyD3BC,mBAzD2B,oBA0D3BC,0BA1D2B,8BA4D3BC,uBA5D2B,4DA8D3BC,mBA9D2B,qDA+D3BC,mBA/D2B,6DAmE7B,SAAAC,gBAAAz2D,EAAAqR,GACE,OAAArR,GACE,IAAA,mBACEA,EAAM,oBAAoBqR,IAAAA,EAAAA,MAAAA,MAApB,WAFV,MAIE,IAAA,yBACErR,EAAM,0BAA0BqR,IAAAA,EAAAA,MAAAA,MAA1B,WAGV,OAAOwiD,EAAAA,IAT2B,GAYpC,MAAMD,EAAqB,CACzB8C,GADyB,QAEzBC,GAFyB,QAGzBC,GAHyB,QAIzBC,GAJyB,QAKzBC,GALyB,QAMzBC,GANyB,QAOzBC,GAPyB,QAQzBC,GARyB,QASzBC,GATyB,QAUzBC,GAVyB,QAWzBC,GAXyB,QAYzBC,GAZyB,QAazBC,GAbyB,QAczBC,GAdyB,SAoC3B,MAAMpN,EAAW,CACfzjD,YAAA,SAAoB,QAIpBA,aAAA,SAAqB,MAIrBA,IAAA,MAAA1G,EAAeqR,EAAf,KAA4BgB,EAAWokD,gBAAAA,EAAvCplD,KAtBF,SAAAmmD,gBAAAz1B,EAAA1wB,GACE,OAAAA,EAGO0wB,EAAAC,QAAA,wBAAqC,CAAAnoB,EAAAxZ,IACnCA,KAAAA,EAAegR,EAAfhR,GAA4B,KAAAA,EADsB,OAHhD0hC,EAsBFy1B,CAAAA,EAD0DnmD,GAInE3K,gBAAA+mB,+FC/IF,MAAAgqC,KACIv3D,YAAAA,EAAAA,GACIkD,KAAA4hB,MAAa,CACT/H,MADS,EAETy6C,KAFS,GAGTznB,SAAU,CAAEvlB,EAAF,EAAQmE,EAAR,GACV8oC,UAJS,EAKTC,iBALS,GAObx0D,KAAAy0D,eARyBC,EASzB10D,KAAA20D,kBAAyB30D,KATAy0D,eAUzBz0D,KAAAkV,OAVyBA,EAiB7B0/C,WAAAA,GACI50D,KAAAy0D,eADgBC,EAEhB10D,KAAA20D,kBAFgBD,EASpBG,kBAAAA,GACI70D,KAAA20D,kBADuBD,EAQ3BI,YAAAA,GACI90D,KAAA4hB,MAAAirB,SADiBkoB,EAQrBC,SAAAA,GACIh1D,KAAA4hB,MAAA/H,MADYA,EAQhBo7C,QAAAA,GACIj1D,KAAA4hB,MAAA0yC,KADUA,EAQdY,oBAAAA,GACIl1D,KAAA4hB,MAAA4yC,iBADuB36C,EAQ3Bs7C,aAAAA,GACIn1D,KAAA4hB,MAAA2yC,UADgB16C,EAEhB7Z,KAAA4hB,MAAA4yC,iBAFgB36C,EASpBu7C,eAAAA,GACIp1D,KAAAi8B,YADwBA,EAM5Bo5B,oBACI,OAAOr1D,KADS20D,kBAMpBW,aACI,OAAOt1D,KADEy0D,eAMbc,eACI,OAAOv1D,KAAA4hB,MADI2yC,WAQnB,MAAAiB,kBAAAnB,KACIv3D,YAAAA,EAAAA,EAAAA,GACIo5B,MAAAhhB,EAD+Bw/C,GAE/B10D,KAAA+iD,MAF+B,KAG/B/iD,KAAAy1D,QAH+B,EAI/Bz1D,KAAA01D,aAJ+B,EAK/B11D,KAAA+iD,MAAa,IALkB4S,MAM/B31D,KAAA+iD,MAAA6S,IAN+B71C,EAQnC2jC,KAAAA,GACI,MAAMt7B,EAAMpoB,KAAAkV,OADE2gD,aAERd,EAAU/0D,KAAAkV,OAAA4gD,gBAA4B91D,KAAA4hB,MAF9BirB,UAGRmV,EAAYhiD,KAAAkV,OAAA6gD,UAHJ/T,UAIRwK,EAAaxsD,KAAAkV,OAAA6gD,UAJL3sC,OAKdhB,EALc7a,OAMd6a,EAAAA,UAAc2sC,EAAd3sC,EAAyB2sC,EANXtpC,GAOdrD,EAPc4tC,YAQd,IAAA,IAAAnuC,KAAc7nB,KAAA4hB,MAAd0yC,KACI,GAAA,OAAIzsC,EAAY,CACZA,EAAI7nB,KAAAkV,OAAA4gD,gBADQjuC,GAEZO,EAAAA,OAAWP,EAAAA,EAAMktC,EAAjB3sC,EAA4BP,EAAAA,EAAMktC,EAFtBtpC,GAKpBrD,EAAAA,OAAWpoB,KAAA4hB,MAdG/H,OAeduO,EAfc6tC,OAgBTj2D,KAALy1D,OAIIrtC,EAAAA,UAAcpoB,KAAdooB,MAAAA,EAAAA,EAAAA,EADCokC,GAFDxsD,KAAAk2D,WAAA9tC,EAAqB,CAAEd,EAAF,EAAQmE,EAAR,GAArBu2B,EADcwK,GAMlBpkC,EAtBcw5B,UAwBlBuU,WAAAA,GACI,MAAM9wC,EAAOrlB,KAAAkV,OADE6gD,UAET3tC,EAAMpoB,KAAAkV,OAFG2gD,aAGT7T,EAAY38B,EAHH28B,UAITwK,EAAannC,EAJJ+D,OAKT9B,EAAI8uC,IAAAA,EAA2B/wC,EAAAA,KAAYA,EAAvC+wC,UAAwD/wC,EALnDnD,KAMTuJ,EAAIpG,EANKlD,IAOVniB,KAALy1D,OAIIrtC,EAAAA,UAAcpoB,KAAdooB,MAAAA,EAAAA,EAAAA,EADCokC,GAFDxsD,KAAAk2D,WAAA9tC,EAAqB,CAAAd,EAAAA,EAAAmE,EAAAA,GAArBu2B,EADcwK,GAOtB0J,WAAAA,EAAAA,EAAAA,EAAAA,GACI9tC,EAD6C4tC,YAE7C5tC,EAAAA,YAF6C,qBAG7CA,EAAAA,UAH6C,qBAI7CA,EAAAA,UAJ6C,EAK7CA,EAAAA,KAASiuC,EAAAA,EAATjuC,EAAyBiuC,EAAAA,EAAzBjuC,EAAyC45B,EAAzC55B,EAAwDokC,EALX,GAM7CpkC,EAN6CkuC,SAO7CluC,EAP6CmuC,OAQ7C,MAAMC,EAAc,CAChBlvC,EAAG+uC,EAAAA,EAAarU,EADA,EAEhBv2B,EAAG4qC,EAAAA,EAAa7J,EAFA,GAIpBpkC,EAZ6C4tC,YAa7C5tC,EAAAA,UAb6C,GAc7CA,EAAAA,IAAQouC,EAARpuC,EAAuBouC,EAAvBpuC,EAAAA,GAA0CpoB,KAA1CooB,aAA8D,EAAI3W,KAAL2d,GAAA,EAAoBpvB,KAdpC01D,cAe7CttC,EAf6CkuC,SAgB7CluC,EAhB6CquC,YAiB7Cz2D,KAAA01D,cAjB6C,IAkBzC11D,KAAA01D,cAAqB,EAAIjkD,KAA7B2d,KACIpvB,KAAA01D,aADkC,GAI1CtmD,OACSpP,KAALy1D,SACIz1D,KAAA+iD,MAAA2T,OAAoB,KAChB12D,KAAAy1D,QADsB,IAIlCkB,mBACI,OADe32D,KAGnB42D,mBACI,OADe52D,KAGnB62D,sBAQJ,MAAAC,eACIh6D,YAAAA,EAAAA,GAEIkD,KAAAgrD,MAFqB,GAIrBhrD,KAAA4lC,iBAJqB,EAMrB5lC,KAAA+2D,mBANqB,EAQrB/2D,KAAAg3D,gBARqB,GAUrBh3D,KAAAi3D,eAVqB,GAWrBj3D,KAAAkV,OAXqBA,EAYrBlV,KAAAk3D,IAZqBA,EAarBl3D,KAAA4lC,iBAbqB,EAcrB5lC,KAAAm3D,YAAmBn3D,KAAAk3D,IAAAE,cAdEnP,UAmBzBv6C,UACI1N,KAAAgrD,MADM,GAMVqM,eACIr3D,KAAAg3D,gBADW,GAEXh3D,KAAAi3D,eAFW,GAGX,IAAK,IAAIvwD,EAAT,EAAgBA,EAAI1G,KAAAgrD,MAApBpkD,OAAuCF,IACnC1G,KAAAi3D,eAAAz9C,KAAyB,CADe9S,IAG5C,IAAI4wD,EANO,EAOX,GAAIt3D,KAAJm3D,YAAsB,CAClBn3D,KAAAgrD,MAAA,GAAA4J,WADkB,QAElB50D,KAAAg3D,gBAAAx9C,KAA0B,CAFR89C,IAGlBA,IAEJ,IAAK,IAAI5wD,EAAT4wD,EAAoB5wD,EAAI1G,KAAAgrD,MAAxBpkD,OAA2CF,GAA3C,EACI,GAAIA,EAAI1G,KAAAgrD,MAAApkD,OAAR,EACI5G,KAAAg3D,gBAAAx9C,KAA0B,CAAA9S,EAAIA,EAAJ,QACzB,CACD1G,KAAAg3D,gBAAAx9C,KAA0B,CADzB9S,IAED1G,KAAAgrD,MAAAtkD,GAAAkuD,WAFC,SASb2C,YACI,MAAO,cAAAv3D,KAAAkV,OAAAsiD,iBACDx3D,KADCg3D,gBAEDh3D,KAHEi3D,eAUZQ,qBAAAA,GACI,MAAMx9C,EAASja,KADWu3D,YAE1B,IAAK,IAAI7wD,EAAT,EAAgBA,EAAIuT,EAApBrT,OAAmCF,IAC/B,GAAI+qC,IAAYx3B,EAAAA,GAAZw3B,IAA4BA,IAAYx3B,EAAAA,GAA5C,GACI,OAJkBvT,EAK1B,OAL0B,KAU9BgxD,eACI,OAAO13D,KAAAgrD,MADIpkD,OAMf+wD,WACI,OAAO33D,KADAgrD,MAQX1wB,QAAAA,GACI,GAAI4G,GAAAA,GAAkBA,EAAYlhC,KAAAgrD,MAAlCpkD,OACI,OAAO5G,KAAAgrD,MAD0C9pB,GAGrD,MAAM,IAAAnkC,MAJS,uBAWnB66D,OAAAA,GACI,MAAMC,EAAM73D,KAAAgrD,MAAArC,QADAzqB,GAEZ,OAAI25B,EAAM73D,KAAAgrD,MAAApkD,OAAV,EACW5G,KAAAgrD,MAAW6M,EAHV,GAAA,KAWhBC,OAAAA,GACI,MAAMD,EAAM73D,KAAAgrD,MAAArC,QADAzqB,GAEZ,OAAI25B,EAAJ,EACW73D,KAAAgrD,MAAW6M,EAHV,GAAA,KAWhBE,gBAAAA,GACI,MAAM75B,EAAUl+B,KADO+2D,mBAEvB,GAAA,aAAI/2D,KAAAkV,OAAAsiD,iBACA,OAAOQ,IAAAA,EACDh4D,KAAAgrD,MAAA9sB,GADC85B,mBAEDh4D,KAAAgrD,MAAW9sB,EAH2C,GAK3D,CACD,MAAMjkB,EAAS+9C,IAAAA,EACTh4D,KAAAu3D,YAAiBr5B,EADR85B,GAETh4D,KAAAu3D,YAAiBr5B,EAHtB,GAID,OAAA,IAAIjkB,EAAAA,QAEG+9C,IAAAA,EADIh4D,KAAAgrD,MAAW/wC,EALrB,IAQKja,KAAAgrD,MAAW/wC,EARhB,KAgBTg+C,cAAAA,GACI,MAAM/5B,EAAUl+B,KADK+2D,mBAErB,GAAA,aAAI/2D,KAAAkV,OAAAsiD,iBACA,OAAOQ,IAAAA,EACDh4D,KAAAgrD,MAAW9sB,EADV85B,GAEDh4D,KAAAgrD,MAAW9sB,EAH2C,GAK3D,CACD,MAAMjkB,EAAS+9C,IAAAA,EACTh4D,KAAAu3D,YAAiBr5B,EADR85B,GAETh4D,KAAAu3D,YAAiBr5B,EAHtB,GAID,OAAA,IAAIjkB,EAAAA,OACOja,KAAAgrD,MAAW/wC,EALrB,IAMM+9C,IAAAA,EACDh4D,KAAAgrD,MAAW/wC,EADV+9C,IAEDh4D,KAAAgrD,MAAW/wC,EARhB,KAcTi+C,WACI,GAAIl4D,KAAA+2D,mBAA0B/2D,KAAAu3D,YAA9B3wD,OAAuD,CACnD5G,KADmD+2D,qBAEnD/2D,KAFmDm4D,cAQ3DC,WACI,GAAIp4D,KAAA+2D,mBAAJ,EAAiC,CAC7B/2D,KAD6B+2D,qBAE7B/2D,KAF6Bm4D,cAQrCE,sBACI,OAAOr4D,KADW4lC,iBAOtBz2B,KAAKsiC,EAALtiC,MACI,OAAIsiC,IACAA,EAAUzxC,KAFG4lC,kBAGjB,GAAI6L,EAAAA,GAAeA,GAAWzxC,KAAAgrD,MAA9BpkD,OAHiB,OAKjB,MAAM0xD,EAAct4D,KAAAy3D,qBALHhmB,GAMjB,GAAA,OAAI6mB,EAAsB,CACtBt4D,KAAA+2D,mBADsBuB,EAEtBt4D,KAFsBm4D,cAQ9BI,wBACI,OAAOv4D,KADa+2D,mBAQxByB,sBAAAA,GACI,KAAIC,GAAAA,GAAiBA,EAAWz4D,KAAAu3D,YAAhC3wD,QAII,MAAM,IAAA7J,MADL,gBAFDiD,KAAA+2D,mBADqD0B,EAU7DN,aACI,MAAMl+C,EAASja,KAAAu3D,YAAiBv3D,KADvB+2D,oBAET,GAAA,IAAI98C,EAAAA,OAAqB,CACrBja,KAAAkV,OAAAwjD,YAAwB14D,KAAAgrD,MAAW/wC,EADd,KAErBja,KAAAkV,OAAAyjD,aAAyB34D,KAAAgrD,MAAW/wC,EAFf,UAKrB,GAAA,cAAIja,KAAAkV,OAAAsiD,iBACA,GAAIv9C,EAAAA,KAAcja,KAAAgrD,MAAApkD,OAAlB,EAAyC,CACrC5G,KAAAkV,OAAAwjD,YAAwB14D,KAAAgrD,MAAW/wC,EADE,KAErCja,KAAAkV,OAAAyjD,aAFqC,UAIpC,CACD34D,KAAAkV,OAAAwjD,YADC,MAED14D,KAAAkV,OAAAyjD,aAAyB34D,KAAAgrD,MAAW/wC,EAFnC,SAKJ,CACDja,KAAAkV,OAAAwjD,YADC,MAED14D,KAAAkV,OAAAyjD,aAAyB34D,KAAAgrD,MAAW/wC,EAFnC,KAKTja,KAAA4lC,iBAAwB3rB,EAtBf,GAuBTja,KAAAk3D,IAAA0B,gBAAyB54D,KAvBhB4lC,mBA8BjB,MAAAizB,4BAAA/B,eACIh6D,YAAAA,EAAAA,EAAAA,GACIo5B,MAAAghC,EADiChiD,GAEjClV,KAAA84D,WAFiCA,EAIrC1pD,OACI,IAAA,MAAA2Q,KAAmB/f,KAAnB84D,WAAoC,CAChC,MAAMttD,EAAO,IAAAgqD,UAAcx1D,KAAdkV,OAAA6K,EADmB,QAEhCvU,EAFgC4D,OAGhCpP,KAAAgrD,MAAAxxC,KAHgChO,GAKpCxL,KANGq3D,gBAaX,MAAA0B,OAOI/7D,kCAAAg8D,EAAAC,GACI,OAAID,OAAAA,GAAJ,OAAuBC,EAAiBC,EAAAA,EAGjCznD,KAAAA,KAAUA,KAAAA,IAASwnD,EAAAA,EAAWD,EAApBvnD,EAAAA,GAAmCA,KAAAA,IAASwnD,EAAAA,EAAWD,EAApBvnD,EAJN,IAWlDzU,wBAAAm8D,GACI,OAAOJ,OAAAA,2BAAkCI,EAAlCJ,GAA8CI,EADxB,IASjCn8D,8BAAAo8D,EAAAC,GACI,MAAMC,EAAKF,EAAAA,GAAAA,EAAaA,EAAAA,GADgB3tC,EAElC8tC,EAAKF,EAAAA,GAAAA,EAAaA,EAAAA,GAFgB5tC,EAGlC+tC,EAAKJ,EAAAA,GAAAA,EAAaA,EAAAA,GAHgB9xC,EAIlCmyC,EAAKJ,EAAAA,GAAAA,EAAaA,EAAAA,GAJgB/xC,EAKxC,OAAO7V,KAAAA,MAAW6nD,EAAAC,EAAUC,EAAXC,IAAuBhoD,KAAAioD,KAAUJ,EAAAA,EAAUE,EAApBA,GAA+B/nD,KAAAA,KAAU8nD,EAAAA,EAAUE,EALnDA,KAe5Cz8D,mBAAAqoB,EAAAs0C,GACI,OAAA,OAAIA,EAAc,KAGdA,EAAAA,GAASt0C,EAATs0C,MACAA,EAAAA,GAASt0C,EAAAA,MAAaA,EADtBs0C,MAEAA,EAAAA,GAASt0C,EAFTs0C,KAGAA,EAAAA,GAASt0C,EAAAA,IAAWA,EAHxB+D,OAGqCuwC,EAPX,KAqB9B38D,uBAAA48D,EAAAC,EAAAhgD,GACI,MAAO,CACHyN,EAAGsyC,EAAAA,EAAqBnoD,KAAAA,IAArBmoD,GAAuCA,EAAAA,EAAqBnoD,KAAAA,IAA5DmoD,GAA8EC,EAD9EvyC,EAEHmE,EAAGmuC,EAAAA,EAAqBnoD,KAAAA,IAArBmoD,GAAuCA,EAAAA,EAAqBnoD,KAAAA,IAA5DmoD,GAA8EC,EAF9EpuC,GAeXzuB,0BAAA68D,EAAAC,EAAAC,GAEI,GAAIhB,OAAAA,2BAAAA,EAAAA,IAAJe,EACI,OADuEC,EAG3E,MAAMtyC,EAAIoyC,EAL8CvyC,EAMlDI,EAAImyC,EAN8CpuC,EAOlDuuC,EAAID,EAP8CzyC,EAQlD2yC,EAAIF,EAR8CtuC,EAUxD,IAAInE,EAAI7V,KAAAA,KAAWA,KAAAA,IAAAA,EAAAA,GAAsBA,KAAAA,IAASgW,EAAThW,EAAvB,IAA8CA,KAAAyoD,IAASzyC,EAATuyC,EAAA,GAAqBvoD,KAAAA,IAASiW,EAATjW,EAA7EA,KAVgDgW,EAWpDsyC,EAAAA,EAAJ,IACIzyC,IADoB,GAGxB,IAAImE,GAAMnE,EAADG,IAAWC,EAAZuyC,IAAuBxyC,EAAvBuyC,GAdgDtyC,EAepDD,EAAAA,EAAAA,IAAJ,IACIgE,EADiBquC,GAGrB,MAAO,CAAAxyC,EAAAA,EAAAmE,EAAAA,GAWXzuB,qCAAAm9D,EAAAC,EAAAC,GACI,OAAOtB,OAAAA,YAAAA,EAA+BA,OAAAA,2BAAAA,EADiBsB,IAY3Dr9D,kCAAAo9D,EAAAC,GACI,MAAMf,EAAKc,EAAAA,GAAAA,EAAWA,EAAAA,GADkB3uC,EAElC8tC,EAAKc,EAAAA,GAAAA,EAAWA,EAAAA,GAFkB5uC,EAGlC+tC,EAAKY,EAAAA,GAAAA,EAAWA,EAAAA,GAHkB9yC,EAIlCmyC,EAAKY,EAAAA,GAAAA,EAAWA,EAAAA,GAJkB/yC,EAKlCgzC,EAAKF,EAAAA,GAAAA,EAAWA,EAAAA,GAAXA,EAAsBA,EAAAA,GAAAA,EAAWA,EAAAA,GALJ3uC,EAMlC8uC,EAAKF,EAAAA,GAAAA,EAAWA,EAAAA,GAAXA,EAAsBA,EAAAA,GAAAA,EAAWA,EAAAA,GANJ5uC,EAOlC+uC,EAAOlB,EAAAA,EAAUC,EAPiBe,EAQlCG,EAAOjB,EAAAA,EAAUC,EARiBa,EASlChzC,IAAOgzC,EAAAb,EAAUc,EAAXf,IAAuBF,EAAAG,EAAUF,EATLC,GAUlC/tC,IAAO6tC,EAAAiB,EAAUhB,EAAXe,IAAuBhB,EAAAG,EAAUF,EAVLC,GAWxC,GAAIkB,SAAAA,IAAeA,SAAnBjvC,GACI,MAAO,CAAAnE,EAAAA,EAAAmE,EAAAA,GAGP,GAAIha,KAAAA,IAAS+oD,EAAT/oD,GAAJ,GACI,MAAM,IAAA1U,MAFT,oBAIL,OAlBwC,KA4B5CC,4BAAA29D,EAAAC,GACI,MAAMC,EAAQppD,KAAAA,IAASkpD,EAAAA,EAAaC,EADQtzC,GAEtCwzC,EAAQrpD,KAAAA,IAASkpD,EAAAA,EAAaC,EAFQnvC,GAGtCsvC,EAAatpD,KAAAA,IAAAA,EAHyBqpD,GAItC53C,EAAS,CAJ6By3C,GAK5C,SAAAK,QAAAC,EAAAC,EAAAruD,EAAAjG,EAAAmoB,GACI,OAAImsC,EAAJD,EACWA,EAAKlsC,GAASliB,EADZjG,GAGJs0D,EAAJD,EACMA,EAAKlsC,GAASliB,EADPjG,GAJwBq0D,EAS9C,IAAK,IAAIv0D,EAAT,EAAgBA,GAAhBq0D,EAAiCr0D,GAAjC,EACIwc,EAAAA,KAAY,CACRoE,EAAG0zC,QAAQL,EAARK,EAAoBJ,EAApBI,EAAAA,EAAAA,EADKt0D,GAER+kB,EAAGuvC,QAAQL,EAARK,EAAoBJ,EAApBI,EAAAA,EAAAA,EAFKt0D,KAKhB,OApB4Cwc,GA2BpD,MAAAi4C,iBAAA9G,KACIv3D,YAAAA,EAAAA,EAAAA,GACIo5B,MAAAhhB,EADkCw/C,GAElC10D,KAAAo7D,cAFkC,KAGlCp7D,KAAAq7D,cAHkC,KAIlCr7D,KAAAy1D,QAJkC,EAKlCz1D,KAAAqqB,QALkCA,EAMlCrqB,KAAAqqB,QAAAyC,UAAArX,IANkC,aAOlCzV,KAAAqqB,QAAAyC,UAAArX,IAA2B,KAPOi/C,GAStCiC,mBACI,GAAA,SAAI32D,KAAA20D,kBACA,OAD8C30D,KAGlD,GAAA,OAAIA,KAAAq7D,cAA6B,CAC7Br7D,KAAAo7D,cAAqBp7D,KAAAqqB,QAAAixC,WADQ,GAE7Bt7D,KAAAqqB,QAAAsrB,cAAAxd,YAAuCn4B,KAFVo7D,eAG7Bp7D,KAAAq7D,cAAqB,IAAAF,SAAan7D,KAAbkV,OAA0BlV,KAA1Bo7D,cAA8Cp7D,KAHtC20D,mBAKjC,OAAO30D,KATQ42D,mBAWnBA,mBACI,OAAO52D,KADQq7D,cAGnBxE,oBACI,GAAA,OAAI72D,KAAAq7D,cAA6B,CAC7Br7D,KAAAo7D,cAD6B1rC,SAE7B1vB,KAAAo7D,cAF6B,KAG7Bp7D,KAAAq7D,cAH6B,MAMrC3X,KAAAA,GACI,MAAMgR,EAAU6G,GAA4Bv7D,KAD9B20D,kBAERI,EAAU/0D,KAAAkV,OAAA4gD,gBAA4B91D,KAAA4hB,MAF9BirB,UAGRmV,EAAYhiD,KAAAkV,OAAA6gD,UAHJ/T,UAIRwK,EAAaxsD,KAAAkV,OAAA6gD,UAJL3sC,OAKdppB,KAAAqqB,QAAAyC,UAAA4C,OALc,YAOd,MAAM8rC,EAAe,wFAGNx7D,KAAAqqB,QAAAkF,MAHKksC,0EAAAzZ,6BAAAwK,iBAUpBkI,SAAAA,EACM10D,KAAA07D,SADNhH,GAEM10D,KAAA27D,SAAA5G,EAnBQyG,GAqBlBE,SAASF,EAATE,IACI,MAAM/B,EAAM35D,KAAAkV,OAAA6gD,UAAA7zC,KAA6BliB,KAAAkV,OAAA6gD,UAAA5sC,MADlB,EAEjBtP,EAAQ7Z,KAAA4hB,MAFS4yC,iBAGjBoH,EAAWJ,EACZ,kMAMA,IAAAx7D,KAAAi8B,YACK,qBAAqBj8B,KAAAkV,OAAA6gD,UAArB/T,8EAAAnoC,SAEC,qEAAD8/C,sBAAA9/C,UAEV7Z,KAAAqqB,QAAAkF,MAAAtoB,QAfuB20D,EAiB3BD,SAAAA,EAAmBH,EAAnBG,IACI,IAAIE,EAD6B,YAEjC,IAAA,MAAAh0C,KAAgB7nB,KAAA4hB,MAAhB0yC,KACI,GAAA,OAAIzsC,EAAY,CACZ,IAAIi0C,EAAI,IAAA97D,KAAAkV,OAAA5O,eACF,CACEghB,GAAIO,EAADP,EAAOtnB,KAAA4hB,MAAAirB,SADZvlB,EAEEmE,EAAG5D,EAAAA,EAAM7nB,KAAA4hB,MAAAirB,SAFXphB,GAIA,CACEnE,EAAGO,EAAAA,EAAM7nB,KAAA4hB,MAAAirB,SADXvlB,EAEEmE,EAAG5D,EAAAA,EAAM7nB,KAAA4hB,MAAAirB,SAFXphB,GAINqwC,EAAI/C,OAAAgD,gBAAAD,EAA0B,CAAEx0C,EAAF,EAAQmE,EAAR,GAAgBzrB,KAAA4hB,MAVlC/H,OAWZgiD,GAAWC,EAAAA,EAAAA,MAAcA,EAAdA,EAXC,OAcpBD,EAAUA,EAAAA,MAAAA,GAjBuB,GAkBjCA,GAlBiC,IAmBjC,MAAMD,EAAWJ,EACb,qCAAAK,yBAAAA,MACC77D,KAAAkV,OAAA8mD,YAAA,IAA0Bh8D,KAAA4hB,MAAA/H,MACrB,wBAAwBgzB,EAAxBvlB,QAAyCulB,EAAzCphB,QACA,0BAA0BohB,EAA1BvlB,QAA2CulB,EAA3CphB,kBAAsEzrB,KAAA4hB,MAAtE/H,cACV7Z,KAAAqqB,QAAAkF,MAAAtoB,QAxBiC20D,EA0BrCzF,WAAAA,GACI,MAAM9wC,EAAOrlB,KAAAkV,OADE6gD,UAET/T,EAAY38B,EAFH28B,UAGTwK,EAAannC,EAHJ+D,OAIT9B,EAAI8uC,IAAAA,EAA2B/wC,EAAAA,KAAYA,EAAvC+wC,UAAwD/wC,EAJnDnD,KAKTuJ,EAAIpG,EALKlD,IAMfniB,KAAAqqB,QAAAyC,UAAArX,IANe,YAOfzV,KAAAqqB,QAAAkF,MAAAtoB,QAA8B,uFAADulD,2BAAAllC,0BAAAmE,4BAAAu2B,8BAOdhiD,KAAAkV,OAAAkiD,cAAA6E,YAPc,KASjCC,aACI,OAAOl8D,KADEqqB,QAGbjb,OACIpP,KAAAy1D,QADG,EAGPL,eAAAA,GACIl/B,MAAAk/B,eADwBn5B,GAExBj8B,KAAAqqB,QAAAyC,UAAA4C,OAAA,SAFwB,WAGxB1vB,KAAAqqB,QAAAyC,UAAArX,IAA2BwmB,IAAAA,EAAAA,UAHH,UAK5B44B,kBAAAA,GACI70D,KAAAqqB,QAAAyC,UAAA4C,OAAA,SADuB,UAEvB1vB,KAAAqqB,QAAAyC,UAAArX,IAA2B,KAFJi/C,GAGvBx+B,MAAA2+B,kBAHuBH,IAU/B,MAAAyH,2BAAArF,eACIh6D,YAAAA,EAAAA,EAAAA,EAAAA,GACIo5B,MAAAghC,EADqChiD,GAErClV,KAAAqqB,QAFqCA,EAGrCrqB,KAAAo8D,aAHqC1tC,EAKzCtf,OACI,IAAA,MAAAitD,KAA0Br8D,KAA1Bo8D,aAA6C,CACzC,MAAM5wD,EAAO,IAAA2vD,SAAan7D,KAAbkV,OAAAmnD,EAAuCA,SAAAA,EAAAA,QAAAA,QAAAA,OADX,QAEzC7wD,EAFyC4D,OAGzCpP,KAAAgrD,MAAAxxC,KAHyChO,GAK7CxL,KANGq3D,gBAaX,MAAAiF,gBASIx/D,YAAAA,EAAAA,EAAAA,EAAAA,GACIkD,KAAAg4D,UADkDA,EAElDh4D,KAAAu8D,OAFkDA,EAIlDv8D,KAAAw8D,kBAJkD,KAKlDx8D,KAAAy8D,mBALkD,KAMlDz8D,KAAA08D,qBANkD,KAOlD18D,KAAAgiD,UAAiBztC,SAAAA,EAPiC,IAQlDvU,KAAAwsD,WAAkBj4C,SAAAA,EARgC,IAiBtDooD,KAAAA,GACI,IAEI38D,KAAA6sC,SAAgB7sC,KAAA48D,qBAFhBC,GAIA78D,KAAA88D,wBAA6B98D,KAJ7B6sC,UAKA,OALA,EAOJ,MAAAnZ,GACI,OADM,GASdqpC,sBACI,MAAM75C,EADY,GAElB,IAAI85C,GAFc,EAGlB95C,EAAAA,KAAYljB,KAAAqlB,KAHMynC,SAIlB5pC,EAAAA,KAAYljB,KAJMw8D,mBAKlB,GAAA,OAAIx8D,KAAAy8D,mBACAO,GADkC,MAGjC,CACD95C,EAAAA,KAAYljB,KADXy8D,oBAED,OAAIz8D,KAAA08D,uBACAM,GAHH,GAKL95C,EAAAA,KAAYljB,KAbM08D,uBAcdM,GAAJ,WAAkBh9D,KAAAu8D,SACdr5C,EAAAA,KAAYljB,KAAAqlB,KADyC43C,YAGzD,OAjBkB/5C,EAwBtBg6C,oBACI,MAAMh6C,EADU,GAEhBA,EAAAA,KAAYljB,KAFIw8D,mBAGhB,GAAA,QAAIx8D,KAAAu8D,OACAr5C,EAAAA,KAAY,CAAEoE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,QAEX,CACD,OAAIzrB,KAAAw8D,mBACAt5C,EAAAA,KAAY,CAAEoE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,IAEhBvI,EAAAA,KAAY,CAAEoE,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,aAEhB,OAAIxsD,KAAAy8D,mBACI1D,OAAAA,2BAAkC/4D,KAAlC+4D,mBAA2D/4D,KAA3D+4D,oBAAJ,IACI71C,EAAAA,KAAYljB,KAFkBy8D,oBAKlC,QAAIz8D,KAAAu8D,QACAr5C,EAAAA,KAAY,CAAEoE,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,aAGpBtpC,EAAAA,KAAYljB,KArBI08D,sBAsBhBx5C,EAAAA,KAAYljB,KAtBIw8D,mBAuBhB,OAvBgBt5C,EA4BpBi6C,WACI,OAAA,IAAIn9D,KAAAg4D,WACQh4D,KAD4B6Z,MAGjC7Z,KAJA6Z,MASXk8C,UACI,OAAO/1D,KADDqlB,KAMV+3C,cACI,OAAOp9D,KADG6sC,SAMdwwB,kBACI,OAAA,IAAIr9D,KAAAg4D,UACOh4D,KAAAqlB,KAD6BynC,QAGjC9sD,KAAAqlB,KAJOi4C,SASlBh3D,eACI,OAAOtG,KADIg4D,UAMfuF,sBACI,OAAO9rD,KAAAA,KAAWzR,KAAA6sC,SAAAvlB,EAAkBtnB,KAAnBgiD,YAAsC,EAAIhiD,KAA3CgiD,WADE,KAMtBwb,YACI,OAAOx9D,KADCu8D,OAMZkB,wBACI,OAAA,IAAIz9D,KAAAg4D,UACO,CAAE1wC,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,GAEJ,CAAEnE,EAAF,EAAQmE,EAAR,GAKXiyC,sBACI,MAAA,QAAI19D,KAAAu8D,OACOv8D,KAD0Bw8D,kBAIjC,OAAIx8D,KAAAy8D,mBACOz8D,KAFVy8D,mBAGMz8D,KAHNw8D,kBASTmB,iBACI,MAAM9jD,EAAQk/C,OAAA6E,uBAA8B59D,KAA9B69D,yBAA6D,CACvE,CAAEv2C,EAAF,EAAQmE,EAAR,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,KAEJ,OAAA,IAAIzrB,KAAAg4D,UAAoCn+C,EAGjCpI,KAAAA,GARMoI,EAUjB+iD,qBAAAA,GACI,IAAI15C,EADkBy2C,EAEtB35D,KAAA89D,uBAFsB56C,GAIlBA,EADJ,QAAIljB,KAAAu8D,OACSv8D,KAAA+9D,0BAAA76C,EAAuC,CAAEoE,EAAF,EAAQmE,EAAR,GAAgB,CAAEnE,EAAF,EAAQmE,EAAGzrB,KAAXwsD,aAGvDxsD,KAAA+9D,0BAAA76C,EAAuC,CAAEoE,EAAF,EAAQmE,EAAGzrB,KAAXwsD,YAA8B,CAAEllC,EAAF,EAAQmE,EAAR,IAElF,GAAIha,KAAAA,IAASyR,EAAAA,EAAWljB,KAApByR,WAAAA,GAA2CA,KAAAA,IAASyR,EAATzR,GAA/C,EACI,MAAM,IAAA1U,MAD6D,sBAGvE,OAZsBmmB,EAc1B46C,uBAAAA,GACI99D,KAAA6Z,MAAa7Z,KAAAg+D,eADWrE,GAExB35D,KAAAqlB,KAAYrlB,KAAAi+D,YAFYtE,GAI5BqE,eAAAA,GACI,MAAM97C,EAAOliB,KAAAgiD,UAAiB2X,EAAjBryC,EADG,EAEVnF,EAAM,WAAAniB,KAAAu8D,OAAwCv8D,KAAAwsD,WAAkBmN,EAA1DluC,EAAkEkuC,EAF9DluC,EAGhB,IAAI5R,EAAQ,EAAIpI,KAAAA,KAAUyQ,EAAOzQ,KAAAA,KAAU0Q,EAAAA,EAAYD,EAHvCA,IAIZC,EAAJ,IACItI,GALYA,GAMhB,MAAMqkD,EAAKzsD,KAAAA,GANKoI,EAOhB,IAAK6gD,SAAD7gD,IAAqBqkD,GAAAA,GAAWA,EAApC,KACI,MAAM,IAAAnhE,MARM,4BAShB,WAAIiD,KAAAu8D,SACA1iD,GAVYA,GAWhB,OAXgBA,EAapBokD,YAAAA,GACI,MAAA,QAAIj+D,KAAAu8D,OACOv8D,KAAAm+D,qBAA0B,CAC7B,CAAE72C,EAAF,EAAQmE,EAAR,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,GACA,CAAEnE,EAAF,EAAQmE,EAAGzrB,KAAXwsD,YACA,CAAEllC,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,aAL6BqQ,GAQ9B78D,KAAAm+D,qBAA0B,CAC7B,CAAE72C,EAAF,EAAQmE,GAAIzrB,KAAZwsD,YACA,CAAEllC,EAAGtnB,KAALgiD,UAAqBv2B,GAAIzrB,KAAzBwsD,YACA,CAAEllC,EAAF,EAAQmE,EAAR,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,IAbcoxC,GAgBtBsB,qBAAAA,EAAAA,GACI,MAAO,CACHrR,QAAS9sD,KAAAo+D,gBAAqBC,EAArB,GADNxB,GAEHS,SAAUt9D,KAAAo+D,gBAAqBC,EAArB,GAFPxB,GAGHI,WAAYj9D,KAAAo+D,gBAAqBC,EAArB,GAHTxB,GAIHyB,YAAat+D,KAAAo+D,gBAAqBC,EAArB,GAJVxB,IAOXuB,gBAAAA,EAAAA,GACI,MAAO,CACH92C,EAAGsyC,EAAAA,EAAqBnoD,KAAAA,IAASzR,KAA9B45D,OACCA,EAAAA,EAAqBnoD,KAAAA,IAASzR,KAD/B45D,OAECC,EAHDvyC,EAIHmE,EAAGmuC,EAAAA,EAAqBnoD,KAAAA,IAASzR,KAA9B45D,OACCA,EAAAA,EAAqBnoD,KAAAA,IAASzR,KAD/B45D,OAECC,EANDpuC,GASXqxC,wBAAAA,GACI,MAAMyB,EAAY,CACdr8C,MADc,EAEdC,KAFc,EAGdgH,MAAOnpB,KAAAgiD,UAHO,EAId54B,OAAQppB,KAAAwsD,WAJM,GAMlB,GAAA,QAAIxsD,KAAAu8D,OAAiC,CACjCv8D,KAAAw8D,kBAAyBzD,OAAAyF,8BAAAD,EAAgD,CAAA5E,EAAM35D,KAAAqlB,KAANi4C,UAA2B,CAChG,CAAEh2C,EAAF,EAAQmE,EAAR,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,KAEJzrB,KAAAy8D,mBAA0B1D,OAAAyF,8BAAAD,EAAgD,CAAA5E,EAAM35D,KAAAqlB,KAAN43C,YAA6B,CACnG,CAAE31C,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,cAEJxsD,KAAA08D,qBAA4B3D,OAAAyF,8BAAAD,EAAgD,CAACv+D,KAAAqlB,KAAD43C,WAAuBj9D,KAAAqlB,KAAvBi5C,aAA+C,CACvH,CAAEh3C,EAAF,EAAQmE,EAAGzrB,KAAXwsD,YACA,CAAEllC,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,kBAGH,CACDxsD,KAAAw8D,kBAAyBzD,OAAAyF,8BAAAD,EAAgD,CAACv+D,KAAAqlB,KAADynC,QAAoB9sD,KAAAqlB,KAApBi4C,UAAyC,CAC9G,CAAEh2C,EAAF,EAAQmE,EAAR,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,KAEJzrB,KAAAy8D,mBAA0B1D,OAAAyF,8BAAAD,EAAgD,CAAA5E,EAAM35D,KAAAqlB,KAANynC,SAA0B,CAChG,CAAExlC,EAAGtnB,KAALgiD,UAAqBv2B,EAArB,GACA,CAAEnE,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,cAEJxsD,KAAA08D,qBAA4B3D,OAAAyF,8BAAAD,EAAgD,CAACv+D,KAAAqlB,KAAD43C,WAAuBj9D,KAAAqlB,KAAvBi5C,aAA+C,CACvH,CAAEh3C,EAAF,EAAQmE,EAAGzrB,KAAXwsD,YACA,CAAEllC,EAAGtnB,KAALgiD,UAAqBv2B,EAAGzrB,KAAxBwsD,eAIZuR,0BAAAA,EAAAA,EAAAA,GACI,IAAI76C,EADoDu7C,EAExD,MAAM10B,EAAMgvB,OAAAA,mBAAAA,EAAqC/4D,KAArC+4D,UAF4C71C,GAGxD,GAAIA,IAAJ6mB,EAAoB,CAChB7mB,EADgB6mB,EAEhB/pC,KAAA89D,uBAFgB56C,GAIpB,MAAMw7C,EAAMjtD,KAAAA,KAAUA,KAAAA,IAASzR,KAATyR,UAAAA,GAA8BA,KAAAA,IAASzR,KAATyR,WAPI,IAQxD,IAAIktD,EAAgB3+D,KAAAqlB,KARoCi5C,YASpDM,EAAgB5+D,KAAAqlB,KAToCynC,QAUxD,GAAA,WAAI9sD,KAAAu8D,OAAuC,CACvCoC,EAAgB3+D,KAAAqlB,KADuBi4C,SAEvCsB,EAAgB5+D,KAAAqlB,KAFuB43C,WAI3C,GAAI0B,EAAAA,GAAJ,EAA0B,CACtB,MAAME,EAAc9F,OAAAA,mBAAAA,EAAAA,EADE6F,GAEtB,GAAIC,IAAJ37C,EAA4B,CACxBA,EADwB27C,EAExB7+D,KAAA89D,uBAFwB56C,IAKhC,OArBwDA,EAuB5D26C,yBACI,MAAMlyC,EAAQ3rB,KADO09D,sBAKrB,MAAO,CAAA/xC,EAHQA,IAAU3rB,KAAV2rB,oBAAAA,OAAqC3rB,KAAAy8D,mBAC9Cz8D,KADS2rB,mBAET3rB,KAJe08D,uBAY7B,MAAAoC,KACIhiE,YAAAA,EAAAA,GACIkD,KAAA++D,aADqB,KAErB/+D,KAAAg/D,WAFqB,KAGrBh/D,KAAA28D,KAHqB,KAIrB38D,KAAA4hB,MAJqB,OAKrB5hB,KAAAkV,OALqBA,EAMrBlV,KAAAk3D,IANqBA,EAazB+H,KAAAA,GACIj/D,KAAAk/D,SADY,aAGZ,OAAIl/D,KAAA28D,MACA38D,KAAAs3D,MAJQ6H,GAKZn/D,KAAAo/D,GAAQp/D,KAAAkV,OAAAmqD,cALIF,IAYhB1X,KAAAA,GACI,GAAIznD,KAAAk3D,IAAAE,cAAAkI,qBAA8Ct/D,KAAAu/D,iBAAlDJ,GADY,OAIZ,OAAIn/D,KAAA28D,MACA38D,KAAAkV,OALQsqD,kBAMZ,IAAKx/D,KAAAs3D,MAAL6H,GANY,OAQZ,MAAM95C,EAAOrlB,KARDy/D,gBASZz/D,KAAAk/D,SATY,YAWZ,MAAMQ,EAAar6C,EAAAA,OAXP,GAaNs6C,EAAS,WAAA3/D,KAAA28D,KAAAa,YAAkDn4C,EAAAA,OAAlDq6C,EAbHA,EAcNE,EAAQ,WAAA5/D,KAAA28D,KAAAa,YAAkDn4C,EAAlD+D,OAdF,EAgBZppB,KAAA28D,KAAAA,KAAe,CAAEr1C,EAAGjC,EAAAA,UAALq6C,EAAkCj0C,EAAlCk0C,IAEf3/D,KAAA6/D,kBAAuB,CAAEv4C,EAAGjC,EAAAA,UAALq6C,EAAkCj0C,EAAlCk0C,GAA+C,CAAEr4C,GAAIjC,EAAN28B,UAAsBv2B,EAAtBm0C,IAlB1D,GA2BhBtI,MAAAA,GACIt3D,KADa8N,QAEb,MAAMgyD,EAAU9/D,KAAAkV,OAAA6qD,cAFHZ,GAGP95C,EAAOrlB,KAHAy/D,gBAKPzH,EAAYh4D,KAAAggE,oBALLF,GAOPG,EAAaH,EAAAA,GAAaz6C,EAAAA,OAAby6C,EAAAA,SAPN,MAQb,IAAK9/D,KAAAkgE,eAALlI,GACI,OATS,EAUb,IACIh4D,KAAA++D,aAAoB/+D,KAAAk3D,IAAAiJ,oBAAApI,gBADpBC,GAEAh4D,KAAAg/D,WAAkBh/D,KAAAk3D,IAAAiJ,oBAAAlI,cAFlBD,GAIA,GAAA,cAAIh4D,KAAAkV,OAAAsiD,iBACA,GAAA,IAAIQ,EAA4B,CAC5B,MAAM30C,EAAWrjB,KAAAk3D,IAAAiJ,oBAAAvI,OAAoC53D,KADzB++D,cAE5B,GAAA,OAAI17C,GACIrjB,KAAA++D,aAAAzJ,eAAmCjyC,EAAvCiyC,aAA8D,CAC1Dt1D,KAAA++D,aAAAlK,kBAD0D,QAE1DxxC,EAAAA,kBAF0D,aAMjE,CACD,MAAM+8C,EAAWpgE,KAAAk3D,IAAAiJ,oBAAArI,OAAoC93D,KADpD++D,cAED,GAAA,OAAIqB,GACIpgE,KAAA++D,aAAAzJ,eAAmC8K,EAAvC9K,aAA8D,CAC1Dt1D,KAAA++D,aAAAlK,kBAD0D,QAE1DuL,EAAAA,kBAF0D,SAO1EpgE,KAAAkV,OAAAmrD,aAxBArI,GAyBAh4D,KAAA28D,KAAY,IAAAL,gBAAAtE,EAAAiI,EAA2C56C,EAAAA,UAAAA,SAA3C,IACZA,EAAAA,OAAAA,SA1BA,KA4BA,OA5BA,EA8BJ,MAAAqO,GACI,OADM,GASd0rC,GAAAA,GACI,GAAA,OAAIp/D,KAAA28D,MAEA38D,KAAA28D,KAAAA,KAAJ5H,GAA6B,CAEzB,MAAMjmD,EAAW9O,KAAA28D,KAFQY,sBAGzBv9D,KAAAg/D,WAAA/J,QAAwBj1D,KAAA28D,KAHCO,qBAIzBl9D,KAAAg/D,WAAAlK,YAA4B90D,KAAA28D,KAJHc,yBAKzBz9D,KAAAg/D,WAAAhK,SALyB,GAMzBh1D,KAAAg/D,WAAA7J,aANyB,GAOzBn1D,KAAA++D,aAAA9J,QAA0Bj1D,KAAA28D,KAPDI,uBAQzB/8D,KAAA++D,aAAAjK,YAA8B90D,KAAA28D,KARLU,mBASzBr9D,KAAA++D,aAAA/J,SAA2Bh1D,KAAA28D,KATFQ,YAUzB,IAAIn9D,KAAA28D,KAAAr2D,eACAtG,KAAA++D,aAAA5J,aAAgC,IAAM,IAAP,EAAarmD,GADE,KAI9C9O,KAAA++D,aAAA5J,cAAgC,IAAO,IAAR,EAAcrmD,GAD5C,KAGL9O,KAAAkV,OAAAorD,YAAwBtgE,KAAA28D,KAhBC5G,WAiBzB/1D,KAAAkV,OAAAqrD,cAA0BvgE,KAjBDg/D,YAkBzBh/D,KAAAkV,OAAAsrD,gBAA4BxgE,KAlBH++D,cAmBzB/+D,KAAAkV,OAAAurD,cAA0BzgE,KAAA28D,KAA1Be,sBAA2D19D,KAAA28D,KAA3DgB,iBAAA7uD,EAAiG9O,KAAA28D,KAnBxEr2D,iBA4BjCo6D,WAAAA,EAAAA,GACI,MAAMxiC,EAAUl+B,KAAAk3D,IAAAiJ,oBADK5H,wBAEflS,EAAOrmD,KAAAk3D,IAAAiJ,oBAAA1I,qBAFQjsD,GAGrB,IACI,GAAI66C,EAAJnoB,EAAoB,CAChBl+B,KAAAk3D,IAAAiJ,oBAAA3H,sBAAmDnS,EADnC,GAEhBrmD,KAAA2gE,SAFgBpE,GAIpB,GAAIlW,EAAJnoB,EAAoB,CAChBl+B,KAAAk3D,IAAAiJ,oBAAA3H,sBAAmDnS,EADnC,GAEhBrmD,KAAA4gE,SAFgBrE,IAKxB,MAAA7oC,KASJitC,SAAAA,GACI3gE,KAAAynD,KAAU,CACNngC,EAAGtnB,KAAAkV,OAAA6gD,UAAA7zC,KAAA,EAA6BliB,KAAAkV,OAAA6gD,UAAA/T,UAD1B,GAENv2B,EAAG8wC,QAAAA,EAAAA,EAAiCv8D,KAAAkV,OAAA6gD,UAAA3sC,OAF9B,IAUdw3C,SAAAA,GACI5gE,KAAAynD,KAAU,CACNngC,EADM,GAENmE,EAAG8wC,QAAAA,EAAAA,EAAiCv8D,KAAAkV,OAAA6gD,UAAA3sC,OAF9B,IAQdy3C,WACI,GAAA,OAAI7gE,KAAA28D,KADG,OAGP,MAAMhD,EAAM35D,KAAA28D,KAHLS,cAID/3C,EAAOrlB,KAJNy/D,gBAKDh0C,EAAI,WAAAzrB,KAAA28D,KAAAa,YAAkDn4C,EAAlD+D,OALH,EAMHuwC,EAAAA,GAAJ,EACI35D,KAAA6/D,kBAAAlG,EAA4B,CAAEryC,GAAIjC,EAAN28B,UAAAv2B,EAAAA,IADhC,GAGIzrB,KAAA6/D,kBAAAlG,EAA4B,CAAEryC,EAAGjC,EAAL28B,UAAAv2B,EAAAA,IATzB,GAiBXq1C,WAAAA,GACI,IAAK9gE,KAAA+gE,WAAA,OAAL,eADkB,OAGlB,MAAM17C,EAAOrlB,KAHKy/D,gBAIZzd,EAAY38B,EAJA28B,UAKlB,GAAIhiD,KAAAu/D,iBAAJJ,GACI,GAAA,OAAIn/D,KAAA28D,KAAoB,CACpB,IAAK38D,KAAAs3D,MAAL6H,GADoB,OAGpBn/D,KAAAk/D,SAHoB,eAIpBl/D,KAAA28D,KAAAA,KAAe,CAAEr1C,EAAG06B,EAAL,EAAoBv2B,EAApB,IACf,MAAMu1C,EALc,GAMdrB,EAAS,WAAA3/D,KAAA28D,KAAAa,YAAkDn4C,EAAAA,OAAlD,EANK,EAOdu6C,EAAQ,WAAA5/D,KAAA28D,KAAAa,YACRn4C,EAAAA,OADQ27C,EAPMA,EAUpBhhE,KAAA6/D,kBAAuB,CAAEv4C,EAAG06B,EAAL,EAAoBv2B,EAApBk0C,GAAiC,CAAEr4C,EAAG06B,EAALgf,EAAkCv1C,EAAlCm0C,IAAxD,GAVoB,QAapB5/D,KAAAo/D,GAAQp/D,KAAAkV,OAAAmqD,cADPF,QAIJ,CACDn/D,KAAAk/D,SADC,QAEDl/D,KAAAkV,OAFCsqD,kBAGDx/D,KAHC6gE,YAcThB,kBAAAA,EAAAA,EAAAA,EAAyCoB,GAAzCpB,GACI,MAAMxB,EAAStF,OAAAA,qBAAAA,EADwCzkD,GAGjD4sD,EAHiD,GAIvD,IAAA,MAAAr5C,KAAAw2C,EACI6C,EAAAA,MAAY,IAAMlhE,KAAAo/D,GALiCv3C,KAMvD,MAAMs5C,EAAWnhE,KAAAohE,qBAA0B/C,EANYz3D,QAOvD5G,KAAAkV,OAAAmsD,eAAAH,EAAAC,GAA6C,KAEzC,GAAKnhE,KAAL28D,KAAA,CAEA2E,IACI,IAAIthE,KAAA28D,KAAAr2D,eACAtG,KAAAk3D,IADJqK,iBAGIvhE,KAAAk3D,IAJMsK,kBAMd,GAAAP,EAAe,CACXjhE,KAAAkV,OAAAqrD,cADW,MAEXvgE,KAAAkV,OAAAsrD,gBAFW,MAGXxgE,KAAAkV,OAHWusD,cAIXzhE,KAAAk/D,SAJW,QAKXl/D,KALW8N,aAYvB4zD,iBACI,OAAO1hE,KADM28D,KAMjBgF,WACI,OAAO3hE,KADA4hB,MAGXs9C,SAAAA,GACI,GAAIl/D,KAAA4hB,QAAJ8qB,EAA6B,CACzB1sC,KAAAk3D,IAAA0K,YADyBl1B,GAEzB1sC,KAAA4hB,MAFyB8qB,GAKjCszB,oBAAAA,GACI,MAAM36C,EAAOrlB,KADay/D,gBAE1B,GAAA,aAAIz/D,KAAAkV,OAAAsiD,kBACA,GAAIqK,EAAAA,EAAax8C,EAAbw8C,WAA+Bx8C,EAAAA,MAAnC,EACI,OAD+C,OAIlD,GAAIw8C,EAAAA,EAAax8C,EAAAA,MAAjB,EACD,OADkC,EAGtC,OAV0B,EAY9B+7C,qBAAAA,GACI,MAAMU,EAAc9hE,KAAAk3D,IAAAE,cADG2K,aAEvB,OAAIl1D,GAAJ,IAFuBi1D,EAIfj1D,EAAD,IAJgBi1D,EAM3B5B,eAAAA,GACI,OAAA,IAAIlI,EACOh4D,KAAAk3D,IAAAmB,sBAAiCr4D,KAAAk3D,IAAAQ,eAFtB,EAGf13D,KAAAk3D,IAAAmB,uBAHe,EAK1BvqD,QACI9N,KAAA28D,KADI,KAEJ38D,KAAA++D,aAFI,KAGJ/+D,KAAAg/D,WAHI,KAKRS,gBACI,OAAOz/D,KAAAkV,OADK6gD,UAGhBgL,cAAAA,GACI,IAAA,MAAAn/C,KAAAogD,EACI,GAAIhiE,KAAA4hB,QAAJA,EACI,OAFoB,EAI5B,OALkB,EAOtB29C,iBAAAA,GACI,MAAMl6C,EAAOrlB,KADWy/D,gBAElBzd,EAAY38B,EAFM28B,UAGlBigB,EAAoBxwD,KAAAA,KAAUA,KAAAA,IAAAA,EAAAA,GAAyBA,KAAAA,IAAS4T,EAAT5T,OAAnCA,IAHF,EAIlBquD,EAAU9/D,KAAAkV,OAAA6qD,cAJQZ,GAKxB,OAAQW,EAAAA,EAAAA,GACJA,EAAAA,EADIA,GAEJA,EAAAA,EAAYz6C,EAFRy6C,OAGJA,EAAAA,EAAYz6C,EAHRy6C,SAIHA,EAAAx4C,EAAA26C,GAAiCnC,EAAAA,EAAYz6C,EAAAA,MAJ1Cy6C,KAKHA,EAAAr0C,EAAAw2C,GAAiCnC,EAAAA,EAAYz6C,EAAAA,OAV1B48C,IAiBhC,MAAAC,OACIplE,YAAAA,EAAAA,GAEIkD,KAAAmiE,SAFsB,KAItBniE,KAAAoiE,UAJsB,KAMtBpiE,KAAA++D,aANsB,KAQtB/+D,KAAAg/D,WARsB,KAUtBh/D,KAAAg4D,UAVsB,KAYtBh4D,KAAAi8B,YAZsB,KActBj8B,KAAAH,OAdsB,KAgBtBG,KAAAqiE,UAhBsB,KAkBtBriE,KAAAsiE,SAlBsB,KAoBtBtiE,KAAAuiE,WApBsB,KAsBtBviE,KAAAwiE,MAtBsB,EA4BtBxiE,KAAAyiE,QA5BsB,EA6BtBziE,KAAA0iE,QA7BsBA,EA8BtB1iE,KAAAk3D,IA9BsBA,EAgCtB,MAAMyL,EAAQ,IAAA9jC,OAhCQ,gCAiCtB7+B,KAAAyiE,OAjCsB,OAiCRE,EAAAA,KAAWpgE,OAAAA,UAAXogE,WAOlBztD,OAAAA,GACI,GAAA,OAAIlV,KAAAqiE,UAAyB,CAEzB,MAAMO,EAAanxD,KAAAA,OAAY+wD,EAAQxiE,KAAAqiE,UAATQ,WAAqC7iE,KAAAqiE,UAF1CS,eAGzB,GAAIF,EAAa5iE,KAAAqiE,UAAAnB,OAAjBt6D,OACI5G,KAAAqiE,UAAAnB,OAD2C0B,SAG1C,CACD5iE,KAAAqiE,UADCU,eAED/iE,KAAAqiE,UAFC,MAKTriE,KAAAwiE,MAZUA,EAaVxiE,KAbUgjE,YAkBd1L,QACIt3D,KADI8U,SAEJ,MAAMmuD,KAAQT,IACZjgE,OAAAA,QAAAA,mBAAiC,KAC/BvC,KAAAkV,OADqCstD,GAErCj1C,sBAFqC01C,UAKzC1gE,OAAAA,QAAAA,mBAAiC,KAC/BgrB,sBADqC01C,SAW3C5B,eAAAA,EAAAA,EAAAA,GACIrhE,KAD2Cw/D,kBAE3Cx/D,KAAAqiE,UAAiB,CAAAnB,OAAAA,EAAAC,SAAAA,EAGb2B,cAAe3B,EAAWD,EAHbt6D,OAAAm8D,aAAAA,EAKbF,UAAW7iE,KALEwiE,OAWrBhD,kBACI,GAAA,OAAIx/D,KAAAqiE,UAAyB,CACzBriE,KAAAqiE,UAAAnB,OAAsBlhE,KAAAqiE,UAAAnB,OAAAt6D,OADG,KAEzB,OAAI5G,KAAAqiE,UAAAU,cACA/iE,KAAAqiE,UADsCU,eAI9C/iE,KAAAqiE,UAPc,KAYlBvtD,SACI9U,KAAAuiE,WADK,KAEL,MAAMtmC,EAAcj8B,KAFfkjE,sBAGL,GAAIljE,KAAAi8B,cAAJA,EAAsC,CAClCj8B,KAAAi8B,YADkCA,EAElCj8B,KAAAk3D,IAAAiM,kBAFkClnC,IAQ1CinC,sBACI,IAAIjnC,EADc,YAElB,MAAMmnC,EAAapjE,KAFDqjE,gBAGZ7M,EACC4M,EADa,EAAd5M,EAECx2D,KAAAsjE,iBAFa,EAIdC,EAAQvjE,KAAA0iE,QAAAv5C,MAAqBnpB,KAAA0iE,QAPjBt5C,OAQlB,IAAI44B,EAAYhiD,KAAA0iE,QAREv5C,MASdqjC,EAAaxsD,KAAA0iE,QATCt5C,OAUdlH,EAAOs0C,EAVOxU,EAWlB,GAAA,YAAIhiD,KAAA0iE,QAAA71D,KAA+C,CAC3Cu2D,EAAAA,EAAapjE,KAAA0iE,QAAAc,UAA6BxjE,KAAAk3D,IAAAE,cAA9CqM,cACIxnC,EAF2C,YAG/C+lB,EACI/lB,aAAAA,EACMj8B,KADNi8B,gBAEMj8B,KAAAqjE,gBANqC,EAO3CrhB,EAAYhiD,KAAA0iE,QAAhB3jB,WACIiD,EAAYhiD,KAAA0iE,QAR+B3jB,UAS/CyN,EAAaxK,EATkCuhB,EAU/C,GAAI/W,EAAaxsD,KAAjBsjE,iBAAwC,CACpC9W,EAAaxsD,KADuBsjE,iBAEpCthB,EAAYwK,EAFwB+W,EAIxCrhD,EACI+Z,aAAAA,EACMu6B,EAAgBxU,EAAhBwU,EADNv6B,EAEMu6B,EAjBqCxU,OAoB/C,GAAIohB,EAAJ,EAAiBphB,GACThiD,KAAAk3D,IAAAE,cAAJqM,YAAwC,CACpCxnC,EADoC,WAEpC/Z,EAAOs0C,EAAgBxU,EAAhBwU,EAF6BxU,EAMhDhiD,KAAAuiE,WAAkB,CAAArgD,KAAAA,EAEdC,IAAKq0C,EAAgBhK,EAFP,EAGdrjC,MAHc,EAGP64B,EACP54B,OAJcojC,EAKdxK,UALcA,GAOlB,OA7CkB/lB,EAuDtBwkC,cAAAA,EAAAA,EAAAA,EAAAA,GACI,IAAKzgE,KAAAk3D,IAAAE,cAALsM,WAD2C,OAG3C,MAAMC,EAAmB,IAAM3jE,KAAAo3D,cAHYuM,iBAI3C3jE,KAAAH,OAAc,CAAA85D,IAAAA,EAAA9/C,MAAAA,EAGVsP,MAAS,EAACnpB,KAAA+1D,UAAA/T,UAAF,EAADlzC,EAHG,IAIV80D,SAAW,IAAD90D,GAAD60D,EAAA,IAJC,IAAA3L,UAAAA,EAMVlpD,SANU,EAMAA,GAMlB2yD,cACIzhE,KAAAH,OADU,KAMdwjE,gBACI,OAAOrjE,KAAAk3D,IAAA2M,QAAAC,iBADK5zC,YAMhBozC,iBACI,OAAOtjE,KAAAk3D,IAAA2M,QAAAC,iBADMC,aAMjBz9D,eACI,OAAOtG,KADIg4D,UAMfjC,UACI,OAAI/1D,KAAAuiE,YACAviE,KAFEkjE,sBAGN,OAAOljE,KAHDuiE,WAQVnL,cACI,OAAOp3D,KAAAk3D,IADGE,cAMdI,iBACI,OAAOx3D,KADMi8B,YAQjBqkC,YAAAA,GACItgE,KAAAsiE,SADkBA,EAQtBjC,aAAAA,GACIrgE,KAAAg4D,UADoBA,EAQxBW,aAAAA,GACI,OAAIntD,GACAA,EAAAA,eAFW,GAGfxL,KAAAoiE,UAHe52D,EASnBktD,YAAAA,GACI,OAAIltD,GACAA,EAAAA,eAFU,GAGdxL,KAAAmiE,SAHc32D,EASlB+0D,cAAAA,GACI,OAAI/0D,GACAA,EAAAA,eAAoB,IAAAxL,KAAAg4D,UAAA,EAFR,GAGhBh4D,KAAAg/D,WAHgBxzD,EAUpBg1D,gBAAAA,GACI,OAAIh1D,GACAA,EAAAA,eAAoB,IAAAxL,KAAAg4D,WAAA,aAChBh4D,KAAAi8B,YADgB,EAFN,GAMlBj8B,KAAA++D,aANkBvzD,EActBu0D,cAAAA,GACI,MAAM16C,EAAOrlB,KADE+1D,UAEf,MAAO,CACHzuC,EAAGqyC,EAAAA,EAAQt0C,EADRnD,KAEHuJ,EAAGkuC,EAAAA,EAAQt0C,EAFRlD,KAKX65C,WACI,OAAOh8D,KADAyiE,OAWXpD,cAAAA,EAAAA,GACIrH,IACIA,EAAYh4D,KAFUg4D,WAG1B,MAAM3yC,EAAOrlB,KAHa+1D,UAO1B,MAAO,CAAAzuC,EAHG0wC,IAAAA,EACJ2B,EAAAA,EAAQt0C,EAARs0C,KAAoBt0C,EAAAA,MADhB2yC,EAEJ3yC,EAAAA,MAAAA,EAAiBs0C,EAAjBt0C,EAAyBA,EANLnD,KAStBuJ,EAAGkuC,EAAAA,EAAQt0C,EAFRlD,KAaX2zC,gBAAAA,EAAAA,GACIkC,IACIA,EAAYh4D,KAFYg4D,WAG5B,GAAA,MAAI2B,EACA,OAJwB,KAK5B,MAAMt0C,EAAOrlB,KALe+1D,UAS5B,MAAO,CAAAzuC,EAHG0wC,IAAAA,EACJ2B,EAAAA,EAAQt0C,EAARs0C,KAAoBt0C,EAAAA,MADhB2yC,EAEJ3yC,EAAAA,MAAAA,EAAiBs0C,EAAjBt0C,EAAyBA,EARHnD,KAWxBuJ,EAAGkuC,EAAAA,EAAQt0C,EAFRlD,KAaX6hD,oBAAAA,EAAAA,GACIhM,IACIA,EAAYh4D,KAFiBg4D,WAGjC,MAAO,CACHlL,QAAS9sD,KAAA81D,gBAAqBzwC,EAArBynC,QADNkL,GAEHsF,SAAUt9D,KAAA81D,gBAAqBzwC,EAArBi4C,SAFPtF,GAGHiF,WAAYj9D,KAAA81D,gBAAqBzwC,EAArB43C,WAHTjF,GAIHsG,YAAat+D,KAAA81D,gBAAqBzwC,EAArBi5C,YAJVtG,KAYf,MAAAiM,qBAAA/B,OACIplE,YAAAA,EAAAA,EAAAA,GACIo5B,MAAAghC,EADgCwL,GAEhC1iE,KAAA8iD,OAFgCohB,EAGhClkE,KAAAooB,IAAW87C,EAAAA,WAHqB,MAKpCrO,aACI,OAAO71D,KADEooB,IAGb+7C,UAGAnB,YACIhjE,KADQ+M,QAER,aAAI/M,KAAAi8B,aACA,MAAIj8B,KAAAmiE,UACAniE,KAAAmiE,SAAAhM,WAJA,GAKR,MAAIn2D,KAAAoiE,WACApiE,KAAAoiE,UAAAjM,WANI,GAOR,MAAIn2D,KAAAg/D,YACAh/D,KAAAg/D,WARItb,OASR1jD,KATQokE,iBAUR,MAAIpkE,KAAA++D,cACA/+D,KAAA++D,aAXIrb,OAYR,GAAA,MAAI1jD,KAAAH,OAAqB,CACrBG,KADqBqkE,kBAErBrkE,KAFqBskE,kBAIzB,MAAMj/C,EAAOrlB,KAhBL+1D,UAiBR,GAAA,aAAI/1D,KAAAi8B,YAAgD,CAChDj8B,KAAAooB,IADgD4tC,YAEhDh2D,KAAAooB,IAAA/C,KAAcA,EAAAA,KAAYA,EAA1B28B,UAA0C38B,EAA1ClD,IAAoDkD,EAApD8D,MAAgE9D,EAFhB+D,QAGhDppB,KAAAooB,IAHgD6tC,QAMxDmO,iBACI,MAAM/+C,EAAOrlB,KADA+1D,UAEb/1D,KAAAooB,IAFa7a,OAGbvN,KAAAooB,IAHa4tC,YAIb,MAAMuO,EAAal/C,EAAAA,MAJN,GAKbrlB,KAAAooB,IAAA/C,KAAcA,EAAdnD,KAAyBmD,EAAzBlD,IAAmCkD,EAAnC8D,MAA+C9D,EALlC+D,QAMb,MAAMo7C,EAAY,CAAEl9C,EAAGjC,EAAAA,KAAYA,EAAAA,MAAZA,EAA6Bk/C,EAAlC,EAAkD94C,EAAlD,GAClBzrB,KAAAooB,IAAAhkB,UAAmBogE,EAAnBl9C,EAAgCk9C,EAPnB/4C,GAQb,MAAMg5C,EAAgBzkE,KAAAooB,IAAAs8C,qBAAA,EAAA,EAAAH,EART,GASbE,EAAAA,aAAAA,EATa,oBAUbA,EAAAA,aAAAA,GAVa,sBAWbA,EAAAA,aAAAA,IAXa,sBAYbA,EAAAA,aAAAA,GAZa,sBAabA,EAAAA,aAAAA,IAba,sBAcbA,EAAAA,aAAAA,EAda,oBAebzkE,KAAAooB,IAfa6tC,OAgBbj2D,KAAAooB,IAAAu8C,UAhBaF,EAiBbzkE,KAAAooB,IAAAw8C,SAAA,EAAA,EAAAL,EAjBa,EAiBuBl/C,EAAAA,QACpCrlB,KAAAooB,IAlBaw5B,UAoBjByiB,kBACI,MAAMh/C,EAAOrlB,KADC+1D,UAEd/1D,KAAAooB,IAFc7a,OAGdvN,KAAAooB,IAHc4tC,YAIdh2D,KAAAooB,IAAA/C,KAAcA,EAAdnD,KAAyBmD,EAAzBlD,IAAmCkD,EAAnC8D,MAA+C9D,EAJjC+D,QAKd,MAAMo7C,EAAYxkE,KAAA81D,gBAAqB,CAAExuC,EAAGtnB,KAAAH,OAAA85D,IAALryC,EAAwBmE,EAAGzrB,KAAAH,OAAA85D,IAA3BluC,IACvCzrB,KAAAooB,IAAAhkB,UAAmBogE,EAAnBl9C,EAAgCk9C,EANlB/4C,GAOdzrB,KAAAooB,IAAAS,OAAgBpX,KAAAA,GAAUzR,KAAAH,OAAV4R,MAA8BA,KAAAA,GAPhC,GAQd,MAAMgzD,EAAgBzkE,KAAAooB,IAAAs8C,qBAAA,EAAA,EAAoC1kE,KAAAH,OAApCspB,MARR,GASd,GAAA,IAAInpB,KAAAH,OAAAm4D,UAA2C,CAC3Ch4D,KAAAooB,IAAAhkB,UAAA,GAD2C,KAE3CqgE,EAAAA,aAAAA,EAA8B,iBAAmBzkE,KAAAH,OAAnB+jE,QAFa,KAG3Ca,EAAAA,aAAAA,EAH2C,wBAK1C,CACDzkE,KAAAooB,IAAAhkB,WAAoBpE,KAAAH,OAApBspB,OADC,KAEDs7C,EAAAA,aAAAA,EAFC,oBAGDA,EAAAA,aAAAA,EAA8B,iBAAmBzkE,KAAAH,OAAnB+jE,QAH7B,KAKL5jE,KAAAooB,IAnBc6tC,OAoBdj2D,KAAAooB,IAAAu8C,UApBcF,EAqBdzkE,KAAAooB,IAAAw8C,SAAA,EAAA,EAAwB5kE,KAAAH,OAAxBspB,MArBc,EAqB6B9D,EAAAA,QAC3CrlB,KAAAooB,IAtBcw5B,UAwBlB0iB,kBACI,MAAMj/C,EAAOrlB,KADC+1D,UAEd/1D,KAAAooB,IAFc7a,OAGdvN,KAAAooB,IAHc4tC,YAId,MAAMwO,EAAYxkE,KAAA81D,gBAAqB,CAAExuC,EAAGtnB,KAAAH,OAAA85D,IAALryC,EAAwBmE,EAAGzrB,KAAAH,OAAA85D,IAA3BluC,IACjC62C,EAAWtiE,KAAAgkE,oBAAyBhkE,KAL5BsiE,UAMdtiE,KAAAooB,IAAAy8C,OAAgBvC,EAAAA,QAAhBh7C,EAAoCg7C,EAAAA,QANtB72C,GAOdzrB,KAAAooB,IAAA08C,OAAgBxC,EAAAA,SAAhBh7C,EAAqCg7C,EAAAA,SAPvB72C,GAQdzrB,KAAAooB,IAAA08C,OAAgBxC,EAAAA,YAAhBh7C,EAAwCg7C,EAAAA,YAR1B72C,GASdzrB,KAAAooB,IAAA08C,OAAgBxC,EAAAA,WAAhBh7C,EAAuCg7C,EAAAA,WATzB72C,GAUdzrB,KAAAooB,IAAAhkB,UAAmBogE,EAAnBl9C,EAAgCk9C,EAVlB/4C,GAWdzrB,KAAAooB,IAAAS,OAAgBpX,KAAAA,GAAUzR,KAAAH,OAAV4R,MAA8BA,KAAAA,GAXhC,GAYd,MAAMszD,EAAM,EAAC/kE,KAAAH,OAAAspB,MAZC,EAaR67C,EAAgBhlE,KAAAooB,IAAAs8C,qBAAA,EAAA,EAAAK,EAbR,GAcd,GAAA,IAAI/kE,KAAAH,OAAAm4D,UAA2C,CAC3Ch4D,KAAAooB,IAAAhkB,WAAA2gE,GAD2C,KAE3CC,EAAAA,aAAAA,EAA8B,iBAAmBhlE,KAAAH,OAAnB+jE,QAFa,KAG3CoB,EAAAA,aAAAA,GAH2C,uBAI3CA,EAAAA,aAAAA,GAAgC,iBAAmBhlE,KAAAH,OAAnB+jE,QAJW,KAK3CoB,EAAAA,aAAAA,EAL2C,wBAO1C,CACDhlE,KAAAooB,IAAAhkB,UAAA,GADC,KAED4gE,EAAAA,aAAAA,EAA8B,iBAAmBhlE,KAAAH,OAAnB+jE,QAF7B,KAGDoB,EAAAA,aAAAA,GAHC,uBAIDA,EAAAA,aAAAA,GAAgC,iBAAmBhlE,KAAAH,OAAnB+jE,QAJ/B,KAKDoB,EAAAA,aAAAA,EALC,oBAOLhlE,KAAAooB,IA5Bc6tC,OA6Bdj2D,KAAAooB,IAAAu8C,UA7BcK,EA8BdhlE,KAAAooB,IAAAw8C,SAAA,EAAA,EAAAG,EA9Bc,EA8Be1/C,EAAAA,QAC7BrlB,KAAAooB,IA/Bcw5B,UAiClB70C,QACI/M,KAAAooB,IAAAu8C,UADI,QAEJ3kE,KAAAooB,IAAAw8C,SAAA,EAAA,EAAwB5kE,KAAA8iD,OAAxB35B,MAA2CnpB,KAAA8iD,OAFvC15B,SASZ,MAAA67C,GAQInoE,YAAAA,EAAAA,EAAAA,GACIkD,KAAAklE,WAD+B,KAE/BllE,KAAAmlE,aAF+B,IAG/BnlE,KAAAolE,SAAgB,KACZplE,KADkB8U,UAGtB9U,KAAA4yB,YAAoBc,IAChB,GAAI1zB,KAAAqlE,YAAiB3xC,EAArB7S,QAAgC,CAC5B,MAAM84C,EAAM35D,KAAAslE,YAAiB5xC,EAAjBI,QAA4BJ,EADZM,SAE5Bh0B,KAAAk3D,IAAAqO,eAF4B5L,GAG5BjmC,EAH4B5S,mBAMpC9gB,KAAAwlE,aAAqB9xC,IACjB,GAAI1zB,KAAAqlE,YAAiB3xC,EAArB7S,SACQ6S,EAAAA,eAAAA,OAAJ,EAAiC,CAC7B,MAAM+xC,EAAI/xC,EAAAA,eADmB,GAEvBimC,EAAM35D,KAAAslE,YAAiBG,EAAjB3xC,QAA4B2xC,EAFXzxC,SAG7Bh0B,KAAAklE,WAAkB,CACdQ,MADc/L,EAEdp9B,KAAMgY,KAFQC,OAKlBziC,YAAW,KACP,OAAI/R,KAAAklE,YACAllE,KAAAk3D,IAAAqO,eAD0B5L,KAG/B35D,KAZ0BmlE,cAaxBnlE,KAAAk3D,IAAAE,cAALuO,qBACIjyC,EAdyB5S,mBAkBzC9gB,KAAA4lE,UAAkBlyC,IACd,MAAMimC,EAAM35D,KAAAslE,YAAiB5xC,EAAjBI,QAA4BJ,EADpBM,SAEpBh0B,KAAAk3D,IAAA2O,SAFoBlM,IAIxB35D,KAAA8yB,YAAoBY,IAChB,MAAMimC,EAAM35D,KAAAslE,YAAiB5xC,EAAjBI,QAA4BJ,EADlBM,SAEtBh0B,KAAAk3D,IAAA4O,SAAAnM,GAFsB,IAI1B35D,KAAA+lE,YAAoBryC,IAChB,GAAIA,EAAAA,eAAAA,OAAJ,EAAiC,CAC7B,MAAM+xC,EAAI/xC,EAAAA,eADmB,GAEvBimC,EAAM35D,KAAAslE,YAAiBG,EAAjB3xC,QAA4B2xC,EAFXzxC,SAG7B,GAAIh0B,KAAAk3D,IAAAE,cAAJuO,oBAAgD,CAC5C,OAAI3lE,KAAAklE,aACIzzD,KAAAA,IAASzR,KAAAklE,WAAAQ,MAAAp+C,EAA0BqyC,EAAnCloD,GAAAA,IAAJ,SACIzR,KAAAk3D,IAAAyK,aACIjuC,EAAJsyC,YACIhmE,KAAAk3D,IAAA4O,SAAAnM,GAFuC,GAKnD,SAAI35D,KAAAk3D,IAAAyK,YACAjuC,EAD2C5S,sBAK/C9gB,KAAAk3D,IAAA4O,SAAAnM,GADC,KAKb35D,KAAAimE,WAAmBvyC,IACf,GAAIA,EAAAA,eAAAA,OAAJ,EAAiC,CAC7B,MAAM+xC,EAAI/xC,EAAAA,eADmB,GAEvBimC,EAAM35D,KAAAslE,YAAiBG,EAAjB3xC,QAA4B2xC,EAFXzxC,SAG7B,IAAIkyC,GAHyB,EAK7B,GAAA,OAAIlmE,KAAAklE,WAA0B,CAC1B,MAAM3/C,EAAKo0C,EAAAA,EAAQ35D,KAAAklE,WAAAQ,MADOp+C,EAEpB6+C,EAAQ10D,KAAAA,IAASkoD,EAAAA,EAAQ35D,KAAAklE,WAAAQ,MAFLj6C,GAG1B,GAAIha,KAAAA,IAAAA,GAAezR,KAAfyR,eACA00D,EADA10D,EACQzR,KAAAomE,eACR7xB,KAAAA,MAAav0C,KAAAklE,WAAb3wB,KAAoCv0C,KAFxCmlE,aAE2D,CACnD5/C,EAAJ,EACIvlB,KAAAk3D,IAAA0J,SAAkB5gE,KAAAklE,WAAAQ,MAAAj6C,EAA0BzrB,KAAAk3D,IAAAmP,YAAAtQ,UAAA3sC,OAA1B,EAAA,MADV,UAMRppB,KAAAk3D,IAAAyJ,SAAkB3gE,KAAAklE,WAAAQ,MAAAj6C,EAA0BzrB,KAAAk3D,IAAAmP,YAAAtQ,UAAA3sC,OAA1B,EAAA,MADjB,UAKL88C,GAXuD,EAa3DlmE,KAAAklE,WAlB0B,KAoB9BllE,KAAAk3D,IAAA2O,SAAAlM,EAzB6BuM,KA4BrClmE,KAAA21C,cA3F+B2wB,EA4F/BA,EAAAA,UAAAA,IA5F+B,eA8F/BA,EAAAA,mBAAAA,aA9F+B,oCA+F/BtmE,KAAAumE,QAAeD,EAAAA,cA/FgB,iBAgG/BtmE,KAAAk3D,IAhG+BA,EAiG/B,MAAMsP,EAAIxmE,KAAAk3D,IAAAE,cAAAqM,YAAA,EAjGqB,EAmG/B6C,EAAAA,MAAAA,SAAyB5D,EAAAA,SAAAA,EAnGM,KAoG/B4D,EAAAA,MAAAA,UAA0B5D,EAAAA,UApGK,KAqG/B,GAAA,UAAIA,EAAAA,KAAsC,CACtC4D,EAAAA,MAAAA,SAAyB5D,EAAAA,MAAAA,EADa,KAEtC4D,EAAAA,MAAAA,UAA0B5D,EAAAA,OAFY,KAI1C,GAAIA,EAAJ+D,SAAsB,CAClBH,EAAAA,MAAAA,MADkB,OAElBA,EAAAA,MAAAA,SAAyB5D,EAAAA,EAAAA,SAFP,KAItB4D,EAAAA,MAAAA,QA7G+B,QA8G/B/jE,OAAAA,iBAAAA,SAAkCvC,KAAlCuC,UA9G+B,GA+G/BvC,KAAAomE,cAAqB1D,EA/GU0D,cAoHnC14D,UACQ1N,KAAAk3D,IAAAE,cAAJsP,gBACI1mE,KAFE2mE,iBAGN3mE,KAAA4mE,YAHMl3C,SAIN1vB,KAAAumE,QAJM72C,SAWVo0C,iBACI,OAAO9jE,KADM4mE,YAQjBC,aACI,OAAO7mE,KADEumE,QAQbO,oBAAAA,GACI9mE,KAAAumE,QAAAz5C,UAAA4C,OAAA,aAD6B,eAE7B,GAAA,aAAIuM,EAA2C,CACvCj8B,KAAAk3D,IAAAE,cAAJqP,WACIzmE,KAAAumE,QAAAh3C,MAAAw3C,cACK/mE,KAAAk3D,IAAAE,cAAAhuC,OAAgCppB,KAAAk3D,IAAAE,cAAjCjuC,MAAA,IAHmC,KAI3CnpB,KAAAumE,QAAAz5C,UAAArX,IAJ2C,kBAM1C,CACGzV,KAAAk3D,IAAAE,cAAJqP,WACIzmE,KAAAumE,QAAAh3C,MAAAw3C,cACK/mE,KAAAk3D,IAAAE,cAAAhuC,QAAD,EAAkCppB,KAAAk3D,IAAAE,cAAAjuC,OAAlC,IAHP,KAKDnpB,KAAAumE,QAAAz5C,UAAArX,IALC,eAOLzV,KAf6B8U,SAiBjC6xD,iBACIpkE,OAAAA,oBAAAA,SAAqCvC,KADxBolE,UAEbplE,KAAA4mE,YAAAtzC,oBAAA,YAAkDtzB,KAFrC4yB,aAGb5yB,KAAA4mE,YAAAtzC,oBAAA,aAAmDtzB,KAHtCwlE,cAIbjjE,OAAAA,oBAAAA,YAAwCvC,KAJ3B8yB,aAKbvwB,OAAAA,oBAAAA,YAAwCvC,KAL3B+lE,aAMbxjE,OAAAA,oBAAAA,UAAsCvC,KANzB4lE,WAObrjE,OAAAA,oBAAAA,WAAuCvC,KAP1BimE,YASjBe,cACIzkE,OAAAA,iBAAAA,SAAkCvC,KAAlCuC,UADU,GAEV,GAAKvC,KAAAk3D,IAAAE,cAALsP,eAAA,CAEA1mE,KAAA4mE,YAAAzzC,iBAAA,YAA+CnzB,KAJrC4yB,aAKV5yB,KAAA4mE,YAAAzzC,iBAAA,aAAgDnzB,KALtCwlE,cAMVjjE,OAAAA,iBAAAA,YAAqCvC,KAN3B8yB,aAOVvwB,OAAAA,iBAAAA,YAAqCvC,KAArCuC,YAAuD,CACnDmc,SAAU1e,KAAAk3D,IAAAE,cARJuO,sBAUVpjE,OAAAA,iBAAAA,UAAmCvC,KAVzB4lE,WAWVrjE,OAAAA,iBAAAA,WAAoCvC,KAX1BimE,aAmBdX,YAAAA,EAAAA,GACI,MAAMjgD,EAAOrlB,KAAA4mE,YADCthD,wBAEd,MAAO,CACHgC,EAAGA,EAAIjC,EADJnD,KAEHuJ,EAAGA,EAAIpG,EAFJlD,KAKXkjD,YAAAA,GACI,OAAKrlE,KAAAk3D,IAAAE,cAAL6P,oBAEI,CAAA,IAAA,UAAAC,SAAyBC,EAAAA,QAA7B1uD,gBAUR,MAAA2uD,eAAAnC,GACInoE,YAAAA,EAAAA,EAAAA,EAAAA,GACIo5B,MAAAowC,EAAApP,EADsCwL,GAGtC1iE,KAAAumE,QAAAc,mBAAA,aAHsC,kCAItCrnE,KAAA4mE,YAAmBN,EAAAA,cAJmB,eAKtCtmE,KAAA0uB,MALsCA,EAMtC,IAAA,MAAAuI,KAAAvI,EACI1uB,KAAA4mE,YAAAzuC,YADsBlB,GAG1Bj3B,KATsCgnE,cAW1Cj6D,QACI,IAAA,MAAAkqB,KAAmBj3B,KAAnB0uB,MACI1uB,KAAA21C,cAAAxd,YAD2BlB,GASnCqwC,YAAAA,GACItnE,KADe2mE,iBAEf3mE,KAAA4mE,YAAAW,UAFe,GAGf,IAAA,MAAAtwC,KAAAvI,EACI1uB,KAAA4mE,YAAAzuC,YADsBlB,GAG1Bj3B,KAAA0uB,MANeA,EAOf1uB,KAPegnE,cASnBlyD,SACI9U,KAAAk3D,IAAAmP,YADKvxD,UAQb,MAAA0yD,iBAAAvC,GACInoE,YAAAA,EAAAA,EAAAA,GACIo5B,MAAAowC,EAAApP,EAD+BwL,GAE/B1iE,KAAAumE,QAAAgB,UAF+B,wCAG/BvnE,KAAA8iD,OAAcwjB,EAAAA,iBAAAA,UAHiB,GAI/BtmE,KAAA4mE,YAAmB5mE,KAJY8iD,OAK/B9iD,KAL+BynE,eAM/BznE,KAN+BgnE,cAQnCS,eACI,MAAMC,EAAK16C,iBAAiBhtB,KADjB8iD,QAEL35B,EAAQ5U,SAASmzD,EAAAA,iBAATnzD,SAFH,IAGL6U,EAAS7U,SAASmzD,EAAAA,iBAATnzD,UAHJ,IAIXvU,KAAA8iD,OAAA35B,MAJWA,EAKXnpB,KAAA8iD,OAAA15B,OALWA,EAUfu+C,YACI,OAAO3nE,KADC8iD,OAGZhuC,SACI9U,KADKynE,eAELznE,KAAAk3D,IAAAmP,YAFKvxD,UAgDb,MAAA8yD,mBAAA1F,OAQIplE,YAAAA,EAAAA,EAAAA,GACIo5B,MAAAghC,EAD+BwL,GAE/B1iE,KAAA6nE,YAF+B,KAG/B7nE,KAAA8nE,YAH+B,KAI/B9nE,KAAA+nE,WAJ+B,KAK/B/nE,KAAAgoE,gBAL+B,KAM/BhoE,KAAAqqB,QAN+BA,EAO/BrqB,KAP+BioE,gBASnCA,gBACIjoE,KAAAqqB,QAAAg9C,mBAAA,YAA8C,oMAI9CrnE,KAAA6nE,YAAmB7nE,KAAAqqB,QAAA0oB,cALP,qBAMZ/yC,KAAA8nE,YAAmB9nE,KAAAqqB,QAAA0oB,cANP,qBAOZ/yC,KAAA+nE,WAAkB/nE,KAAAqqB,QAAA0oB,cAPN,oBAQZ/yC,KAAAgoE,gBAAuBhoE,KAAAqqB,QAAA0oB,cARX,yBAUhB0uB,cACIvrC,MADUurC,cAEVzhE,KAAA6nE,YAAAt4C,MAAAtoB,QAFU,gBAGVjH,KAAA8nE,YAAAv4C,MAAAtoB,QAHU,gBAIVjH,KAAA+nE,WAAAx4C,MAAAtoB,QAJU,gBAKVjH,KAAAgoE,gBAAAz4C,MAAAtoB,QALU,gBAOdk9D,SACuBnkE,KAAAqqB,QAAA0oB,cADd,sBAGD/yC,KADaioE,gBAOrBC,sBACI,MAAM7iD,EAAOrlB,KADK+1D,UAEZjnD,EAAW9O,KAAAH,OAAAiP,SAAA,IAA6B,IAAM9O,KAAAH,OAAnCiP,SAA0D9O,KAAAH,OAFzDiP,SAGlB,IAAIq5D,GAAoB,IAADr5D,IAAoB,IAAMuW,EAA3B28B,WAAA,IAHJ,GAIdmmB,EAAkB9iD,EAAtB28B,YACImmB,EAAkB9iD,EALJ28B,WAMlB,IAAI4Z,EAAY,wDAEA57D,KAAAo3D,cAAA6E,YAAD,GAAA/iD,SAFA,4BAAAivD,6BAID9iD,EAJC+D,+FAMUppB,KAAAH,OAAA+jE,QAAD90D,EANT,wEAQHuW,EAAAA,KAAYA,EAAAA,MART,qDAWfu2C,GACK,IAAA57D,KAAAsG,gBAA2CtG,KAAAH,OAAAiP,SAA5C,KACK,IAAA9O,KAAAsG,gBAAwCtG,KAAAH,OAAAiP,UAD7C,IAAA,mCAlBc,mDAsBlB9O,KAAAgoE,gBAAAz4C,MAAAtoB,QAtBkB20D,EA2BtBwM,sBACI,MAAM/iD,EAAOrlB,KADK+1D,UAGlB,IAAIwO,GAAe,KADFvkE,KAAAH,OAAAiP,SAAA,IAA6B,IAAM9O,KAAAH,OAAnCiP,SAA0D9O,KAAAH,OAFzDiP,YAGoB,IAAMuW,EAA3B28B,WAAA,IAHC,GAIduiB,EAAal/C,EAAjB28B,YACIuiB,EAAal/C,EALC28B,WAMlB,IAAI4Z,EAAY,wDAEA57D,KAAAo3D,cAAA6E,YAAD,GAAA/iD,SAFA,4BAAAqrD,6BAIDl/C,EAJC+D,6EAK0CppB,KAAAH,OAL1C+jE,2DAMHv+C,EAAAA,KAAYA,EAAAA,MANT,qDASfu2C,GACK,IAAA57D,KAAAsG,gBAA2CtG,KAAAH,OAAAiP,SAA5C,KACK,IAAA9O,KAAAsG,gBAAwCtG,KAAAH,OAAAiP,UAD7C,IAAA,mDAhBc,mCAoBlB9O,KAAA+nE,WAAAx4C,MAAAtoB,QApBkB20D,EAyBtB0I,kBACI,MAAMj/C,EAAOrlB,KADC+1D,UAERoS,EAAkB,EAACnoE,KAAAH,OAAAspB,MAFX,EAGRk/C,EAAkB,IAAAroE,KAAAsG,eAAA6hE,EAHV,EAIRG,EAAkB,IAAAtoE,KAAAsG,eAAA,UAJV,WAKRk+D,EAAYxkE,KAAA81D,gBAAqB91D,KAAAH,OALzB85D,KAMR9/C,EAAQ7Z,KAAAH,OAAAga,MAAqB,EAAIpI,KAAL2d,GANpB,EAOR6mC,EAAO,CACTj2D,KAAAsiE,SADSxV,QAET9sD,KAAAsiE,SAFShF,SAGTt9D,KAAAsiE,SAHShE,YAITt+D,KAAAsiE,SAJSrF,YAMb,IAAIpB,EAbU,YAcd,IAAA,MAAAh0C,KAAAouC,EAAsB,CAClB,IAAI6F,EAAI,IAAA97D,KAAAsG,eACF,CACEghB,GAAIO,EAADP,EAAOtnB,KAAAH,OAAA85D,IADZryC,EAEEmE,EAAG5D,EAAAA,EAAM7nB,KAAAH,OAAA85D,IAFXluC,GAIA,CACEnE,EAAGO,EAAAA,EAAM7nB,KAAAH,OAAA85D,IADXryC,EAEEmE,EAAG5D,EAAAA,EAAM7nB,KAAAH,OAAA85D,IAFXluC,GAINqwC,EAAI/C,OAAAgD,gBAAAD,EAA0B,CAAEx0C,EAAF+gD,EAAsB58C,EAAtB,KAVZ5R,GAWlBgiD,GAAWC,EAAAA,EAAAA,MAAcA,EAAdA,EAXO,OAatBD,EAAUA,EAAAA,MAAAA,GA3BI,GA4BdA,GA5Bc,IA6Bd,MAAMD,EAAY,wDAEF57D,KAAAo3D,cAAA6E,YAAD,IAAA/iD,SAFE,4BAAAivD,6BAAA,EAIH9iD,EAAAA,sDAJGijD,qCAMOtoE,KAAAH,OANP+jE,yFAQO5jE,KAAAH,OARP+jE,yFAAAyE,kDAWY7D,EAAAA,EAXZ6D,QAWgD7D,EAAAA,EAXhD,oBAAA3qD,kCAAAgiD,sCAAAA,eAejB77D,KAAA8nE,YAAAv4C,MAAAtoB,QA5Cc20D,EAiDlByI,kBACI,MAAMh/C,EAAOrlB,KADC+1D,UAERyO,EAAYxkE,KAAA81D,gBAAqB,CAAExuC,EAAGtnB,KAAAH,OAAA85D,IAALryC,EAAwBmE,EAAGzrB,KAAAH,OAAA85D,IAA3BluC,IACjC5R,EAAQ7Z,KAAAH,OAAAga,MAAqB,EAAIpI,KAAL2d,GAHpB,EAIRi5C,EAAkB,IAAAroE,KAAAsG,eAAuCtG,KAAAH,OAAvCspB,MAJV,EAKRm/C,EAAkB,IAAAtoE,KAAAsG,eAAA,WALV,UAMR2vD,EAAO,CACT,CAAE3uC,EAAF,EAAQmE,EAAR,GACA,CAAEnE,EAAGjC,EAAL28B,UAAqBv2B,EAArB,GACA,CAAEnE,EAAGjC,EAAL28B,UAAqBv2B,EAAGpG,EAAxB+D,QACA,CAAE9B,EAAF,EAAQmE,EAAGpG,EAAX+D,SAEJ,IAAIyyC,EAZU,YAad,IAAA,MAAAh0C,KAAAouC,EACI,GAAA,OAAIpuC,EAAY,CACZ,IAAIi0C,EAAI,IAAA97D,KAAAsG,eACF,CACEghB,GAAIO,EAADP,EAAOtnB,KAAAH,OAAA85D,IADZryC,EAEEmE,EAAG5D,EAAAA,EAAM7nB,KAAAH,OAAA85D,IAFXluC,GAIA,CACEnE,EAAGO,EAAAA,EAAM7nB,KAAAH,OAAA85D,IADXryC,EAEEmE,EAAG5D,EAAAA,EAAM7nB,KAAAH,OAAA85D,IAFXluC,GAINqwC,EAAI/C,OAAAgD,gBAAAD,EAA0B,CAAEx0C,EAAF+gD,EAAsB58C,EAAtB,KAVlB5R,GAWZgiD,GAAWC,EAAAA,EAAAA,MAAcA,EAAdA,EAXC,OAcpBD,EAAUA,EAAAA,MAAAA,GA5BI,GA6BdA,GA7Bc,IA8Bd,MAAMD,EAAY,wDAEF57D,KAAAo3D,cAAA6E,YAAD,IAAA/iD,SAFE,4BAGJlZ,KAAAH,OAHIspB,iCAAA,EAIH9D,EAAAA,sDAJGijD,oBAKmDtoE,KAAAH,OALnD+jE,+DAAAyE,kDAOY7D,EAAAA,EAPZ6D,QAOgD7D,EAAAA,EAPhD,oBAAA3qD,kCAAAgiD,sCAAAA,eAWjB77D,KAAA6nE,YAAAt4C,MAAAtoB,QAzCc20D,EA8ClB2M,eACI,GAAI,aAAAvoE,KAAAi8B,aAAJ,OAAsDj8B,KAAAmiE,SAEtD,GAAI,IAAAniE,KAAAg4D,WAAA,OACAh4D,KAAA++D,cADJ,SAEI/+D,KAAA++D,aAAA1J,oBAA6D,CAE7D,GADcr1D,KAAA++D,aAD+CxJ,gBAE7D,GAAiB,CACbv1D,KAAAmiE,SAAAjG,aAAA3sC,MAAAksC,QAA2Cz7D,KAAAo3D,cAAA6E,YAAD,GAAA/iD,SAD7B,IAEblZ,KAAAmiE,SAAAjN,oBAAkC,IAAMl1D,KAAA++D,aAF3BxJ,gBAGbv1D,KAAAmiE,SAAAze,KAAmB1jD,KAAA++D,aAHN1J,0BAKbr1D,KAAAmiE,SAAAjG,aAAA3sC,MAAAi5C,QADG,YAKPxoE,KAAAmiE,SAAAhM,WADC,GAOTsS,gBACI,GAAA,OAAIzoE,KAAAoiE,UAEJ,GAAI,IAAApiE,KAAAg4D,WAAA,OACAh4D,KAAA++D,cADJ,SAEI/+D,KAAA++D,aAAA1J,oBAA6D,CAE7D,GADcr1D,KAAA++D,aAD+CxJ,eAE7D,GAAgB,CACZv1D,KAAAoiE,UAAAlG,aAAA3sC,MAAAksC,QAA4Cz7D,KAAAo3D,cAAA6E,YAAD,GAAA/iD,SAD/B,IAEZlZ,KAAAoiE,UAAAlN,oBAAmC,IAAMl1D,KAAA++D,aAF7BxJ,gBAGZv1D,KAAAoiE,UAAA1e,KAAoB1jD,KAAA++D,aAHR1J,0BAKZr1D,KAAAoiE,UAAAlG,aAAA3sC,MAAAi5C,QADG,YAKPxoE,KAAAoiE,UAAAjM,WADC,GAOTuS,iBACI,GAAA,OAAI1oE,KAAAg/D,WADS,OAGb,MAAMzD,EAAc,MAAAv7D,KAAA++D,aAA4B/+D,KAAA++D,aAA5B1J,oBAHP,KAIb,GAAM,aAAAr1D,KAAAi8B,aAAN,IAAwDj8B,KAAAg4D,UAAkC,CACtFh4D,KAAAg/D,WAAA9C,aAAA3sC,MAAAksC,QAA6Cz7D,KAAAo3D,cAAA6E,YAAD,GAAA/iD,SAD0C,IAEtFlZ,KAAAg/D,WAAAtb,KAFsF6X,IAK9FyH,YACI,GAAA,OAAIhjE,KAAA++D,aAA4B,CAC5B,GAAI/+D,KAAA++D,aAAAxJ,iBAAqCv1D,KAAzC2oE,UAAyD,OAGzD3oE,KAAA2oE,UAAiB3oE,KAAA++D,aAJWxJ,oBAM5Bv1D,KAAA2oE,WADG,KAIP3oE,KAVQ+M,QAWR/M,KAXQuoE,eAYRvoE,KAZQyoE,gBAaRzoE,KAbQ0oE,iBAcR,GAAA,MAAI1oE,KAAA++D,aAA2B,CAE3B,GADc/+D,KAAA++D,aAAAn9C,MADa4yC,kBAE3B,GAAiB,CACbx0D,KAAA++D,aAAA7C,aAAA3sC,MAAAksC,QAA+Cz7D,KAAAo3D,cAAA6E,YAAD,GAAA/iD,SADjC,IAEblZ,KAAA++D,aAFarb,YAIb1jD,KAAA++D,aAAA7C,aAAA3sC,MAAAi5C,QADG,OAIX,GAAI,MAAAxoE,KAAAH,QAAJ,OAA2BG,KAAA++D,aACvB,GAAA,SAAI/+D,KAAA++D,aAAA1J,oBAA6D,CAC7Dr1D,KAD6DqkE,kBAE7DrkE,KAF6DskE,sBAI5D,CACDtkE,KADCooE,sBAEDpoE,KAFCkoE,uBAMbn7D,QACI,IAAA,MAAAvB,KAAmBxL,KAAAk3D,IAAAiJ,oBAAnBxI,WAA4D,CACxD,GAAInsD,IAASxL,KAATwL,UACAA,IAASxL,KADTwL,WAEAA,IAASxL,KAFTwL,cAGAA,IAASxL,KAHbg/D,WAG8B,CAC5B,MAAMzvC,EAAQ/jB,EAAAA,aADc+jB,MAE5B,SAAIA,EAAAA,UACFA,EAAAA,QAD4B,iBAK5B/jB,EAAAA,qBAA4BxL,KAAhC++D,cACIvzD,EAD+CqrD,qBAK3D/hD,SACIohB,MADKphB,SAEL,OAAI9U,KAAAoiE,WACApiE,KAAAoiE,UAAAhN,eADyB,GAG7B,OAAIp1D,KAAAmiE,UACAniE,KAAAmiE,SAAA/M,eADwB,IAMpC,MAAAwT,SACI9rE,cACIkD,KAAA6oE,SAAgB,CACZhjC,UADY,EAEZh5B,KAFY,QAGZsc,MAHY,EAIZC,OAJY,EAKZo6C,SALY,EAMZzkB,SANY,EAOZ+pB,UAPY,EAQZC,UARY,EASZrF,YATY,EAUZ3B,aAVY,IAWZ0B,aAXY,EAYZxH,YAZY,EAaZwK,UAbY,EAcZ9C,iBAdY,EAeZ1b,WAfY,EAgBZ0d,qBAhBY,EAiBZS,cAjBY,GAkBZa,mBAlBY,EAmBZP,gBAnBY,EAoBZsC,iBApBY,EAqBZ1J,oBArBY,GA8BpBlI,YAAAA,GACI,MAAMl0C,EAASljB,KADM6oE,SAErBnwE,OAAAA,OAAAA,EAFqBuwE,GAGrB,GAAI/lD,YAAAA,EAAAA,MAAJ,UAA+CA,EAAAA,KAC3C,MAAM,IAAAnmB,MAJW,iEAKrB,GAAImmB,EAAAA,OAAAA,GAAqBA,EAAAA,QAAzB,EACI,MAAM,IAAAnmB,MANW,2BAOrB,GAAImmB,EAAAA,cAAJ,EACI,MAAM,IAAAnmB,MARW,yBASrB,GAAA,YAAImmB,EAAAA,KAAyC,CACrCA,EAAAA,UAAJ,IACIA,EAAAA,SAFqC,KAGrCA,EAAAA,SAAkBA,EAAtBsgD,WACItgD,EAAAA,SAJqC,KAKrCA,EAAAA,WAAJ,IACIA,EAAAA,UANqC,KAOrCA,EAAAA,UAAmBA,EAAvB4lD,YACI5lD,EAAAA,UARqC,SAUxC,CACDA,EAAAA,SAAkBA,EADjBiG,MAEDjG,EAAAA,SAAkBA,EAFjBiG,MAGDjG,EAAAA,UAAmBA,EAHlBkG,OAIDlG,EAAAA,UAAmBA,EAJlBkG,OAML,OAzBqBlG,IA6B7B,SAAAgmD,YAAAC,EAAA5e,QACe,IAARA,IAAiBA,EADO,IAE7B,IAAI6e,EAAW7e,EAFc6e,SAI7B,GAAID,GAAJ,oBAAY7oE,SAAZ,CAEA,IAAI+oE,EAAO/oE,SAAAA,MAAiBA,SAAAA,qBAAAA,QANC,GAOzBivB,EAAQjvB,SAAAA,cAPiB,SAQ7BivB,EAAAA,KAR6B,WAU7B,QAAI65C,GACEC,EAAJtxC,WACEsxC,EAAAA,aAAAA,EAAyBA,EADNtxC,YAMrBsxC,EAAAA,YADK95C,GAIHA,EAAJ/oB,WACE+oB,EAAAA,WAAAA,QADoB45C,EAGpB55C,EAAAA,YAAkBjvB,SAAAA,eADb6oE,KAMTD,CArkFA,03BA4kFA,MAAAlhB,iBAxbA,MAAAshB,YACIxsE,cACIkD,KAAAupE,OAAc,IADJt9C,IASd8E,GAAAA,EAAAA,GACS/wB,KAAAupE,OAAAxjC,IAAL/U,GAIIhxB,KAAAupE,OAAA95D,IAAAuhB,GAAAxX,KADC1M,GAFD9M,KAAAupE,OAAAlvB,IAAArpB,EAA2B,CADElkB,IAMjC,OAPoB9M,KAcxBmxB,IAAAA,GACInxB,KAAAupE,OAAAh0D,OADOgJ,GAGXirD,QAAAA,EAAAA,EAAwB9pE,EAAxB8pE,MACI,GAAKxpE,KAAAupE,OAAAxjC,IAAL/U,GAEA,IAAA,MAAAlkB,KAAuB9M,KAAAupE,OAAA95D,IAAvBuhB,GACIlkB,EAAS,CAAApN,KAAAA,EAAQgoC,OAARwvB,MAiajBp6D,YAAAA,EAAAA,GAA8Bo5B,QAE1Bl2B,KAAAypE,aAF0B,EAG1BzpE,KAAA0pE,YAH0B,EAI1B1pE,KAAA0iE,QAJ0B,KAK1B1iE,KAAAgrD,MAL0B,KAM1BhrD,KAAA0iE,SAAe,IAAAkG,UAAAxR,YANWsL,GAO1B1iE,KAAA2pE,MAP0BrD,EAY9B54D,UACI1N,KAAA4pE,GADMl8D,UAEN1N,KAAA2pE,MAFMj6C,SAOV5a,SACI9U,KAAAkV,OADKJ,SAEL9U,KAAAgrD,MAFK77C,OAST06D,eAAAA,GACI7pE,KAAA4pE,GAAU,IAAApC,SAAaxnE,KAAb2pE,MAAA3pE,KAA+BA,KADlB0iE,SAEvB,MAAM5f,EAAS9iD,KAAA4pE,GAFQjC,YAGvB3nE,KAAAkV,OAAc,IAAA+uD,aAAAjkE,KAAuBA,KAAvB0iE,QAHS5f,GAIvB9iD,KAAA8pE,eAAsB,IAAAhL,KAAS9+D,KAATkV,OAJClV,MAKvBA,KAAAgrD,MAAa,IAAA6N,oBAAA74D,KAA8BA,KAA9BkV,OALU4jD,GAMvB94D,KAAAgrD,MANuB57C,OAOvBpP,KAAAkV,OAPuBoiD,QAQvBt3D,KAAAgrD,MAAA77C,KAAgBnP,KAAA0iE,QARO78B,WAUvB9zB,YAAW,KACP/R,KAAA4pE,GADa90D,SAEb9U,KAAAwpE,QAAA,OAAAxpE,KAA2B,CACvBwL,KAAMxL,KAAA0iE,QADiB78B,UAEvB1kB,KAAMnhB,KAAAkV,OAFiBsiD,qBAZR,GAuB3BtP,aAAAA,GACIloD,KAAA4pE,GAAU,IAAAxC,OAAWpnE,KAAX2pE,MAAA3pE,KAA6BA,KAA7B0iE,QADMh0C,GAEhB1uB,KAAAkV,OAAc,IAAA0yD,WAAA5nE,KAAqBA,KAArB0iE,QAAmC1iE,KAAA4pE,GAFjC9F,kBAGhB9jE,KAAA8pE,eAAsB,IAAAhL,KAAS9+D,KAATkV,OAHNlV,MAIhBA,KAAAgrD,MAAa,IAAAmR,mBAAAn8D,KAA6BA,KAA7BkV,OAA0ClV,KAAA4pE,GAA1C9F,iBAJGp1C,GAKhB1uB,KAAAgrD,MALgB57C,OAMhBpP,KAAAkV,OANgBoiD,QAOhBt3D,KAAAgrD,MAAA77C,KAAgBnP,KAAA0iE,QAPA78B,WAShB9zB,YAAW,KACP/R,KAAA4pE,GADa90D,SAEb9U,KAAAwpE,QAAA,OAAAxpE,KAA2B,CACvBwL,KAAMxL,KAAA0iE,QADiB78B,UAEvB1kB,KAAMnhB,KAAAkV,OAFiBsiD,qBAXf,GAsBpBuS,iBAAAA,GACI,MAAM7rC,EAAUl+B,KAAAgrD,MADSqN,sBAEzBr4D,KAAAgrD,MAFyBt9C,UAGzB1N,KAAAgrD,MAAa,IAAA6N,oBAAA74D,KAA8BA,KAA9BkV,OAHY4jD,GAIzB94D,KAAAgrD,MAJyB57C,OAKzBpP,KAAAgrD,MAAA77C,KALyB+uB,GAMzBl+B,KAAAwpE,QAAA,SAAAxpE,KAA6B,CACzBwL,KADyB0yB,EAEzB/c,KAAMnhB,KAAAkV,OAFmBsiD,mBAUjCwS,eAAAA,GACI,MAAM9rC,EAAUl+B,KAAAgrD,MADEqN,sBAElBr4D,KAAAgrD,MAFkBt9C,UAGlB1N,KAAAgrD,MAAa,IAAAmR,mBAAAn8D,KAA6BA,KAA7BkV,OAA0ClV,KAAA4pE,GAA1C9F,iBAHKp1C,GAIlB1uB,KAAAgrD,MAJkB57C,OAKlBpP,KAAA4pE,GAAAtC,YALkB54C,GAMlB1uB,KAAAkV,OANkBivD,SAOlBnkE,KAAAgrD,MAAA77C,KAPkB+uB,GAQlBl+B,KAAAwpE,QAAA,SAAAxpE,KAA6B,CACzBwL,KADyB0yB,EAEzB/c,KAAMnhB,KAAAkV,OAFmBsiD,mBAQjCzqD,QACI/M,KAAAgrD,MADIt9C,UAEJ1N,KAAA4pE,GAFI78D,QAORw0D,iBACIvhE,KAAAgrD,MADaoN,WAMjBoJ,iBACIxhE,KAAAgrD,MADakN,WAQjBtQ,WAAAA,GACI5nD,KAAAgrD,MAAA77C,KADa3D,GAQjBm1D,SAASpE,EAAToE,OACI3gE,KAAA8pE,eAAAnJ,SAD+BpE,GAQnCqE,SAASrE,EAATqE,OACI5gE,KAAA8pE,eAAAlJ,SAD+BrE,GASnC9U,KAAAA,EAAW8U,EAAX9U,OACIznD,KAAA8pE,eAAApJ,WAAAl1D,EADiC+wD,GAQrCqF,YAAAA,GACI5hE,KAAAwpE,QAAA,cAAAxpE,KADkB0sC,GAQtBksB,gBAAAA,GACI54D,KAAAwpE,QAAA,OAAAxpE,KADqBiqE,GAQzB9G,kBAAAA,GACInjE,KAAA4pE,GAAA9C,oBAD8BoD,GAE9BlqE,KAF8B8U,SAG9B9U,KAAAwpE,QAAA,oBAAAxpE,KAH8BkqE,GAUlCxS,eACI,OAAO13D,KAAAgrD,MADI0M,eAQfW,sBACI,OAAOr4D,KAAAgrD,MADWqN,sBAStB/9B,QAAAA,GACI,OAAOt6B,KAAAgrD,MAAA1wB,QADQ4G,GAQnBmlC,YACI,OAAOrmE,KADCkV,OAQZi1D,oBACI,OAAOnqE,KADS8pE,eAQpBtS,iBACI,OAAOx3D,KAAAkV,OADMsiD,iBAQjBiI,gBACI,OAAOz/D,KAAAkV,OADK6gD,UAQhBqB,cACI,OAAOp3D,KADG0iE,QAQdmB,QACI,OAAO7jE,KADH4pE,GAQRjI,WACI,OAAO3hE,KAAA8pE,eADAnI,WAQXxB,oBACI,OAAOngE,KADSgrD,MAQpBua,eAAAA,GACIvlE,KAAAoqE,cADgBzQ,EAEhB35D,KAAAypE,aAFgB,EAGhBzpE,KAAA0pE,YAHgB,EAWpB5D,SAAAA,EAAAA,GACI,GAAK9lE,KAADypE,aAAAY,IAAiCrqE,KAAA0iE,QAArCsG,iBAGK,GAAIhpE,KAAJypE,aACG1Q,OAAAA,2BAAkC/4D,KAAlC+4D,cAAAA,GAAJ,EAAoE,CAChE/4D,KAAA0pE,YADgE,EAEhE1pE,KAAA8pE,eAAA7K,KAFgEtF,SAHpE35D,KAAA8pE,eAAAhJ,WAD+DnH,GAgBvEkM,SAAAA,EAAcK,GAAdL,GACI,GAAI7lE,KAAJypE,YAAsB,CAClBzpE,KAAAypE,aADkB,EAElBvD,IACSlmE,KAAL0pE,WAGI1pE,KAAA8pE,eAJMjJ,WAEN7gE,KAAA8pE,eAAAriB,KADJkS,wFCt2FhB,IAAA/7D,EAAAH,EAAA,GAOAD,EAAAC,EAAA,GAvCAC,EAAAD,EAAA,GAAAwnD,EAAAxnD,EAAA,IAAA6sE,0EAAAC,CAAA9sE,EAAA,KAAA+sE,EAAA/sE,EAAA,IAyFA,MAAMgtE,EAAoBhyE,EAAAA,oBAAAA,iBAzF1B,uBA8FA,MAAA0xD,YACExwD,GAAkB2sD,EAAAA,eADFC,aAMhBzpD,YAAAA,GAAqB,IAAA4tE,EAAAC,EACnB,MAAMxiE,EAAY9K,EADC8K,UAEby4C,EAAkBvjD,EAFLujD,gBAInB5gD,KAAAwrB,GAAUnuB,EAJSmuB,GAKnBxrB,KAAA63C,YAAmB,OAAS73C,KALTwrB,GAOnBxrB,KAAA0T,QAPmB,KAQnB1T,KAAAkkB,UARmB,KASnBlkB,KAAAkT,SATmB,EAUnBlT,KAAAiiB,MAAa5kB,EAAAA,OAVMG,EAAAsrD,cAWnB9oD,KAAAygD,SAXmBG,EAYnB5gD,KAAA6hD,cAAqBjB,EAZF1tC,SAanBlT,KAAAsgD,8BACEjjD,EAAAA,8BAdiB,KAenB2C,KAAA4qE,sBAfmB,EAgBnB5qE,KAAA5E,cAAqBiC,EAAAA,eAAyBkI,EAAAA,cAhB3B+oB,OAiBnBtuB,MAAKrG,EACH0D,EAAAA,gBAA0BipD,EAAAA,eAlBTC,aAmBnBvmD,KAAAtF,mBAA0B2C,EAAAA,oBAnBP,GAoBnB2C,KAAA3E,eAAsBgC,EAAAA,iBApBH,EAqBnB2C,KAAArF,gBAAuB0C,EAAAA,iBArBJotE,EAuBnBzqE,KAAAkC,SAAgB7E,EAvBG6E,SAwBnBlC,KAAAqI,eAAsBhL,EAxBHgL,eAyBnBrI,KAAAgqD,iBAAwB3sD,EAzBL2sD,iBA0BnBhqD,KAAAiqD,uBAA8B5sD,EA1BX4sD,uBA2BnBjqD,KAAAkqD,gBAAuB7sD,EA3BJ6sD,gBA4BnBlqD,KAAA6qE,gBAAA,QAAAH,EACErtE,EAAAA,8BADF,IAAAqtE,OAAA,EACErtE,EAAAA,sBACE2C,KAAAwrB,GADFnuB,EAEE2C,KA/BekC,UAiCnBlC,KAAAqqD,uBAA8BhtD,EAjCXgtD,uBAkCnBrqD,KAAAhF,SAAgBqC,EAAAA,UAAoBod,EAAAA,aAlCjB4T,OAmCnBruB,KAAAmC,KAAY9E,EAAAA,MAnCO4nD,EAAA8B,SAqCnB/mD,KAAA8qE,UArCmB,KAsCnB9qE,KAAA+qE,mBAA0B,IAtCPC,QAuCnBhrE,KAAA+4C,eAAsBx2B,EAAAA,gBAvCHwL,QAwCnB/tB,KAAAg5C,OAxCmB,KAyCnBh5C,KAAAirE,aAzCmB,KA0CnBjrE,KAAAkrE,gBAAqB,QAAAP,EAAC3qE,KAAAqI,sBAAD,IAAAsiE,GAACA,EA1CH7yB,aA4CnB93C,KAAA6vD,qBA5CmB,KA8CnB7vD,KAAAmrE,gBA9CmB,KA+CnBnrE,KAAAorE,UA/CmB,KAgDnBprE,KAAAqrE,UAhDmB,KAiDnBrrE,KAAAsrE,SAjDmB,KAkDnBtrE,KAAAurE,gBAlDmB,KAoDnB,MAAMjhD,EAAMhqB,SAAAA,cApDO,OAqDnBgqB,EAAAA,UArDmB,OAsDnBA,EAAAA,MAAAA,MAAkB7Y,KAAAA,MAAWzR,KAAAygD,SAAXhvC,OAtDC,KAuDnB6Y,EAAAA,MAAAA,OAAmB7Y,KAAAA,MAAWzR,KAAAygD,SAAXhvC,QAvDA,KAwDnB6Y,EAAAA,aAAAA,mBAAqCtqB,KAxDlBwrB,IAyDnBlB,EAAAA,aAAAA,OAzDmB,UA0DnBtqB,KAAAmC,KAAAsN,IAAA,gBAA+B,CAAEjE,KAAMxL,KAAvCwrB,KAAAnnB,MAAuDqL,IACrD4a,EAAAA,aAAAA,aAD4D5a,MAG9D1P,KAAAsqB,IA7DmBA,EA+DnBniB,MAAAA,GAAAA,EAAAA,YA/DmBmiB,GAkErBo4B,WAAAA,GACE1iD,KAAA0T,QADkBA,EAElB1T,KAAA6hD,cAAqBnuC,EAFHmV,OAIlB,MAAM85B,GAAiB3iD,KAAAkT,SAAgBlT,KAAjB6hD,eAJJ,IAKlB7hD,KAAAygD,SAAgB/sC,EAAAkvC,YAAoB,CAClC3gC,MAAOjiB,KAAAiiB,MAAa6nC,EAAAA,cADcC,iBAElC72C,SAFkCyvC,IAIpC3iD,KATkB8N,QAYpBJ,UACE1N,KADQ8N,QAEJ9N,KAAJ0T,SACE1T,KAAA0T,QADgB3F,UAQpBzK,+BACE,IAAI4d,EADyB,KAE7B,UACQlhB,KAAAmrE,gBAAAj2D,OAA4BlV,KAA5BygD,SADJ,WAEF,MAAAj0C,GACA0U,EADW1U,EAFb,QAKExM,KAAAkC,SAAAoC,SAAA,0BAAkD,CAChDC,OADgDvE,KAEhD0Z,WAAY1Z,KAFoCwrB,GAAAtK,MAAAA,KAWtD5d,wBACE,IAAI4d,EADkB,KAEtB,IACE,MAAMgC,QAAeljB,KAAAsrE,SAAAp2D,OAAqBlV,KAArBygD,SADnB,WAEEzgD,KAAJ6qE,iBACE7qE,KAAAwrE,0BAA+BtoD,EADPuoD,UAG1B,MAAAj/D,GACA0U,EADW1U,EALb,QAQExM,KAAAkC,SAAAoC,SAAA,mBAA2C,CACzCC,OADyCvE,KAEzC0Z,WAAY1Z,KAF6BwrB,GAAAtK,MAAAA,KAQ/C5d,gCAAAmoE,GACE,MAAM9sC,QAAa3+B,KAAA0T,QADqBg4D,iBAElCh9C,EAFkC,GAGxC,IAAA,MAAAuI,KAAmB0H,EAAnBjQ,MACEA,EAAAA,KAAWuI,EADkB0O,KAG/B3lC,KAAA6qE,gBAAAc,eAAAF,EANwC/8C,GAOxC1uB,KAAA6qE,gBAPwCe,SAa1CC,gBAAgBC,GAAhBD,GACE,IAAK7rE,KAALqrE,UAAqB,OAGrB,MAAMU,EAAkB/rE,KAAAqrE,UAJatzC,WAKrC/3B,KAAA+qE,mBAAAx1D,OALqCw2D,GAQrCA,EAAAA,MARqC,EASrCA,EAAAA,OATqC,EAWrCD,GAEE9rE,KAAAqrE,UAFiB37C,SAInB1vB,KAAAqrE,UAfqC,KAkBvCv9D,OAAMk+D,cACJA,GADI,EAAAC,oBAEJA,GAFI,EAAAC,aAGJA,GAHI,GAANp+D,IAIQ,IAAAq+D,EAAAC,EACNpsE,KAAA+gD,gBAAqB,CAAAkrB,oBAAAA,EAAAC,aAAAA,IACrBlsE,KAAA+4C,eAAsBx2B,EAAAA,gBAFhBwL,QAIN,MAAMzD,EAAMtqB,KAJNsqB,IAKNA,EAAAA,MAAAA,MAAkB7Y,KAAAA,MAAWzR,KAAAygD,SAAXhvC,OALZ,KAMN6Y,EAAAA,MAAAA,OAAmB7Y,KAAAA,MAAWzR,KAAAygD,SAAXhvC,QANb,KAQN,MAAM46D,EAAa/hD,EAAnB+hD,WACEC,EAAiBN,GAAiBhsE,KAAlBqrE,WADlB,KAEEkB,EACGN,IAAAA,QAAAA,EAAuBjsE,KAAAmrE,uBAAvBc,IAAAA,OAAAA,EAAuBE,EAAxB7hD,MAHJ,KAIEkiD,EAAgBN,IAAAA,QAAAA,EAAgBlsE,KAAAsrE,gBAAhBY,IAAAA,OAAAA,EAAgBE,EAAjB9hD,MAZX,KAaN,IAAK,IAAI5jB,EAAI2lE,EAAAA,OAAb,EAAoC3lE,GAApC,EAA4CA,IAAK,CAC/C,MAAM6sB,EAAO84C,EADkC3lE,GAE/C,OAAA6sB,GACE,KADF+4C,EAEE,KAFFC,EAGE,KAAAC,EAHF,SAMAj5C,EAR+C7D,SAUjDpF,EAAAA,gBAvBM,eAyBNiiD,GAGEvsE,KAAAmrE,gBAHuBn/D,OAKzBwgE,GAGExsE,KAAAsrE,SAHgBt/D,OAMlB,IAAAsgE,EAAoB,CAClB,GAAItsE,KAAJ8iD,OAAiB,CACf9iD,KAAA+qE,mBAAAx1D,OAA+BvV,KADhB8iD,QAIf9iD,KAAA8iD,OAAA35B,MAJe,EAKfnpB,KAAA8iD,OAAA15B,OALe,SAMRppB,KANQ8iD,OAQjB9iD,KATkB6rE,kBAWpB,GAAI7rE,KAAJysE,IAAc,CACZzsE,KAAA+qE,mBAAAx1D,OAA+BvV,KADnBysE,YAELzsE,KAFKysE,IAKdzsE,KAAA0sE,eAAsBpsE,SAAAA,cApDhB,OAqDNN,KAAA0sE,eAAArc,UArDM,yBAsDFrwD,KAAJkrE,eACElrE,KAAA2tD,0BADsB,GAGxB3tD,KAAA0sE,eAAA1uC,aAAA,OAzDM,OA0DNh+B,KAAAmC,KAAAsN,IAAA,WAAApL,MAA8BqL,IAAO,IAAAi9D,EACnC,QAAAA,EAAA3sE,KAAA0sE,sBAAA,IAAAC,GAAAA,EAAA3uC,aAAA,aADmCtuB,MAGrC4a,EAAAA,YAAgBtqB,KA7DV0sE,gBAgER53D,QAAOmN,MAAEA,EAAF,EAAA/O,SAAaA,EAAb,KAAAmI,6BAA8BA,EAArCvG,OACE,GAAA,iBAGS83D,UAAP,GACA,CACAjoE,OAAAA,WAAAA,MADA,qFAKA3E,KAAA8U,OAAY,CACVmN,MAAO2qD,UADG,GAEV15D,SAAU05D,UAFA,GAGVvxD,6BAA8BuxD,UAHpB,KALZ,OAaF5sE,KAAAiiB,MAAaA,GAASjiB,KAlBoDiiB,MAmB1E,iBAAI/O,IACFlT,KAAAkT,SADgCA,GAG9BmI,aAAJnV,UACElG,KAAAsgD,8BADmDjlC,GAIrD,MAAMsnC,GAAiB3iD,KAAAkT,SAAgBlT,KAAjB6hD,eA1BoD,IA2BpEgrB,EAAgB7sE,KAAAiiB,MAAa6nC,EAAAA,cA3BuCC,iBA4B1E/pD,KAAAygD,SAAgBzgD,KAAAygD,SAAAI,MAAoB,CAClC5+B,MADkC4qD,EAElC35D,SAFkCyvC,IAKpC,GAAI3iD,KAAJkrE,cAAwB,CACtB,MAAM37C,MAAAA,GAAYjvB,SADI6D,gBAEtBorB,EAAAA,YAAAA,gBAAmCvvB,KAFbiiB,OAGtBsN,EAAAA,YAAAA,0BAHsBs9C,GAMxB,GAAI7sE,KAAJysE,IAAc,CACZzsE,KAAA8sE,aAAkB,CAChBjsD,OAAQ7gB,KADQysE,IAEhBM,uBAFgB,EAGhBC,gBAHgB,IAMlBhtE,KAAAkC,SAAAoC,SAAA,eAAuC,CACrCC,OADqCvE,KAErC0Z,WAAY1Z,KAFyBwrB,GAGrCshD,cAHqC,EAIrC93D,UAAWg4B,YAJ0BwH,MAKrCtzB,MAAOlhB,KAL8BirE,eAP3B,OAiBd,IAAIgC,GAxDsE,EAyD1E,GAAIjtE,KAAA8iD,QAAe9iD,KAAArF,gBAAnB,EAA6C,CAC3C,MAAMwoD,EAAcnjD,KADuBmjD,aAGvC1xC,KAAAA,MAAWzR,KAAAygD,SAAXhvC,OAAkC0xC,EAAnC36B,GAAD,IACI/W,KAAAA,MAAWzR,KAAAygD,SAAXhvC,QAAmC0xC,EAApC16B,GADH,GAEAzoB,KAHFrF,kBAKEsyE,GADA,GAKJ,GAAIjtE,KAAJ8iD,OAAiB,CACf,GACE9iD,KAAA3E,gBACC2E,KAAA4qE,sBAFHqC,EAGE,CACAjtE,KAAA8sE,aAAkB,CAChBjsD,OAAQ7gB,KADQ8iD,OAEhBiqB,uBAFgB,EAGhBC,gBAHgB,IAMlBhtE,KAAAkC,SAAAoC,SAAA,eAAuC,CACrCC,OADqCvE,KAErC0Z,WAAY1Z,KAFyBwrB,GAGrCshD,cAHqC,EAIrC93D,UAAWg4B,YAJ0BwH,MAKrCtzB,MAAOlhB,KAL8BirE,eAPvC,OAgBF,IAAKjrE,KAADqrE,YAAoBrrE,KAAA8iD,OAAxBnrB,OAA4C,CAC1C33B,KAAAqrE,UAAiBrrE,KAAA8iD,OADyBxzB,WAE1CtvB,KAAAqrE,UAAA97C,MAAAsd,SAF0C,YAK1C7sC,KAAJqrE,WACErrE,KAAA8sE,aAAkB,CAAEjsD,OAAQ7gB,KAAAqrE,UADVtzC,aAGpB/3B,KAAA8N,MAAW,CACTk+D,eADS,EAETC,qBAFS,EAGTC,cAHS,IAWbnrB,iBAAgBkrB,oBAAEA,GAAF,EAAAC,aAA+BA,GAA/B,GAAhBnrB,IACE,GAAI/gD,KAAJ8qE,UAAoB,CAClB9qE,KAAA8qE,UADkB9nB,SAElBhjD,KAAA8qE,UAFkB,KAIpB9qE,KAAAg5C,OAL0E,KAO1E,GAAIh5C,KAAJorE,UAAoB,CAClBprE,KAAAorE,UADkBpoB,SAElBhjD,KAAAorE,UAFkB,KAIpB,GACEprE,KAAAmrE,mBACCc,IAAyBjsE,KAAAmrE,gBAF5B7gD,KAGE,CACAtqB,KAAAmrE,gBADAnoB,SAEAhjD,KAAAmrE,gBAFA,KAGAnrE,KAAA6vD,qBAHA,KAKF,GAAI7vD,KAAAsrE,YAAkBY,IAAkBlsE,KAAAsrE,SAAxChhD,KAA4D,CAAA,IAAA4iD,EAC1DltE,KAAAsrE,SAD0DtoB,SAE1DhjD,KAAAsrE,SAF0D,KAG1D,QAAA4B,EAAAltE,KAAA6qE,uBAAA,IAAAqC,GAAAA,EAH0DC,UAK5D,GAAIntE,KAAJotE,qBAA+B,CAC7BptE,KAAAkC,SAAAkvB,KAAA,oBAAwCpxB,KADXotE,sBAE7BptE,KAAAotE,qBAF6B,MAMjCN,cAAajsD,OAAAA,EAAAksD,sBAEXA,GAFW,EAAAC,eAGXA,GAHFF,IAME,MAAM3jD,EAAQnpB,KAAAygD,SAFbt3B,MAGKC,EAASppB,KAAAygD,SAHdr3B,OAIKkB,EAAMtqB,KAJXsqB,IAKDzJ,EAAAA,MAAAA,MACEA,EAAAA,WAAAA,MAAAA,MACAyJ,EAAAA,MAAAA,MACE7Y,KAAAA,MAAAA,GARH,KASDoP,EAAAA,MAAAA,OACEA,EAAAA,WAAAA,MAAAA,OACAyJ,EAAAA,MAAAA,OACE7Y,KAAAA,MAAAA,GAZH,KAcD,MAAM47D,EACJrtE,KAAAygD,SAAAvtC,SAAyBlT,KAAA+qE,mBAAAt7D,IAAAoR,GAf1B3N,SAgBKo6D,EAAc77D,KAAAA,IAhBnB47D,GAiBD,IAAIE,EAAJ,EACEC,EAlBD,EAmBD,GAAIF,KAAAA,GAAJ,MAA0BA,EAAqB,CAE7CC,EAASnkD,EAFoCD,EAG7CqkD,EAASrkD,EAHoCC,EAK/CvI,EAAAA,MAAAA,UAAyB,UAAAwsD,eAAAE,MAAAC,KAEzB,GAAIxtE,KAAJorE,UAAoB,CAKlB,MAAMqC,EAAoBztE,KAAAorE,UALR3qB,SAMZitB,EACJ1tE,KAAAygD,SAAAvtC,SAAyBu6D,EAPTv6D,SAQZy6D,EAAkBl8D,KAAAA,IARNi8D,GASlB,IAAIzrD,EAAQkH,EAAQskD,EATFtkD,MAUdwkD,KAAAA,GAAJ,MAA8BA,IAC5B1rD,EAAQkH,EAAQskD,EADqCrkD,QAGvD,MAAM2kC,EAAe/tD,KAAAorE,UAbHrd,aAclB,IAAA6f,EAdkBC,EAelB,OAAAF,GACE,KAAA,EACEC,EAASC,EADX,EADF,MAIE,KAAA,GACED,EADF,EAEEC,EAAS,IAAM9f,EAAAA,MAFjB3kC,OAJF,MAQE,KAAA,IACEwkD,EAAS,IAAM7f,EAAAA,MADjB5kC,MAEE0kD,EAAS,IAAM9f,EAAAA,MAFjB3kC,OARF,MAYE,KAAA,IACEwkD,EAAS,IAAM7f,EAAAA,MADjB5kC,MAEE0kD,EAFF,EAZF,MAgBE,QACElpE,OAAAA,WAAAA,MADF,uBAKFopD,EAAAA,MAAAA,UACE,UAAA4f,eACA1rD,gBACA2rD,MAAAC,KACF9f,EAAAA,MAAAA,gBAxCkB,QA2ChBgf,GAAyB/sE,KAA7BmrE,iBACEnrE,KADiD8tE,yBAG/Cd,GAAkBhtE,KAAtBsrE,UACEtrE,KADmC+tE,kBAKnC5kD,YACF,OAAOnpB,KAAAygD,SADGt3B,MAIRC,aACF,OAAOppB,KAAAygD,SADIr3B,OAIb4kD,aAAAA,EAAAA,GACE,OAAOhuE,KAAAygD,SAAAwtB,kBAAA3mD,EADUmE,GAOnBkiC,yBAAyBugB,GAAzBvgB,GAA8C,IAAAwgB,EAC5C,QAAAA,EAAAnuE,KAAA0sE,sBAAA,IAAAyB,GAAAA,EAAArhD,UAAAnL,OAAA,cAD4CusD,GAI9CxqB,OAAO,IAAA0qB,EAAAC,EACL,GAAIruE,KAAA+4C,iBAAwBx2B,EAAAA,gBAA5BwL,QAAqD,CACnDppB,OAAAA,WAAAA,MADmD,uCAEnD3E,KAFmD8N,QAIrD,MAAMwc,IAAAA,EAAA5W,QAAAA,GALD1T,KAOL,IAAA0T,EAAc,CACZ1T,KAAA+4C,eAAsBx2B,EAAAA,gBADVC,SAGZ,GAAIxiB,KAAJ0sE,eAAyB,CACvB1sE,KAAA0sE,eADuBh9C,gBAEhB1vB,KAFgB0sE,eAIzB,OAAOxmE,QAAAA,OAAe,IAAAnJ,MAPV,0BAUdiD,KAAA+4C,eAAsBx2B,EAAAA,gBAjBjByL,QAqBL,MAAMsgD,EAAgBhuE,SAAAA,cArBjB,OAsBLguE,EAAAA,MAAAA,MAA4BhkD,EAAAA,MAtBvBnB,MAuBLmlD,EAAAA,MAAAA,OAA6BhkD,EAAAA,MAvBxBlB,OAwBLklD,EAAAA,UAAAA,IAxBK,iBA0BL,QAAAF,EAAIpuE,KAAAmrE,uBAAJ,IAAAiD,GAAIA,EAAJ9jD,IAEEA,EAAAA,aAAAA,EAAgCtqB,KAAAmrE,gBAFH7gD,KAI7BA,EAAAA,YADKgkD,GAIP,IAAIlD,EAjCC,KAkCL,GAAIprE,KAAA5E,gBAAuBmK,EAAAA,cAAvBC,SAAgDxF,KAApDgqD,iBAA2E,CAAA,IAAAukB,EACzE,MAAMxgB,EAAeztD,SAAAA,cADoD,OAEzEytD,EAAAA,UAFyE,YAGzEA,EAAAA,MAAAA,MAA2BugB,EAAAA,MAH8CnlD,MAIzE4kC,EAAAA,MAAAA,OAA4BugB,EAAAA,MAJ6CllD,OAKzE,QAAAmlD,EAAIvuE,KAAAmrE,uBAAJ,IAAAoD,GAAIA,EAAJjkD,IAEEA,EAAAA,aAAAA,EAA+BtqB,KAAAmrE,gBAFF7gD,KAI7BA,EAAAA,YADKyjC,GAIPqd,EAAYprE,KAAAgqD,iBAAA4D,uBAAAG,EAEV/tD,KAAAwrB,GAFU,EAGVxrB,KAHUygD,SAIVzgD,KAAA5E,gBAAuBmK,EAAAA,cAJbgpB,eAKVvuB,KALUkC,SAMVlC,KAlBuE6qE,iBAqB3E7qE,KAAAorE,UAvDKA,EAyDL,GACEprE,MAAKrG,IAAoB2sD,EAAAA,eAAzB9gD,SACAxF,KAFFiqD,uBAGE,CACAjqD,KAAA6vD,uBAA8B,IAD9B5jC,IAEAjsB,KAAAmrE,kBACEnrE,KAAAiqD,uBAAAkE,6BAAA7jC,EAAA5W,EAAA,KAIE1T,KAJFtF,mBAKEsF,MAAKrG,IAAoB2sD,EAAAA,eAL3BC,aAMEvmD,KANFmC,KAAA,KAAA,KAAA,KAAA,KAW4BnC,KAd9B6vD,sBAkBF,QAAAwe,EAAIruE,KAAAsrE,gBAAJ,IAAA+C,GAAIA,EAAJ/jD,KAEEA,EAAAA,YAAgBtqB,KAAAsrE,SAFMhhD,KAKxB,IAAIkkD,EAnFC,KAoFDxuE,KAAJqI,iBACEmmE,EAAyBzqB,IACvB,GAAK/jD,KAAAqI,eAAAuvC,kBAAL53C,MAQA+jD,QARA,CACE/jD,KAAA+4C,eAAsBx2B,EAAAA,gBAD0B0L,OAEhDjuB,KAAAg5C,OAAc,KACZh5C,KAAA+4C,eAAsBx2B,EAAAA,gBADJyL,QAElB+1B,QAQR,MAAM0qB,gBAAkBnrE,MAAO4d,EAAP,QAIlB4pD,IAAc9qE,KAAlB8qE,YACE9qE,KAAA8qE,UADgC,MAIlC,GAAI5pD,aAAJtjB,EAAAq7C,4BACEj5C,KAAAirE,aADgD,SAAlD,CAIAjrE,KAAAirE,aAZ8C/pD,EAc9ClhB,KAAA+4C,eAAsBx2B,EAAAA,gBAdwBC,SAgB9C,GAAIxiB,KAAJ0sE,eAAyB,CACvB1sE,KAAA0sE,eADuBh9C,gBAEhB1vB,KAFgB0sE,eAIzB1sE,KAAA6rE,iBApB8C,GAsB9C7rE,KAAAkC,SAAAoC,SAAA,eAAuC,CACrCC,OADqCvE,KAErC0Z,WAAY1Z,KAFyBwrB,GAGrCshD,cAHqC,EAIrC93D,UAAWg4B,YAJ0BwH,MAKrCtzB,MAAOlhB,KAL8BirE,eAQvC,GAAA/pD,EACE,MADSA,IAKP4pD,EACJ9qE,KAAAhF,WAAkByf,EAAAA,aAAlBC,IACI1a,KAAA0uE,WADJJ,GAEItuE,KAAA2uE,cAxIDL,GAyILxD,EAAAA,iBAzIK0D,EA0ILxuE,KAAA8qE,UA1IKA,EA4IL,MAAM9mB,EAAgB8mB,EAAAlgE,QAAAvG,MACpB,IACSoqE,gBAAA,MAAApqE,MAA2B,KAChC,GAAA+mE,EAAe,CACb,MAAMwD,EAAiBl7D,EAAAm7D,kBAA0B,CAC/CvpC,qBAD+C,EAE/CwpC,sBAF+C,IAIjD1D,EAAAA,qBALawD,GAMbxD,EANal2D,SASXlV,KAAJmrE,iBACEnrE,KADwB8tE,8BAK9B,SAAAjpE,GACE,OAAO4pE,gBADS5pE,MAKpB,GAAI7E,KAAJkqD,gBAA0B,CACnBlqD,KAALsrE,WACEtrE,KAAAsrE,SAAgBtrE,KAAAkqD,gBAAAwE,sBAAApkC,EAAA5W,EADE,OAOpB1T,KARwB+tE,kBAa1B,GAAI/tE,KAAAqqD,wBAA+BrqD,KAA/BorE,WAAiDprE,KAArD8iD,OAAkE,CAGhE9iD,KAAAotE,qBAA4B7uD,IAC1B,GAAIA,EAAAA,aAAqBve,KAAzBwrB,GAAA,CAGAxrB,KAAAkC,SAAAkvB,KAAA,oBAAwCpxB,KAJLotE,sBAKnCptE,KAAAotE,qBALmC,KAO9BptE,KAAL8iD,QAGA9iD,KAAA0T,QAAAq7D,gBAAA1qE,MAAkC2qE,IAChC,IAAAA,EAAW,OAGX,IAAKhvE,KAAL8iD,OAAkB,OAGlB,MAAMmsB,EAAUjvE,KAAAurE,gBAAAr2D,OAPwB85D,GAQxCC,EAAAA,UAAAA,IARwC,cASxCjvE,KAAA8iD,OAAA3qB,YATwC82C,QAY5CjvE,KAAAkC,SAAA4T,IAAA,oBAAuC9V,KAzByBotE,sBA0BhEptE,KAAAurE,gBACEvrE,KAAAqqD,uBAAAwE,6BA3B8Dn7C,GA8BlE4W,EAAAA,aAAAA,eA7MK,GA+MLtqB,KAAAkC,SAAAoC,SAAA,aAAqC,CACnCC,OADmCvE,KAEnC0Z,WAAY1Z,KAFuBwrB,KAIrC,OAnNKw4B,EAsNP2qB,cAAAA,GACE,MAAMO,GADqB,EAAAtxE,EAAA4C,2BAErB0iB,EAAS,CACbtY,QAASskE,EADItkE,QAEbukE,iBAAAA,GACEprB,KAEFf,SACElB,EADOkB,WAKLvC,EAAWzgD,KAZUygD,SAarBqC,EAASxiD,SAAAA,cAbY,UAiB3BwiD,EAAAA,QAjB2B,EAkB3B,IAAIssB,GAlBuB,EAmB3B,MAAMC,WAAa,WACjB,GAAAD,EAAoB,CAClBtsB,EAAAA,QADkB,EAElBssB,GAFkB,IAMtBd,EAAAA,YA1B2BxrB,GA2B3B9iD,KAAA8iD,OA3B2BA,EAiCzBA,EAAAA,WAjCyB,EAoC3B,MAAM16B,EAAM06B,EAAAA,WAAAA,KAAwB,CAAEnB,OApCX,IAqCrBwB,GAAch7B,EAAAA,EAAAA,gBArCOC,GAsC3BpoB,KAAAmjD,YAtC2BA,EAwC3B,GAAInjD,KAAJ3E,eAAyB,CACvB,MAAMi0E,EAAqB7uB,EAAAA,MAAe,CACxCx+B,MAAO6nC,EAAAA,cAFcC,mBAMvB5G,EAAAA,IAAkBmsB,EAAAA,MAA2B7uB,EANtBt3B,MAOvBg6B,EAAAA,IAAkBmsB,EAAAA,OAA4B7uB,EAPvBr3B,OAQvB+5B,EAAAA,QARuB,EAWzB,GAAInjD,KAAArF,gBAAJ,EAA8B,CAC5B,MAAM40E,EAAmB9uB,EAAAA,MAAiBA,EADdr3B,OAEtBimC,EAAW59C,KAAAA,KAAUzR,KAAArF,gBAFC40E,GAG5B,GAAIpsB,EAAAA,GAAAA,GAA6BA,EAAAA,GAAjCkM,EAA4D,CAC1DlM,EAAAA,GAD0DkM,EAE1DlM,EAAAA,GAF0DkM,EAG1DlM,EAAAA,QAH0D,EAI1DnjD,KAAA4qE,sBAJ0D,OAM1D5qE,KAAA4qE,sBADK,EAKT,MAAM4E,GAAMnoD,EAAAA,EAAAA,qBAAoB87B,EAhEL36B,IAiErBinD,GAAMpoD,EAAAA,EAAAA,qBAAoB87B,EAjEL16B,IAoErBU,GAAQgD,EAAAA,EAAAA,eAAcs0B,EAAAA,MAAiB0C,EAA/Bh3B,GAA+CqjD,EApElC,IAqErBpmD,GAAS+C,EAAAA,EAAAA,eAAcs0B,EAAAA,OAAkB0C,EAAhCh3B,GAAgDsjD,EArEpC,IAsE3B,IAAItmD,GAAAA,MAAiBC,GAArB,QACSppB,KAAH++C,WAAuBurB,EAAAoF,QAAA12E,KAAgB,CAAAmwB,MAAAA,EAAAC,OAAAA,KAAqB,CAC9D,MAAM4G,EAAMhwB,KADkD2vE,yBAE9D,IAAIC,EAAUn+D,KAAAA,IAAS0X,EAAT1X,EAAsB2X,EAF0B4G,GAG9D,MAAMw7B,EAAW/5C,KAAAA,MAAW,IAAMzR,KAANiiB,MAAXxQ,GAH6C,IAI9Dm+D,EAAU5vE,KAAAiiB,MAJoDupC,EAK9DxrD,KAAAiiB,MAL8DupC,EAO1BjpD,OAP0B6U,4BAQ9DA,IAAAA,UAR8Do0C,GAU9DprD,qBAAAA,UAAAA,kBAAmDJ,KAVWiiB,MAW9Dw+B,EAAAA,OAX8DmvB,EAY9DnvB,EAAAA,QAZ8DmvB,GAa9DC,EAAAA,EAAAA,MAAK,QAAU7vE,KAAVwrB,GAAA,iCAAAggC,EAbyD,sDAiBlE1I,EAAAA,OAAe32B,EAAAA,EAAAA,eAAcs0B,EAAAA,MAAiB0C,EAA/Bh3B,GAA+CqjD,EAxFnC,IAyF3B1sB,EAAAA,QAAgB32B,EAAAA,EAAAA,eAAcs0B,EAAAA,OAAkB0C,EAAhCh3B,GAAgDsjD,EAzFrC,IA0F3B3sB,EAAAA,MAAAA,OAAqB32B,EAAAA,EAAAA,eAAcs0B,EAAdt0B,MAA8BqjD,EAA9BrjD,IA1FM,KA2F3B22B,EAAAA,MAAAA,QAAsB32B,EAAAA,EAAAA,eAAcs0B,EAAdt0B,OAA+BsjD,EAA/BtjD,IA3FK,KA8F3BnsB,KAAA+qE,mBAAA1wB,IAAAyI,EA9F2BrC,GAiG3B,MAAM2C,EAAaD,EAADz6B,OAEd,CAACy6B,EAAD36B,GAAA,EAAA,EAAuB26B,EAAvB16B,GAAA,EAAA,GAFc,KAIlB,IAAIq7B,EAAa1sC,4BAAAA,IArGU,sBAsG3B,GAAA,mBAAI0sC,EAAkC,CACpC,MAAMgsB,EAAkBhsB,EAAW,CAAEpqC,WAAY1Z,KAAdwrB,GAAuBtH,UAAWlkB,KAAlCkkB,YACnC4rD,IACEhsB,EADmBgsB,GAIvB,IAAIC,EAA2BjsB,EAAa1sC,4BAAAA,IAAb0sC,+BA5GJ,KA6G3B,GAAA,mBAAIisB,EAAgD,CAClD,MAAMC,EAAiBD,EAAyB,CAAEr2D,WAAY1Z,KAAdwrB,GAAuBtH,UAAWlkB,KAAlCkkB,YAChD8rD,IACED,EADkBC,GAMtB,MAAMpsB,EAAgB,CACpBC,cADoBz7B,EAAAg7B,UAAAA,EAGpB3C,SAAUzgD,KAHUygD,SAIpB9mD,eAAgBqG,MAAKrG,EACrB0hB,6BAA8Brb,KALVsgD,8BAAAwD,WAAAA,EAAAisB,yBAAAA,EAQpBzhB,oBAAqBtuD,KARD6vD,sBAUhB/N,EAAa9hD,KAAA0T,QAAAwB,OA/HQ0uC,GAgI3B9B,EAAAA,WAAwB,SAAAiC,GACtBsrB,aACInsD,EAAJisD,iBACEjsD,EAAAA,iBAD2B6gC,GAG3BA,KAIJjC,EAAAA,QAAAA,MACE,WACEutB,aACAH,EAFU1qE,aAIZ,SAAA0c,GACEmuD,aACAH,EAAAA,OAFehuD,MAKnB,OAnJ2BgC,EAsJ7BwrD,WAAAA,GAcE,IAAIuB,GAdc,EAelB,MAAMC,mBAAqB,KACzB,GAAAD,EACE,MAAM,IAAAryE,EAAAq7C,4BACJ,6BAA6Bj5C,KAA7BwrB,KAFW,QAQX9X,EAAU1T,KAxBE0T,QAyBZ47D,EAAqBtvE,KAAAygD,SAAAI,MAAoB,CAC7C5+B,MAAO6nC,EAAAA,cA1BSC,mBAmDlB,MAAO,CAAAn/C,QAvBS8I,EAAAy8D,gBACG,CACfx2E,eAAgBqG,MAAKrG,IAFT0K,MAIR+rE,IACJF,qBAMA,OALe,IAAAtyE,EAAAyyE,YACb38D,EADa48D,WAEb58D,EAFa68D,KAGW93E,EAAAA,oBALZqqB,wBAOP0tD,OAAAJ,EAAAd,GAAAjrE,MAA+CooE,IACpDyD,qBACAlwE,KAAAysE,IAF2DA,EAG3DzsE,KAAA+qE,mBAAA1wB,IAAAoyB,EAH2D6C,GAK3D7C,EAAAA,MAAAA,MAAkBlG,EAAAA,MALyCp9C,MAM3DsjD,EAAAA,MAAAA,OAAmBlG,EAAAA,MANwCn9C,OAO3DppB,KAAA+4C,eAAsBx2B,EAAAA,gBAPqCC,SAQ3D+jD,EAAAA,YAR2DkG,SAc/D0C,iBAAAA,GACEprB,KAEFf,SACEitB,GADO,IASb/uB,aAAAA,GACElhD,KAAAkkB,UAAiB,iBAAAjL,EAAAA,EADC,KAGlB,OAAIjZ,KAAAkkB,UACFlkB,KAAAsqB,IAAA0T,aAAA,kBAAyCh+B,KADdkkB,WAG3BlkB,KAAAsqB,IAAAu4B,gBADK,mBAMT8sB,yBACE,GAAI3vE,KAAJ++C,SACE,OAAO/+C,KADU++C,SAGnB,MAAM0xB,EAAY,CAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,OAQlB,IAAA,IAAAtnD,KAAAsnD,EACE,IAAKnG,EAAAoF,QAAA12E,KAAgB,CAACmwB,MAAOA,EAAR,EAAiBC,OAAQD,EAAzB,IAAoC,CACvDnpB,KAAA++C,SADuD51B,EAEvD,OAAOnpB,KAFgD++C,SAK3D,OAlBuB,mFCj+B3B,SAAA2xB,QAAAhpC,EAAAipC,GACI,IAAI95C,EAAOn+B,OAAAA,KAD0BgvC,GAErC,GAAIhvC,OAAJk4E,sBAAkC,CAC9B,IAAIC,EAAUn4E,OAAAA,sBADgBgvC,GAE9BipC,IACIE,EAAUA,EAAAC,QAAgB,SAAAC,GACtB,OAAOr4E,OAAAA,yBAAAA,EAAAA,GAD6B6gC,eAI5C1C,EAAAA,KAAAA,MAAAA,EAP8Bg6C,GASlC,OAXqCh6C,EAczC,SAAAm6C,eAAAnwD,GACI,IAAK,IAAIna,EAAT,EAAgBA,EAAIkmE,UAApBhmE,OAAsCF,IAAK,CACvC,IAAInC,EAASqoE,MAAAA,UAAAA,GAAuBA,UAAvBA,GAD0B,GAEnClmE,EAAJ,EACIgqE,QAAQh4E,OAARg4E,IAAAA,GAAAA,SAAuC,SAAA9zE,GACnCq0E,gBAAAA,EAAAA,EAA6B1sE,EADoB3H,OAG9ClE,OAAJw4E,0BACHx4E,OAAAA,iBAAAA,EAAgCA,OAAAA,0BADS6L,IAGzCmsE,QAAQh4E,OAARg4E,IAAAA,SAAiC,SAAA9zE,GAC7BlE,OAAAA,eAAAA,EAAAA,EAAmCA,OAAAA,yBAAAA,EADQkE,OAKvD,OAf4BikB,EAkBhC,SAAAowD,gBAAAE,EAAAv0E,EAAAhD,GACQgD,KAAJu0E,EACIz4E,OAAAA,eAAAA,EAAAA,EAAgC,CAC5BkB,MAD4BA,EAE5B2/B,YAF4B,EAG5BC,cAH4B,EAI5BF,UAJ4B,IAOhC63C,EAAAA,GADGv3E,EAGP,OAXsCu3E,EA2B1C,SAAAC,yBAAA7sE,EAAA8sE,GACI,GAAA,MAAI9sE,EAAgB,MAD4B,GAEhD,IACA3H,EAHgD8J,EAE5Cma,EAfR,SAAAywD,8BAAA/sE,EAAA8sE,GACI,GAAA,MAAI9sE,EAAgB,MADiC,GAErD,IAEA3H,EAJqD8J,EAEjDma,EAFiD,GAGjD0wD,EAAa74E,OAAAA,KAHoC6L,GAKrD,IAAKmC,EAAL,EAAYA,EAAI6qE,EAAhB3qE,OAAmCF,IAAK,CACpC9J,EAAM20E,EAD8B7qE,GAEhC2qE,EAAAA,QAAAA,IAAJ,IACAxwD,EAAAA,GAActc,EAHsB3H,IAKxC,OAVqDikB,EAexCywD,CAAAA,EAFmCD,GAIhD,GAAI34E,OAAJk4E,sBAAkC,CAC9B,IAAIY,EAAmB94E,OAAAA,sBADO6L,GAE9B,IAAKmC,EAAL,EAAYA,EAAI8qE,EAAhB5qE,OAAyCF,IAAK,CAC1C9J,EAAM40E,EADoC9qE,GAEtC2qE,EAAAA,QAAAA,IAAJ,GACK34E,OAAAA,UAAAA,qBAAAA,KAAAA,EAALkE,KACAikB,EAAAA,GAActc,EAJ4B3H,KAOlD,OAbgDikB,EAgBpD,SAAA4wD,eAAAC,EAAAhrE,GACI,OAWJ,SAAAirE,gBAAAD,GACI,GAAI5lC,MAAAA,QAAJ4lC,GAAwB,OADEA,EAXnBC,CAAAA,IAmBX,SAAAC,sBAAAF,EAAAhrE,GACI,IAAImrE,EAAKH,MAAAA,EAAAA,KAAqB,oBAAA9pC,QAAiC8pC,EAAI9pC,OAArCue,WAAyDurB,EADpD,cAEnC,GAAA,MAAIG,EAF+B,OAGnC,IAGAC,EANmCC,EAG/BC,EAH+B,GAI/BC,GAJ+B,EAK/BC,GAL+B,EAOnC,IACI,IAAKL,EAAKA,EAAAA,KAAVH,KAA0BO,GAAMH,EAAKD,EAANxrB,QAA/B8rB,MAAuDF,GAAvD,EAAkE,CAC9DD,EAAAA,KAAUF,EADoDl4E,OAE9D,GAAI8M,GAAKsrE,EAAAA,SAATtrE,EAF8D,OAIpE,MAAA0rE,GACEF,GADU,EAEVH,EAFUK,EALd,QASI,IACQH,GAAJ,MAAWJ,EAAAA,QAAsBA,EAAAA,SADrC,QAGI,GAAAK,EAAQ,MADFH,GAId,OAtBmCC,EAnBJJ,CAAAA,EAAxBD,IAAyDU,4BAAAA,EAAzDV,IA+DX,SAAAW,mBACI,MAAM,IAAAC,UADkB,6IA/D+ED,GAG3G,SAAAE,mBAAAd,GACI,OAGJ,SAAAe,mBAAAf,GACI,GAAI5lC,MAAAA,QAAJ4lC,GAAwB,OAAOgB,kBADFhB,GAHtBe,CAAAA,IAWX,SAAAE,iBAAAC,GACI,GAAI,oBAAAhrC,QAAA,MAAiCgrC,EAAKhrC,OAALgrC,WAArC,MAAsEA,EAAAA,cAA4B,OAAO9mC,MAAAA,KAD7E8mC,GAXMD,CAA3BF,IAAoDJ,4BAApDI,IAuDX,SAAAI,qBACI,MAAM,IAAAN,UADoB,wIAvDqEM,GAwCnG,SAAAR,4BAAAS,EAAAC,GACI,GAAAD,EAAA,CACA,GAAA,iBAAIA,EAAuB,OAAOJ,kBAAAA,EAFUK,GAG5C,IAAI/Y,EAAIthE,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAHoC,GAIxCshE,WAAAA,GAAkB8Y,EAAtBh2E,cAAqCk9D,EAAI8Y,EAAAA,YAJG71E,MAK5C,MAAI+8D,QAAAA,GAAJ,QAAmBA,EAAoBluB,MAAAA,KALKgnC,GAMxC9Y,cAAAA,GAAqB,2CAAAhhE,KAAzBghE,GAAoF0Y,kBAAAA,EANxCK,QAM5C,GAGJ,SAAAL,kBAAAhB,EAAA/uC,IACQA,MAAAA,GAAeA,EAAM+uC,EAAzB9qE,UAAqC+7B,EAAM+uC,EADV9qE,QAEjC,IAAK,IAAIF,EAAJ,EAAWssE,EAAO,IAAAlnC,MAAvBnJ,GAAuCj8B,EAAvCi8B,EAAgDj8B,IAAKssE,EAAAA,GAAUtB,EAF9BhrE,GAGjC,OAHiCssE,EAcrC,SAAAC,WAAAjxD,GACI,IAMAkxD,EAP0BC,EACtBtmE,EAAOmV,EAAAA,MADe8sB,QAEtB3lB,EAAQ1X,KAAAA,IAASA,KAAAA,KAAU5E,EAAnB4E,IAFc,GAGtB2X,EAAS3X,KAAAA,IAASA,KAAAA,KAAU5E,EAAnB4E,IAHa,GAItB8kD,EAAO,CAAEptC,EAAF,EAAaC,EAAb,EAAA,EAAA,GACPgqD,EAAM7+B,KALgBC,MAMtB6+B,EAAW,oBAAAC,mBAA4ChsC,gBANjCgsC,kBAQ1B,GAAAD,EAAc,CACVH,EAAU,IAAAK,gBAAA,EADA,GAEVJ,EAAU,IAAAI,gBAAApqD,EAFAC,OAGP,EACH8pD,EAAU5yE,SAAAA,cADP,WAEH4yE,MAFG,EAGHA,EAAAA,OAHG,GAIHC,EAAU7yE,SAAAA,cAJP,WAKH6yE,MALGhqD,EAMHgqD,EAAAA,OANG/pD,EAQP,IAAIoqD,EAAUN,EAAAA,WAnBY,MAoBtBO,EAAUN,EAAAA,WApBY,MAqB1B,GAAAM,EAAa,CACTA,EAAAA,SAAAA,MAAAA,EADSld,GAETid,EAAAA,UAAAA,EAA2BrqD,EAA3BqqD,EAAsCpqD,EAAtCoqD,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAFS,GAIb,IAAIE,EAAaF,GAzBS,IAyBEA,EAAAA,aAAAA,EAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GACxBG,EAAYp/B,KAAAA,MA1BU6+B,EA2B1B,GAAAC,EAAc,CACVO,YAAY,CACRzqD,MADQA,EAERC,OAFQA,EAGRuqD,UAHQA,EAIRD,WAJQA,KAMRA,GAAe1xD,EAAAA,MAAnBpb,QACIqsE,WADsCjxD,QAGvC,GAAA0xD,EACH1xD,EAAAA,UAAAA,EAAAA,EADmB2xD,OAEhB,CACH3xD,EAAAA,QAAAA,EAAAA,EADG2xD,GAEC3xD,EAAAA,MAAJpb,QACIqsE,WADuBjxD,GAI/B,OA7C0B0xD,EAgD9B,IAAIG,EACM,CAAA,MAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,GADNA,EAEQ,CAAA,QAAA,MAAA,MAAA,MAAA,KAAA,KAAA,GAFRA,EAGO,CAAA,QAAA,MAAA,MAAA,MAAA,KAAA,KAAA,GAGPC,EAAY,CAAA,UAAA,aAEZC,EAAW,CACX/jD,IADW,KAEXD,IAFW,EAGXikD,MAHW,GAIXC,KAJW,KAKXC,YALW,EAMXC,WANW,EAOXC,QAAS7sC,SAPEI,UAQX0sC,UAAW9sC,SARAI,WAWX2sC,EAzNJ,GA2NA,SAAAC,iBAAAvyD,GACI,IAAIwyD,EAASxyD,EAAAA,QAAmBA,EADAoH,OAE5BqrD,EAF4B,IAElBzyD,EAAAA,OACV0yD,EAH4B,IAGjB1yD,EAAAA,MACXgyD,EAJ4B,GAKhC,GAAKhyD,EAADmH,OAAoBnH,EAAxBoH,OAUI,IAHA,IAAIurD,EAAU3yD,EAAAA,KAAgB+xD,EAD3BhkD,IAEC6kD,EAAW5yD,EAAAA,MAAiB+xD,EAF7BE,KAGCY,EAAWpjE,KAAAA,IAASuQ,EAATvQ,MAAyBuQ,EAHrCoH,QAIIyrD,GAAPF,GAA4B,CACxB,IAAIxrD,EAAQqrD,GAAAA,EAAAA,EADY,EAEpBprD,EAASorD,GAAAA,EAAAA,EAFW,EAGxBR,EAAAA,KAAW,CAAA7qD,EAAAC,IACXyrD,GAJwBD,OAT5B5yD,EAAAA,MAAAA,SAAwB,SAAA6yD,GACpB,IAAI1rD,EAAQqrD,GAAAA,EAAAA,EAD2B,EAEnCprD,EAASorD,GAAAA,EAAAA,EAF0B,EAGvCR,EAAAA,KAAW,CAAA7qD,EAAAC,OAanB,OAtBgC4qD,EAyBpC,SAAAc,aAAA9yD,GACI,IAAI+yD,EAAmBxyE,QAAU,sBADLA,OAExByyE,EAA4BzyE,QAAU,oBAFdA,OAGxB0yE,EAAQ1gC,KAHgBC,MAIxB0gC,EAAWlzD,EAAfoyD,QAAiCe,EAAanzD,EAA9CqyD,UAAkEe,EAA2BhE,yBAAAA,EAJjE0C,GAKxBuB,EALwB,KAM5B,IAAAN,EACI,OADmB,EAGvB,GAAI/yD,EAAAA,WAAJgzD,EAAqD,CACjD,IAAIp+D,EAAK,kCAAA0+D,OAAyCrC,WAAzC/5D,WADwC,2GAE7CnJ,EAAO,IAAAC,KAAS,CAAT4G,GAAiB,CACxB7H,KAH6C,2BAK7CwmE,EAAUn/D,IAAAA,gBALmCrG,GAMjDslE,EAAS,IAAAG,OANwCD,GAOjDn/D,IAAAA,gBAPiDm/D,GAQjDF,EAAAA,UAAmB,SAAA3hD,GACf,IAAI+hD,EAAU/hD,EAAdh0B,KAAsBypB,EAAQssD,EAA9BtsD,MAA6CC,EAASqsD,EAAtDrsD,OAAsEuqD,EAAY8B,EAAlF9B,UACA,GADkH8B,EADvF/B,WAEX,CACZY,EAAAA,GAAAA,UAAAA,EAAAA,EADYX,UAELW,EAFKW,QAIZX,EAAAA,GAAAA,QAAAA,EAAAA,EADGX,IAKf,GAAI3xD,EAAJkyD,WACI,OAAO,IAAAhuE,SAAa,SAAA1B,EAAA8rB,GAChB,IAAIolD,EAAkB1E,eAAeA,eAAAA,GAAfhvD,GAAA,GAAiD,CACnEoyD,QAAS,SAAAA,QAAAjrD,EAAAC,EAAAuqD,GACL,IADgDgC,EAEhD,GAAA,IAAI3zD,EAAAA,MAAAA,OACA2zD,GAD6B,MAE1B,CACH,IAAsDC,EAAyBnE,eAAnDzvD,EAAAA,MAAAA,OAA5B,GAAA,GAAyH6zD,EAAyBpE,eAAemE,EAAfnE,GAAlJ,GAAgMqE,EAAYD,EAA5M,GAAuOE,EAAaF,EADjP,GAEHF,EAAaxsD,IAAAA,GAAuBC,IAFjC2sD,EAIPb,EAAAA,EAAAA,EARgDvB,GAShDgC,GACIrlD,EAAO,CACHnH,MADGA,EAEHC,OAFGA,EAGHuqD,UAHGA,KAOfU,UAAW,SAAAA,UAAAlrD,EAAAC,EAAAuqD,GACPwB,EAAAA,EAAAA,EADoDxB,GAEpDnvE,EAAQ,CACJ2kB,MADIA,EAEJC,OAFIA,EAGJuqD,UAHIA,OAOhB,GAAA0B,EAAY,CACR,IAAIjB,EAAUsB,EAAdtB,QAAuCC,EAAYqB,EAD3CrB,UAERC,EAAAA,GAAoB,CAChBF,QADgBA,EAEhBC,UAFgBA,GAIpBgB,EAAAA,YANQD,QAQRnC,WADGyC,MAKX,IAAAL,EAOI,OAAOpC,WADJjxD,GALHsyD,EAAAA,GAAoB,CAChBF,QADgBc,EAEhBb,UAFgBc,GAIpBE,EAAAA,YALQD,GAYpB,IAAIY,EAAa,CACbC,QAAS,SAAAA,UACL,IAAI54E,EAAUuvE,UAAAA,OAAAA,QAAAA,IAAwBA,UAAAA,GAA6BA,UAArDA,GADU,GAEpBoH,EAAQO,iBAAiB,CACzBprD,MAAO9rB,EADkB2yB,IAEzB5G,OAAQ/rB,EAFiB2yB,IAGzBD,IAAK1yB,EAHoB0yB,IAIzBkkD,KAAM52E,EAJmB42E,KAKzBD,MAAOxB,mBAAmBqB,KAE1B7xD,EAAWgvD,eAAeA,eAAeA,eAAAA,GAAfA,GAAfA,GAAAA,GAA0E,CACrFgD,MAVoBA,IAYxB,OAAOc,aAZiB9yD,IAc5B+mD,UAAW,SAAAA,YACP,IAAI1rE,EAAUuvE,UAAAA,OAAAA,QAAAA,IAAwBA,UAAAA,GAA6BA,UAArDA,GADc,GAExBoH,EAAQO,iBAAiB,CACzBprD,MADyB,EAEzBC,OAAQ/rB,EAFiB2yB,IAGzBD,IAAK1yB,EAHoB0yB,IAIzBkkD,KAAM52E,EAJmB42E,KAKzBD,MAAOxB,mBAAmBqB,KAE1B7xD,EAAWgvD,eAAeA,eAAeA,eAAAA,GAAfA,GAAfA,GAAAA,GAA0E,CACrFgD,MAVwBA,IAY5B,OAAOc,aAZqB9yD,IAchC+8B,SAAU,SAAAA,WACN,IAAI1hD,EAAUuvE,UAAAA,OAAAA,QAAAA,IAAwBA,UAAAA,GAA6BA,UAArDA,GADY,GAEtBoH,EAAQO,iBAAiB,CACzBprD,MAAO9rB,EADkB2yB,IAEzB5G,OAFyB,EAGzB2G,IAAK1yB,EAHoB0yB,IAIzBkkD,KAAM52E,EAJmB42E,KAKzBD,MAAOxB,mBAAmBqB,KAE1B7xD,EAAWgvD,eAAeA,eAAeA,eAAAA,GAAfA,GAAfA,GAAAA,GAA0E,CACrFgD,MAVsBA,IAY1B,OAAOc,aAZmB9yD,IAc9BhpB,KAAM,SAAAA,OACF,IAAIqE,EAAUuvE,UAAAA,OAAAA,QAAAA,IAAwBA,UAAAA,GAA6BA,UAArDA,GADI,GAEd5qD,EAAWgvD,eAAeA,eAAAA,GAAfA,GAFG3zE,GAGlB2kB,EAAAA,MAAiBwwD,mBAAmBxwD,EAHlBgyD,OAIdhyD,EAAAA,OAAkBA,EAAtBoH,SACIpH,EAAAA,MAAiB,CAAE,CAAEA,EAAFmH,MAAkBnH,EAAlBoH,UAEvB,OAAO0rD,aAPW9yD,m1BCgS1B,SAAAk0D,cAAAxE,GACE,MAAM9qE,EAAS8qE,EADW9qE,OAG1B,GAAIA,IAAAA,GAAgB8qE,EAAAA,aAApBvuD,WACE,OAAOuuD,EADyC,GAGlD,IAAIyE,EANsB,EAO1B,IAAK,IAAIzvE,EAAT,EAAgBA,EAAhBE,EAA4BF,IAC1ByvE,GAAgBC,gBAAgB1E,EADDhrE,IAGjC,IAAIizD,EAVsB,EAW1B,MAAMj6D,EAAO,IAAAyjB,WAXagzD,GAY1B,IAAK,IAAIzvE,EAAT,EAAgBA,EAAhBE,EAA4BF,IAAK,CAC/B,IAAIuwB,EAAOy6C,EADoBhrE,GAEzBuwB,aAAN9T,aAEI8T,EADF,iBAAIA,EACKo/C,cADqBp/C,GAGrB,IAAA9T,WADF8T,IAIT,MAAMq/C,EAAar/C,EATYs/C,WAU/B72E,EAAAA,IAAAA,EAV+Bi6D,GAW/BA,GAX+B2c,EAajC,OAzB0B52E,mCAhD5B,SAAA82E,cAAAC,GACEC,OACED,OAAAA,GAAAA,iBAAkBA,QADpBC,IACiDD,EAAAA,OAFrB,sCAK5B,MAAM7vE,EAAS6vE,EALa7vE,OAMtB+vE,EANsB,KAO5B,GAAI/vE,EAAJ+vE,EACE,OAAO1sC,OAAAA,aAAAA,MAAAA,KADwBwsC,GAGjC,MAAMjxC,EAVsB,GAW5B,IAAK,IAAI9+B,EAAT,EAAgBA,EAAhBE,EAA4BF,GAA5BiwE,EAAqD,CACnD,MAAMC,EAAWnlE,KAAAA,IAAS/K,EAAT+K,EADkC7K,GAE7CiwE,EAAQJ,EAAAA,SAAAA,EAFqCG,GAGnDpxC,EAAAA,KAAYyE,OAAAA,aAAAA,MAAAA,KAHuC4sC,IAKrD,OAAOrxC,EAAAA,KAhBqB,uBA0gB9B,SAAAsxC,gBAAAp3E,EAA+Bq3E,EAA/B,GAAiDC,GAAjD,GACE,GAAI5gE,IAAAA,iBAAAA,oBAAuBpG,OAA3BgnE,EACE,OAAO5gE,IAAAA,gBAAoB,IAAApG,KAAS,CAATtQ,GAAiB,CAAEqP,KAD4BgoE,KAI5E,MAAME,EALkE,oEAQxE,IAAIh0D,EAAS,QAAA8zD,YACb,IAAK,IAAIrwE,EAAJ,EAAWC,EAAKjH,EAArBkH,OAAkCF,EAAlCC,EAA0CD,GAA1C,EAAkD,CAChD,MAAMwwE,EAD0C,IACrCx3E,EAAAA,GACLy3E,EAF0C,IAErCz3E,EAAKgH,EAALhH,GACL03E,EAH0C,IAGrC13E,EAAKgH,EAALhH,GAKXujB,GAAUg0D,EAJCC,GAAX,GAIuBD,GAHf,EAACC,IAAF,EAAmBC,GALsB,GAQZF,EAFzBvwE,EAAAA,EAAAA,GAAc,GAACywE,IAAF,EAAqBC,GAAlC1wE,EANqC,IAQCuwE,EADtCvwE,EAAAA,EAAAA,EAAAA,GAAa0wE,EAPwB,IAUlD,OAnBwEn0D,6BAtB1E,SAAAziB,0BACE,MAAM62E,EAAa3+E,OAAAA,OADc,MAEjC,IAAI4+E,GAF6B,EAIjC5+E,OAAAA,eAAAA,EAAAA,UAA6C,CAC3C+W,IAAAA,IAAM6nE,IAIRD,EAAAA,QAAqB,IAAAnxE,SAAY,SAAA1B,EAAA8rB,GAC/B+mD,EAAAA,QAAqB,SAAA33E,GACnB43E,GADmC,EAEnC9yE,EAFmC9E,IAIrC23E,EAAAA,OAAoB,SAAAxyE,GAClByyE,GADoC,EAEpChnD,EAFoCzrB,OAKxC,OAnBiCwyE,4BAhoBnC,SAAAE,uBAAA/0E,EAAqCC,EAArC,KAAqDpF,EAArD,MACE,IAAAmF,EACE,OADQ,KAGV,IACE,GAAInF,GAAJ,iBAAemF,EAAyB,CAEtC,GAAInF,EAAAA,oBAA8BmF,EAAAA,WAAlC,QAA0D,CACxD,MAAMg1E,EAAOh1E,EAAAA,MAD2C,OAIpDg1E,GAAQA,EAAAA,QAAZ,IACEh1E,EAAM,UAAAA,KAMV,GAAInF,EAAJo6E,mBACE,IACEj1E,EAAMk1E,mBADJl1E,GAEF,MAAAgK,KAIN,MAAMmrE,EAAcl1E,EAAU,IAAA2T,IAAA5T,EAAVC,GAAkC,IAAA2T,IArBpD5T,GAsBF,GAnDJ,SAAAo1E,iBAAAp1E,GACE,IAAAA,EACE,OADQ,EAGV,OAAQA,EAARyd,UACE,IADF,QAEE,IAFF,SAGE,IAHF,OAIE,IAJF,UAKE,IALF,OAME,IAAA,YACE,OAPJ,EAQE,QACE,OATJ,GA+CM23D,CAAJD,GACE,OADiCA,EAGnC,MAAAnrE,IAGF,OAhCmE,qBAiiBrE,SAAAqrE,aAAAlyC,GAIE,OAAOA,EAAA/G,QAAA,iBAA6B2D,GAClC,OAAIA,EAAgB,MAEb,OAAIA,EAAgB,MAGpB,KAAAA,6BAwDX,SAAAu1C,oBAA6Bz7C,EAAO,IAApCkY,MAUE,MATe,CACblY,EAAAA,iBADanjB,YAEZmjB,EAAA07C,cAAD,GAAA7+D,WAAA8+D,SAAA,EAFa,KAGb37C,EAAAA,aAAAA,WAAAA,SAAAA,EAHa,KAIbA,EAAAA,cAAAA,WAAAA,SAAAA,EAJa,KAKbA,EAAAA,gBAAAA,WAAAA,SAAAA,EALa,KAMbA,EAAAA,gBAAAA,WAAAA,SAAAA,EANa,MASRpZ,KAVuC,yBAvrBhD,SAAAg1D,oBACE,OAD2B57E,UAO7B,SAAA2a,KAAAtH,GACMrT,GAAa67E,EAAjBC,QACM,oBAAA7E,mBAA4ChsC,gBAAhDgsC,kBACE1pB,QAAAA,IAAY,SAAAl6C,KACH/K,QAAUA,OAAAA,WACnBA,OAAAA,WAAAA,IAAyB,SAAA+K,KAEzBk6C,QAAAA,IAAY,SAAAl6C,uBAypBlB,SAAA0oE,cAAAtoD,GACE,MAAO,iBAAAA,GAAA,OAAyBA,QADR3yB,IACsB2yB,EAAAA,2BAGhD,SAAAuoD,aAAAC,EAAAtF,GACE,GAAIsF,EAAAA,SAAgBtF,EAApBpsE,OACE,OAD+B,EAGjC,IAAK,IAAIF,EAAJ,EAAWC,EAAK2xE,EAArB1xE,OAAkCF,EAAlCC,EAA0CD,IACxC,GAAI4xE,EAAAA,KAAYtF,EAAhBtsE,GACE,OADuB,EAI3B,OATgC,aAxClC,SAAAshC,QAAArC,GACE,MAAO,iBAAA3sC,KADa2sC,aAwBtB,SAAA4yC,OAAAzoD,GACE,MADiB,kBACVA,WAGT,SAAA0oD,MAAA1oD,GACE,MADgB,iBACTA,kBArnBT,SAAA2oD,aAAAh2E,EAAAi2E,GACE,IADuCC,EAEvC,IACEA,EAAO,IAAAviE,IADL3T,GAEF,IAAKk2E,EAAD34D,QAAJ,SAAoB24D,EAAAA,OAClB,OAD0C,EAG5C,MAAAjlD,GACA,OADU,EAIZ,MAAMklD,EAAQ,IAAAxiE,IAAAsiE,EAXyBC,GAYvC,OAAOA,EAAAA,SAAgBC,EAZgB54D,mBAwnBzC,SAAA64D,SAAA/oD,GACE,MADmB,iBACZA,mBAhWT,SAAAgpD,cAAA/pB,GACE,MAAMoiB,EAAMz4E,OAAAA,OADc,MAE1B,IAAA,MAAWkE,EAAXhD,KAAAm1D,EACEoiB,EAAAA,GAD8Bv3E,EAGhC,OAL0Bu3E,gBAN5B,SAAA4H,WAAA5H,GACE,OAAOz4E,OAAAA,KAAAA,GADgBkO,+BAzGzB,SAAA6wB,qBAAAkO,EAAmCqzC,GAAnC,GACE,GAAA,iBAAIrzC,EAAyB,CAC3BkqC,KAD2B,2DAE3B,OAF2BlqC,EAI7BqzC,IACErzC,EAAMA,EAAAA,QAAAA,EADc,MAGtB,OAAOA,EAAAA,QAAAA,EARoD,yBA3N7D,SAAAszC,kBAAAvnE,GACMnU,OAAAA,UAAJmU,KACErV,EAD2BqV,+BAiT/B,SAAAwnE,SAAAt/E,GAUE,OAAOqwC,OAAAA,aACJrwC,GAAD,GADKqwC,IAEJrwC,GAAD,GAFKqwC,IAGJrwC,GAAD,EAHKqwC,IAVgB,IAcrBrwC,sDAiSJ,SAAAu/E,kBAAAxzC,GACE,MAAM/+B,EAAS++B,EAAf/+B,OACE4+B,EAF4B,GAG9B,GAAIG,MAAAA,EAAAA,IAAJ,MAAyBA,EAAAA,GAEvB,IAAK,IAAIj/B,EAAT,EAAgBA,EAAhBE,EAA4BF,GAA5B,EACE8+B,EAAAA,KACEyE,OAAAA,aAAqBtE,EAAAA,WAAAA,IAAD,EAA2BA,EAAAA,WAAej/B,EAF9B,UAK/B,GAAIi/B,MAAAA,EAAAA,IAAJ,MAAyBA,EAAAA,GAE9B,IAAK,IAAIj/B,EAAT,EAAgBA,EAAhBE,EAA4BF,GAA5B,EACE8+B,EAAAA,KACEyE,OAAAA,aAAqBtE,EAAAA,WAAej/B,EAAfi/B,IAAD,EAA+BA,EAAAA,WAFnBj/B,UAMpC,IAAK,IAAIA,EAAT,EAAgBA,EAAhBE,IAAAF,EAAiC,CAC/B,MAAM0yE,EAAOC,EAAwB1zC,EAAAA,WADNj/B,IAE/B8+B,EAAAA,KAAY4zC,EAAOnvC,OAAAA,aAAPmvC,GAAmCzzC,EAAAA,OAFhBj/B,IAKnC,OAAO8+B,EAAAA,KAvBuB,6BA4ChC,SAAA8zC,sBAAA3zC,GACE,MAAMmgB,EAAM,CADsB,MAElC,IAAK,IAAIp/C,EAAJ,EAAWC,EAAKg/B,EAArB/+B,OAAiCF,EAAjCC,EAAyCD,IAAK,CAC5C,MAAM6yE,EAAO5zC,EAAAA,WAD+Bj/B,GAE5Co/C,EAAAA,KACE7b,OAAAA,aAAqBsvC,GAAD,EADtBzzB,KAEE7b,OAAAA,aAJ0C,IAItBsvC,IAGxB,OAAOzzB,EAAAA,KAT2B,4FAgBpC,SAAA0zB,mBAAA7zC,GACE,OAAOwH,SAASssC,mBADe9zC,iBAthCjCloC,EAAA,sBAiBwB,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,0BACK,CAAA,KAAA,EAAA,EAAA,KAAA,EAAA,yBAcD,CAC1Bi8E,IAD0B,EAE1BC,QAF0B,EAG1BC,MAH0B,EAI1BC,kBAJ0B,GAK1BC,oBAL0B,GAM1BC,oBAN0B,GAO1BC,OAP0B,sBAUL,CACrBx0E,QADqB,EAErB8oB,OAFqB,EAGrBi4B,aAHqB,EAIrB0zB,eAJqB,oBAQA,CACrBL,MADqB,EAErBM,gBAFqB,EAGrB7wB,KAHqB,GAIrBC,mBAJqB,GAKrBC,uBALqB,IAMrB4wB,uBANqB,IAOrBC,SAPqB,KAQrBC,mBARqB,0BAWG,CACxBC,KADwB,EAExBC,OAFwB,EAGxBC,YAHwB,EAIxBC,UAJwB,EAKxBC,iBALwB,EAMxBC,mBANwB,EAOxBC,wBAPwB,EAQxBC,YARwB,EASxBC,iBATwB,EAUxBC,iBAVwB,eAaR,CAChBC,eADgB,EAEhBC,UAFgB,EAGhBC,WAHgB,oBAMK,CACrBC,KADqB,EAErBC,KAFqB,EAGrBC,SAHqB,EAIrBC,KAJqB,EAKrBC,OALqB,EAMrBC,OANqB,EAOrBC,QAPqB,EAQrBC,SARqB,EASrBC,UATqB,EAUrBC,UAVqB,GAWrBC,SAXqB,GAYrBC,UAZqB,GAarBC,MAbqB,GAcrBC,MAdqB,GAerBC,IAfqB,GAgBrBC,MAhBqB,GAiBrBC,eAjBqB,GAkBrBC,MAlBqB,GAmBrBC,MAnBqB,GAoBrBC,OApBqB,GAqBrBC,OArBqB,GAsBrBC,YAtBqB,GAuBrBC,QAvBqB,GAwBrBC,UAxBqB,GAyBrBC,OAzBqB,GA0BrBC,OA1BqB,+BA6BU,CAC/BC,OAD+B,SAE/BC,OAF+B,kCAKH,CAC5BD,OAD4B,SAE5BE,SAF4B,oCAKA,CAC5BC,SAD4B,WAE5BC,SAF4B,WAG5BC,UAH4B,YAI5BC,UAJ4B,YAK5Bt5E,KAL4B,8BAQF,CAC1Bu5E,MAD0B,QAE1BC,MAF0B,sBAKL,CACrB5C,UADqB,EAErB6C,OAFqB,EAGrB1D,MAHqB,EAIrB2D,OAJqB,EAKrBC,SALqB,GAMrBC,OANqB,GAOrBC,SAPqB,GAQrBC,OARqB,IASrBC,aATqB,IAUrBC,eAVqB,2BAaK,CAC1BH,SAD0B,EAE1BI,SAF0B,EAG1BC,SAH0B,EAI1BC,UAJ0B,KAK1BC,SAL0B,KAM1BC,cAN0B,MAO1BC,MAP0B,MAQ1BC,WAR0B,MAS1BC,MAT0B,OAU1BC,KAV0B,OAW1BC,KAX0B,OAY1BC,WAZ0B,QAa1BC,YAb0B,QAc1BC,gBAd0B,QAe1BC,YAf0B,QAgB1BC,KAhB0B,SAiB1BC,SAjB0B,SAkB1BC,eAlB0B,SAmB1BC,kBAnB0B,sCAsBM,CAChCC,MADgC,EAEhCC,OAFgC,EAGhCC,QAHgC,EAIhCC,MAJgC,EAKhCvD,UALgC,+BAQA,CAChCwD,EADgC,cAEhCC,EAFgC,aAGhCC,EAHgC,aAIhCC,EAJgC,WAKhCC,GALgC,QAMhCC,GANgC,OAOhCC,GAPgC,WAQhCC,GARgC,YAShCC,GATgC,cAUhCxwD,GAVgC,gBAWhCywD,EAXgC,YAYhCC,EAZgC,SAahCC,EAbgC,WAchCC,EAdgC,uCAiBF,CAC9BC,GAD8B,YAE9BC,GAF8B,WAG9BC,GAH8B,UAI9BC,GAJ8B,YAK9BC,GAL8B,kCAQJ,CAC1BC,EAD0B,WAE1BN,EAF0B,0BAKT,CACjB3sE,QADiB,UAEjBktE,MAFiB,QAGjBC,IAHiB,MAIjBC,IAJiB,MAKjBC,IALiB,MAMjBC,KANiB,OAOjBC,IAPiB,MAQjBC,IARiB,MASjBC,IATiB,MAUjBC,IAViB,kBAaF,CACf1tE,QADe,UAEf2tE,MAFe,QAGfC,cAHe,gBAIfC,OAJe,SAKfC,aALe,eAMfC,cANe,gBAOfC,SAPe,WAQfC,aARe,eASfC,MATe,QAUfC,SAVe,WAWfC,MAXe,QAYfC,QAZe,WAejB,MAAMxJ,EAAiB,CACrByJ,OADqB,EAErBC,SAFqB,EAGrBzJ,MAHqB,4CAMK,CAC1Bt0E,KAD0B,EAE1Bg+E,OAF0B,EAG1BC,OAH0B,SAOhB,CAGVC,WAHU,EAIVC,aAJU,EAKVC,WALU,EAMVC,YANU,EAOVC,cAPU,EAQVC,QARU,EASVC,mBATU,EAUVC,YAVU,EAWVC,UAXU,EAYVh1E,KAZU,GAaVq0C,QAbU,GAcVwB,UAdU,GAeVyhB,OAfU,GAgBVC,OAhBU,GAiBV0d,QAjBU,GAkBVC,SAlBU,GAmBVC,SAnBU,GAoBVjsB,UApBU,GAqBVksB,UArBU,GAsBVrsB,OAtBU,GAuBVssB,YAvBU,GAwBVrsB,KAxBU,GAyBVssB,OAzBU,GA0BVC,WA1BU,GA2BVC,aA3BU,GA4BVC,gBA5BU,GA6BVC,kBA7BU,GA8BVC,QA9BU,GA+BVjtB,KA/BU,GAgCVktB,OAhCU,GAiCVC,UAjCU,GAkCVC,QAlCU,GAmCVC,eAnCU,GAoCVC,eApCU,GAqCVC,UArCU,GAsCVC,WAtCU,GAuCVC,QAvCU,GAwCVC,qBAxCU,GAyCVC,YAzCU,GA0CVC,SA1CU,GA2CVC,mBA3CU,GA4CVC,cA5CU,GA6CVC,SA7CU,GA8CVC,SA9CU,GA+CVC,eA/CU,GAgDVC,iBAhDU,GAiDVC,2BAjDU,GAkDVC,aAlDU,GAmDVC,sBAnDU,GAoDVC,oBApDU,GAqDVC,kBArDU,GAsDVC,eAtDU,GAuDVC,gBAvDU,GAwDVC,aAxDU,GAyDVC,cAzDU,GA0DVC,cA1DU,GA2DVC,YA3DU,GA4DVC,kBA5DU,GA6DVC,gBA7DU,GA8DVC,mBA9DU,GA+DVC,iBA/DU,GAgEVC,YAhEU,GAiEVC,iBAjEU,GAkEVC,eAlEU,GAmEVC,eAnEU,GAoEVC,aApEU,GAqEVC,UArEU,GAsEVC,eAtEU,GAuEVC,mBAvEU,GAwEVC,wBAxEU,GAyEVC,iBAzEU,GA0EVC,YA1EU,GA2EVC,UA3EU,GA4EVC,sBA5EU,GA6EVC,oBA7EU,GA8EVC,WA9EU,GA+EVC,SA/EU,GAgFVC,iBAhFU,GAiFVC,eAjFU,GAkFVC,gBAlFU,GAmFVC,cAnFU,GAqFVC,iBArFU,GAsFVC,sBAtFU,GAuFVC,2BAvFU,GAwFVC,kBAxFU,GAyFVC,wBAzFU,GA0FVC,6BA1FU,GA2FVC,wBA3FU,GA4FVC,4BA5FU,GA6FVC,yBA7FU,GA8FVC,cA9FU,2BAiGiB,CAE3BC,QAF2B,UAG3B9uE,MAH2B,QAI3B3B,WAJ2B,aAK3B6B,WAL2B,aAM3B6uE,MAN2B,QAO3BC,eAP2B,iBAS3BC,KAT2B,OAU3BC,mBAV2B,qBAW3BC,eAX2B,iBAY3BC,aAZ2B,eAa3BC,mBAb2B,qBAc3BC,eAd2B,iBAe3BC,iBAf2B,mBAgB3BC,mBAhB2B,qBAiB3BC,gBAjB2B,kBAkB3BC,kBAlB2B,oBAmB3BC,mBAnB2B,qBAoB3BC,oBApB2B,sBAqB3BC,mBArB2B,qBAsB3BC,iBAtB2B,mBAuB3BC,mBAvB2B,qBAwB3BC,sBAxB2B,6CA2BH,CACxBC,cADwB,EAExBvyD,mBAFwB,GAK1B,IAAIx5B,EAAY67E,EAvXhB0J,SAmZA,SAAA/R,KAAAngE,GACMrT,GAAa67E,EAAjB0J,WACM,oBAAAtO,mBAA4ChsC,gBAAhDgsC,kBACE1pB,QAAAA,IAAY,YAAAl6C,KACH/K,QAAUA,OAAAA,WACnBA,OAAAA,WAAAA,IAAyB,YAAA+K,KAEzBk6C,QAAAA,IAAY,YAAAl6C,MAKlB,SAAA24E,YAAA34E,GACE,MAAM,IAAA3S,MADkB2S,GAI1B,SAAAgnE,OAAA4R,EAAA54E,GACE44E,GACED,YADS34E,GAkFb,SAAA7P,OAAAsxE,EAAAoX,EAAA3uF,GAUElB,OAAAA,eAAAA,EAAAA,EAAiC,CAAAkB,MAAAA,EAE/B2/B,YAF+B,EAG/BC,cAH+B,EAI/BF,UAJ+B,IAMjC,OAhBgC1/B,EAsBlC,MAAM4uF,EAAiB,SAAAC,uBAErB,SAAAD,cAAA1jF,EAAA7H,GACM+C,KAAAlD,cAAJ0rF,eACEH,YADsC,oCAGxCroF,KAAA8E,QAJoCA,EAKpC9E,KAAA/C,KALoCA,EAOtCurF,cAAAA,UAA0B,IAT2BzrF,MAUrDyrF,cAAAA,YAVqDA,cAYrD,OAZqDA,cAAhC,yCAevB,MAAAE,0BAAAF,EACE1rF,YAAAA,EAAAA,GACEo5B,MAAAxmB,EADqB,qBAErB1P,KAAAo5E,KAFqBA,4BAMzB,MAAAuP,8BAAAH,EACE1rF,YAAAA,EAAAA,GACEo5B,MAAAxmB,EADwB,yBAExB1P,KAAA4oF,QAFwBA,0BAM5B,MAAAt5E,4BAAAk5E,EACE1rF,YAAAA,GACEo5B,MAAAxmB,EADe,+CAKnB,MAAAH,4BAAAi5E,EACE1rF,YAAAA,GACEo5B,MAAAxmB,EADe,uDAKnB,MAAAF,oCAAAg5E,EACE1rF,YAAAA,EAAAA,GACEo5B,MAAAxmB,EADuB,+BAEvB1P,KAAA29B,OAFuBA,kBAS3B,MAAAkrD,oBAAAL,EACE1rF,YAAAA,GACEo5B,MAAAxmB,EADe,kCAQnB,MAAAo5E,uBAAAN,EACE1rF,YAAAA,GACEo5B,MAAAxmB,EADe,oBAKnB,MAAMq5E,EA9kBN,SA+kBMC,EA/kBN,eAknBA,SAAA3S,cAAA1wC,GACE+wC,OAAAA,iBAAO/wC,EADmB,sCAE1B,MAAM/+B,EAAS++B,EAFW/+B,OAGpB6vE,EAAQ,IAAAtzD,WAHYvc,GAI1B,IAAK,IAAIF,EAAT,EAAgBA,EAAhBE,IAAAF,EACE+vE,EAAAA,GAD+B,IACpB9wC,EAAAA,WAAAA,GAEb,OAP0B8wC,EAe5B,SAAAL,gBAAA1E,GACE,QAAAv0E,IAAIu0E,EAAAA,OACF,OAAOA,EADqB9qE,OAG9B8vE,YAAAA,IAAOhF,EAAAA,WAJqB,uCAK5B,OAAOA,EALqB6E,WAiF9B,MAAM0S,EAAuB,CAC3BrvF,YACE,OAAOiG,OAAAA,KAAAA,QARX,SAAAqpF,iBACE,MAAMC,EAAU,IAAAhmE,WADQ,GAExBgmE,EAAAA,GAFwB,EAIxB,OAJwB,IAGT,IAAAC,YAAgBD,EAAhBlmE,OAAA,EAHS,GAIjBomE,GAIwBH,+BAajC,MAAMI,EAAwB,CAC5B1vF,YACE,OAAOiG,OAAAA,KAAAA,QAVX,SAAA5D,kBACE,IACE,IAAAsrC,SADE,IAEF,OAFE,EAGF,MAAA7T,GACA,OADU,GAMmBz3B,gCAIjC,MAAMstF,EAAa,IAAIz9C,MAAAA,KAAJjV,QAAAk4B,KAA2BiL,GAC5CA,EAAAA,SAAAA,IAAAA,SAAAA,EAxuBF,OA2uBA,MAAAwvB,KACExsF,oBAAAovB,EAAA0vC,EAAAp0C,GACE,MAAO,IAAI6hE,EAAJn9D,KAAoBm9D,EAApBztB,KAAoCytB,EAApC7hE,KAIT1qB,iBAAAysF,EAAAC,GACE,MAAO,CACLD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EADnB,GAELD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAFnB,GAGLD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAHnB,GAILD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAJnB,GAKLD,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAAxBD,GAAgCA,EAL3B,GAMLA,EAAAA,GAAQC,EAARD,GAAgBA,EAAAA,GAAQC,EAAxBD,GAAgCA,EAN3B,IAWTzsF,sBAAA6qB,EAAAoyC,GAGE,MAAO,CAFIpyC,EAAAA,GAAOoyC,EAAPpyC,GAAcA,EAAAA,GAAOoyC,EAArBpyC,GAA4BoyC,EADb,GAEfpyC,EAAAA,GAAOoyC,EAAPpyC,GAAcA,EAAAA,GAAOoyC,EAArBpyC,GAA4BoyC,EAFb,IAM5Bj9D,6BAAA6qB,EAAAoyC,GACE,MAAMryC,EAAIqyC,EAAAA,GAAOA,EAAPA,GAAcA,EAAAA,GAAOA,EADE,GAIjC,MAAO,EAFKpyC,EAAA,GAAOoyC,EAAP,GAAcpyC,EAAAA,GAAOoyC,EAArB,GAA4BA,EAAAA,GAAOA,EAAnC,GAA0CA,EAAAA,GAAOA,EAAlD,IAFsBryC,IAGpBC,EAAD,GAAQoyC,EAAR,GAAepyC,EAAAA,GAAOoyC,EAAtB,GAA6BA,EAAAA,GAAOA,EAApC,GAA2CA,EAAAA,GAAOA,EAAnD,IAHsBryC,GASnC5qB,kCAAAovB,EAAA6tC,GACE,MAAM0vB,EAAKH,KAAAA,eAAAA,EAD2BvvB,GAEhC2vB,EAAKJ,KAAAA,eAAoBp9D,EAAAA,MAAAA,EAApBo9D,GAF2BvvB,GAGhC4vB,EAAKL,KAAAM,eAAoB,CAAC19D,EAAD,GAAOA,EAAP,IAHO6tC,GAIhC8vB,EAAKP,KAAAM,eAAoB,CAAC19D,EAAD,GAAOA,EAAP,IAJO6tC,GAKtC,MAAO,CACLxoD,KAAAA,IAASk4E,EAATl4E,GAAgBm4E,EAAhBn4E,GAAuBo4E,EAAvBp4E,GAA8Bs4E,EADzB,IAELt4E,KAAAA,IAASk4E,EAATl4E,GAAgBm4E,EAAhBn4E,GAAuBo4E,EAAvBp4E,GAA8Bs4E,EAFzB,IAGLt4E,KAAAA,IAASk4E,EAATl4E,GAAgBm4E,EAAhBn4E,GAAuBo4E,EAAvBp4E,GAA8Bs4E,EAHzB,IAILt4E,KAAAA,IAASk4E,EAATl4E,GAAgBm4E,EAAhBn4E,GAAuBo4E,EAAvBp4E,GAA8Bs4E,EAJzB,KAQT/sF,wBAAAi9D,GACE,MAAMryC,EAAIqyC,EAAAA,GAAOA,EAAPA,GAAcA,EAAAA,GAAOA,EADN,GAEzB,MAAO,CACLA,EAAAA,GADKryC,GAEJqyC,EAAD,GAFKryC,GAGJqyC,EAAD,GAHKryC,EAILqyC,EAAAA,GAJKryC,GAKJqyC,EAAA,GAAOA,EAAP,GAAcA,EAAAA,GAAOA,EAAtB,IALKryC,GAMJqyC,EAAA,GAAOA,EAAP,GAAcA,EAAAA,GAAOA,EAAtB,IANKryC,GAgBT5qB,wBAAAi9D,EAAAnqC,GACE,MAAO,CACLmqC,EAAAA,GAAOnqC,EAAPmqC,GAAcA,EAAAA,GAAOnqC,EAArBmqC,GAA4BA,EAAAA,GAAOnqC,EAD9B,GAELmqC,EAAAA,GAAOnqC,EAAPmqC,GAAcA,EAAAA,GAAOnqC,EAArBmqC,GAA4BA,EAAAA,GAAOnqC,EAF9B,GAGLmqC,EAAAA,GAAOnqC,EAAPmqC,GAAcA,EAAAA,GAAOnqC,EAArBmqC,GAA4BA,EAAAA,GAAOnqC,EAH9B,IAUT9yB,qCAAAi9D,GACE,MAAM+vB,EAAY,CAAC/vB,EAAD,GAAOA,EAAP,GAAaA,EAAb,GAAmBA,EAAnB,IAGZxyC,EAAIwyC,EAAAA,GAAO+vB,EAAP/vB,GAAsBA,EAAAA,GAAO+vB,EAJD,GAKhCtiE,EAAIuyC,EAAAA,GAAO+vB,EAAP/vB,GAAsBA,EAAAA,GAAO+vB,EALD,GAMhCriE,EAAIsyC,EAAAA,GAAO+vB,EAAP/vB,GAAsBA,EAAAA,GAAO+vB,EAND,GAOhCpiE,EAAIqyC,EAAAA,GAAO+vB,EAAP/vB,GAAsBA,EAAAA,GAAO+vB,EAPD,GAUhCr+D,GAASlE,EAADG,GAVwB,EAWhCumB,EAAS18B,KAAAA,MAAWgW,EAADG,IAAA,EAAe,GAAKH,EAAAG,EAAQD,EAAtClW,IAXuB,EAYhC+W,EAAKmD,EAAAA,GAZ2B,EAahClD,EAAKkD,EAAAA,GAb2B,EAgBtC,MAAO,CAACla,KAAAA,KAAD+W,GAAgB/W,KAAAA,KAAhBgX,IAOTzrB,qBAAAqoB,GACE,MAAM+G,EAAI/G,EAAAA,MADe,GAEzB,GAAIA,EAAAA,GAAUA,EAAd,GAAuB,CACrB+G,EAAAA,GAAO/G,EADc,GAErB+G,EAAAA,GAAO/G,EAFc,GAIvB,GAAIA,EAAAA,GAAUA,EAAd,GAAuB,CACrB+G,EAAAA,GAAO/G,EADc,GAErB+G,EAAAA,GAAO/G,EAFc,GAIvB,OAVyB+G,EAgB3BpvB,iBAAAitF,EAAAC,GACE,SAAAC,QAAA1iE,EAAAC,GACE,OAAOD,EADcC,EAKvB,MAAM0iE,EAAW,CAACH,EAAD,GAAWA,EAAX,GAAqBC,EAArB,GAA+BA,EAA/B,IAAApzD,KANYqzD,SAOvBE,EAAW,CAACJ,EAAD,GAAWA,EAAX,GAAqBC,EAArB,GAA+BA,EAA/B,IAAApzD,KAPYqzD,SAQvBjnE,EARuB,GAU7B+mE,EAAQT,KAAAA,cAVqBS,GAW7BC,EAAQV,KAAAA,cAXqBU,GAc7B,KACGE,EAAAA,KAAgBH,EAAhBG,IAA4BA,EAAAA,KAAgBF,EAA7C,IACCE,EAAAA,KAAgBF,EAAhBE,IAA4BA,EAAAA,KAAgBH,EAF/C,IAQE,OADK,KAFL/mE,EAAAA,GAAYknE,EAFZ,GAGAlnE,EAAAA,GAAYknE,EAHZ,GASF,KACGC,EAAAA,KAAgBJ,EAAhBI,IAA4BA,EAAAA,KAAgBH,EAA7C,IACCG,EAAAA,KAAgBH,EAAhBG,IAA4BA,EAAAA,KAAgBJ,EAF/C,IAQE,OADK,KAFL/mE,EAAAA,GAAYmnE,EAFZ,GAGAnnE,EAAAA,GAAYmnE,EAHZ,GAQF,OArC6BnnE,EAyC/BlmB,yBAAAstF,EAAAC,EAAAzhE,EAAAC,EAAAC,EAAAC,EAAAuhE,EAAAC,GACE,MAAMC,EAAN,GACEC,EAAS,CAAA,GAAA,IACX,IAAAljE,EAAAC,EAAAC,EAAA89C,EAAAmlB,EAAAC,EAAAC,EAHuDC,EAIvD,IAAK,IAAIrkF,EAAT,EAAgBA,EAAhB,IAAAA,EAA4B,CAC1B,GAAA,IAAIA,EAAS,CACXghB,EAAI,EAAA4iE,EAAS,GAATxhE,EAAmB,EADZE,EAEXvB,GAAI,EAAA6iE,EAAU,EAAVxhE,EAAmB,EAAnBE,EAA4B,EAFrBwhE,EAGX7iE,EAAI,EAAAmB,EAAS,EAHFwhE,MAIN,CACL5iE,EAAI,EAAA6iE,EAAS,GAATxhE,EAAmB,EADlBE,EAELxB,GAAI,EAAA8iE,EAAU,EAAVxhE,EAAmB,EAAnBE,EAA4B,EAF3BwhE,EAGL9iE,EAAI,EAAAoB,EAAS,EAHRwhE,EAKP,GAAI94E,KAAAA,IAAAA,GAAJ,MAAA,CACE,GAAIA,KAAAA,IAAAA,GAAJ,MAAyB,SAGzBg0D,GAAI99C,EAJmBD,EAKnB,EAAA+9C,GAASA,EAAb,GACEilB,EAAAA,KADkBjlB,OALtB,CAUAqlB,EAAOpjE,EAAAA,EAAQ,EAAAC,EApBWF,EAqB1BsjE,EAAWt5E,KAAAA,KArBeq5E,GAsB1B,KAAIA,EAAJ,GAAA,CAGAF,IAAMljE,EAADqjE,IAAmB,EAzBEtjE,GA0BtB,EAAAmjE,GAAUA,EAAd,GACEF,EAAAA,KADoBE,GAGtBC,IAAMnjE,EAADqjE,IAAmB,EA7BEtjE,GA8BtB,EAAAojE,GAAUA,EAAd,GACEH,EAAAA,KADoBG,KAKxB,IAvCuDG,EAuCnDvlD,EAAIilD,EAAR9jF,OAEA,MAAMqkF,EAzCiDxlD,EA0CvD,KAAOA,KAAK,CACVggC,EAAIilB,EADMjlD,GAEVulD,EAAK,EAFKvlB,EAGVklB,EAAAA,GAAAA,GACEK,EAAAA,EAAAA,EAAAA,EACA,EAAAA,EAAAA,EAAAvlB,EADAulB,EAEA,EAAAA,EAAAvlB,EAAAA,EAFAulB,EAGAvlB,EAAAA,EAAAA,EAPQ+kB,EAQVG,EAAAA,GAAAA,GACEK,EAAAA,EAAAA,EAAAA,EACA,EAAAA,EAAAA,EAAAvlB,EADAulB,EAEA,EAAAA,EAAAvlB,EAAAA,EAFAulB,EAGAvlB,EAAAA,EAAAA,EAZQglB,EAeZE,EAAAA,GAAAA,GAzDuDL,EA0DvDK,EAAAA,GAAAA,GA1DuDJ,EA2DvDI,EAAAA,GAAUM,EAAVN,GA3DuDH,EA4DvDG,EAAAA,GAAUM,EAAVN,GA5DuDF,EA6DvDE,EAAAA,GAAAA,OAAmBA,EAAAA,GAAAA,OAAmBM,EA7DiB,EA+DvD,MAAO,CACLx5E,KAAAA,OAAYk5E,EADP,IAELl5E,KAAAA,OAAYk5E,EAFP,IAGLl5E,KAAAA,OAAYk5E,EAHP,IAILl5E,KAAAA,OAAYk5E,EAJP,kBASX,MAAMtoEhC,SAAA3B,mBAAA/xC,GACE,OAAOr5B,mBAAmBkkC,OADK7K,sGCjgCjC,MAAMulD,EAAwB,CAE5BC,SAF4B,KAG5BC,iBAH4B,KAK5BC,KAL4B,QAM5BC,KAN4B,QAO5BC,IAP4B,QAQ5BC,MAR4B,OAS5BC,UAT4B,OAW5BC,EAX4B,KAa5BC,EAb4B,UAc5B9zE,MAd4B,KAe5B+zE,OAf4B,OAiB5BC,IAjB4B,QAmB5BC,IAnB4B,KAoB5BC,KApB4B,KAqB5BC,GArB4B,KAsB5BC,OAtB4B,KAuB5BC,KAvB4B,OAwB5BC,MAxB4B,OAyB5BC,KAzB4B,OA2B5BC,KA3B4B,KA4B5BC,GA5B4B,KA6B5BC,GA7B4B,KA8B5BC,GA9B4B,KA+B5BC,QA/B4B,KAgC5BC,GAhC4B,KAiC5BtM,GAjC4B,KAmC5BuM,EAnC4B,OAoC5BC,GApC4B,WAqC5BC,MArC4B,KAuC5BC,MAvC4B,QAwC5BC,GAxC4B,MAyC5BC,GAzC4B,eA0C5BC,GA1C4B,OA2C5BC,MA3C4B,eA4C5BC,MA5C4B,KA6C5BC,MA7C4B,KA+C5BC,QA/C4B,KAiD5BC,OAjD4B,SAmD5BC,QAnD4B,KAqD5BC,SArD4B,MAwDxBC,EAzEN,oCAgFA,MAAA3+B,uBAIEhyD,aAAY4W,QAAZ5W,IACEkD,KAAA0T,QADuBA,EAIzBwB,OAAAA,GACE,OAAOlV,KAAA0tF,MADUC,GAInBC,eAAAA,EAAAA,QACEzwF,IAAI0wF,EAAAA,KACFC,EAAAA,aAAAA,aAAuCD,EADJE,UAGrC5wF,IAAI0wF,EAAAA,IACFC,EAAAA,aAAAA,YAAsCD,EADJriE,SAGpCruB,IAAI0wF,EAAAA,MACFC,EAAAA,aAAAA,OAAiCD,EADGl2E,MAKxC+1E,MAAAA,GACE,IAAAn6D,EACE,OADS,KAIX,MAAMlJ,EAAU/pB,SAAAA,cALN,QAMV,GAAI,SAAJizB,EAAoB,CAClB,MAAMy6D,KAAAA,GADYz6D,EAEZgP,EAAQyrD,EAAAA,MAFIP,GAGlB,GAAAlrD,EAAW,CACTlY,EAAAA,aAAAA,OADS,WAETA,EAAAA,aAAAA,aAAmCkY,EAF1B,SAGA2oD,EAAJ8C,IACL3jE,EAAAA,aAAAA,OAA6B6gE,EADS8C,IAK1ChuF,KAAA4tF,eAAAr6D,EAjBUlJ,GAmBV,GAAIkJ,EAAJyiB,SACE,GAAIziB,IAAAA,EAAAA,SAAAA,QAA8B,OAAQA,EAAAA,SAA1C,GAGEvzB,KAAA4tF,eAAoBr6D,EAAAA,SAApB,GAH0DlJ,QAK1D,IAAA,MAAA4jE,KAAkB16D,EAAlByiB,SACE3rB,EAAAA,YAAoBrqB,KAAA0tF,MADWO,IAKrC,OA9BU5jE,yGC1Ed,MAAA6jC,gBAIEpxD,aAAY4K,eAAAA,EAAAxF,SAAAA,EAAAg/B,UAAZpkC,IACEkD,KAAA0H,eADmDA,EAEnD1H,KAAA4iC,QAFmD,GAGnD5iC,KAAAkC,SAHmDA,EAInDlC,KAAAqhC,QAJmDH,EAKnDlhC,KAAAkuF,0BALmD,KAMnDluF,KAAAyrE,SANmD,KAOnDzrE,KAAAmuF,oBAPmD,KAQnDnuF,KAAA2F,SARmD,EAoBrDgmE,eAAAA,EAAAA,GACE3rE,KAAAyrE,SAD0B2iB,EAE1BpuF,KAAAmuF,oBAF0BE,EAS5BziB,SACE,IAAK5rE,KAADyrE,WAAmBzrE,KAAvBmuF,oBACE,MAAM,IAAApxF,MADyC,4CAGjD,GAAIiD,KAAJ2F,QACE,MAAM,IAAA5I,MADU,uCAGlBiD,KAAA2F,SAPO,EAQP,IAAK3F,KAALkuF,0BAAqC,CACnCluF,KAAAkuF,0BAAiCvtE,IAC3BA,EAAAA,YAAkB3gB,KAAlB2gB,UAAJ,IAAsCA,EAAAA,WACpC3gB,KAD0DsuF,kBAI9DtuF,KAAAkC,SAAA4T,IAAA,yBAEE9V,KARiCkuF,2BAWrCluF,KAnBOsuF,iBAsBTnhB,UACE,GAAKntE,KAAL2F,QAAA,CAGA3F,KAAA2F,SAJQ,EAKR,GAAI3F,KAAJkuF,0BAAoC,CAClCluF,KAAAkC,SAAAkvB,KAAA,yBAEEpxB,KAHgCkuF,2BAKlCluF,KAAAkuF,0BALkC,OAStCK,gBAAAA,EAAAA,EAAAA,GAME,IAAA3rD,EACE,MADY,GAGd,MAAMurD,oBAAAA,GALNnuF,KAOA,IAAI0G,EAAJ,EACE8nF,EARF,EASA,MAAMC,EAAMN,EAAAA,OATZ,EAUMjrE,EAVN,GAYA,IAAK,IAAI+2C,EAAJ,EAAWy0B,EAAK9rD,EAArBh8B,OAAqCqzD,EAArCy0B,EAA6Cz0B,IAAK,CAEhD,IAAI74B,EAAWwB,EAFiCq3B,GAKhD,KAAOvzD,IAAAA,GAAa06B,GAAYotD,EAASL,EAAAA,GAAzCvnF,QAAwE,CACtE4nF,GAAUL,EAAAA,GAD4DvnF,OAEtEF,IAGEA,IAAMynF,EAAVvnF,QACEjC,OAAAA,WAAAA,MADoC,qCAItC,MAAM49B,EAAQ,CACZQ,MAAOD,EAAeA,EAAfA,GADK,EAEZ6rD,MAAO,CACLC,OADKloF,EAELs/B,OAAQ5E,EAFHotD,IAOTptD,GAAYyB,EAvBoCo3B,GA2BhD,KAAOvzD,IAAAA,GAAa06B,EAAWotD,EAASL,EAAAA,GAAxCvnF,QAAuE,CACrE4nF,GAAUL,EAAAA,GAD2DvnF,OAErEF,IAGF67B,EAAAA,IAAY,CACVqsD,OADUloF,EAEVs/B,OAAQ5E,EAFEotD,GAIZtrE,EAAAA,KApCgDqf,GAsClD,OAlDArf,EAqDF2rE,eAAAA,GAEE,GAAA,IAAIjsD,EAAAA,OAAsB,OAG1B,MAAMl7B,eAAAA,EAAA25B,QAAAA,GALgBrhC,MAMhBmuF,oBAAAA,EAAA1iB,SAAAA,GANgBzrE,KAQhB8uF,EAAiBztD,IAAY35B,EAAAA,SARb25B,QAShB0tD,EAAmBrnF,EAAAA,SATH05B,SAWtB,IAAI4tD,EAXkB,KAYtB,MAAMC,EAAW,CACfL,QADe,EAEf5oD,YAFe7oC,GAKjB,SAAAimF,UAAAuL,EAAAt+B,GACE,MAAMu+B,EAASD,EADoBC,OAEnCnjB,EAAAA,GAAAA,YAFmC,GAGnC,OAAOyjB,gBAAAA,EAAAA,EAA2BP,EAA3BO,OAH4B7+B,GAMrC,SAAA6+B,gBAAAN,EAAAO,EAAAC,EAAA/+B,GACE,IAAI/lC,EAAMmhD,EADsDmjB,GAEhE,GAAItkE,EAAAA,WAAiB+kE,KAArBC,UAAqC,CACnC,MAAMC,EAAOjvF,SAAAA,cADsB,QAEnCgqB,EAAAA,WAAAA,aAAAA,EAFmCA,GAGnCilE,EAAAA,YAHmCjlE,GAInCmhD,EAAAA,GAJmC8jB,EAKnCjlE,EALmCilE,EAOrC,MAAM74D,EAAUy3D,EAAAA,GAAAA,UAAAA,EATgDiB,GAa1D77D,EAAOjzB,SAAAA,eAbmDo2B,GAchE,GAAA25B,EAAe,CACb,MAAMk/B,EAAOjvF,SAAAA,cADA,QAEbivF,EAAAA,UAAiB,GAAAl/B,aACjBk/B,EAAAA,YAHah8D,GAIbjJ,EAAAA,YAJailE,GAKb,OAAOl/B,EAAAA,SAAAA,YAAiCk/B,EAAjCl/B,WALM,EAOf/lC,EAAAA,YArBgEiJ,GAsBhE,OAtBgE,EAyBlE,IAAIi8D,EAAJT,EACEU,EAAKD,EAjDe,EAkDtB,GAxCqB9nF,EAAAA,MAVCmc,aAkDJ,CAChB2rE,EADgB,EAEhBC,EAAK7sD,EAFWh8B,YAGX,IAAAkoF,EAAqB,OAK5B,IAAK,IAAIpoF,EAAT8oF,EAAiB9oF,EAAjB+oF,EAAyB/oF,IAAK,CAC5B,MAAM67B,EAAQK,EADcl8B,GAEtBioF,EAAQpsD,EAFcosD,MAGtBF,EAAMlsD,EAHgBksD,IAItBiB,EAAaZ,GAAkBpoF,IAJTqoF,EAKtBY,GAAmBD,EAAA,YAAD,IAAA,SAA6CntD,EALzCQ,MAM5B,IAAI9B,EANwB,EAS5B,GAAI+tD,GAAYL,EAAAA,SAAiBK,EAAjCJ,OAQEM,gBAAgBF,EAAhBE,OAAgCF,EAAhCE,OAAgDP,EAD3C3oD,YAP0C,CAE/C,OAAIgpD,GACFE,gBAAgBF,EAAhBE,OAAgCF,EAAhCE,OAAgDD,EAD5BjpD,QAItBo9C,UAN+CuL,GAWjD,GAAIA,EAAAA,SAAiBF,EAArBG,OACE3tD,EAAeiuD,gBACbP,EADaO,OAEbP,EAFaO,OAGbT,EAHaS,OAIb,YAL6BS,OAO1B,CACL1uD,EAAeiuD,gBACbP,EADaO,OAEbP,EAFaO,OAGbD,EAHaC,OAIb,kBALGS,GAOL,IAAK,IAAIC,EAAKjB,EAAAA,OAAT,EAA2BkB,EAAKpB,EAArCG,OAAiDgB,EAAjDC,EAA0DD,IACxDnkB,EAAAA,GAAAA,UAAyB,mBADqCkkB,EAGhEvM,UAAAA,EAAe,gBAVVuM,GAYPX,EAvC4BP,EAyC5BiB,GAEEhoF,EAAAA,oBAAmC,CACjC2iB,QAASohD,EAASkjB,EADeC,QAAA3tD,aAAAA,EAGjCC,UAHiCG,EAIjClC,WAJiC4vD,IASvCC,GACEE,gBAAgBF,EAAhBE,OAAgCF,EAAhCE,OAAgDD,EADrCjpD,QAKfsoD,iBACE,IAAKtuF,KAAL2F,QAAmB,OAGnB,MAAM+B,eAAAA,EAAAk7B,QAAAA,EAAAvB,QAAAA,GAJSrhC,MAKTmuF,oBAAAA,EAAA1iB,SAAAA,GALSzrE,KAMf,IAAI8vF,GANW,EASf,IAAK,IAAIppF,EAAJ,EAAWC,EAAKi8B,EAArBh8B,OAAqCF,EAArCC,EAA6CD,IAAK,CAChD,MAAM67B,EAAQK,EADkCl8B,GAGhD,IAAK,IAAIszD,EADKvoD,KAAAA,IAAAA,EAA6B8wB,EAAAA,MAFKqsD,QAG5BH,EAAMlsD,EAAAA,IAA1BqsD,OAA4C50B,GAA5Cy0B,EAAsDz0B,IAAK,CACzD,MAAM1vC,EAAMmhD,EAD6CzR,GAEzD1vC,EAAAA,YAAkB6jE,EAFuCn0B,GAGzD1vC,EAAAA,UAHyD,GAK3DwlE,EAAqBvtD,EAAAA,IAAAA,OAR2B,EAWlD,GAAK76B,MAAAA,IAAAA,EAALi4B,iBAAuC,OAKvC,MAAME,EAAcn4B,EAAAA,YAAAA,IAzBL,KA0BTu4B,EAAoBv4B,EAAAA,kBAAAA,IA1BX,KA2BTq4B,EAAmBr4B,EAAAA,iBAAAA,IA3BV,KA6Bf1H,KAAA4iC,QAAe5iC,KAAAuuF,gBAAA1uD,EAAAI,EA7BAF,GA8Bf//B,KAAA6uF,eAAoB7uF,KA9BL4iC,iGC/QnB,IAAAhlC,EAAAH,EAAA,sBAyCA,MAAAqwD,iBACEhxD,aAAYixD,aAAAA,EAAA7rD,SAAAA,EAAAg/B,UAAAA,EAAAuf,SAAAA,EAAAuN,YAKVA,EALU,KAAAH,qBAMVA,GANF/wD,IAQEkD,KAAA+tD,aADCA,EAED/tD,KAAAkC,SAFCA,EAGDlC,KAAA81B,YAHC,KAID91B,KAAAmuF,oBAJC,GAKDnuF,KAAA+vF,kBALC,KAMD/vF,KAAAgwF,eANC,EAODhwF,KAAA0Z,WAAkBwnB,EAPjB,EAQDlhC,KAAAygD,SARCA,EASDzgD,KAAAyrE,SATC,GAUDzrE,KAAAiwF,oBAVC,KAWDjwF,KAAAguD,YAXCA,EAYDhuD,KAAA6tD,qBAZCA,EAcD7tD,KAdCkwF,aAoBH/4D,mBACEn3B,KAAAgwF,eADiB,EAGjB,IAAKhwF,KAAL6tD,qBAAgC,CAC9B,MAAMsiC,EAAe7vF,SAAAA,cADS,OAE9B6vF,EAAAA,UAF8B,eAG9BnwF,KAAA+tD,aAAA51B,YAH8Bg4D,GAMhCnwF,KAAAkC,SAAAoC,SAAA,oBAA4C,CAC1CC,OAD0CvE,KAE1C0Z,WAAY1Z,KAF8B0Z,WAG1C02E,YAAapwF,KAAAyrE,SAH6B7kE,SAa9CsO,OAAOM,EAAPN,GAAoB,IAAAm7E,EAClB,IAAMrwF,KAAA81B,cAAoB91B,KAAtB+vF,mBAAiD/vF,KAArDgwF,cAAyE,OAGzEhwF,KAJkBgjD,SAMlBhjD,KAAAyrE,SAAA7kE,OANkB,EAOlB,QAAAypF,EAAArwF,KAAAguD,mBAAA,IAAAqiC,GAAAA,EAAA1kB,eAAiC3rE,KAAjCyrE,SAAgDzrE,KAP9BmuF,qBASlB,MAAMmC,EAAgBhwF,SATJ02B,yBAUlBh3B,KAAAiwF,qBAA2B,EAAAryF,EAAA2yF,iBAAgB,CACzCz6D,YAAa91B,KAD4B81B,YAEzCi6D,kBAAmB/vF,KAFsB+vF,kBAGzC5nF,UAHyCmoF,EAIzC7vC,SAAUzgD,KAJ+BygD,SAKzCgrB,SAAUzrE,KAL+ByrE,SAMzC0iB,oBAAqBnuF,KANoBmuF,oBAAA34E,QAAAA,EAQzCq4C,qBAAsB7tD,KARmB6tD,uBAU3C7tD,KAAAiwF,oBAAArlF,QAAAvG,MACE,KAAM,IAAAmsF,EACJxwF,KAAA+tD,aAAA51B,YADIm4D,GAEJtwF,KAFIm3B,mBAGJ,QAAAq5D,EAAAxwF,KAAAguD,mBAAA,IAAAwiC,GAAAA,EAHI5kB,YAKN,SAAA/mE,OASJm+C,SAAS,IAAAytC,EACP,GAAIzwF,KAAJiwF,oBAA8B,CAC5BjwF,KAAAiwF,oBAD4BjtC,SAE5BhjD,KAAAiwF,oBAF4B,KAI9B,QAAAQ,EAAAzwF,KAAAguD,mBAAA,IAAAyiC,GAAAA,EALOtjB,UAQTujB,qBAAAA,GACE1wF,KADmCgjD,SAEnChjD,KAAA+vF,kBAFmCnhB,EAKrC+hB,eAAAA,GACE3wF,KAD0BgjD,SAE1BhjD,KAAA81B,YAF0BA,EAY5Bo6D,aACE,MAAM5lE,EAAMtqB,KADD+tD,aAEX,IAAI6iC,EAFO,KAIXtmE,EAAAA,iBAAAA,aAAkC3J,IAChC,GAAI3gB,KAAA6tD,sBAA6B7tD,KAAjCiwF,oBAA2D,CACzDjwF,KAAAiwF,oBAAAY,gBADyD,GAEzD,GAAAD,EAGE,CACA9+E,aADA8+E,GAEAA,EAFA,KALuD,OAY3D,MAAMnC,EAAMnkE,EAAAA,cAb2B,iBAcvC,IAAAmkE,EAAU,OAQR,IAAIqC,EAAYnwE,EAAAA,SAtBqB2J,EAwBnCwmE,EACEA,GAzBiC,SA0BjCvuF,OAAAA,iBAAAA,GAAAA,iBAAAA,oBAIJ,GAAAuuF,EAAe,CACb,MAAMC,EAAYzmE,EADLhF,wBAEP8G,EAAI3a,KAAAA,IAAAA,GAAakP,EAAAi2B,MAAYm6C,EAAb5uE,KAA8B4uE,EAFvC3nE,QAGbqlE,EAAAA,MAAAA,KAAgB,IAACriE,GAADojC,QAAA,GAHH,IAMjBi/B,EAAAA,UAAAA,IApCuC,aAuCzCnkE,EAAAA,iBAAAA,WAAgC,KAC9B,GAAItqB,KAAA6tD,sBAA6B7tD,KAAjCiwF,oBAA2D,CAEvDW,EAAkB7+E,YAAW,KACvB/R,KAAJiwF,qBACEjwF,KAAAiwF,oBAAAY,gBAD4B,GAG9BD,EAJiC,OArM7C,KAmMiE,OAc3D,MAAMnC,EAAMnkE,EAAAA,cAfwB,iBAgBpC,GAAAmkE,EAAA,CAIEA,EAAAA,MAAAA,IApBkC,GAsBpCA,EAAAA,UAAAA,OAtBoC,qGClM1C,IAAA7wF,EAAAH,EAAA,qBA+BA,MAAAmxD,gBAIE9xD,aAAYuuD,QAAAA,EAAA33C,QAAAA,EAAArG,kBAGVA,EAHU,KAAAzF,YAAAA,EAAAopF,QAKVA,EALFl0F,OAOEkD,KAAAqrD,QADCA,EAEDrrD,KAAA0T,QAFCA,EAGD1T,KAAAqN,kBAHCA,EAIDrN,KAAA4H,YAJCA,EAKD5H,KAAAgxF,QALCA,EAODhxF,KAAAsqB,IAPC,KAQDtqB,KAAA8vD,YARC,EAkBH56C,OAAAA,EAAiB66C,EAAjB76C,WACE,GAAA,UAAI66C,EAAoB,CACtB,MAAM3hD,EAAa,CACjBqyC,SAAUA,EAAAA,MAAe,CAAE0P,UADV,IAEjB7lC,IAAKtqB,KAFYsqB,IAGjB0mE,QAAShxF,KAHQgxF,QAIjB3jF,kBAAmBrN,KAJFqN,kBAKjBzF,YAAa5H,KALI4H,YAAAmoD,OAAAA,GAUbzlC,EAAMhqB,SAAAA,cAXU,OAYtBN,KAAAqrD,QAAAlzB,YAZsB7N,GAatBlc,EAAAA,IAbsBkc,EAetB,MAAMpH,EAAS+tE,EAAAA,SAAAA,OAfO7iF,GAgBtB,OAAOlI,QAAAA,QAhBegd,GAoBxB,OAAOljB,KAAA0T,QAAAw9E,SAAA7sF,MAEC2sF,IACJ,GAAIhxF,KAAA8vD,aAAJkhC,EACE,MAAO,CAAEvlB,SADsB,IAIjC,MAAMr9D,EAAa,CACjBqyC,SAAUA,EAAAA,MAAe,CAAE0P,UADV,IAEjB7lC,IAAKtqB,KAFYsqB,IAAA0mE,QAAAA,EAIjB3jF,kBAAmBrN,KAJFqN,kBAKjBzF,YAAa5H,KALI4H,YAAAmoD,OAAAA,GASnB,GAAI/vD,KAAJsqB,IACE,OAAO2mE,EAAAA,SAAAA,OADK7iF,GAIdpO,KAAAsqB,IAAWhqB,SAAAA,cAlBI,OAmBfN,KAAAqrD,QAAAlzB,YAAyBn4B,KAnBVsqB,KAoBflc,EAAAA,IAAiBpO,KApBFsqB,IAqBf,OAAO2mE,EAAAA,SAAAA,OArBQ7iF,MAFZ+D,OAyBE+O,IACLvc,OAAAA,WAAAA,MADcuc,MAKpB8hC,SACEhjD,KAAA8vD,YADO,EAIT9jD,OACOhM,KAALsqB,MAGAtqB,KAAAsqB,IAAAqN,QAJK,2FCnGT,IAAAn6B,EAAAC,EAAA,GAfAI,EAAAJ,EAAA,GAAAgnD,EAAAhnD,EAAA,uBAmDA,MAAAwL,iBAMEnM,YAAAA,EAAAA,EAAAA,GACEkD,KAAAgC,QAAe3E,EAD6B2E,QAE5ChC,KAAA0lB,aAAoBroB,EAFwBqoB,aAG5C1lB,KAAAmxF,uBAA8B9zF,EAHc8zF,uBAI5CnxF,KAAAs0B,QAAe,CACb,CACEjK,QAAShtB,EADX+zF,uBAEEpgE,UAFF,mBAGE9iB,OAHF,GAKA,CAAEmc,QAAShtB,EAAXg0F,eAAmCrgE,UAAnC,WAA0D9iB,OAA1D,GACA,CAAEmc,QAAShtB,EAAXi0F,YAAgCtgE,UAAhC,QAAoD9iB,OAApD,GACA,CAAEmc,QAAShtB,EAAXk0F,eAAmCvgE,UAAnC,WAA0D9iB,OAA1D,GACA,CAAEmc,QAAShtB,EAAXm0F,mBAAuCxgE,UAAvC,KAAwD9iB,OAAxD,GACA,CAAEmc,QAAShtB,EAAXo0F,gBAAoCzgE,UAApC,YAA4D9iB,OAA5D,GACA,CAAEmc,QAAShtB,EAAXq0F,eAAmC1gE,UAAnC,WAA0D9iB,OAA1D,GACA,CACEmc,QAAShtB,EADXs0F,mBAEE3gE,UAFF,WAGE9iB,OAHF,GAKA,CACEmc,QAAShtB,EADXu0F,oBAEE5gE,UAFF,YAGE9iB,OAHF,GAKA,CACEmc,QAAShtB,EADXw0F,uBAEE7gE,UAFF,mBAGE8gE,aAAc,CAAE9/D,KAAMpL,EAAAA,WAHxBC,QAIE3Y,OAJF,GAMA,CACEmc,QAAShtB,EADX00F,qBAEE/gE,UAFF,mBAGE8gE,aAAc,CAAE9/D,KAAMpL,EAAAA,WAHxBE,MAIE5Y,OAJF,GAMA,CACEmc,QAAShtB,EADX20F,iBAEEhhE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM5N,EAAAA,WAHxB2T,MAIEhZ,OAJF,GAMA,CACEmc,QAAShtB,EADX40F,qBAEEjhE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM5N,EAAAA,WAHxB0T,UAIE/Y,OAJF,GAMA,CACEmc,QAAShtB,EADX60F,uBAEElhE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM5N,EAAAA,WAHxBib,YAIEtgB,OAJF,GAMA,CACEmc,QAAShtB,EADX80F,oBAEEnhE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM5N,EAAAA,WAHxBkb,SAIEvgB,OAJF,GAMA,CACEmc,QAAShtB,EADX+0F,iBAEEphE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM1N,EAAAA,WAHxB5P,MAIEqK,OAJF,GAMA,CACEmc,QAAShtB,EADXg1F,gBAEErhE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM1N,EAAAA,WAHxB0T,KAIEjZ,OAJF,GAMA,CACEmc,QAAShtB,EADXi1F,iBAEEthE,UAFF,mBAGE8gE,aAAc,CAAE3wE,KAAM1N,EAAAA,WAHxB2T,MAIElZ,OAJF,GAMA,CACEmc,QAAShtB,EADXk1F,yBAEEvhE,UAFF,qBAGE9iB,OAHF,IAMFlO,KAAA0uB,MAAa,CACXk+B,UAAWvvD,EADAo0F,gBAEXe,SAAUn1F,EAFCq0F,eAGXe,aAAcp1F,EAHHs0F,mBAIXe,cAAer1F,EAJJu0F,qBAOb5xF,KAAA+F,cA7F4CA,EA8F5C/F,KAAAkC,SA9F4CA,EAgG5ClC,KAAA2mB,QAhG4C,EAiG5C3mB,KAAA2yF,gBAjG4C,KAkG5C3yF,KAAAymD,wBAlG4C,KAoG5CzmD,KApG4C8N,QAwG5C9N,KAxG4C4yF,sBAyG5C5yF,KAAA6yF,yBAzG4Cx1F,GA0G5C2C,KAAA8yF,wBA1G4Cz1F,GA2G5C2C,KAAA+yF,wBA3G4C11F,GA8G5C2C,KAAAkC,SAAA4T,IAAA,SAA4B9V,KAAAgzF,cAAAzrF,KA9GgBvH,OAoH1CylB,aACF,OAAOzlB,KADI2mB,OAIbpM,cAAAA,GACEva,KAAA0Z,WADwBA,EAExB1Z,KAFwBygC,iBAK1BjuB,cAAAA,GACExS,KAAAsL,WADwBA,EAExBtL,KAFwBygC,iBAK1B3yB,QACE9N,KAAA0Z,WADM,EAEN1Z,KAAAsL,WAFM,EAGNtL,KAHMygC,iBAMNzgC,KAAAkC,SAAAoC,SAAA,wBAAgD,CAAEC,OAN5CvE,OASRygC,iBACEzgC,KAAA0uB,MAAAk+B,UAAArP,SAAgCv9C,KAAA0Z,YADjB,EAEXpZ,SAAAA,eAAJ,kBACEA,SAAAA,eAAAA,gBAAAA,SAAmDN,KAAA0Z,YADR,GAG7C1Z,KAAA0uB,MAAA8jE,SAAAj1C,SAA+Bv9C,KAAA0Z,YAAmB1Z,KALnCsL,WAMXhL,SAAAA,eAAJ,cACEA,SAAAA,eAAAA,YAAAA,SAA+CN,KAAA0Z,YAAmB1Z,KAD3BsL,YAIzCtL,KAAA0uB,MAAA+jE,aAAAl1C,SAVe,IAUoBv9C,KAAAsL,WACnCtL,KAAA0uB,MAAAgkE,cAAAn1C,SAXe,IAWqBv9C,KAAAsL,WAEpCtL,KAAAkC,SAAAoC,SAAA,gBAAwC,CACtCC,OADsCvE,KAEtCizF,OAFsC,mBAGtCv5E,WAAY1Z,KAH0B0Z,WAItCpO,WAAYtL,KAJ0BsL,aAQ1CsnF,sBAEE5yF,KAAA0lB,aAAAyN,iBAAA,QAA4CnzB,KAAA2hB,OAAApa,KAFxBvH,OAKpB,IAAA,MAAWqqB,QAAAA,EAAA2G,UAAAA,EAAA9iB,MAAAA,EAAA4jF,aAAXA,KAA0D9xF,KAA1Ds0B,QACEjK,EAAAA,iBAAAA,SAAkC1J,IAChC,GAAA,OAAIqQ,EAAoB,CACtB,MAAM43D,EAAU,CAAErkF,OADIvE,MAEtB,IAAA,MAAAkzF,KAAApB,EACElJ,EAAAA,GAAoBkJ,EADeoB,GAGrClzF,KAAAkC,SAAAoC,SAAA0sB,EALsB43D,GAOxB16E,GACElO,KADSkO,WAOjB2kF,yBAAAA,GACE7yF,KAAAkC,SAAA4T,IAAA,qBAAuC,UAAUkc,KAAVA,IACrCsC,EAAAA,uBAAAA,UAAAA,OAAAA,UAEEtC,IAASpL,EAAAA,WAH8CC,QAKzDyN,EAAAA,qBAAAA,UAAAA,OAAAA,UAEEtC,IAASpL,EAAAA,WAP8CE,SAY7DgsE,wBAAAA,GACE,MAAMK,kBAAoB,EAAAhyE,KAAAA,MACxBmT,EAAAA,iBAAAA,UAAAA,OAAAA,UAEEnT,IAAS5N,EAAAA,WAH2B2T,MAKtCoN,EAAAA,qBAAAA,UAAAA,OAAAA,UAEEnT,IAAS5N,EAAAA,WAP2B0T,UAStCqN,EAAAA,uBAAAA,UAAAA,OAAAA,UAEEnT,IAAS5N,EAAAA,WAX2Bib,YAatC8F,EAAAA,oBAAAA,UAAAA,OAAAA,UAEEnT,IAAS5N,EAAAA,WAf2Bkb,SAoBtC,MAAM2kE,EACJpzF,KAAAsL,WAAkBm6C,EAAAA,gBArBkBC,uBAsBtCpxB,EAAAA,iBAAAA,SAtBsC8+D,EAuBtC9+D,EAAAA,qBAAAA,SAvBsC8+D,EAwBtC9+D,EAAAA,uBAAAA,SAxBsC8+D,EAyBtC9+D,EAAAA,oBAAAA,SAzBsC8+D,EA6BtC,MAAMC,EAAyBlyE,IAAS5N,EAAAA,WA7BFib,WA8BtC8F,EAAAA,iBAAAA,SA9BsC++D,EA+BtC/+D,EAAAA,gBAAAA,SA/BsC++D,EAgCtC/+D,EAAAA,iBAAAA,SAhCsC++D,GAkCxCrzF,KAAAkC,SAAA4T,IAAA,oBAnC+Bq9E,mBAqC/BnzF,KAAAkC,SAAA4T,IAAA,yBAA2C6K,IACrCA,EAAAA,SAAJ3gB,MACEmzF,kBAAkB,CAAEhyE,KAAM5N,EAAAA,WADH0T,cAM7B8rE,wBAAAA,GACE,SAAAO,mBAA2BnyE,KAA3BA,IACEmT,EAAAA,iBAAAA,UAAAA,OAAAA,UAEEnT,IAAS1N,EAAAA,WAHwB5P,MAKnCywB,EAAAA,gBAAAA,UAAAA,OAAAA,UAEEnT,IAAS1N,EAAAA,WAPwB0T,KASnCmN,EAAAA,iBAAAA,UAAAA,OAAAA,UAEEnT,IAAS1N,EAAAA,WAXwB2T,MAcrCpnB,KAAAkC,SAAA4T,IAAA,oBAf+Bw9E,mBAiB/BtzF,KAAAkC,SAAA4T,IAAA,yBAA2C6K,IACrCA,EAAAA,SAAJ3gB,MACEszF,kBAAkB,CAAEnyE,KAAM1N,EAAAA,WADH5P,UAM7B8K,OACE,IAAI3O,KAAJ2mB,OAAA,CAGA3mB,KAAA2mB,QAJK,EAOL3mB,KAAA0lB,aAAAoH,UAAArX,IAPK,WAQLzV,KAAA0lB,aAAAsY,aAAA,gBARK,QASLh+B,KAAAgC,QAAA8qB,UAAA4C,OATK,WAYPxhB,QACE,GAAKlO,KAAL2mB,OAAA,CAGA3mB,KAAA2mB,QAJM,EAKN3mB,KAAAgC,QAAA8qB,UAAArX,IALM,UAMNzV,KAAA0lB,aAAAoH,UAAA4C,OANM,WAON1vB,KAAA0lB,aAAAsY,aAAA,gBAPM,UAURrc,SACM3hB,KAAJ2mB,OACE3mB,KADekO,QAGflO,KADK2O,OAQTqkF,gBACE,GAAKhzF,KAAL2mB,OAAA,CAGA3mB,KAAA2yF,gBAAuB3yF,KAAA+F,cAJT6jB,aAMd,GAAI5pB,KAAA2yF,kBAAyB3yF,KAA7BymD,wBAAA,CAGAzmD,KAAAmxF,uBAAA5hE,MAAAw5C,UACE/oE,KAAA2yF,gBAD4Cn1F,EAAAwuD,kBAAA,KAI9ChsD,KAAAymD,wBAA+BzmD,KAbjB2yF,iGCjVlB,IAAAn1F,EAAAC,EAAA,aAkCA,MAAAuL,QAMElM,YAAAA,EAAAA,EAAAA,GACEkD,KAAAgC,QAAe3E,EADoB8K,UAEnCnI,KAAAkC,SAFmCA,EAGnClC,KAAAmC,KAHmCA,EAInCnC,KAAAs0B,QAAe,CACb,CAAEjK,QAAShtB,EAAX2mB,SAA6BgN,UAA7B,gBACA,CAAE3G,QAAShtB,EAAXgpD,KAAyBr1B,UAAzB,YACA,CAAE3G,QAAShtB,EAAXwN,OAA2BmmB,UAA3B,UACA,CAAE3G,QAAShtB,EAAX4N,QAA4B+lB,UAA5B,WACA,CAAE3G,QAAShtB,EAAXk2F,SAA6BviE,UAA7B,YACA,CAAE3G,QAAShtB,EAAXm2F,MAA0BxiE,UAA1B,SACA,CACE3G,QAAShtB,EADX+zF,uBAEEpgE,UAFF,oBAIA,CAAE3G,QAAShtB,EAAX4S,SAA6B+gB,UAA7B,YACA,CAAE3G,QAAShtB,EAAXo2F,aAAiCziE,UAAjC,OAEFhxB,KAAA0uB,MAAa,CACXnjB,SAAUlO,EADCkO,SAEXmO,WAAYrc,EAFDqc,WAGXg6E,YAAar2F,EAHFq2F,YAIXC,kBAAmBt2F,EAJRs2F,kBAKX3vE,SAAU3mB,EALC2mB,SAMXqiC,KAAMhpD,EANKgpD,KAOXx7C,OAAQxN,EAPGwN,OAQXI,QAAS5N,EARE4N,SAWbjL,KAAA4zF,eA7BmC,EA8BnC5zF,KA9BmC8N,QAiCnC9N,KAjCmC6zF,iBAoCrCt5E,cAAAA,EAAAA,GACEva,KAAA0Z,WADmCA,EAEnC1Z,KAAAkkB,UAFmCA,EAGnClkB,KAAAygC,gBAHmC,GAMrCjuB,cAAAA,EAAAA,GACExS,KAAAsL,WADuCA,EAEvCtL,KAAA8zF,cAFuCA,EAGvC9zF,KAAAygC,gBAHuC,GAMzCszD,aAAAA,EAAAA,GACE/zF,KAAAg0F,gBAAuBA,GAADC,GADgB/6E,WAEtClZ,KAAAi0F,UAFsCA,EAGtCj0F,KAAAygC,gBAHsC,GAMxC3yB,QACE9N,KAAA0Z,WADM,EAEN1Z,KAAAkkB,UAFM,KAGNlkB,KAAA8zF,eAHM,EAIN9zF,KAAAsL,WAJM,EAKN,MAAMkP,EAAoBpD,4BAAAA,IALpB,oBAON,GAAAoD,EAAuB,CACrBxa,KAAAg0F,eADqBx5E,EAEfjd,OAANid,KACExa,KAAAi0F,UAAiB12F,OADcid,QAG5B,CACLxa,KAAAg0F,eADKx2F,EAAA6N,oBAELrL,KAAAi0F,UAFKz2F,EAAAsrD,cAMP9oD,KAAAygC,gBAlBM,GAmBNzgC,KAnBMk0F,8BAsBRL,iBACE,MAAMn6E,WAAAA,EAAAg6E,YAAAA,GAA8B1zF,KADrB0uB,MAET4Y,EAFStnC,KAKf,IAAA,MAAWqqB,QAAAA,EAAA2G,UAAXA,KAAqChxB,KAArCs0B,QACEjK,EAAAA,iBAAAA,SAAkC1J,IAChC,OAAIqQ,GACFhxB,KAAAkC,SAAAoC,SAAA0sB,EAAkC,CAAEzsB,OADdvE,UAM5B0Z,EAAAA,iBAAAA,SAAqC,WACnC1Z,KAD+C0hB,YAGjDhI,EAAAA,iBAAAA,UAAsC,WACpC4tB,EAAAA,SAAAA,SAAAA,oBAA4C,CAC1C/iC,OAD0C+iC,EAE1C1tC,MAAOoG,KAFmCpG,WAM9C85F,EAAAA,iBAAAA,UAAuC,WACrC,WAAI1zF,KAAApG,OAGJ0tC,EAAAA,SAAAA,SAAAA,eAAuC,CACrC/iC,OADqC+iC,EAErC1tC,MAAOoG,KAF8BpG,WAOzC85F,EAAAA,iBAAAA,SAAsC,SAAA/yE,GACpC,MAAME,EAASF,EADoCE,OAKjD7gB,KAAApG,QAAe0tC,EAAf0sD,gBADF,WAEEnzE,EAAAA,QAAAA,eAEA7gB,KADAq0B,UAKJq/D,EAAAA,cA9Cel2F,EAAA+T,qBAgDfvR,KAAAkC,SAAA4T,IAAA,aAA+B,KAC7B9V,KAAA4zF,eADmC,EAEnC5zF,KAAAygC,gBAFmC,MAMvCA,eAAe0zD,GAAf1zD,GACE,IAAKzgC,KAAL4zF,cAAyB,OAIzB,MAAMl6E,WAAAA,EAAApO,WAAAA,EAAA0oF,eAAAA,EAAAC,UAAAA,EAAAvlE,MAAAA,GAL8B1uB,KAOpC,GAAAm0F,EAAmB,CACjB,GAAIn0F,KAAJ8zF,cACEplE,EAAAA,WAAAA,KADsB,WAEjB,CACLA,EAAAA,WAAAA,KADK,SAEL1uB,KAAAmC,KAAAsN,IAAA,WAA0B,CAA1BnE,WAAAA,IAAAjH,MAA+CqL,IAC7Cgf,EAAAA,SAAAA,YADoDhf,KAIxDgf,EAAAA,WAAAA,IATiBpjB,EAYnB,GAAItL,KAAJ8zF,cAAwB,CACtBplE,EAAAA,WAAAA,MAAyB1uB,KADHkkB,UAEtBlkB,KAAAmC,KAAAsN,IAAA,gBAA+B,CAAAiK,WAAAA,EAAApO,WAAAA,IAA/BjH,MAAgEqL,IAC9Dgf,EAAAA,SAAAA,YADqEhf,UAIvEgf,EAAAA,WAAAA,MADKhV,EAIPgV,EAAAA,SAAAA,SAA0BhV,GA5BU,EA6BpCgV,EAAAA,KAAAA,SAAsBhV,GA7BcpO,EA+BpCojB,EAAAA,QAAAA,SAAyBulE,GA/BWz2F,EAAAkyD,UAgCpChhC,EAAAA,OAAAA,SAAwBulE,GAhCYz2F,EAAA8xD,UAkCpCtvD,KAAAmC,KAAAsN,IAAA,qBAC6B,CAAEwS,MAAOxQ,KAAAA,MAAAA,IAAWwiF,GADjD,MAAA5vF,MAEQqL,IACJ,IAAI0kF,GADO,EAEX,IAAA,MAAAC,KAAqB3lE,EAAAA,YAArBrxB,QACE,GAAIg3F,EAAAA,QAAJL,EAAA,CAIAK,EAAAA,UAL8C,EAM9CD,GAN8C,OAE5CC,EAAAA,UADmC,EAOvC,IAAAD,EAA2B,CACzB1lE,EAAAA,kBAAAA,YADyBhf,EAEzBgf,EAAAA,kBAAAA,UAFyB,MAK/B1uB,KAAAkC,SAAAoC,SAAA,gBAAwC,CACtCC,OADsCvE,KAEtCizF,OAFsC,UAAAv5E,WAAAA,EAAApO,WAAAA,EAAA0oF,eAAAA,EAAAC,UAAAA,IAU1CC,4BAA4B5xE,GAA5B4xE,GAC0Bl0F,KAAA0uB,MADmBhV,WAG3CyK,UAAAA,OAzPJ,uBAsP+C7B,GAW7Chf,0BACE,MAAMorB,MAAAA,EAAAvsB,KAAAA,GADkBnC,KAGlBs0F,EAA0BpuF,QAAAuQ,IAAY,CAC1CtU,EAAAA,IAD0C,mBAE1CA,EAAAA,IAF0C,qBAG1CA,EAAAA,IAH0C,kBAI1CA,EAAAA,IAJ0C,sBAOtCotB,EAAQvC,iBAAiB0B,EAA/BglE,aACEa,EAA4BhgF,SAC1Bgb,EAAAA,iBAD0Bhb,kCAD9B,IAKEigF,EAAsBjgF,SACpBgb,EAAAA,iBADoBhb,2BAfA,IAqBxB,IAAIuuC,EAASxiD,SAAAA,cArBW,UA0BtBwiD,EAAAA,WA1BsB,EA4BxB,IAAI16B,EAAM06B,EAAAA,WAAAA,KAAwB,CAAEnB,OA5BZ,UAAAnkD,EAAAqW,iBA+BxBuU,EAAAA,KAAW,GAAGmH,EAAHklE,YAAqBllE,EAArBmlE,aAEX,IAAI31C,EAjCoB,EAkCxB,IAAA,MAAA41C,WAAAL,EACE,IACE,MAAMnrE,MAAAA,GAAYf,EAAAA,YADhBusE,GAEExrE,EAAJ41B,IACEA,EADoB51B,GAGtB,MAAAyrE,IAEJ71C,GAAY,EA1CYy1C,EA4CxB,GAAIz1C,EAAJw1C,EAA0C,CAC5Bj0F,SAD4B6D,gBAExCgsB,MAAAA,YAAAA,iCAAwD,GAAA4uB,OAI1D+D,EAAAA,MAlDwB,EAmDxBA,EAAAA,OAnDwB,EAoDxBA,EAAS16B,EApDe,wFCjQ5B,IAAA1qB,EAAAD,EAAA,iBA4BA,MAAAoV,YACE/V,YAAAA,EAAyB+3F,EA7B3B,IA8BI70F,KAAAoU,YADoEA,EAEpEpU,KAAA60F,UAFoEA,EAIpE70F,KAAA80F,oBAA2B90F,KAAA+0F,mBAAA1wF,MAA6B2wF,IACtD,MAAMC,EAAW17E,KAAAA,MAAWy7E,GADyC,MAErE,IAAIjmE,GAFiE,EAGrE,GAAK+c,MAAAA,QAAcmpD,EAAnBr0E,OAEO,CACL,KAAOq0E,EAAAA,MAAAA,QAAyBj1F,KAAhC60F,WACEI,EAAAA,MAD8CnmD,QAIhD,IAAK,IAAIpoC,EAAJ,EAAWC,EAAKsuF,EAAAA,MAArBruF,OAA4CF,EAA5CC,EAAoDD,IAAK,CAEvD,GADeuuF,EAAAA,MADwCvuF,GAEnDwuF,cAAuBl1F,KAA3BoU,YAA6C,CAC3C2a,EAD2CroB,EAAA,aAR/CuuF,EAAAA,MADkC,IAepC,IAAIlmE,IACFA,EAAQkmE,EAAAA,MAAAA,KAAoB,CAAE7gF,YAAapU,KAAnCi1F,cADQ,GAGlBj1F,KAAAgO,KAAYinF,EAAAA,MArByDlmE,GAsBrE/uB,KAAAi1F,SAtBqEA,KA0BzE3xF,wBACE,GAAIzG,EAAAA,WAAAA,IAAJ,kBAAsC,OAGtC,MAAMm4F,EAAcz7E,KAAAA,UAAevZ,KAJbi1F,UAUtBE,aAAAA,QAAAA,gBAVsBH,GAaxB1xF,yBACE,IAAIzG,EAAAA,WAAAA,IAAJ,kBAMA,OAAOs4F,aAAAA,QAPgB,iBAUzB7xF,UAAArG,EAAAyO,SACQ1L,KADa80F,oBAEnB90F,KAAAgO,KAAA/Q,GAFmByO,EAGnB,OAAO1L,KAHYo1F,kBAMrB9xF,kBAAA+xF,SACQr1F,KADsB80F,oBAE5B,IAAA,MAAA73F,KAAAo4F,EACEr1F,KAAAgO,KAAA/Q,GAAkBo4F,EADWp4F,GAG/B,OAAO+C,KALqBo1F,kBAQ9B9xF,UAAArG,EAAAq4F,SACQt1F,KADsB80F,oBAE5B,MAAMppF,EAAM1L,KAAAgO,KAFgB/Q,GAG5B,YAAOyO,IAAAA,EAAAA,EAHqB4pF,EAM9BhyF,kBAAA+xF,SACQr1F,KADsB80F,oBAE5B,MAAM5lC,EAASx2D,OAAAA,OAFa,MAI5B,IAAA,MAAAuE,KAAAo4F,EAA+B,CAC7B,MAAM3pF,EAAM1L,KAAAgO,KADiB/Q,GAE7BiyD,EAAAA,QAAexjD,IAAAA,EAAAA,EAA0B2pF,EAFZp4F,GAI/B,OAR4BiyD,oFCvFhC,IAAAqmC,EAAA93F,EAAA,GAfA+3F,EAAA/3F,EAAA,IAAAg4F,EAAAh4F,EAAA,IAAAi4F,EAAAj4F,EAAA,IAAAk4F,EAAAl4F,EAAA,iBAAA,GA8BA,MAAAm4F,2BAAAJ,EAAAK,gBACEvyF,sBAAAwyF,GACEX,aAAAA,QAAAA,oBAA0C57E,KAAAA,UADbu8E,IAI/BxyF,uBAAAwyF,GACE,OAAOv8E,KAAAA,MAAW47E,aAAAA,QADY,uBAKlC,MAAAY,gCAAAR,EAAA91F,wBACEzC,6BAAAK,GACE,OAAO,IAD6Bo4F,EAAAO,gBAItCh5F,2BACE,OAAO,IADkB44F,mBAI3B54F,mBAAkBoJ,OAAEA,EAAF,UAChB,OAAO,IAAAsvF,EAAAO,YAD+B7vF,GAIxCpJ,wBAAuB+K,iBAAvBA,IACE,OAAO,IAAA4tF,EAAAO,iBADoCnuF,IAI/C3H,EAAAA,qBAAAA,iBAzDA21F,6GCeAt4F,EAAA,GAOA,MAAAo4F,gBACE/4F,cACE,GAAIkD,KAAAlD,cAAJ+4F,gBACE,MAAM,IAAA94F,MADkC,sCAG1CrE,OAAAA,eAAAA,KAAAA,WAAwC,CACtCkB,MAAOlB,OAAAy9F,OAGD,gBAAA,mBAAA,mBAAA,sBAAA,qBAAA,yBAAA,mBAAA,qBAAA,oBAAA,yBAAA,iBAAA,qBAAA,WAAA,4BAAA,oBAAA,oBAAA,gBAAA,kBAAA,iBAAA,aAAA,oBAAA,mBAAA,gBAAA,iBAAA,aAAA,IAEN78D,UANsC,EAOtCC,YAPsC,EAQtCC,cARsC,IAUxCx5B,KAAAo2F,MAAa19F,OAAAA,OAdD,MAgBZsH,KAAA80F,oBAA2B90F,KAAA+0F,iBAAsB/0F,KAAtB+zE,UAAA1vE,MACzB+xF,IACE,IAAA,MAAAn5F,KAAmB+C,KAAnB+zE,SAAkC,CAChC,MAAMsiB,EAAYD,MAAAA,OAAZC,EAAYD,EADcn5F,UAG5Bo5F,UAA4Br2F,KAAA+zE,SAAhC92E,KACE+C,KAAAo2F,MAAAn5F,GADmDo5F,OAc7D/yF,sBAAAwyF,GACE,MAAM,IAAA/4F,MADuB,oCAU/BuG,uBAAAwyF,GACE,MAAM,IAAA/4F,MADwB,qCAShCuG,oBACQtD,KADM80F,oBAEZ90F,KAAAo2F,MAAa19F,OAAAA,OAFD,MAGZ,OAAOsH,KAAAo1F,gBAAqBp1F,KAHhB+zE,UAadzwE,UAAArG,EAAArD,SACQoG,KADe80F,oBAErB,MAAMQ,EAAet1F,KAAA+zE,SAFA92E,GAIrB,QAAAE,IAAIm4F,EACF,MAAM,IAAAv4F,MAAU,oBAAAE,oBACX,QAAAE,IAAIvD,EACT,MAAM,IAAAmD,MADwB,0CAGhC,MAAMO,SATe1D,EAUf08F,SAVehB,EAYrB,GAAIh4F,IAAJg5F,EAA+B,CAC7B,GAAIh5F,WAAAA,GAAJ,WAA8Bg5F,EAG5B,MAAM,IAAAv5F,MACJ,oBAAAnD,WAAA0D,iBAAAg5F,MAHF18F,EAAQA,EAD8Csf,gBAQxD,GAAI5b,WAAAA,IAA2BC,OAAAA,UAA/B3D,GACE,MAAM,IAAAmD,MAAU,oBAAAnD,0BAGpBoG,KAAAo2F,MAAAn5F,GAzBqBrD,EA0BrB,OAAOoG,KAAAo1F,gBAAqBp1F,KA1BPo2F,OAmCvB9yF,UAAArG,SACQ+C,KADQ80F,oBAEd,MAAMQ,EAAet1F,KAAA+zE,SAArB92E,GACEo5F,EAAYr2F,KAAAo2F,MAHAn5F,GAKd,QAAAE,IAAIm4F,EACF,MAAM,IAAAv4F,MAAU,oBAAAE,oBAElB,YAAOo5F,IAAAA,EAAAA,EAROf,EAgBhBhyF,qBACQtD,KADO80F,oBAEb,MAAM3jB,EAAMz4E,OAAAA,OAFC,MAIb,IAAA,MAAAuE,KAAmB+C,KAAnB+zE,SAAkC,CAChC,MAAMsiB,EAAYr2F,KAAAo2F,MADcn5F,GAEhCk0E,EAAAA,QAAYklB,IAAAA,EAAAA,EAAsCr2F,KAAA+zE,SAFlB92E,GAIlC,OARak0E,0HC5HjB,IAAAvzE,EAAAH,EAAA,GAjBAC,EAAAD,EAAA,GA2BA,SAAAwS,SAAAsmF,EAAA1mF,GACE,MAAM4X,EAAInnB,SAAAA,cADyB,KAEnC,IAAKmnB,EAALrE,MACE,MAAM,IAAArmB,MADM,kDAGd0qB,EAAAA,KALmC8uE,EAMnC9uE,EAAAA,OANmC,UAS/B,aAAJA,IACEA,EAAAA,SADmB5X,IAKpBvP,SAAAk2F,MAAiBl2F,SAAlB6D,iBAAAg0B,YAdmC1Q,GAenCA,EAfmCrE,QAgBnCqE,EAhBmCiI,2BAsBrC,MAAAsmE,gBACEl5F,cACEkD,KAAAy2F,cAAqB,IADTzrB,QAId7+D,YAAAA,EAAAA,IACOorE,EAAAA,EAAAA,wBAAAA,EAAL,sBAIAtnE,SAASzN,EAATyN,yBALyBJ,GAEvBlL,OAAAA,WAAAA,MAA2B,kCAAAnC,KAM/Bk0F,aAAAA,EAAAA,EAAAA,GAMEzmF,UALgB6mE,EAAAA,EAAAA,iBAAAA,EAAAA,EAGdr+E,EAAAA,oBAJsCqqB,wBAAAjT,GAY1C8mB,mBAAAA,EAAAA,EAAAA,GACE,MAAMggE,GAAYC,EAAAA,EAAAA,WADwB/mF,GAEpCknE,EAAc4f,EAAAA,kBAFsB,GAI1C,GAAIA,IAAcl+F,EAAAA,oBAAlBqqB,uBAA8D,CAC5D,IAD4D+zE,EACxDN,EAAUv2F,KAAAy2F,cAAAhnF,IAD8C4a,GAE5D,IAAAksE,EAAc,CACZA,EAAUngF,IAAAA,gBAAoB,IAAApG,KAAS,CAATtQ,GAAiB,CAAEqP,KADrCgoE,KAEZ/2E,KAAAy2F,cAAAp8C,IAAAhwB,EAFYksE,GAOZM,EAAY,SAAWpd,mBAAmB8c,EAAAA,IATgB1mF,GAoB5D,IACEtN,OAAAA,KADEs0F,GAEF,OAFE,EAGF,MAAArqF,GACA7H,OAAAA,WAAAA,MAA2B,uBAAA6H,KAG3B4J,IAAAA,gBAJWmgF,GAKXv2F,KAAAy2F,cAAAlhF,OALW8U,IASfrqB,KAAA02F,aAAAh3F,EAAAmQ,EApC0CknE,GAqC1C,OArC0C,EA8C5C9mE,SAAAA,EAAAA,EAAAA,EAA8BzC,EAA9ByC,YACE,GAAIxX,EAAAA,oBAAAA,wBAAJ+J,EAAuD,CAEnDxC,KAAAmM,YAAA3J,EAFmDqN,GAAA,OAMvDI,SADgBmG,IAAAA,gBAN0CrG,GAAAF,sFCxH9DpS,EAAA,IAkBA,IAAAwnD,EAAAxnD,EAAA,IAEA,MAAMq5F,EAAUx2F,SApBhBw2F,sBAyBA,MAAAb,YACEn5F,YAAAA,GACEkD,KAAA+2F,MADgBp/E,EAEhB3X,KAAAu5C,OAAc,IAAArzC,SAAY,CAAA1B,EAAA8rB,KACxBwmE,EAAAA,aAAoBxmC,EAAAA,EAAAA,eAApBwmC,IAAyC,KACvCtyF,EAD6CsyF,SAMnDxzF,oBAEE,aADmBtD,KADDu5C,QAAAy9C,cAKpB1zF,qBAEE,aADmBtD,KADAu5C,QAAAjzC,eAKrBhD,UAAA1G,EAAeqR,EAAf,KAA4BgB,GAAWokD,EAAAA,EAAAA,iBAAAA,EAAvCplD,IAEE,aADmBjO,KAD8Cu5C,QAE1Dp3C,IAAAA,EAAAA,EAF0D8M,GAKnE3L,gBAAA+mB,GAEE,aADmBrqB,KADIu5C,QAEhBp3C,UAFgBkoB,WCf3B/pB,SAAAA,QAAoB,SAAAiC,EAAAjC,EAAAnD,GAClB,IAAI85F,EADqD,GAErDC,EAFqD,GAGrDC,EAHqD,cAIrDC,EAJqD,GAKrDC,EALqD,GAMrDC,EANqD,UA8DzD,SAAAC,mBAAA5/E,GACE,IAAI6/E,EAAYl3F,EAAAA,YADgB,SAEhCk3F,EAAAA,UAAAA,aAAAA,GAFgC,GAGhCA,EAAAA,SAHgC7/E,EAIhCrX,EAAAA,cAJgCk3F,GAOlC,SAAAC,YAAAj1F,EAAA6xE,EAAAqjB,GACErjB,EAAYA,GAAa,SAAAc,WAAAz1E,KACzBg4F,EAAYA,GAAa,SAAAC,eAEzB,IAAIC,EAAM,IAJoCC,eAK9CD,EAAAA,KAAAA,MAAAA,EA1EuD,MA2EnDA,EAAJE,kBACEF,EAAAA,iBADwB,6BAG1BA,EAAAA,mBAAyB,WACvB,GAAIA,EAAAA,aACEA,KAAAA,EAAAA,QAAJ,IAAyBA,EAAAA,OACvBvjB,EAAUujB,EAD+BG,cAGzCL,MAINE,EAAAA,QAlB8CF,EAmB9CE,EAAAA,UAnB8CF,EAuB9C,IACEE,EAAAA,KADE,MAEF,MAAAlkE,GACAgkE,KA2BJ,SAAAM,cAAAj4E,EAAApI,EAAAsgF,EAAAC,GACE,IAAIliF,EAAU+J,EAAAA,QAAAA,UAAAA,KADqD,KAInE,SAAAo4E,WAAAx5D,GACE,OAAIA,EAAAA,YAAAA,MAAJ,EADwBA,EAEjBA,EAAAA,QAAAA,QAAAA,MAAAA,QAAAA,OAAAA,MAAAA,QAAAA,OAAAA,MAAAA,QAAAA,OAAAA,MAAAA,QAAAA,OAAAA,MAAAA,QAAAA,OAAAA,MAAAA,QAAAA,OAAAA,KAAAA,QAAAA,OAAAA,KAAAA,QAAAA,OAAAA,KAAAA,QAAAA,OAFiB,KA+H1B84D,YAAAA,GAEE,SAAAW,GACElB,GADkBkB,GA/GtB,SAAAC,gBAAA15D,EAAA25D,GACE,IAAIC,EADmD,GAInDC,EAJmD,YAKnDC,EALmD,cAMnDC,EANmD,mBAOnDC,EAPmD,iCAQnDC,EARmD,yBAWvD,SAAAC,cAAAC,EAAAC,EAAAC,GACE,IAAIC,EAAUH,EAAAA,QAAAA,EAAAA,IAAAA,MADwD,WAElEI,EAFkE,IAGlEC,EAAcxhF,EAAAA,MAAAA,IAAAA,GAHoD,GAIlEyhF,GAJkE,EAKlE72D,EALkE,GAOlE82D,GAPkE,GAQtE,SAAAC,YAKE,IAJA,IAAIC,OApKM,IAwKG,CACX,IAAKN,EAADryF,QAAJ2yF,EAAqC,CACnCF,EAGEC,YAFAE,WAAAA,EADkBF,WADe,OAQhC,IAAKL,EAALryF,OAAqB,CAExBoyF,IAFwB,OAK1B,IAAIhoF,EAAOioF,EAdAnqD,QAiBX,IAAI2pD,EAAAA,KAAJznF,GAAA,CAGA,GAAA+nF,EAAoB,CAElB,GADAx2D,EAAQm2D,EAAAA,KADU1nF,GAEP,CAKTkoF,EAAc32D,EAAAA,GALL9pB,cAMT2gF,EACEF,MAAAA,GACAA,IADAA,GAEAA,IATOC,EAAA,SAWJ,GAAAC,EAAc,SAIrB,GADA72D,EAAQo2D,EAAAA,KAhBU3nF,GAiBP,CAET,GAAIkoF,MAAAA,GAAuBA,IAA3BvhF,EAAiD,CAE/C6hF,WAAWxjF,EAAUusB,EAArBi3D,GAF+CF,WAG/CD,GAH+C,EAAA,OAO/CE,EAAevjF,EAAUusB,EAFpB,IAQX,IAAIwH,EAAM/4B,EAAAA,MApDC4nF,GAqDP7uD,GAAJ,GAAWA,EAAAA,SACTwuD,EAAWxuD,EAAXwuD,IAAqBJ,WAAWpuD,EADN,OAKhCuvD,GAIF,SAAAE,WAAAh3F,EAAAsK,GACE2qF,YAAAA,GAEE,SAAA/gE,GACEmiE,cAAAA,GAAAA,EADiB/rF,MAGnB,WACE,MAAMsK,EAA8B7U,EAD1B6U,8BAENA,GAAkCA,EAAAA,IAAAA,aAAtC,IACEzS,OAAAA,WAAAA,KAA0BnC,EAD4D,eAGxFsK,OAMN+rF,cAAAA,GAAAA,GAA0B,WACxBP,EADoCC,MAYpCF,CAAAA,GAA0B,SAAA34F,GAExB,IAAA,IAAA9C,KAAA8C,EAAsB,CACpB,IAAA8rB,EAAA+8D,EAEEx5D,EAAQnyB,EAAAA,YAHU,KAIpB,GAAImyB,EAAJ,EAAe,CAEbvD,EAAK5uB,EAAAA,UAAAA,EAFQmyB,GAGbw5D,EAAO3rF,EAAAA,UAAcmyB,EAHR,OAIR,CAELvD,EAFK5uB,EAGL2rF,EAHK4O,EAKFF,EAALzrE,KACEyrE,EAAAA,GADkB,IAGpBA,EAAAA,GAAAA,GAAsBv3F,EAhBF9C,GAoBtBq7F,GACEA,SAhK2DC,GAyKrE,SAAAuB,WAAA9hF,EAAA7K,GACE,IAAI4sF,EAD8B/hF,EAIlCA,IACEA,EAAOA,EADCc,eAIV3L,EAAWA,GAAY,SAAA6sF,eAkFzB,SAAA5sF,QACEkqF,EADe,GAEfC,EAFe,GAGfE,EAHe,GAhFfrqF,GACAqqF,EAXkCz/E,EAelC,IAAIiiF,EArRN,SAAAC,uBACE,OAAOv5F,EAAAA,iBADuB,iCAqRdu5F,GACZC,EAAYF,EAhBkBhzF,OAiBlC,GAAA,IAAIkzF,EAAJ,CAmCA,IAAIC,EACAC,EArD8B,EAsDlCD,EAAmB,WAEjB,KADAC,GACAF,EAAiC,CAC/BhtF,IACAyqF,mBAF+B5/E,GAG/B2/E,EAH+B,aA2BnC,IAAK,IAAI5wF,EAAT,EAAgBA,EAAhBozF,EAA+BpzF,IAAK,CACnB,IAAAuzF,iBAAqBL,EADFlzF,IAElCwzF,KAAAA,EAFkCH,QAlEpC,CAEE,IAAII,EArRR,SAAAC,oBACE,IAAIC,EAAS/5F,EAAAA,cADc,mCAG3B,OAAO+5F,EAAS9gF,KAAAA,MAAW8gF,EAApBA,WAHoB,KAqRdD,GACX,GAAID,GAAQA,EAARA,SAAwBA,EAA5BG,eAAiD,CAC/C31F,OAAAA,WAAAA,IAD+C,iFAK/C,KADAsyF,EAAYkD,EAAAA,QAJmCT,IAK/B,CACd,IAAIa,EAAgBJ,EAAAA,eADN1hF,cAEd,IAAA,IAAA+hF,KAAwBL,EAAxBM,QAAsC,CACpCf,EADoCc,EAIpC,IAFAA,EAAcA,EAFsB/hF,iBAIpCd,EAA0B,CACxBs/E,EAAYkD,EAAAA,QADYT,GAAA,MAGfc,IAAJD,IACLtD,EAAYkD,EAAAA,QAD4BT,KAK9C5sF,SAEAnI,OAAAA,WAAAA,IADK,8LAMP4yF,mBA7BmB5/E,GA8BnB2/E,EA9BmB,WA+CrB,SAAA2C,iBAAAS,GACE,IAAI36E,EAAO26E,EADmB36E,KAI9B/f,KAAAoP,KAAY,SAAAuI,EAAA7K,GACVkrF,cAAAA,EAAAA,EAAAA,GAAoC,WAClC,MAAM5gF,EAA8B7U,EADU6U,4BAE9C,IAAIA,GAAkCA,EAAAA,IAAAA,aAAtC,EAAwF,CACtFzS,OAAAA,WAAAA,KAA0Bob,EAD4D,eAGtFpb,OAAAA,WAAAA,KAA0B,IAAAgT,EAH4D,wBAKxFy/E,EAP8C,GAS9CtqF,SAwYRuqF,EAAAA,OAAiB,SAAA1xD,EAAAyL,EAAAx0C,EAAA2rF,GACf,IAAIvuB,EAAInpB,WADwCO,GAEhD,GAAIz/B,MAAJqoD,GAAc,OAFkCr0B,EAKhD,GAAI4iD,GAAJ4O,EAAuB,OALyBxxD,EAQ3C0xD,EAALsD,eACEtD,EAAAA,aA7WJ,SAAAuD,eAAAjjF,GA+KE,SAAAkjF,KAAA7gC,EAAA8gC,GACE,OADqB,IACdA,EAAAA,QAAAA,GAET,SAAAC,UAAA/gC,EAAA1C,EAAAm3B,GACE,OAAOn3B,GAAAA,GAAc0C,GADWy0B,EAMlC,IAAIuM,EAAc,CAChB,EAAK,SAAAhhC,GACH,MADgB,SAGlB,EAAK,SAAAA,GACH,OAAI+gC,UAAU/gC,EAAV+gC,IAAAA,EAAJ,IADgB,MAEhB,IAAI/gC,EAFY,OAGZ+gC,UAAU/gC,EAAV+gC,IAAAA,GAAJ,IAHgB,OAIhB,GAAI/gC,EAJY,MAKhB,GAAIA,EALY,MAAA,SAQlB,EAAK,SAAAA,GACH,OAAIA,IAAAA,GAAWA,EAAAA,IAAf,EADgB,OAEhB,GAAIA,EAFY,MAGhB,GAAIA,EAHY,MAAA,SAMlB,EAAK,SAAAA,GACH,OAAA,GAAIA,EADY,MAAA,SAIlB,EAAK,SAAAA,GACH,OAAI+gC,UAAAA,EAAAA,EAAJ,GADgB,MAAA,SAIlB,EAAK,SAAA/gC,GACH,OAAI+gC,UAAAA,EAAAA,EAAAA,IAAJ,GAA0B/gC,EADV,MAAA,SAIlB,EAAK,SAAAA,GACH,OAAA,IAAIA,EADY,OAEZA,EAAAA,IAAAA,GAAeA,EAAAA,KAAnB,GAFgB,MAAA,SAKlB,EAAK,SAAAA,GACH,OAAA,GAAIA,EADY,MAEhB,GAAIA,EAFY,MAAA,SAKlB,EAAK,SAAAA,GACH,OAAI+gC,UAAAA,EAAAA,EAAJ,GADgB,MAEZA,UAAAA,EAAAA,EAAJ,IAFgB,OAGhB,GAAI/gC,EAHY,MAIhB,GAAIA,EAJY,MAAA,SAOlB,EAAK,SAAAA,GACH,OAAIA,IAAAA,GAAYA,GAAAA,GAAU+gC,UAAU/gC,EAAV+gC,IAAAA,EAA1B,IADgB,MAEhB,GAAI/gC,EAFY,MAAA,SAKlB,GAAM,SAAAA,GACJ,OAAI+gC,UAAU/gC,EAAV+gC,GAAAA,EAAAA,KAA4BA,UAAU/gC,EAAV+gC,IAAAA,GAAhC,IADiB,MAGb/gC,EAAAA,IAAAA,GAAgB+gC,UAAU/gC,EAAV+gC,IAAAA,GAApB,IAHiB,QAAA,OAMnB,GAAM,SAAA/gC,GACJ,OAAI+gC,UAAU/gC,EAAV+gC,GAAAA,EAAAA,KAA4BA,UAAU/gC,EAAV+gC,IAAAA,GAAhC,IADiB,MAIf/gC,EAAAA,IAAAA,GACA+gC,UAAU/gC,EAAV+gC,GAAAA,EADA/gC,IAEA+gC,UAAU/gC,EAAV+gC,IAAAA,GAHF,IAHiB,OASb/gC,EAAAA,IAAAA,GAAeA,EAAAA,KAAnB,GATiB,MAAA,SAYnB,GAAM,SAAAA,GACJ,OAAI+gC,UAAAA,EAAAA,EAAJ,GADiB,MAEjB,GAAI/gC,EAFa,MAAA,SAKnB,GAAM,SAAAA,GACJ,OAAI+gC,UAAU/gC,EAAV+gC,GAAAA,EAAAA,KAA4BA,UAAU/gC,EAAV+gC,IAAAA,GAAhC,IADiB,MAId/gC,GAAAA,GAAU+gC,UAAU/gC,EAAV+gC,GAAAA,EAAX,IACAA,UAAU/gC,EAAV+gC,GAAAA,EADA,IAEAA,UAAU/gC,EAAV+gC,IAAAA,GAHF,IAHiB,OASjB,GAAI/gC,EATa,MAAA,SAYnB,GAAM,SAAAA,GACJ,OAAI+gC,UAAU/gC,EAAV+gC,IAAAA,EAAJ,GADiB,MAEb/gC,EAAAA,KAAJ,EAFiB,MAGbA,EAAAA,KAAJ,EAHiB,MAAA,SAMnB,GAAM,SAAAA,GACJ,OAAIA,IAAAA,GAAW+gC,UAAU/gC,EAAV+gC,IAAAA,EAAf,IADiB,MAEbA,UAAU/gC,EAAV+gC,IAAAA,GAAJ,IAFiB,OAGjB,GAAI/gC,EAHa,MAAA,SAMnB,GAAM,SAAAA,GACJ,OAAIA,EAAAA,IAAAA,GAAJ,IAAmBA,EADF,MAAA,SAInB,GAAM,SAAAA,GACJ,OAAA,GAAIA,EADa,MAEjB,IAAIA,EAFa,OAGjB,GAAIA,EAHa,OAIjB,GAAIA,EAJa,MAKjB,GAAIA,EALa,MAAA,SAQnB,GAAM,SAAAA,GACJ,OAAA,IAAIA,EADa,OAEb+gC,UAAAA,EAAAA,EAAAA,IAAAA,IAAsB/gC,GAA1B,GAAqCA,EAFpB,MAAA,SAKnB,GAAM,SAAAA,GACJ,OAAI+gC,UAAAA,EAAAA,EAAJ,IADiB,MAEbA,UAAAA,EAAAA,EAAJ,GAFiB,MAAA,SAKnB,GAAM,SAAA/gC,GACJ,OACG+gC,UAAU/gC,EAAV,GAAA,EAAA,IAA2BA,EAAAA,IAA5B,GAEE+gC,UAAU/gC,EAAV,IAAA,GAAA,KACA+gC,UAAU/gC,EAAV+gC,IAAAA,GADA,KAEAA,UAAU/gC,EAAV+gC,IAAAA,GALJ,IASI/gC,EAAAA,KAAAA,GAAJ,IAAyBA,EAVR,OAWbA,EAAAA,IAAAA,GAAgB6gC,KAAK7gC,EAAL,IAAc,CAAA,GAAA,GAAA,KAC9BA,EAAAA,IAAAA,GAAgB6gC,KAAK7gC,EAAL,IAAc,CAAA,GAAA,GAAA,KAZjB,QAAA,MAAA,MAAA,OAenB,GAAM,SAAAA,GACJ,OAAA,IAAIA,EADa,OAEjB,GAAIA,EAFa,MAAA,SAKnB,GAAM,SAAAA,GACJ,OAAI+gC,UAAAA,EAAAA,EAAAA,IAAsBA,UAAAA,EAAAA,GAA1B,IADiB,MAAA,SAInB,GAAM,SAAA/gC,GACJ,OAAI+gC,UAAU/gC,EAAV+gC,GAAAA,EAAAA,IAA2B/gC,EAAAA,IAA/B,EADiB,MAAA,SAInB,GAAM,SAAAA,GACJ,OAAI+gC,UAAAA,EAAAA,EAAAA,KAAuBA,UAAAA,EAAAA,GAA3B,IADiB,MAEbF,KAAA7gC,EAAQ,CAAA,EAAA,KAFK,MAGb6gC,KAAA7gC,EAAQ,CAAA,EAAA,KAHK,MAAA,UASjBjrC,EArVgB,CAClBksE,GADkB,EAElBC,GAFkB,EAGlBC,GAHkB,EAIlBC,GAJkB,EAKlBC,IALkB,EAMlBC,GANkB,EAOlBC,GAPkB,GAQlBC,IARkB,EASlBC,IATkB,EAUlBC,GAVkB,EAWlBC,GAXkB,EAYlBC,GAZkB,EAalBC,GAbkB,EAclBC,GAdkB,EAelBC,GAfkB,GAgBlBC,IAhBkB,EAiBlBC,GAjBkB,GAkBlBC,GAlBkB,EAmBlBC,IAnBkB,EAoBlBC,IApBkB,EAqBlB10B,GArBkB,GAsBlB20B,GAtBkB,GAuBlBn+B,GAvBkB,EAwBlBo+B,GAxBkB,EAyBlBC,GAzBkB,EA0BlBC,GA1BkB,EA2BlBC,GA3BkB,EA4BlBC,GA5BkB,EA6BlBppC,GA7BkB,EA8BlBqpC,GA9BkB,EA+BlBppC,GA/BkB,EAgClBqpC,GAhCkB,EAiClBC,GAjCkB,EAkClBC,GAlCkB,EAmClBC,GAnCkB,EAoClBC,GApCkB,EAqClBC,IArCkB,EAsClBC,GAtCkB,EAuClBC,GAvCkB,EAwClBC,IAxCkB,EAyClB5pC,GAzCkB,EA0ClBC,GA1CkB,EA2ClB4pC,GA3CkB,GA4ClBC,GA5CkB,EA6ClBC,IA7CkB,EA8ClB7pC,GA9CkB,EA+ClB8pC,IA/CkB,EAgDlBC,GAhDkB,GAiDlBC,GAjDkB,EAkDlBC,IAlDkB,EAmDlBC,GAnDkB,EAoDlBjqC,GApDkB,EAqDlBkqC,GArDkB,GAsDlBC,GAtDkB,EAuDlBtyE,GAvDkB,EAwDlBuyE,GAxDkB,EAyDlBp3F,GAzDkB,EA0DlBq3F,GA1DkB,EA2DlBC,GA3DkB,EA4DlBC,GA5DkB,EA6DlBC,GA7DkB,EA8DlBC,IA9DkB,EA+DlBC,GA/DkB,EAgElBC,GAhEkB,EAiElBC,IAjEkB,EAkElBC,IAlEkB,EAmElBC,IAnEkB,EAoElBC,IApEkB,EAqElBC,IArEkB,EAsElBC,GAtEkB,EAuElBC,GAvEkB,EAwElBC,GAxEkB,EAyElBC,GAzEkB,EA0ElBC,GA1EkB,EA2ElBC,IA3EkB,EA4ElBC,IA5EkB,GA6ElBC,GA7EkB,EA8ElBC,GA9EkB,EA+ElBC,IA/EkB,GAgFlBC,GAhFkB,EAiFlBC,GAjFkB,EAkFlBC,GAlFkB,EAmFlBC,GAnFkB,EAoFlBC,GApFkB,GAqFlBC,GArFkB,EAsFlBC,IAtFkB,EAuFlBC,GAvFkB,EAwFlBC,GAxFkB,GAyFlBC,GAzFkB,EA0FlBC,GA1FkB,EA2FlBC,GA3FkB,EA4FlBC,GA5FkB,EA6FlBC,GA7FkB,EA8FlBnV,GA9FkB,GA+FlBoV,GA/FkB,EAgGlBC,IAhGkB,EAiGlBC,IAjGkB,EAkGlBzsC,GAlGkB,EAmGlB0sC,GAnGkB,EAoGlBzsC,GApGkB,EAqGlB0sC,GArGkB,EAsGlBzsC,GAtGkB,EAuGlB0sC,GAvGkB,EAwGlBC,GAxGkB,EAyGlBC,IAzGkB,EA0GlBC,GA1GkB,EA2GlBC,IA3GkB,EA4GlBC,GA5GkB,EA6GlBC,GA7GkB,EA8GlB/sC,GA9GkB,EA+GlBgtC,IA/GkB,EAgHlBC,GAhHkB,GAiHlBC,GAjHkB,EAkHlBjtC,GAlHkB,EAmHlBktC,GAnHkB,EAoHlBC,GApHkB,EAqHlBC,IArHkB,EAsHlBC,GAtHkB,GAuHlBC,IAvHkB,EAwHlBC,IAxHkB,EAyHlBC,IAzHkB,EA0HlBC,GA1HkB,EA2HlBC,IA3HkB,EA4HlBC,IA5HkB,EA6HlBC,GA7HkB,EA8HlBC,GA9HkB,GA+HlBC,IA/HkB,GAgIlBC,GAhIkB,GAiIlBC,GAjIkB,GAkIlBC,IAlIkB,EAmIlBC,IAnIkB,EAoIlBC,IApIkB,EAqIlBC,IArIkB,EAsIlBC,IAtIkB,EAuIlBC,GAvIkB,EAwIlBC,GAxIkB,EAyIlBC,GAzIkB,EA0IlBC,GA1IkB,GA2IlBC,GA3IkB,EA4IlBC,IA5IkB,EA6IlBC,GA7IkB,EA8IlB3uC,GA9IkB,EA+IlB4uC,GA/IkB,EAgJlBC,IAhJkB,EAiJlBC,GAjJkB,EAkJlBC,GAlJkB,EAmJlBC,IAnJkB,EAoJlBC,GApJkB,EAqJlBC,GArJkB,EAsJlBC,IAtJkB,EAuJlBC,GAvJkB,EAwJlBC,GAxJkB,EAyJlBC,GAzJkB,EA0JlB1+D,GA1JkB,EA2JlB2+D,GA3JkB,EA4JlBC,GA5JkB,EA6JlBC,IA7JkB,GA8JlBC,GA9JkB,GA+JlBC,GA/JkB,EAgKlBC,GAhKkB,EAiKlBC,GAjKkB,EAkKlBC,IAlKkB,EAmKlBC,GAnKkB,EAoKlBC,IApKkB,EAqKlBC,GArKkB,EAsKlBC,GAtKkB,EAuKlBC,IAvKkB,EAwKlBC,GAxKkB,EAyKlBnwC,GAzKkB,EA0KlBowC,GA1KkB,GAqVM5sF,EAAAA,QAAAA,OAtVE,KAuV5B,KAAMoX,KAANisE,GAA6B,CAC3B,MAAM5jF,EAA8B7U,EADT6U,8BAEvBA,GAAkCA,EAAAA,IAAAA,aAAtC,IACEzS,OAAAA,WAAAA,KAA0B,4BAAAgT,EAD4D,KAGxF,OAAO,WACL,MADiB,SAIrB,OAAOqjF,EAhWqBjsE,GA6WH6rE,CADExD,IAG3B,IAAIroE,EAAQ,IAAMsoE,EAAAA,aAANr9B,GAXoC,IAc5CA,IAAAA,GAAWp9D,EAAAA,WAAfq6F,EACEtxD,EAAMsxD,EAAUr6F,EAAVq6F,UADoC1O,GAEjCvuB,GAAAA,GAAUp9D,EAAAA,UAAdq6F,EACLtxD,EAAMsxD,EAAUr6F,EAAVq6F,SADyC1O,GAEtCvuB,GAAAA,GAAUp9D,EAAAA,UAAdq6F,EACLtxD,EAAMsxD,EAAUr6F,EAAVq6F,SADyC1O,GAEtC3rF,EAAAA,KAAJq6F,EACLtxD,EAAMsxD,EAAUr6F,EAAVq6F,GAD6B1O,GAE1B3rF,EAAAA,YAAJq6F,IACLtxD,EAAMsxD,EAAUr6F,EAAVq6F,WADiC1O,IAIzC,OA1BgD5iD,GAkClD,SAAA6+D,YAAA5nG,EAAAqR,EAAAgB,GACE,IAAIvP,EAAOu3F,EAD6Br6F,GAExC,IAAA8C,EAAW,CACT,MAAM0X,EAA8B7U,EAD3B6U,8BAELA,GAAkCA,EAAAA,IAAAA,aAAtC,IACEzS,OAAAA,WAAAA,KAA0B,4BAAA/H,EAD4D,gBAGxF,IAAAqS,EACE,OADa,KAGfvP,EARSuP,EAgBX,IAAIw1F,EAlBoC,GAmBxC,IAAA,IAAAlc,KAAA7oF,EAAuB,CACrB,IAAIimC,EAAMjmC,EADW6oF,GAGrB5iD,EAAM++D,eADN/+D,EAAMg/D,aAAAA,EAAAA,EAAAA,EAFepc,GAGfmc,EAHe9nG,GAIrB6nG,EAAAA,GAJqB9+D,EAMvB,OAzBwC8+D,EA6B1C,SAAAE,aAAAh/D,EAAA13B,EAAArR,EAAA2rF,GACE,IACIqc,EAFsC,2CAE5BC,KAF4Bl/D,GAG1C,IAAIi/D,IAAaA,EAAjBh+F,OAAiC,OAHS++B,EAO1C,IAP0CyL,EAOtC0zD,EAAYF,EAP0B,GAQtCG,EAAYH,EAR0B,GAUtC32F,GAAQ82F,KAAZ92F,EACEmjC,EAAQnjC,EADqB82F,GAEpBA,KAAJ9N,IACL7lD,EAAQ6lD,EADyB8N,IAKnC,GAAID,KAAJzN,EAA0B,CAExB1xD,GAAMq/D,EADM3N,EADYyN,IAElBE,EAAAA,EAAAA,EAFkBzc,GAI1B,OArB0C5iD,EAyB5C,SAAA++D,eAAA/+D,EAAA13B,EAAArR,GAEE,OAAO+oC,EAAA/G,QAF+B,wBAEX,SAAAqmE,EAAAC,GACzB,GAAIj3F,GAAQi3F,KAAZj3F,EACE,OAAOA,EADgBi3F,GAGzB,GAAIA,KAAJjO,EACE,OAAOA,EADaiO,GAGtBvgG,OAAAA,WAAAA,IAAyB,cAAAugG,EAAA,WAAAtoG,EAP6B,kBAQtD,OARsDqoG,KAa1D,SAAAE,iBAAA96E,GACE,IAAIloB,EAtzBN,SAAAijG,kBAAA/6E,GACE,IAAAA,EAAc,MADoB,GAGlC,IAAIg7E,EAASh7E,EAAAA,aAHqB,gBAI9Bi7E,EAAWj7E,EAAAA,aAJmB,kBAK9Bpc,EAL8B,GAMlC,GAAAq3F,EACE,IACEr3F,EAAOsL,KAAAA,MADL+rF,GAEF,MAAA5xE,GACA,MAAMtc,EAA8B7U,EAD1B6U,8BAENA,GAAkCA,EAAAA,IAAAA,aAAtC,IACEzS,OAAAA,WAAAA,KAA0B,kCAD4D0gG,GAK5F,MAAO,CAAE75E,GAAF65E,EAAcp3F,KAAdA,GAsyBIm3F,CADsB/6E,GAEjC,GAAKloB,EAALqpB,GAAA,CAGA,IAAI9rB,EAAO8kG,YAAYriG,EAAZqiG,GAAqBriG,EALC8L,MAMjC,GAAAvO,EAAA,CASA,GAAIA,EAAJy3F,GAAqB,CAEnB,GAAA,IAiCJ,SAAAoO,qBAAAl7E,GACE,GAAIA,EAAJ2rB,SACE,OAAO3rB,EAAAA,SADazjB,OAGtB,QAAA,IAAWyjB,EAAPwrB,kBACF,OAAOxrB,EAD6CwrB,kBAItD,IADA,IAAIzd,EAPiC,EAQ5B1xB,EAAT,EAAgBA,EAAI2jB,EAAAA,WAApBzjB,OAA+CF,IAC7C0xB,GAAS/N,IAAAA,EAAAA,SAAAA,EADyC,EAGpD,OAXqC+N,EAjC/BmtE,CAAAA,GACFl7E,EAAAA,GAAqB3qB,EADkBy3F,OAElC,CAKL,IAFA,IAAInhD,EAAW3rB,EAHVgiD,WAID/lC,GAJC,EAKI5/B,EAAJ,EAAW8+F,EAAIxvD,EAApBpvC,OAAqCF,EAArC8+F,EAA4C9+F,IAC1C,GAAIsvC,IAAAA,EAAAA,GAAAA,UAA8B,KAAAh9C,KAAUg9C,EAAAA,GAA5CyvD,WACE,GAAAn/D,EACE0P,EAAAA,GAAAA,UADS,OAEJ,CACLA,EAAAA,GAAAA,UAAwBt2C,EADnBy3F,GAEL7wD,GAFK,EAQX,IAAAA,EAAY,CACV,IAAIo/D,EAAWplG,EAAAA,eAAwBZ,EAD7By3F,IAEV9sE,EAAAA,aAAAA,EAA+BA,EAFrB0N,oBAKPr4B,EA1BYy3F,GA6BrB,IAAA,IAAA3wB,KAAA9mE,EACE2qB,EAAAA,GAAa3qB,EADK8mE,OAtCpB,CACE,MAAMpvD,EAA8B7U,EAD3B6U,8BAELA,GAAkCA,EAAAA,IAAAA,aAAtC,IACEzS,OAAAA,WAAAA,KAA0B,IAAMxC,EAANqpB,GAD4D,oBAuE5F,MAAO,CAEL/b,IAAK,SAAA7S,EAAAqR,EAAA03F,GACH,IADwC12F,EACpC8f,EAAQnyB,EAAAA,YAD4B,KAEpC2rF,EAFoC4O,EAGxC,GAAIpoE,EAAJ,EAAe,CAEbw5D,EAAO3rF,EAAAA,UAAcmyB,EAFR,GAGbnyB,EAAMA,EAAAA,UAAAA,EAHOmyB,GAMf42E,KACE12F,EADkB,IAElBA,GAFkB02F,GAIpB,IAAIjmG,EAAO8kG,YAAAA,EAAAA,EAb6Bv1F,GAcxC,OAAIvP,GAAQ6oF,KAAZ7oF,EACSA,EADiB6oF,GAGnB,KAAA3rF,EAjBiC,MAqB1CkT,QAAS,WACP,OADmBmnF,GAGrB2O,QAAS,WACP,OADmB1O,GAKrBF,YAAa,WACX,OADuBI,GAGzByO,YAAa,SAAAluF,EAAA7K,GACX2sF,WAAAA,GAAiB,WACf3sF,GAAcA,QAKlBxG,aAAc,WAGZ,IACIw/F,EAAY1O,EAAAA,MAAAA,IAAAA,GAJQ,GAKxB,MAFc,CAAA,KAAA,KAAA,KAAA,KAAA,MAEP2O,QAAAA,IAAAA,EAAAA,MALiB,OAS1B3hG,UAhEF,SAAA4hG,kBAAA37E,GAME,IAFA,IAAI2rB,EA93BN,SAAAiwD,wBAAA57E,GACE,OAAOA,EAAUA,EAAAA,iBAAVA,mBADiC,GA83BzB47E,CAHf57E,EAAUA,GAAW/pB,EADa6D,iBAK9B+hG,EAAelwD,EALepvC,OAMzBF,EAAT,EAAgBA,EAAhBw/F,EAAkCx/F,IAChCy+F,iBAAiBnvD,EADoBtvC,IAKvCy+F,iBAXkC96E,IAmElC87E,cAAe,WACb,OADyB7O,GAG3B33E,MAAO,SAAA7S,GACLA,IAEWwqF,YAAAA,GAAJ,eAAiCA,EACtC/0F,EAAAA,YAAkB,WAChBuK,OAEOxM,EAAJ6yB,kBACL7yB,EAAAA,iBAAAA,aAAuC,SAAAyV,OACrCzV,EAAAA,oBAAAA,YADqDyV,MAErDjJ,UAj/BU,CAADvK,OAAnBjC,sHClBAgD,eAAA2E,oBAAAtH,GACE,MACE8B,EADF,GACYD,MAAAA,KAFkC,GAI9C,IAAIwU,KAAAA,EAAAlU,SAAAA,EAAAmU,2BAAAA,EAAAC,cAAAA,SACIvW,EALsCwW,cAO9C,IAAAD,EAAoB,CAClB,MAAMtQ,OAAAA,SAAmBjG,EADPw6B,kBAElBjkB,EAFkBtQ,EAKpB,MAAO,IAAAoQ,EAELhB,QAFKvT,EAGLwT,SAHKiB,EAILrH,SAAUoH,IAA8B5K,EAAAA,EAAAA,uBAf1C,IAgBEvJ,SAAUA,MAAAA,OAAVA,EAAUA,EALLoT,SAMLC,QAASrT,MAAAA,OAATqT,EAASrT,EAAAA,IANJ,cAOLyI,SAAU5K,EAPL4K,SAQL6K,IAnBF,KAHF,IAAAxY,EAAAH,EAAA,sBA0BA,MAAAy4F,iBACEp5F,YAAAA,GACEkD,KAAAu5C,QAAc,EAAA37C,EAAAyH,YAAA0C,GAAA,GAAA1D,MAGP,IACE9B,OAAAA,aADI6jG,mBAKf9iG,oBAAA5D,UACwBM,KADEu5C,QAExB8sD,OAFwB3mG,GAK1B4D,6BAAAib,UACwBve,KADYu5C,QAElC8sD,cAFkC9nF,GAKpCjb,8BACwBtD,KADDu5C,QAAA+sD,8GC9CzB,IAAA1oG,EAAAH,EAAA,GACA83F,EAAA93F,EAAA,GAhBA6sE,0EAAAC,CAAA9sE,EAAA,KAAAC,EAAAD,EAAA,GAAA8oG,EAAA9oG,EAAA,IAqBA,IAAI+oG,EArBJ,KAsBI1kG,EAtBJ,KA0BA,SAAA2kG,WAAAC,EAAA/lG,EAAA+Y,EAAA7M,EAAA/R,EAAAugB,GAQE,MAAMsrF,EAAgBH,EADtBG,cAIA,IAAIC,EAAc9rG,EAAkBgvD,EAAAA,cAJpC+8C,IAOI5kF,EAPJ,EASA,MAAMigC,EAAczwC,KAAAA,MAAW5E,EAAAA,MAT/B+5F,GAUMzkD,EAAe1wC,KAAAA,MAAW5E,EAAAA,OAVhC+5F,GAWA,GAAI1kD,GAAAA,MAAuBC,GAA3B,KAAiD,CAC/C,IAAKmoB,EAAAoF,QAAA12E,KAAgB,CAAEmwB,MAAF+4B,EAAsB94B,OAAtB+4B,IAA+C,CAClE,MAAMnyB,EA+BX,SAAA2/C,yBACC,MAAMc,EAAY,CAAA,KAAA,KAAA,MAAA,MAAA,MAAA,MAAA,OAQlB,IAAA,IAAAtnD,KAAAsnD,EACE,IAAKnG,EAAAoF,QAAA12E,KAAgB,CAACmwB,MAAOA,EAAR,EAAiBC,OAAQD,EAAzB,IACnB,OADuDA,EAI3D,OAdiC,MA/BjBwmD,GACZ1tD,EAFkE,IAE1DxQ,KAAAA,IAASue,EAATve,EAA4Bue,EAA5Bve,GAEVo+D,KAAK,QAAAn2D,EAAA,sCAA+DjI,KAAAA,MAAW3W,EAA1EmnB,GAL0C,sJAQjD2kF,GAnBA3kF,EAoBA0kF,EAAAA,MAAsBl1F,KAAAA,MAAW5E,EAAAA,MApBjC+5F,GAqBAD,EAAAA,OAAuBl1F,KAAAA,MAAW5E,EAAAA,OArBlC+5F,GAuBA,MAAMx+E,EAAMu+E,EAAAA,WAvBZ,MAwBAv+E,EAxBA7a,OAyBA6a,EAAAA,UAzBA,qBA0BAA,EAAAA,SAAAA,EAAAA,EAAmBu+E,EAAnBv+E,MAAwCu+E,EA1BxCv9E,QA2BAhB,EA3BAw5B,UA6BA,OAAOjhD,EAAA25B,QAAA5gB,GAAArV,MAAqC,SAAAqP,GAC1C,MAAMkwC,EAAgB,CACpBC,cADoBz7B,EAEpBg7B,UAAW,CAAAwjD,EAAA,EAAA,EAAAA,EAAA,EAAA,GACXnmD,SAAU/sC,EAAAkvC,YAAoB,CAAE3gC,MAAF,EAAY/O,SAAUrG,EAAtBqG,WAC9B68C,OAJoB,QAKpBp2D,eAAgB2sD,EAAAA,eALI2zB,eAAA5+D,6BAAAA,EAOpByoC,WAAY1sC,4BAAAA,IAPQ,uBAStB,OAAO1D,EAAAA,OAAAA,GAVsD9I,WAiCjE,SAAAk8F,gBAAAnmG,EAAAua,EAAAE,EAAAtgB,EAKEugB,EALF,KAAAlZ,EAAAD,GASElC,KAAAW,YADAA,EAEAX,KAAAkb,cAFAA,EAGAlb,KAAAob,eAHAA,EAIApb,KAAA+mG,iBAAwBjsG,GAJxB,IAKAkF,KAAAsgD,8BACEjlC,GAAgC1a,EANlCwuC,2BAOAnvC,KAAAmC,KAPAA,EAQAnC,KAAAqiB,aARA,EAUAriB,KAAA2mG,cAAqBrmG,SAAAA,cAVrB,UAaAN,KAAAkC,SAbAA,EAiBF4kG,gBAAAA,UAA4B,CAC1BxrF,SACEtb,KADOgnG,kBAGP,MAAMxQ,EAAOl2F,SAAAA,cAHN,QAIPk2F,EAAAA,aAAAA,sBAJO,GAMmBx2F,KAAAkb,cAAAssC,OAAyB,SAAA36C,GACjD,OACEA,EAAAA,QAAe7M,KAAAkb,cAAA,GAAfrO,OACAA,EAAAA,SAAgB7M,KAAAkb,cAAA,GAH+CkO,SAN5DppB,OAaL2E,OAAAA,WAAAA,KACE,0EAcJ3E,KAAAinG,eAAsB3mG,SAAAA,cA5Bf,SA6BP,MAAM05B,EAAWh6B,KAAAkb,cA7BV,GA8BPlb,KAAAinG,eAAAnxE,YACE,iBAAmBkE,EAAnB7Q,MAAA,MAA4C6Q,EAA5C5Q,OA/BK,OAgCPotE,EAAAA,YAAiBx2F,KAhCVinG,iBAmCTv5F,UACE,GAAI84F,IAAJxmG,KAA4B,OAM5BA,KAAAob,eAAA0a,YAPQ,GASKx1B,SAAAA,cATL,QAURk2F,gBAVQ,sBAYR,GAAIx2F,KAAJinG,eAAyB,CACvBjnG,KAAAinG,eADuBv3E,SAEvB1vB,KAAAinG,eAFuB,KAIzBjnG,KAAA2mG,cAAAx9E,MAA2BnpB,KAAA2mG,cAAAv9E,OAhBnB,EAiBRppB,KAAA2mG,cAjBQ,KAkBRH,EAlBQ,KAmBRU,gBAAAA,MAAqB,WACnB,GAAA,wBAAIplG,EAAAA,OAAJ,CAGAA,EAAAA,MAJ+B,uBAK/BA,EAAAA,WAL+B,2BAOjCqlG,OA1BQhqG,GA6BViqG,cACE,GAAIpnG,KAAAW,YAAJoX,UAAgC,EAC9BsvF,EAAAA,EAAAA,uBAAsBrnG,KAAtBqnG,eAA2CrnG,KADbW,aAE9B,OAAOuF,QAFuB1B,UAKhC,MAAMy2B,EAAYj7B,KAAAkb,cANNtU,OAON0gG,eAAiB,CAAA9iG,EAAA8rB,KACrBtwB,KAD0CgnG,kBAE1C,OAAa,GAEThnG,KAFSqiB,YAGX,GAAIriB,KAAAqiB,aAAJ4Y,EAAmC,MAInC,IACG14B,OAADglG,mBACAhlG,OAAAA,kBAAyBvC,KAF3BqiB,aAGE,MAMJ,GAAIriB,KAAAqiB,aAAJ4Y,EAAmC,CACjCusE,eACEjlG,OAAAA,kBADFilG,EAEEjlG,OAAAA,kBAFFilG,EAGExnG,KAHFwnG,KAIExnG,KAL+BkC,UAOjCsC,IAPiC,OAWnC,MAAMuqB,EAAQ/uB,KA7B4BqiB,YA8B1CmlF,eAAAA,EAAsBjlG,OAAAA,kBAAtBilG,EAA4DxnG,KAA5DwnG,KAAuExnG,KA9B7BkC,UA+B1CukG,WAAAA,EAEEzmG,KAFFymG,YAGqB13E,EAHrB03E,EAIEzmG,KAAAkb,cAJFurF,GAKEzmG,KALFymG,iBAMEzmG,KANFymG,+BAAAA,KAQQzmG,KAAAynG,gBAAAlgG,KARRk/F,OAAAA,MASQ,WACJa,eAAAA,EADgBh3E,KAxCsBA,IA4C5C,OAAO,IAAApqB,QAnDKohG,iBAsDdG,kBACEznG,KADgBgnG,kBAEhB,MAAM7iD,EAAM7jD,SAAAA,cAFI,OAGVqmG,EAAgB3mG,KAHN2mG,cAKd,WAAAA,IACCluG,EAAAA,oBAFHqqB,uBAIE6jF,EAAAA,QAAqB,SAAA52F,GACnBo0C,EAAAA,IAAU/tC,IAAAA,gBADyBrG,MAIrCo0C,EAAAA,IAAUwiD,EADLljD,YAIP,MAAM8iB,EAAUjmE,SAAAA,cAfA,OAgBhBimE,EAAAA,UAhBgB,cAiBhBA,EAAAA,YAjBgBpiB,GAkBhBnkD,KAAAob,eAAA+c,YAlBgBouC,GAoBhB,OAAO,IAAArgE,SAAY,SAAA1B,EAAA8rB,GACjB6zB,EAAAA,OAD4C3/C,EAE5C2/C,EAAAA,QAF4C7zB,MAMhDo3E,eACE1nG,KADagnG,kBAEb,OAAO,IAAA9gG,SAAY1B,IAIjBuN,YAAW,KACT,GAAK/R,KAAL2lB,OAAA,CAIA6tE,EAAAA,KALejxF,QAOfwP,WAAAA,EAPe,SAEbvN,MANwB,OAgBhCmhB,aACE,OAAO3lB,OADIwmG,GAIbQ,kBACE,IAAKhnG,KAAL2lB,OACE,MAAM,IAAA5oB,MADU,oDAMtB,MAAMy2F,EAAQjxF,OAtSdixF,MAuSAjxF,OAAAA,SAAkB,WAChB,GAAKnC,EAAAA,qBAALunG,YAGA,GAAAnB,EACE7hG,OAAAA,WAAAA,KADiB,iEAAnB,CAIAuiG,gBAAAA,MAAqB,WACnBV,GACE1kG,EAAAA,KADiB,0BAKrB,IACEw7B,cADE,eAAJ,QAGE,IAAAkpE,EAAoB,CAClB7hG,OAAAA,WAAAA,MADkB,6CAElBuiG,gBAAAA,MAAqB,WACnB,wBAAIplG,EAAAA,QACFA,EAAAA,MADmD,0BAHrC,OASpB,MAAM4kG,EAVEF,EAWRA,EAAAA,cAAAA,MAEQ,WAEJ,MAAMoB,EAAoBtnG,SAAAA,eAFV,uBAKhBsnG,GACEA,EAAAA,UAAAA,IADqB,UAIvB,OAAOlB,EATSgB,kBAFpBlB,OAaS,eAbTA,MAgBQ,WAMAE,EAAJ/gF,QACEkiF,cAMV,SAAAvqE,cAAAwqE,GACE,MAAMvpF,EAAQje,SAAAA,YADkB,eAEhCie,EAAAA,gBAAAA,GAAAA,GAAAA,EAFgC,UAGhChc,OAAAA,cAHgCgc,GAMlC,SAAAspF,QACE,GAAArB,EAAmB,CACjBA,EADiB94F,UAEjB4vB,cAFiB,eAMrB,SAAAkqE,eAAAz4E,EAAAlgB,EAAA1M,EAAAD,GACE,MAAM6lG,EAAoBznG,SAAAA,eAD0B,uBAE9CwO,EAAW2C,KAAAA,MAAY,IAADsd,EAFwBlgB,GAG9Cm5F,EAAcD,EAAAA,cAHgC,YAI9CE,EAAeF,EAAAA,cAJ+B,sBAKpDC,EAAAA,MALoDl5F,EAMpD3M,EAAAA,IAAAA,yBAAmC,CAAnCA,SAAAA,IAAAA,MAAsDuN,IACpDu4F,EAAAA,YAD2Dv4F,KAI7DxN,EAAAA,SAAAA,WAA8B,CAC5BqC,OAD4BvE,KAE5B+O,KAF4B,QAAAF,MAAAA,EAI5BrD,KAJ4BujB,EAK5B/f,QAAU,IAAD+f,EALmBlgB,IAUhCzO,EAAAA,qBAAAA,qBAA4C,SAAAme,GAG1C,GACEA,KAAAA,EAAAA,UACCA,EAAAte,SAAiBse,EADlBA,WAECA,EAFDA,UAGEA,EAADoG,UAAmBpiB,OAAnB2lG,QAAoC3lG,OAJvC4lG,OAKE,CACA5lG,OADAyZ,WAKAuC,EALAuC,iBAMIvC,EAAJ6pF,yBACE7pF,EADkC6pF,2BAGlC7pF,EADK2V,oBAMX,GAAI,kBAAJ3xB,OAA+B,CAG7B,MAAM8lG,wBAA0B,SAAA9pF,GAC1BA,WAAAA,EAAAA,QAA6BA,EAAjC6pF,0BACE7pF,EAD+D6pF,4BAInE7lG,OAAAA,iBAAAA,cAR6B8lG,yBAS7B9lG,OAAAA,iBAAAA,aAT6B8lG,yBAY/B,IAlaAlB,EAmaA,SAAAD,gBACE,IAAAC,EAAqB,CACnBrlG,EAAiB1B,EAAAA,qBADE0B,eAEnB,IAAAA,EACE,MAAM,IAAA/E,MADa,qDAIrBoqG,EAAiBrlG,EAAAA,SAAAA,sBAEfxB,SAAAA,eAFewB,uBAAAA,OANE,GAYnBxB,SAAAA,eAAAA,eAAAA,QAZmBunG,MAcrB,OAfuBV,EAkBzBv7F,EAAAA,uBAAAA,SAAkC,CAChCD,kBADgC,EAGhCqb,mBAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GASE,GAAAw/E,EACE,MAAM,IAAAzpG,MADW,4CAGnBypG,EAAgB,IAAAM,gBAAAnmG,EAAAua,EAAAE,EAAAtgB,EAAAugB,EAAAlZ,EAJhBD,GAaA,OAbAskG,wFC7aJ,SAAAa,sBAAAjsF,EAAAza,GACE,MAAMqwF,EAAUrwF,EAD0C2nG,WAEpD1gG,EAAc,IAFsCtJ,EAAAuzC,kBAGpD5vB,EAAQxQ,KAAAA,MAAAA,IAAWq4C,EAAAA,cAAAA,kBAHiC,IAK1D,IAAA,MAAAy+C,KAAsBvX,EAAtBh7C,SAAwC,CACtC,MAAMxqC,EAAOlL,SAAAA,cADyB,OAEtCkL,EAAAA,UAFsC,iBAGtC4P,EAAAA,YAHsC5P,GAKtC,MAAMg9F,EAAU,IAAAjjD,EAAAqJ,gBAAoB,CAClCvD,QADkC7/C,EAElCkI,QAFkC,KAGlCrG,kBAAmB1M,EAHe0M,kBAAAzF,YAAAA,EAKlCopF,QALkCuX,IAO9B9nD,GAAWgoD,EAAAA,EAAAA,oBAAAA,EAA4B,CAZPxmF,MAAAA,IActCumF,EAAAA,OAAAA,EAdsC,WAT1C,IAAA5qG,EAAAH,EAAA,GAfAa,EAAAb,EAAA,IAAA8nD,EAAA9nD,EAAA,MCCAirG,EAAA,GAGA,SAAAjrG,oBAAAkrG,GAEA,IAAAC,EAAAF,EAAAC,GACA,QAAAxrG,IAAAyrG,EACA,OAAAA,EAAAC,QAGA,IAAAt3E,EAAAm3E,EAAAC,GAAA,CAGAE,QAAA,IAIAC,EAAAH,GAAAp3E,EAAAA,EAAAs3E,QAAAprG,qBAGA,OAAA8zB,EAAAs3E,ySCrBA,IAAAnrG,EAAAD,oBAAA,GAAA83F,EAAA93F,oBAAA,GAyBA8E,OAAAA,qBAzBAgzF,EAAAn1F,qBA0BAmC,OAAAA,4BA1BA7E,EAAAb,WA6BKksG,eAAAA,UAAyBnhE,OAA9Bue,YACE4iD,eAAAA,UAAyBnhE,OAAzBmhE,UAA4Cj9D,MAAAA,UAAgBlE,OADdue,WAI9C,mBAAW5jD,OAAP8hB,cAgBJ9hB,OAAAA,YAZA,SAAA8hB,YAAA9F,EAAAvZ,GACEA,EAASA,GAAU,CAAEgkG,SAAF,EAAkBhjC,YAAlB,EAAqCxnD,OAArC,MACnB,MAAMmC,EAAMrgB,SAAAA,YAFsB,eAGlCqgB,EAAAA,gBAAAA,EAEE3b,EAFF2b,QAGE3b,EAHF2b,WAIE3b,EAPgCwZ,QASlC,OATkCmC,IAyCpCsoF,oBAD+D,IAO/DA,oBADyE,IAoMvE3oG,SAAJif,oBACEjf,SAAAA,oBAD+B,GAa/BiC,OAAAA,cA7DF,SAAA2mG,gBACE,MAAM3+F,EAjJR,SAAA4+F,yBACE,IAAI/7F,EAD4B,KAG9BA,EAAe,CACbjF,UAAW7H,SAAAA,eADE,gBAEb4Q,aAAc5Q,SAAAA,eAFD,gBAGb6Q,YAAa7Q,SAAAA,eAHA,cAIb8Q,cAAe9Q,SAAAA,eAJF,iBAKb+Q,eAAgB/Q,SAAAA,eALH,iBAMbgR,eAAgBhR,SAAAA,eANH,kBAUjB,MAAO,CACL4D,aAAc5D,SADTk2F,KAELzwF,cAAezF,SAAAA,eAFV,mBAGLmF,gBAAiBnF,SAAAA,eAHZ,UAIL4B,SAJK,KAKLF,QAAS,CACPmG,UAAW7H,SAAAA,eADJ,iBAEPiL,SAAUjL,SAAAA,eAFH,YAGPoZ,WAAYpZ,SAAAA,eAHL,cAIPozF,YAAapzF,SAAAA,eAJN,eAKPqzF,kBAAmBrzF,SAAAA,eALZ,qBAMP0jB,SAAU1jB,SAAAA,eANH,YAOP+lD,KAAM/lD,SAAAA,eAPC,QAQPuK,OAAQvK,SAAAA,eARD,UASP2K,QAAS3K,SAAAA,eATF,WAUP8oG,SAAU9oG,SAAAA,eAVH,YAWPizF,SAAUjzF,SAAAA,eAXH,YAYPkzF,MAAOlzF,SAAAA,eAZA,SAaP8wF,uBAAwB9wF,SAAAA,eAbjB,oBAcP2P,SAAU3P,SAAAA,eAdH,YAePmzF,aAAcnzF,SAAAA,eAfP,iBAiBT2B,iBAAkB,CAChBD,QAAS1B,SAAAA,eADO,oBAEhBolB,aAAcplB,SAAAA,eAFE,0BAGhB6wF,uBAAwB7wF,SAAAA,eAHR,mCAMhB8wF,uBAAwB9wF,SAAAA,eANR,6BAShB+wF,eAAgB/wF,SAAAA,eATA,qBAUhBgxF,YAAahxF,SAAAA,eAVG,kBAWhBixF,eAAgBjxF,SAAAA,eAXA,qBAYhBkxF,mBAAoBlxF,SAAAA,eAZJ,yBAahBmxF,gBAAiBnxF,SAAAA,eAbD,aAchBoxF,eAAgBpxF,SAAAA,eAdA,YAehBqxF,mBAAoBrxF,SAAAA,eAfJ,gBAgBhBsxF,oBAAqBtxF,SAAAA,eAhBL,iBAiBhBuxF,uBAAwBvxF,SAAAA,eAjBR,oBAkBhByxF,qBAAsBzxF,SAAAA,eAlBN,kBAmBhB0xF,iBAAkB1xF,SAAAA,eAnBF,cAoBhB2xF,qBAAsB3xF,SAAAA,eApBN,kBAqBhB4xF,uBAAwB5xF,SAAAA,eArBR,oBAsBhB6xF,oBAAqB7xF,SAAAA,eAtBL,iBAuBhB8xF,iBAAkB9xF,SAAAA,eAvBF,cAwBhB+xF,gBAAiB/xF,SAAAA,eAxBD,aAyBhBgyF,iBAAkBhyF,SAAAA,eAzBF,cA0BhBiyF,yBAA0BjyF,SAAAA,eA1BV,uBA4BlB0J,QAAS,CAEP4yC,eAAgBt8C,SAAAA,eAFT,kBAGPmF,gBAAiBnF,SAAAA,eAHV,mBAIPolB,aAAcplB,SAAAA,eAJP,iBAMPu8C,gBAAiBv8C,SAAAA,eANV,iBAOPw8C,cAAex8C,SAAAA,eAPR,eAQPy8C,kBAAmBz8C,SAAAA,eARZ,mBASP08C,aAAc18C,SAAAA,eATP,cAWPmI,cAAenI,SAAAA,eAXR,iBAYPmJ,YAAanJ,SAAAA,eAZN,eAaPqJ,gBAAiBrJ,SAAAA,eAbV,mBAcPuJ,WAAYvJ,SAAAA,eAdL,cAgBP48C,wBAAyB58C,SAAAA,eAhBlB,2BAmBP88C,yBAA0B98C,SAAAA,eAnBnB,uBAqBT8J,eAAgB,CACdwyC,eAAgBt8C,SAAAA,eADF,kBAEds+C,QAASt+C,SAAAA,eAFK,mBAIhBqI,QAAS,CACPmD,IAAKxL,SAAAA,eADE,WAEPolB,aAAcplB,SAAAA,eAFP,YAGPm8B,UAAWn8B,SAAAA,eAHJ,aAIP88B,mBAAoB98B,SAAAA,eAJb,sBAKPo8B,qBAAsBp8B,SAAAA,eALf,oBAMPq8B,wBAAyBr8B,SAAAA,eANlB,mBAOPu8B,mBAAoBv8B,SAAAA,eAPb,aAQPw8B,sBAAuBx8B,SAAAA,eARhB,iBASPy8B,mBAAoBz8B,SAAAA,eATb,kBAUP+oG,gCAAiC/oG,SAAAA,eAV1B,2BAaPgpG,sBAAuBhpG,SAAAA,eAbhB,qBAcPipG,cAAejpG,SAAAA,eAdR,aAeP08B,QAAS18B,SAAAA,eAfF,WAgBP28B,iBAAkB38B,SAAAA,eAhBX,oBAiBP48B,mBAAoB58B,SAAAA,eAjBb,gBAkBP68B,eAAgB78B,SAAAA,eAlBT,aAoBTgJ,gBAAiB,CACf8rB,YADe,kBAEfjtB,UAAW7H,SAAAA,eAFI,mBAGf2Y,MAAO3Y,SAAAA,eAHQ,gBAIf+0B,MAAO/0B,SAAAA,eAJQ,YAKfg1B,aAAch1B,SAAAA,eALC,kBAMfi1B,aAAcj1B,SAAAA,eANC,mBAQjBwI,mBAAoB,CAClBssB,YADkB,4BAElBjtB,UAAW7H,SAAAA,eAFO,6BAGlB6Q,YAAa7Q,SAAAA,eAHK,2BAIlB04B,OAAQ,CACNY,SAAUt5B,SAAAA,eADJ,iBAENu5B,SAAUv5B,SAAAA,eAFJ,iBAGN8L,MAAO9L,SAAAA,eAHD,cAINo6B,OAAQp6B,SAAAA,eAJF,eAKNs6B,QAASt6B,SAAAA,eALH,gBAMNw6B,SAAUx6B,SAAAA,eANJ,iBAONw5B,aAAcx5B,SAAAA,eAPR,qBAQNy5B,iBAAkBz5B,SAAAA,eARZ,yBASN06B,QAAS16B,SAAAA,eATH,gBAUNkY,SAAUlY,SAAAA,eAVJ,iBAWNsQ,QAAStQ,SAAAA,eAXH,gBAYN26B,UAAW36B,SAAAA,eAZL,kBAaN05B,SAAU15B,SAAAA,eAbJ,iBAcN46B,WAAY56B,SAAAA,eAdN,qBA3GL8M,aAAAA,EA6HLgO,eAAgB9a,SAAAA,eA7HX,kBA8HLigB,kBA9HK,YA+HLza,mBA/HK,iBAoIQqjG,GAiBL5qF,EAAQje,SAAAA,YAlBK,eAmBnBie,EAAAA,gBAAAA,mBAAAA,GAAAA,EAAqD,CACnDha,OApBiBhC,SAsBnB,IAMMkqB,OAAAA,SAAAA,gBAAkCA,OAAAA,SAAAA,eAAAA,mBAAtC7lB,OACE6lB,OAAAA,SAAAA,cAD8FlO,GAG9Fje,SAAAA,cADKie,GAIP,MAAA/R,GAGA7H,OAAAA,WAAAA,MAA2B,oBAAA6H,KAC3BlM,SAAAA,cAJWie,GAQfne,EAAAA,qBAAAA,IA1CqBmK","sourcesContent":["/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const platform =\n    (typeof navigator !== \"undefined\" && navigator.platform) || \"\";\n  const maxTouchPoints =\n    (typeof navigator !== \"undefined\" && navigator.maxTouchPoints) || 1;\n\n  const isAndroid = /Android/.test(userAgent);\n  const isIOS =\n    /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent) ||\n    (platform === \"MacIntel\" && maxTouchPoints > 1);\n  const isIOSChrome = /CriOS/.test(userAgent);\n\n  // Disables URL.createObjectURL() usage in some environments.\n  // Support: Chrome on iOS\n  (function checkOnBlobSupport() {\n    // Sometimes Chrome on iOS loses data created with createObjectURL(),\n    // see issue 8081.\n    if (isIOSChrome) {\n      compatibilityParams.disableCreateObjectURL = true;\n    }\n  })();\n\n  // Limit canvas size to 5 mega-pixels on mobile.\n  // Support: Android, iOS\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      compatibilityParams.maxCanvasPixels = 5242880;\n    }\n  })();\n}\n\nconst OptionKind = {\n  VIEWER: 0x02,\n  API: 0x04,\n  WORKER: 0x08,\n  PREFERENCE: 0x80,\n};\n\n/**\n * NOTE: These options are used to generate the `default_preferences.json` file,\n *       see `OptionKind.PREFERENCE`, hence the values below must use only\n *       primitive types and cannot rely on any imported types.\n */\nconst defaultOptions = {\n  annotationMode: {\n    /** @type {number} */\n    value: 2,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  cursorToolOnLoad: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  defaultUrl: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.VIEWER,\n  },\n  defaultZoomValue: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  disableHistory: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER,\n  },\n  disablePageLabels: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enablePermissions: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enablePrintAutoRotate: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  enableScripting: {\n    /** @type {boolean} */\n    value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\"),\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  externalLinkRel: {\n    /** @type {string} */\n    value: \"noopener noreferrer nofollow\",\n    kind: OptionKind.VIEWER,\n  },\n  externalLinkTarget: {\n    /** @type {number} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  historyUpdateUrl: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  ignoreDestinationZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  imageResourcesPath: {\n    /** @type {string} */\n    value: \"./images/\",\n    kind: OptionKind.VIEWER,\n  },\n  maxCanvasPixels: {\n    /** @type {number} */\n    value: 16777216,\n    compatibility: compatibilityParams.maxCanvasPixels,\n    kind: OptionKind.VIEWER,\n  },\n  pdfBugEnabled: {\n    /** @type {boolean} */\n    value: typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\"),\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  printResolution: {\n    /** @type {number} */\n    value: 150,\n    kind: OptionKind.VIEWER,\n  },\n  removePageBorders: {\n    // #194\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  renderer: {\n    /** @type {string} */\n    value: \"canvas\",\n    kind: OptionKind.VIEWER,\n  },\n  sidebarViewOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  scrollModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  spreadModeOnLoad: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  textLayerMode: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  useOnlyCssZoom: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  viewerCssTheme: {\n    /** @type {number} */\n    value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\") ? 2 : 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n  viewOnLoad: {\n    /** @type {boolean} */\n    value: 0,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  },\n\n  cMapPacked: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API,\n  },\n  cMapUrl: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../external/bcmaps/\"\n        : \"../web/cmaps/\",\n    kind: OptionKind.API,\n  },\n  disableAutoFetch: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableFontFace: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableRange: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  disableStream: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  docBaseUrl: {\n    /** @type {string} */\n    value: \"\",\n    kind: OptionKind.API,\n  },\n  enableXfa: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API + OptionKind.PREFERENCE,\n  },\n  fontExtraProperties: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API,\n  },\n  isEvalSupported: {\n    /** @type {boolean} */\n    value: true,\n    kind: OptionKind.API,\n  },\n  maxImageSize: {\n    /** @type {number} */\n    value: -1,\n    kind: OptionKind.API,\n  },\n  pdfBug: {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.API,\n  },\n  standardFontDataUrl: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../external/standard_fonts/\"\n        : \"../web/standard_fonts/\",\n    kind: OptionKind.API,\n  },\n  verbosity: {\n    /** @type {number} */\n    value: 1,\n    kind: OptionKind.API,\n  },\n\n  workerPort: {\n    /** @type {Object} */\n    value: null,\n    kind: OptionKind.WORKER,\n  },\n  workerSrc: {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../src/worker_loader.js\"\n        : \"./assets/pdf.worker.js\", // todo or pdf.worker-es5.js\n    kind: OptionKind.WORKER,\n  },\n};\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  defaultOptions.disablePreferences = {\n    /** @type {boolean} */\n    value: typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\"),\n    kind: OptionKind.VIEWER,\n  };\n  defaultOptions.locale = {\n    /** @type {string} */\n    value: typeof navigator !== \"undefined\" ? navigator.language : \"en-US\",\n    kind: OptionKind.VIEWER,\n  };\n  defaultOptions.sandboxBundleSrc = {\n    /** @type {string} */\n    value:\n      typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n        ? \"../build/dev-sandbox/pdf.sandbox.js\"\n        : \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER,\n  };\n\n  defaultOptions.renderer.kind += OptionKind.PREFERENCE;\n} else if (PDFJSDev.test(\"CHROME\")) {\n  defaultOptions.disableTelemetry = {\n    /** @type {boolean} */\n    value: false,\n    kind: OptionKind.VIEWER + OptionKind.PREFERENCE,\n  };\n  defaultOptions.sandboxBundleSrc = {\n    /** @type {string} */\n    value: \"../build/pdf.sandbox.js\",\n    kind: OptionKind.VIEWER,\n  };\n}\n\nconst userOptions = Object.create(null);\n\nif (globalThis.pdfDefaultOptions) {\n  for (const key in globalThis.pdfDefaultOptions) {\n    userOptions[key] = globalThis.pdfDefaultOptions[key];\n  }\n}\n\nclass AppOptions {\n  constructor() {\n    throw new Error(\"Cannot initialize AppOptions.\");\n  }\n\n  static get(name) {\n    const userOption = userOptions[name];\n    if (userOption !== undefined) {\n      return userOption;\n    }\n    const defaultOption = defaultOptions[name];\n    if (defaultOption !== undefined) {\n      return defaultOption.compatibility ?? defaultOption.value;\n    }\n    return undefined;\n  }\n\n  static getAll(kind = null) {\n    const options = Object.create(null);\n    for (const name in defaultOptions) {\n      const defaultOption = defaultOptions[name];\n      if (kind) {\n        if ((kind & defaultOption.kind) === 0) {\n          continue;\n        }\n        if (kind === OptionKind.PREFERENCE) {\n          const value = defaultOption.value,\n            valueType = typeof value;\n\n          if (\n            valueType === \"boolean\" ||\n            valueType === \"string\" ||\n            (valueType === \"number\" && Number.isInteger(value))\n          ) {\n            options[name] = value;\n            continue;\n          }\n          throw new Error(`Invalid type for preference: ${name}`);\n        }\n      }\n      const userOption = userOptions[name];\n      options[name] =\n        userOption !== undefined\n          ? userOption\n          : defaultOption.compatibility ?? defaultOption.value;\n    }\n    return options;\n  }\n\n  static set(name, value) {\n    userOptions[name] = value;\n  }\n\n  static setAll(options) {\n    for (const name in options) {\n      userOptions[name] = options[name];\n    }\n  }\n\n  static remove(name) {\n    delete userOptions[name];\n  }\n\n  /**\n   * @ignore\n   */\n  static _hasUserOptions() {\n    return Object.keys(userOptions).length > 0;\n  }\n}\n\nexport { AppOptions, compatibilityParams, OptionKind };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals PDFBug, Stats */\n\nimport {\n  animationStarted,\n  apiPageLayoutToViewerModes,\n  apiPageModeToSidebarView,\n  AutoPrintRegExp,\n  DEFAULT_SCALE_VALUE,\n  getActiveOrFocusedElement,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  noContextMenuHandler,\n  normalizeWheelEventDirection,\n  parseQueryString,\n  ProgressBar,\n  RendererType,\n  RenderingStates,\n  ScrollMode,\n  SidebarView,\n  SpreadMode,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport { AppOptions, compatibilityParams, OptionKind } from \"./app_options.js\";\nimport { AutomationEventBus, EventBus } from \"./event_utils.js\";\nimport {\n  build,\n  createPromiseCapability,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  MissingPDFException,\n  OPS,\n  PDFWorker,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  version,\n} from \"pdfjs-lib\";\nimport { CursorTool, PDFCursorTools } from \"./pdf_cursor_tools.js\";\nimport { OverlayManager } from \"./overlay_manager.js\";\nimport { PasswordPrompt } from \"./password_prompt.js\";\nimport { PDFAttachmentViewer } from \"./pdf_attachment_viewer.js\";\nimport { PDFDocumentProperties } from \"./pdf_document_properties.js\";\nimport { PDFFindBar } from \"./pdf_find_bar.js\";\nimport { PDFFindController } from \"./pdf_find_controller.js\";\nimport { PDFHistory } from \"./pdf_history.js\";\nimport { PDFLayerViewer } from \"./pdf_layer_viewer.js\";\nimport { PDFLinkService } from \"./pdf_link_service.js\";\nimport { PDFOutlineViewer } from \"./pdf_outline_viewer.js\";\nimport { PDFPresentationMode } from \"./pdf_presentation_mode.js\";\nimport { PDFRenderingQueue } from \"./pdf_rendering_queue.js\";\nimport { PDFScriptingManager } from \"./pdf_scripting_manager.js\";\nimport { PDFSidebar } from \"./pdf_sidebar.js\";\nimport { PDFSidebarResizer } from \"./pdf_sidebar_resizer.js\";\nimport { PDFThumbnailViewer } from \"./pdf_thumbnail_viewer.js\";\nimport { PDFViewer } from \"./pdf_viewer.js\";\nimport { SecondaryToolbar } from \"./secondary_toolbar.js\";\nimport { Toolbar } from \"./toolbar.js\";\nimport { ViewHistory } from \"./view_history.js\";\n\nconst DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT = 5000; // ms\nconst FORCE_PAGES_LOADED_TIMEOUT = 10000; // ms\nconst WHEEL_ZOOM_DISABLED_TIMEOUT = 1000; // ms\n\nconst ViewOnLoad = {\n  UNKNOWN: -1,\n  PREVIOUS: 0, // Default value.\n  INITIAL: 1,\n};\n\nconst ViewerCssTheme = {\n  AUTOMATIC: 0, // Default value.\n  LIGHT: 1,\n  DARK: 2,\n};\n\n// Keep these in sync with mozilla-central's Histograms.json.\nconst KNOWN_VERSIONS = [\n  \"1.0\",\n  \"1.1\",\n  \"1.2\",\n  \"1.3\",\n  \"1.4\",\n  \"1.5\",\n  \"1.6\",\n  \"1.7\",\n  \"1.8\",\n  \"1.9\",\n  \"2.0\",\n  \"2.1\",\n  \"2.2\",\n  \"2.3\",\n];\n// Keep these in sync with mozilla-central's Histograms.json.\nconst KNOWN_GENERATORS = [\n  \"acrobat distiller\",\n  \"acrobat pdfwriter\",\n  \"adobe livecycle\",\n  \"adobe pdf library\",\n  \"adobe photoshop\",\n  \"ghostscript\",\n  \"tcpdf\",\n  \"cairo\",\n  \"dvipdfm\",\n  \"dvips\",\n  \"pdftex\",\n  \"pdfkit\",\n  \"itext\",\n  \"prince\",\n  \"quarkxpress\",\n  \"mac os x\",\n  \"microsoft\",\n  \"openoffice\",\n  \"oracle\",\n  \"luradocument\",\n  \"pdf-xchange\",\n  \"antenna house\",\n  \"aspose.cells\",\n  \"fpdf\",\n];\n\nclass DefaultExternalServices {\n  constructor() {\n    throw new Error(\"Cannot initialize DefaultExternalServices.\");\n  }\n\n  static updateFindControlState(data) {}\n\n  static updateFindMatchesCount(data) {}\n\n  static initPassiveLoading(callbacks) {}\n\n  static async fallback(data) {}\n\n  static reportTelemetry(data) {}\n\n  static createDownloadManager(options) {\n    throw new Error(\"Not implemented: createDownloadManager\");\n  }\n\n  static createPreferences() {\n    throw new Error(\"Not implemented: createPreferences\");\n  }\n\n  static createL10n(options) {\n    throw new Error(\"Not implemented: createL10n\");\n  }\n\n  static createScripting(options) {\n    throw new Error(\"Not implemented: createScripting\");\n  }\n\n  static get supportsIntegratedFind() {\n    return shadow(this, \"supportsIntegratedFind\", false);\n  }\n\n  static get supportsDocumentFonts() {\n    return shadow(this, \"supportsDocumentFonts\", true);\n  }\n\n  static get supportedMouseWheelZoomModifierKeys() {\n    return shadow(this, \"supportedMouseWheelZoomModifierKeys\", {\n      ctrlKey: true,\n      metaKey: true,\n    });\n  }\n\n  static get isInAutomation() {\n    return shadow(this, \"isInAutomation\", false);\n  }\n}\n\nconst PDFViewerApplication = {\n  initialBookmark: document.location.hash.substring(1),\n  _initializedCapability: createPromiseCapability(),\n  _fellback: false,\n  appConfig: null,\n  pdfDocument: null,\n  pdfLoadingTask: null,\n  printService: null,\n  /** @type {PDFViewer} */\n  pdfViewer: null,\n  /** @type {PDFThumbnailViewer} */\n  pdfThumbnailViewer: null,\n  /** @type {PDFRenderingQueue} */\n  pdfRenderingQueue: null,\n  /** @type {PDFPresentationMode} */\n  pdfPresentationMode: null,\n  /** @type {PDFDocumentProperties} */\n  pdfDocumentProperties: null,\n  /** @type {PDFLinkService} */\n  pdfLinkService: null,\n  /** @type {PDFHistory} */\n  pdfHistory: null,\n  /** @type {PDFSidebar} */\n  pdfSidebar: null,\n  /** @type {PDFSidebarResizer} */\n  pdfSidebarResizer: null,\n  /** @type {PDFOutlineViewer} */\n  pdfOutlineViewer: null,\n  /** @type {PDFAttachmentViewer} */\n  pdfAttachmentViewer: null,\n  /** @type {PDFLayerViewer} */\n  pdfLayerViewer: null,\n  /** @type {PDFCursorTools} */\n  pdfCursorTools: null,\n  /** @type {PDFScriptingManager} */\n  pdfScriptingManager: null,\n  /** @type {ViewHistory} */\n  store: null,\n  /** @type {DownloadManager} */\n  downloadManager: null,\n  /** @type {OverlayManager} */\n  overlayManager: null,\n  /** @type {Preferences} */\n  preferences: null,\n  /** @type {Toolbar} */\n  toolbar: null,\n  /** @type {SecondaryToolbar} */\n  secondaryToolbar: null,\n  /** @type {EventBus} */\n  eventBus: null,\n  /** @type {IL10n} */\n  l10n: null,\n  isInitialViewSet: false,\n  downloadComplete: false,\n  isViewerEmbedded: window.parent !== window,\n  url: \"\",\n  baseUrl: \"\",\n  _downloadUrl: \"\",\n  externalServices: DefaultExternalServices,\n  _boundEvents: Object.create(null),\n  documentInfo: null,\n  metadata: null,\n  _contentDispositionFilename: null,\n  _contentLength: null,\n  _saveInProgress: false,\n  _docStats: null,\n  _wheelUnusedTicks: 0,\n  _idleCallbacks: new Set(),\n\n  // Called once when the document is loaded.\n  async initialize(appConfig) {\n    this.preferences = this.externalServices.createPreferences();\n    this.appConfig = appConfig;\n\n    await this._readPreferences();\n    await this._parseHashParameters();\n    this._forceCssTheme();\n    await this._initializeL10n();\n\n    if (\n      this.isViewerEmbedded &&\n      AppOptions.get(\"externalLinkTarget\") === LinkTarget.NONE\n    ) {\n      // Prevent external links from \"replacing\" the viewer,\n      // when it's embedded in e.g. an <iframe> or an <object>.\n      AppOptions.set(\"externalLinkTarget\", LinkTarget.TOP);\n    }\n    await this._initializeViewerComponents();\n\n    // Bind the various event handlers *after* the viewer has been\n    // initialized, to prevent errors if an event arrives too soon.\n    this.bindEvents();\n    this.bindWindowEvents();\n\n    // We can start UI localization now.\n    const appContainer = appConfig.appContainer || document.documentElement;\n    this.l10n.translate(appContainer).then(() => {\n      // Dispatch the 'localized' event on the `eventBus` once the viewer\n      // has been fully initialized and translated.\n      this.eventBus.dispatch(\"localized\", { source: this });\n    });\n\n    this._initializedCapability.resolve();\n\n    /* modified by ngx-extended-pdf-viewer #633.\n       The shadow() function must be called each time the PDF viewer is initialized. */\n    this.initializeLoadingBar();\n    /* #633 end of modification */\n  },\n\n  /**\n   * @private\n   */\n  async _readPreferences() {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n    ) {\n      if (AppOptions.get(\"disablePreferences\")) {\n        // Give custom implementations of the default viewer a simpler way to\n        // opt-out of having the `Preferences` override existing `AppOptions`.\n        return;\n      }\n      if (AppOptions._hasUserOptions()) {\n        Window['ngxConsole'].warn(\n          \"_readPreferences: The Preferences may override manually set AppOptions; \" +\n            'please use the \"disablePreferences\"-option in order to prevent that.'\n        );\n      }\n    }\n    try {\n      AppOptions.setAll(await this.preferences.getAll());\n    } catch (reason) {\n      Window['ngxConsole'].error(`_readPreferences: \"${reason?.message}\".`);\n    }\n  },\n\n  /**\n   * Potentially parse special debugging flags in the hash section of the URL.\n   * @private\n   */\n  async _parseHashParameters() {\n    if (!AppOptions.get(\"pdfBugEnabled\")) {\n      return;\n    }\n    const hash = document.location.hash.substring(1);\n    if (!hash) {\n      return;\n    }\n    const params = parseQueryString(hash),\n      waitOn = [];\n\n    if (params.get(\"disableworker\") === \"true\") {\n      waitOn.push(loadFakeWorker());\n    }\n    if (params.has(\"disablerange\")) {\n      AppOptions.set(\"disableRange\", params.get(\"disablerange\") === \"true\");\n    }\n    if (params.has(\"disablestream\")) {\n      AppOptions.set(\"disableStream\", params.get(\"disablestream\") === \"true\");\n    }\n    if (params.has(\"disableautofetch\")) {\n      AppOptions.set(\n        \"disableAutoFetch\",\n        params.get(\"disableautofetch\") === \"true\"\n      );\n    }\n    if (params.has(\"disablefontface\")) {\n      AppOptions.set(\n        \"disableFontFace\",\n        params.get(\"disablefontface\") === \"true\"\n      );\n    }\n    if (params.has(\"disablehistory\")) {\n      AppOptions.set(\"disableHistory\", params.get(\"disablehistory\") === \"true\");\n    }\n    if (params.has(\"verbosity\")) {\n      AppOptions.set(\"verbosity\", params.get(\"verbosity\") | 0);\n    }\n    if (params.has(\"textlayer\")) {\n      switch (params.get(\"textlayer\")) {\n        case \"off\":\n          AppOptions.set(\"textLayerMode\", TextLayerMode.DISABLE);\n          break;\n        case \"visible\":\n        case \"shadow\":\n        case \"hover\":\n          const viewer = this.appConfig.viewerContainer;\n          viewer.classList.add(`textLayer-${params.get(\"textlayer\")}`);\n          break;\n      }\n    }\n    if (params.has(\"pdfbug\")) {\n      AppOptions.set(\"pdfBug\", true);\n      AppOptions.set(\"fontExtraProperties\", true);\n\n      const enabled = params.get(\"pdfbug\").split(\",\");\n      waitOn.push(initPDFBug(enabled));\n    }\n    // It is not possible to change locale for the (various) extension builds.\n    if (\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC\")) &&\n      params.has(\"locale\")\n    ) {\n      AppOptions.set(\"locale\", params.get(\"locale\"));\n    }\n\n    if (waitOn.length === 0) {\n      return;\n    }\n    try {\n      await Promise.all(waitOn);\n    } catch (reason) {\n      Window['ngxConsole'].error(`_parseHashParameters: \"${reason.message}\".`);\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeL10n() {\n    this.l10n = this.externalServices.createL10n(\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n        ? { locale: AppOptions.get(\"locale\") }\n        : null\n    );\n    const dir = await this.l10n.getDirection();\n    document.getElementsByTagName(\"html\")[0].dir = dir;\n  },\n\n  /**\n   * @private\n   */\n  _forceCssTheme() {\n    const cssTheme = AppOptions.get(\"viewerCssTheme\");\n    if (\n      cssTheme === ViewerCssTheme.AUTOMATIC ||\n      !Object.values(ViewerCssTheme).includes(cssTheme)\n    ) {\n      return;\n    }\n    try {\n      const styleSheet = document.styleSheets[0];\n      const cssRules = styleSheet?.cssRules || [];\n      for (let i = 0, ii = cssRules.length; i < ii; i++) {\n        const rule = cssRules[i];\n        if (\n          rule instanceof CSSMediaRule &&\n          rule.media?.[0] === \"(prefers-color-scheme: dark)\"\n        ) {\n          if (cssTheme === ViewerCssTheme.LIGHT) {\n            styleSheet.deleteRule(i);\n            return;\n          }\n          // cssTheme === ViewerCssTheme.DARK\n          const darkRules =\n            /^@media \\(prefers-color-scheme: dark\\) {\\n\\s*([\\w\\s-.,:;/\\\\{}()]+)\\n}$/.exec(\n              rule.cssText\n            );\n          if (darkRules?.[1]) {\n            styleSheet.deleteRule(i);\n            styleSheet.insertRule(darkRules[1], i);\n          }\n          return;\n        }\n      }\n    } catch (reason) {\n      Window['ngxConsole'].error(`_forceCssTheme: \"${reason?.message}\".`);\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeViewerComponents() {\n    const { appConfig, externalServices } = this;\n\n    let eventBus;\n    if (appConfig.eventBus) {\n      eventBus = appConfig.eventBus;\n    } else if (externalServices.isInAutomation) {\n      eventBus = new AutomationEventBus();\n    } else {\n      eventBus = new EventBus();\n    }\n    this.eventBus = eventBus;\n\n    this.overlayManager = new OverlayManager();\n\n    const pdfRenderingQueue = new PDFRenderingQueue();\n    pdfRenderingQueue.onIdle = this._cleanup.bind(this);\n    this.pdfRenderingQueue = pdfRenderingQueue;\n\n    const pdfLinkService = new PDFLinkService({\n      eventBus,\n      externalLinkTarget: AppOptions.get(\"externalLinkTarget\"),\n      externalLinkRel: AppOptions.get(\"externalLinkRel\"),\n      ignoreDestinationZoom: AppOptions.get(\"ignoreDestinationZoom\"),\n    });\n    this.pdfLinkService = pdfLinkService;\n\n    const downloadManager = externalServices.createDownloadManager();\n    this.downloadManager = downloadManager;\n\n    const findController = new PDFFindController({\n      linkService: pdfLinkService,\n      eventBus,\n      // #492 modified by ngx-extended-pdf-viewer\n      pageViewMode: AppOptions.get(\"pageViewMode\"),\n      // #492 modification end\n    });\n    this.findController = findController;\n\n    const pdfScriptingManager = new PDFScriptingManager({\n      eventBus,\n      sandboxBundleSrc:\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"!PRODUCTION || GENERIC || CHROME\")\n          ? AppOptions.get(\"sandboxBundleSrc\")\n          : null,\n      scriptingFactory: externalServices,\n      docPropertiesLookup: this._scriptingDocProperties.bind(this),\n    });\n    this.pdfScriptingManager = pdfScriptingManager;\n\n    const container = appConfig.mainContainer;\n    const viewer = appConfig.viewerContainer;\n    this.pdfViewer = new PDFViewer({\n      container,\n      viewer,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      downloadManager,\n      findController,\n      scriptingManager:\n        AppOptions.get(\"enableScripting\") && pdfScriptingManager,\n      renderer: AppOptions.get(\"renderer\"),\n      l10n: this.l10n,\n      textLayerMode: AppOptions.get(\"textLayerMode\"),\n      annotationMode: AppOptions.get(\"annotationMode\"),\n      imageResourcesPath: AppOptions.get(\"imageResourcesPath\"),\n      removePageBorders: AppOptions.get(\"removePageBorders\"), // #194\n      renderInteractiveForms: AppOptions.get(\"renderInteractiveForms\"),\n      enablePrintAutoRotate: AppOptions.get(\"enablePrintAutoRotate\"),\n      useOnlyCssZoom: AppOptions.get(\"useOnlyCssZoom\"),\n      maxCanvasPixels: AppOptions.get(\"maxCanvasPixels\"),\n      /** #495 modified by ngx-extended-pdf-viewer */\n      pageViewMode: AppOptions.get(\"pageViewMode\"),\n      /** end of modification */\n      enablePermissions: AppOptions.get(\"enablePermissions\"),\n    });\n    pdfRenderingQueue.setViewer(this.pdfViewer);\n    pdfLinkService.setViewer(this.pdfViewer);\n    pdfScriptingManager.setViewer(this.pdfViewer);\n\n    this.pdfThumbnailViewer = new PDFThumbnailViewer({\n      container: appConfig.sidebar.thumbnailView,\n      eventBus,\n      renderingQueue: pdfRenderingQueue,\n      linkService: pdfLinkService,\n      l10n: this.l10n,\n    });\n    pdfRenderingQueue.setThumbnailViewer(this.pdfThumbnailViewer);\n\n    // The browsing history is only enabled when the viewer is standalone,\n    // i.e. not when it is embedded in a web page.\n    if (!this.isViewerEmbedded && !AppOptions.get(\"disableHistory\")) {\n      this.pdfHistory = new PDFHistory({\n        linkService: pdfLinkService,\n        eventBus,\n      });\n      pdfLinkService.setHistory(this.pdfHistory);\n    }\n\n    if (!this.supportsIntegratedFind) {\n      this.findBar = new PDFFindBar(appConfig.findBar, eventBus, this.l10n);\n    }\n\n    this.pdfDocumentProperties = new PDFDocumentProperties(\n      appConfig.documentProperties,\n      this.overlayManager,\n      eventBus,\n      this.l10n\n    );\n\n    this.pdfCursorTools = new PDFCursorTools({\n      container,\n      eventBus,\n      cursorToolOnLoad: AppOptions.get(\"cursorToolOnLoad\"),\n    });\n\n    this.toolbar = new Toolbar(appConfig.toolbar, eventBus, this.l10n);\n\n    this.secondaryToolbar = new SecondaryToolbar(\n      appConfig.secondaryToolbar,\n      container,\n      eventBus\n    );\n\n    if (this.supportsFullscreen) {\n      this.pdfPresentationMode = new PDFPresentationMode({\n        container,\n        pdfViewer: this.pdfViewer,\n        eventBus,\n      });\n    }\n\n    // #763 modified by ngx-extended-pdf-viewer\n\n    let prompt = AppOptions.get(\"passwordPrompt\");\n    if (!prompt) {\n      prompt = new PasswordPrompt(\n        appConfig.passwordOverlay,\n        this.overlayManager,\n        this.l10n,\n        this.isViewerEmbedded\n      );\n    }\n    this.passwordPrompt = prompt;\n    // #763 end of modification by ngx-extended-pdf-viewer\n\n    this.pdfOutlineViewer = new PDFOutlineViewer({\n      container: appConfig.sidebar.outlineView,\n      eventBus,\n      linkService: pdfLinkService,\n    });\n\n    this.pdfAttachmentViewer = new PDFAttachmentViewer({\n      container: appConfig.sidebar.attachmentsView,\n      eventBus,\n      downloadManager,\n    });\n\n    this.pdfLayerViewer = new PDFLayerViewer({\n      container: appConfig.sidebar.layersView,\n      eventBus,\n      l10n: this.l10n,\n    });\n\n    this.pdfSidebar = new PDFSidebar({\n      elements: appConfig.sidebar,\n      pdfViewer: this.pdfViewer,\n      pdfThumbnailViewer: this.pdfThumbnailViewer,\n      eventBus,\n      l10n: this.l10n,\n    });\n    this.pdfSidebar.onToggled = this.forceRendering.bind(this);\n\n    this.pdfSidebarResizer = new PDFSidebarResizer(\n      appConfig.sidebarResizer,\n      eventBus,\n      this.l10n\n    );\n  },\n\n  run(config) {\n    this.initialize(config).then(webViewerInitialized);\n  },\n\n  get initialized() {\n    return this._initializedCapability.settled;\n  },\n\n  get initializedPromise() {\n    return this._initializedCapability.promise;\n  },\n\n  zoomIn(steps) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.increaseScale(steps);\n  },\n\n  zoomOut(steps) {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.decreaseScale(steps);\n  },\n\n  zoomReset() {\n    if (this.pdfViewer.isInPresentationMode) {\n      return;\n    }\n    this.pdfViewer.currentScaleValue = DEFAULT_SCALE_VALUE;\n  },\n\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  },\n\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  },\n\n  set page(val) {\n    this.pdfViewer.currentPageNumber = val;\n  },\n\n  get supportsPrinting() {\n    return PDFPrintServiceFactory.instance.supportsPrinting;\n  },\n\n  get supportsFullscreen() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return shadow(this, \"supportsFullscreen\", document.fullscreenEnabled);\n    }\n    return shadow(\n      this,\n      \"supportsFullscreen\",\n      document.fullscreenEnabled ||\n        document.mozFullScreenEnabled ||\n        document.webkitFullscreenEnabled\n    );\n  },\n\n  get supportsIntegratedFind() {\n    return this.externalServices.supportsIntegratedFind;\n  },\n\n  get supportsDocumentFonts() {\n    return this.externalServices.supportsDocumentFonts;\n  },\n\n  /* modified by ngx-extended-pdf-viewer #633. The shadow() function        */\n  /* replaces the getter by a property,so when a new instance of            */\n  /* ngx-extended-pdf-viewer is opened, it still references the old viewer. */\n  /** The bug fix solves this problem.                                      */\n  initializeLoadingBar() {\n    const bar = new ProgressBar(\"#loadingBar\");\n    bar.hide();\n    return shadow(this, \"loadingBar\", bar);\n  },\n  // get loadingBar() {\n  //  const bar = new ProgressBar(\"#loadingBar\");\n  //  return shadow(this, \"loadingBar\", bar);\n  // },\n  /** end of modification */\n\n  get supportedMouseWheelZoomModifierKeys() {\n    return this.externalServices.supportedMouseWheelZoomModifierKeys;\n  },\n\n  initPassiveLoading() {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      !PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      throw new Error(\"Not implemented: initPassiveLoading\");\n    }\n    this.externalServices.initPassiveLoading({\n      onOpenWithTransport: (url, length, transport) => {\n        this.open(url, { length, range: transport });\n      },\n      onOpenWithData: (data, contentDispositionFilename) => {\n        if (isPdfFile(contentDispositionFilename)) {\n          this._contentDispositionFilename = contentDispositionFilename;\n        }\n        this.open(data);\n      },\n      onOpenWithURL: (url, length, originalUrl) => {\n        const file = originalUrl !== undefined ? { url, originalUrl } : url;\n        const args = length !== undefined ? { length } : null;\n\n        this.open(file, args);\n      },\n      onError: err => {\n        this.l10n.get(\"loading_error\").then(msg => {\n          this._documentError(msg, err);\n        });\n      },\n      onProgress(loaded, total) {\n        this.progress(loaded / total);\n        // #588 modified by ngx-extended-pdf-viewer\n        this.eventBus.dispatch(\"progress\", {\n          source: this,\n          type: \"load\",\n          total,\n          loaded,\n          percent: (100 * loaded) / total,\n        });\n        // #588 end of modification\n      },\n    });\n  },\n\n  setTitleUsingUrl(url = \"\", downloadUrl = null) {\n    this.url = url;\n    this.baseUrl = url.split(\"#\")[0];\n    if (downloadUrl) {\n      this._downloadUrl =\n        downloadUrl === url ? this.baseUrl : downloadUrl.split(\"#\")[0];\n    }\n    let title = getPdfFilenameFromUrl(url, \"\");\n    if (!title) {\n      try {\n        title = decodeURIComponent(getFilenameFromUrl(url)) || url;\n      } catch (ex) {\n        // decodeURIComponent may throw URIError,\n        // fall back to using the unprocessed url in that case\n        title = url;\n      }\n    }\n    this.setTitle(title);\n  },\n\n  setTitle(title) {\n    if (this.isViewerEmbedded) {\n      // Embedded PDF viewers should not be changing their parent page's title.\n      return;\n    }\n    document.title = title;\n  },\n\n  get _docFilename() {\n    // Use `this.url` instead of `this.baseUrl` to perform filename detection\n    // based on the reference fragment as ultimate fallback if needed.\n    return this._contentDispositionFilename || getPdfFilenameFromUrl(this.url);\n  },\n\n  /**\n   * @private\n   */\n  _hideViewBookmark() {\n    // URL does not reflect proper document location - hiding some buttons.\n    const { toolbar, secondaryToolbar } = this.appConfig;\n    toolbar.viewBookmark.hidden = true;\n    secondaryToolbar.viewBookmarkButton.hidden = true;\n  },\n\n  /**\n   * @private\n   */\n  _cancelIdleCallbacks() {\n    if (!this._idleCallbacks.size) {\n      return;\n    }\n    for (const callback of this._idleCallbacks) {\n      window.cancelIdleCallback(callback);\n    }\n    this._idleCallbacks.clear();\n  },\n\n  /**\n   * Closes opened PDF document.\n   * @returns {Promise} - Returns the promise, which is resolved when all\n   *                      destruction is completed.\n   */\n  async close() {\n    this._unblockDocumentLoadEvent();\n    this._hideViewBookmark();\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      const { container } = this.appConfig.errorWrapper;\n      container.hidden = true;\n    }\n\n    if (!this.pdfLoadingTask) {\n      return;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this.pdfDocument?.annotationStorage.size > 0 &&\n      this._annotationStorageModified\n    ) {\n      try {\n        // Trigger saving, to prevent data loss in forms; see issue 12257.\n        await this.save({ sourceEventType: \"save\" });\n      } catch (reason) {\n        // Ignoring errors, to ensure that document closing won't break.\n      }\n    }\n    const promises = [];\n\n    promises.push(this.pdfLoadingTask.destroy());\n    this.pdfLoadingTask = null;\n\n    if (this.pdfDocument) {\n      this.pdfDocument = null;\n\n      this.pdfThumbnailViewer.setDocument(null);\n      this.pdfViewer.setDocument(null);\n      this.pdfLinkService.setDocument(null);\n      this.pdfDocumentProperties.setDocument(null);\n    }\n    this.pdfLinkService.externalLinkEnabled = true;\n    this._fellback = false;\n    this.store = null;\n    this.isInitialViewSet = false;\n    this.downloadComplete = false;\n    this.url = \"\";\n    this.baseUrl = \"\";\n    this._downloadUrl = \"\";\n    this.documentInfo = null;\n    this.metadata = null;\n    this._contentDispositionFilename = null;\n    this._contentLength = null;\n    this._saveInProgress = false;\n    this._docStats = null;\n\n    this._cancelIdleCallbacks();\n    promises.push(this.pdfScriptingManager.destroyPromise);\n\n    this.pdfSidebar.reset();\n    this.pdfOutlineViewer.reset();\n    this.pdfAttachmentViewer.reset();\n    this.pdfLayerViewer.reset();\n\n    this.pdfHistory?.reset();\n    this.findBar?.reset();\n    this.toolbar.reset();\n    this.secondaryToolbar.reset();\n\n    if (typeof PDFBug !== \"undefined\") {\n      PDFBug.cleanup();\n    }\n    await Promise.all(promises);\n  },\n\n  /**\n   * Opens PDF document specified by URL or array with additional arguments.\n   * @param {string|TypedArray|ArrayBuffer} file - PDF location or binary data.\n   * @param {Object} [args] - Additional arguments for the getDocument call,\n   *                          e.g. HTTP headers ('httpHeaders') or alternative\n   *                          data transport ('range').\n   * @returns {Promise} - Returns the promise, which is resolved when document\n   *                      is opened.\n   */\n  async open(file, args) {\n    window.ngxZone.runOutsideAngular(async () => {\n      if (this.pdfLoadingTask) {\n        // We need to destroy already opened document.\n        await this.close();\n      }\n      // Set the necessary global worker parameters, using the available options.\n      const workerParameters = AppOptions.getAll(OptionKind.WORKER);\n      for (const key in workerParameters) {\n        GlobalWorkerOptions[key] = workerParameters[key];\n      }\n\n      const parameters = Object.create(null);\n      if (typeof file === \"string\") {\n        // URL\n        this.setTitleUsingUrl(file, /* downloadUrl = */ file);\n        parameters.url = file;\n      } else if (file && \"byteLength\" in file) {\n        // ArrayBuffer\n        parameters.data = file;\n      } else if (file.url && file.originalUrl) {\n        this.setTitleUsingUrl(file.originalUrl, /* downloadUrl = */ file.url);\n        parameters.url = file.url;\n      }\n      // Set the necessary API parameters, using the available options.\n      const apiParameters = AppOptions.getAll(OptionKind.API);\n      for (const key in apiParameters) {\n        let value = apiParameters[key];\n\n        if (key === \"docBaseUrl\" && !value) {\n          if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n            value = document.URL.split(\"#\")[0];\n          } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n            value = this.baseUrl;\n          }\n        }\n        parameters[key] = value;\n      }\n      // Finally, update the API parameters with the arguments (if they exist).\n      if (args) {\n        for (const key in args) {\n          parameters[key] = args[key];\n        }\n      }\n\n      const loadingTask = getDocument(parameters);\n      this.pdfLoadingTask = loadingTask;\n\n      loadingTask.onPassword = (updateCallback, reason) => {\n        this.pdfLinkService.externalLinkEnabled = false;\n        this.passwordPrompt.setUpdateCallback(updateCallback, reason);\n        this.passwordPrompt.open();\n      };\n\n      loadingTask.onProgress = ({ loaded, total }) => {\n        this.progress(loaded / total);\n        // #588 modified by ngx-extended-pdf-viewer\n        this.eventBus.dispatch(\"progress\", {\n          source: this,\n          type: \"load\",\n          total,\n          loaded,\n          percent: (100 * loaded) / total,\n        });\n        // #588 end of modification\n      };\n\n      // Listen for unsupported features to trigger the fallback UI.\n      loadingTask.onUnsupportedFeature = this.fallback.bind(this);\n\n      this.loadingBar.show(); // #707 added by ngx-extended-pdf-viewer\n      return loadingTask.promise.then(\n        pdfDocument => {\n          this.load(pdfDocument);\n        },\n        exception => {\n          if (loadingTask !== this.pdfLoadingTask) {\n            return undefined; // Ignore errors for previously opened PDF files.\n          }\n\n          let key = \"loading_error\";\n          if (exception instanceof InvalidPDFException) {\n            key = \"invalid_file_error\";\n          } else if (exception instanceof MissingPDFException) {\n            key = \"missing_file_error\";\n          } else if (exception instanceof UnexpectedResponseException) {\n            key = \"unexpected_response_error\";\n          }\n          return this.l10n.get(key).then(msg => {\n            this._documentError(msg, { message: exception?.message });\n            throw exception;\n          });\n        }\n      );\n      });\n  },\n\n  /**\n   * @private\n   */\n  _ensureDownloadComplete() {\n    if (this.pdfDocument && this.downloadComplete) {\n      return;\n    }\n    throw new Error(\"PDF document not downloaded.\");\n  },\n\n  async download({ sourceEventType = \"download\" } = {}) {\n    const url = this._downloadUrl,\n      filename = this._docFilename;\n    try {\n      this._ensureDownloadComplete();\n\n      const data = await this.pdfDocument.getData();\n      const blob = new Blob([data], { type: \"application/pdf\" });\n\n      await this.downloadManager.download(blob, url, filename, sourceEventType);\n    } catch (reason) {\n      // When the PDF document isn't ready, or the PDF file is still\n      // downloading, simply download using the URL.\n      await this.downloadManager.downloadUrl(url, filename);\n    }\n  },\n\n  async save({ sourceEventType = \"download\" } = {}) {\n    if (this._saveInProgress) {\n      return;\n    }\n    this._saveInProgress = true;\n    await this.pdfScriptingManager.dispatchWillSave();\n\n    const url = this._downloadUrl,\n      filename = this._docFilename;\n    try {\n      this._ensureDownloadComplete();\n\n      const data = await this.pdfDocument.saveDocument();\n      const blob = new Blob([data], { type: \"application/pdf\" });\n\n      await this.downloadManager.download(blob, url, filename, sourceEventType);\n    } catch (reason) {\n      // When the PDF document isn't ready, or the PDF file is still\n      // downloading, simply fallback to a \"regular\" download.\n      Window['ngxConsole'].error(`Error when saving the document: ${reason.message}`);\n      await this.download({ sourceEventType });\n    } finally {\n      await this.pdfScriptingManager.dispatchDidSave();\n      this._saveInProgress = false;\n    }\n  },\n\n  downloadOrSave(options) {\n    if (this.pdfDocument?.annotationStorage.size > 0) {\n      this.save(options);\n    } else {\n      this.download(options);\n    }\n  },\n\n  fallback(featureId) {\n    this.externalServices.reportTelemetry({\n      type: \"unsupportedFeature\",\n      featureId,\n    });\n\n    // Only trigger the fallback once so we don't spam the user with messages\n    // for one PDF.\n    if (this._fellback) {\n      return;\n    }\n    this._fellback = true;\n\n    this.externalServices\n      .fallback({\n        featureId,\n        url: this.baseUrl,\n      })\n      .then(download => {\n        if (!download) {\n          return;\n        }\n        this.download({ sourceEventType: \"download\" });\n      });\n  },\n\n  /**\n   * Show the error box; used for errors affecting loading and/or parsing of\n   * the entire PDF document.\n   */\n  _documentError(message, moreInfo = null) {\n    this._unblockDocumentLoadEvent();\n\n    this._otherError(message, moreInfo);\n  },\n\n  /**\n   * Show the error box; used for errors affecting e.g. only a single page.\n   *\n   * @param {string} message - A message that is human readable.\n   * @param {Object} [moreInfo] - Further information about the error that is\n   *                              more technical.  Should have a 'message' and\n   *                              optionally a 'stack' property.\n   */\n  _otherError(message, moreInfo = null) {\n    const moreInfoText = [\n      this.l10n.get(\"error_version_info\", {\n        version: version || \"?\",\n        build: build || \"?\",\n      }),\n    ];\n    if (moreInfo) {\n      moreInfoText.push(\n        this.l10n.get(\"error_message\", { message: moreInfo.message })\n      );\n      if (moreInfo.stack) {\n        moreInfoText.push(\n          this.l10n.get(\"error_stack\", { stack: moreInfo.stack })\n        );\n      } else {\n        if (moreInfo.filename) {\n          moreInfoText.push(\n            this.l10n.get(\"error_file\", { file: moreInfo.filename })\n          );\n        }\n        if (moreInfo.lineNumber) {\n          moreInfoText.push(\n            this.l10n.get(\"error_line\", { line: moreInfo.lineNumber })\n          );\n        }\n      }\n    }\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      const errorWrapperConfig = this.appConfig.errorWrapper;\n      const errorWrapper = errorWrapperConfig.container;\n      errorWrapper.hidden = false;\n\n      const errorMessage = errorWrapperConfig.errorMessage;\n      errorMessage.textContent = message;\n\n      const closeButton = errorWrapperConfig.closeButton;\n      closeButton.onclick = function () {\n        errorWrapper.hidden = true;\n      };\n\n      const errorMoreInfo = errorWrapperConfig.errorMoreInfo;\n      const moreInfoButton = errorWrapperConfig.moreInfoButton;\n      const lessInfoButton = errorWrapperConfig.lessInfoButton;\n      moreInfoButton.onclick = function () {\n        errorMoreInfo.hidden = false;\n        moreInfoButton.hidden = true;\n        lessInfoButton.hidden = false;\n        errorMoreInfo.style.height = errorMoreInfo.scrollHeight + \"px\";\n      };\n      lessInfoButton.onclick = function () {\n        errorMoreInfo.hidden = true;\n        moreInfoButton.hidden = false;\n        lessInfoButton.hidden = true;\n      };\n      moreInfoButton.oncontextmenu = noContextMenuHandler;\n      lessInfoButton.oncontextmenu = noContextMenuHandler;\n      closeButton.oncontextmenu = noContextMenuHandler;\n      moreInfoButton.hidden = false;\n      lessInfoButton.hidden = true;\n      Promise.all(moreInfoText).then(parts => {\n        errorMoreInfo.value = parts.join(\"\\n\");\n      });\n    } else {\n      Promise.all(moreInfoText).then(parts => {\n        Window['ngxConsole'].error(message + \"\\n\" + parts.join(\"\\n\"));\n      });\n      this.fallback();\n    }\n  },\n\n  progress(level) {\n    if (this.downloadComplete) {\n      // Don't accidentally show the loading bar again when the entire file has\n      // already been fetched (only an issue when disableAutoFetch is enabled).\n      return;\n    }\n    const percent = Math.round(level * 100);\n    // When we transition from full request to range requests, it's possible\n    // that we discard some of the loaded data. This can cause the loading\n    // bar to move backwards. So prevent this by only updating the bar if it\n    // increases.\n    if (percent > this.loadingBar.percent || isNaN(percent)) {\n      this.loadingBar.percent = percent;\n\n      // When disableAutoFetch is enabled, it's not uncommon for the entire file\n      // to never be fetched (depends on e.g. the file structure). In this case\n      // the loading bar will not be completely filled, nor will it be hidden.\n      // To prevent displaying a partially filled loading bar permanently, we\n      // hide it when no data has been loaded during a certain amount of time.\n      const disableAutoFetch = this.pdfDocument\n        ? this.pdfDocument.loadingParams.disableAutoFetch\n        : AppOptions.get(\"disableAutoFetch\");\n\n      if (disableAutoFetch && percent) {\n        if (this.disableAutoFetchLoadingBarTimeout) {\n          clearTimeout(this.disableAutoFetchLoadingBarTimeout);\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }\n        this.loadingBar.show();\n\n        this.disableAutoFetchLoadingBarTimeout = setTimeout(() => {\n          this.loadingBar.hide();\n          this.disableAutoFetchLoadingBarTimeout = null;\n        }, DISABLE_AUTO_FETCH_LOADING_BAR_TIMEOUT);\n      }\n    }\n  },\n\n  load(pdfDocument) {\n    this.pdfDocument = pdfDocument;\n\n    pdfDocument.getDownloadInfo().then(({ length }) => {\n      this._contentLength = length; // Ensure that the correct length is used.\n      this.downloadComplete = true;\n      this.loadingBar.hide();\n\n      firstPagePromise.then(() => {\n        this.eventBus.dispatch(\"documentloaded\", { source: this });\n      });\n    });\n\n    // Since the `setInitialView` call below depends on this being resolved,\n    // fetch it early to avoid delaying initial rendering of the PDF document.\n    const pageLayoutPromise = pdfDocument.getPageLayout().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const pageModePromise = pdfDocument.getPageMode().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n    const openActionPromise = pdfDocument.getOpenAction().catch(function () {\n      /* Avoid breaking initial rendering; ignoring errors. */\n    });\n\n    this.toolbar.setPagesCount(pdfDocument.numPages, false);\n    this.secondaryToolbar.setPagesCount(pdfDocument.numPages);\n\n    let baseDocumentUrl;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      baseDocumentUrl = null;\n    } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n      baseDocumentUrl = this.baseUrl;\n    } else if (PDFJSDev.test(\"CHROME\")) {\n      baseDocumentUrl = location.href.split(\"#\")[0];\n    }\n    this.pdfLinkService.setDocument(pdfDocument, baseDocumentUrl);\n    this.pdfDocumentProperties.setDocument(pdfDocument, this.url);\n\n    const pdfViewer = this.pdfViewer;\n    pdfViewer.setDocument(pdfDocument);\n    const { firstPagePromise, onePageRendered, pagesPromise } = pdfViewer;\n\n    const pdfThumbnailViewer = this.pdfThumbnailViewer;\n    pdfThumbnailViewer.setDocument(pdfDocument);\n\n    const storedPromise = (this.store = new ViewHistory(\n      pdfDocument.fingerprints[0]\n    ))\n      .getMultiple({\n        page: null,\n        zoom: DEFAULT_SCALE_VALUE,\n        scrollLeft: \"0\",\n        scrollTop: \"0\",\n        rotation: null,\n        sidebarView: SidebarView.UNKNOWN,\n        scrollMode: ScrollMode.UNKNOWN,\n        spreadMode: SpreadMode.UNKNOWN,\n      })\n      .catch(() => {\n        /* Unable to read from storage; ignoring errors. */\n        return Object.create(null);\n      });\n\n    firstPagePromise.then(pdfPage => {\n      this.loadingBar.setWidth(this.appConfig.viewerContainer);\n      this._initializeAnnotationStorageCallbacks(pdfDocument);\n\n      Promise.all([\n        animationStarted,\n        storedPromise,\n        pageLayoutPromise,\n        pageModePromise,\n        openActionPromise,\n      ])\n        .then(async ([timeStamp, stored, pageLayout, pageMode, openAction]) => {\n          const viewOnLoad = AppOptions.get(\"viewOnLoad\");\n\n          this._initializePdfHistory({\n            fingerprint: pdfDocument.fingerprints[0],\n            viewOnLoad,\n            initialDest: openAction?.dest,\n          });\n          const initialBookmark = this.initialBookmark;\n\n          // Initialize the default values, from user preferences.\n          const zoom = AppOptions.get(\"defaultZoomValue\");\n          let hash = zoom ? `zoom=${zoom}` : null;\n\n          let rotation = null;\n          let sidebarView = AppOptions.get(\"sidebarViewOnLoad\");\n          let scrollMode = AppOptions.get(\"scrollModeOnLoad\");\n          let spreadMode = AppOptions.get(\"spreadModeOnLoad\");\n\n          if (stored.page && viewOnLoad !== ViewOnLoad.INITIAL) {\n            hash =\n              `page=${stored.page}&zoom=${zoom || stored.zoom},` +\n              `${stored.scrollLeft},${stored.scrollTop}`;\n\n            rotation = parseInt(stored.rotation, 10);\n            // Always let user preference take precedence over the view history.\n            if (sidebarView === SidebarView.UNKNOWN) {\n              sidebarView = stored.sidebarView | 0;\n            }\n            if (scrollMode === ScrollMode.UNKNOWN) {\n              scrollMode = stored.scrollMode | 0;\n            }\n            if (spreadMode === SpreadMode.UNKNOWN) {\n              spreadMode = stored.spreadMode | 0;\n            }\n          }\n          // Always let the user preference/view history take precedence.\n          if (pageMode && sidebarView === SidebarView.UNKNOWN) {\n            sidebarView = apiPageModeToSidebarView(pageMode);\n          }\n          if (\n            pageLayout &&\n            scrollMode === ScrollMode.UNKNOWN &&\n            spreadMode === SpreadMode.UNKNOWN\n          ) {\n            const modes = apiPageLayoutToViewerModes(pageLayout);\n            // TODO: Try to improve page-switching when using the mouse-wheel\n            // and/or arrow-keys before allowing the document to control this.\n            // scrollMode = modes.scrollMode;\n            spreadMode = modes.spreadMode;\n          }\n\n          this.setInitialView(hash, {\n            rotation,\n            sidebarView,\n            scrollMode,\n            spreadMode,\n          });\n          this.eventBus.dispatch(\"documentinit\", { source: this });\n          // Make all navigation keys work on document load,\n          // unless the viewer is embedded in a web page.\n          if (!this.isViewerEmbedded) {\n            pdfViewer.focus();\n          }\n\n          // For documents with different page sizes, once all pages are\n          // resolved, ensure that the correct location becomes visible on load.\n          // (To reduce the risk, in very large and/or slow loading documents,\n          //  that the location changes *after* the user has started interacting\n          //  with the viewer, wait for either `pagesPromise` or a timeout.)\n          await Promise.race([\n            pagesPromise,\n            new Promise(resolve => {\n              setTimeout(resolve, FORCE_PAGES_LOADED_TIMEOUT);\n            }),\n          ]);\n          if (!initialBookmark && !hash) {\n            return;\n          }\n          if (pdfViewer.hasEqualPageSizes) {\n            return;\n          }\n          this.initialBookmark = initialBookmark;\n\n          // eslint-disable-next-line no-self-assign\n          pdfViewer.currentScaleValue = pdfViewer.currentScaleValue;\n          // Re-apply the initial document location.\n          this.setInitialView(hash);\n        })\n        .catch(() => {\n          // Ensure that the document is always completely initialized,\n          // even if there are any errors thrown above.\n          this.setInitialView();\n        })\n        .then(function () {\n          // At this point, rendering of the initial page(s) should always have\n          // started (and may even have completed).\n          // To prevent any future issues, e.g. the document being completely\n          // blank on load, always trigger rendering here.\n          pdfViewer.update();\n        });\n    });\n\n    pagesPromise.then(\n      () => {\n        this._unblockDocumentLoadEvent();\n\n        this._initializeAutoPrint(pdfDocument, openActionPromise);\n      },\n      reason => {\n        this.l10n.get(\"loading_error\").then(msg => {\n          this._documentError(msg, { message: reason?.message });\n        });\n      }\n    );\n\n    onePageRendered.then(data => {\n      this.externalServices.reportTelemetry({\n        type: \"pageInfo\",\n        timestamp: data.timestamp,\n      });\n\n      pdfDocument.getOutline().then(outline => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the outline resolved.\n        }\n        this.pdfOutlineViewer.render({ outline, pdfDocument });\n      });\n      pdfDocument.getAttachments().then(attachments => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the attachments resolved.\n        }\n        this.pdfAttachmentViewer.render({ attachments });\n      });\n      // Ensure that the layers accurately reflects the current state in the\n      // viewer itself, rather than the default state provided by the API.\n      pdfViewer.optionalContentConfigPromise.then(optionalContentConfig => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the layers resolved.\n        }\n        this.pdfLayerViewer.render({ optionalContentConfig, pdfDocument });\n      });\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        \"requestIdleCallback\" in window\n      ) {\n        const callback = window.requestIdleCallback(\n          () => {\n            this._collectTelemetry(pdfDocument);\n            this._idleCallbacks.delete(callback);\n          },\n          { timeout: 1000 }\n        );\n        this._idleCallbacks.add(callback);\n      }\n    });\n\n    this._initializePageLabels(pdfDocument);\n    this._initializeMetadata(pdfDocument);\n  },\n\n  /**\n   * @private\n   */\n  async _scriptingDocProperties(pdfDocument) {\n    if (!this.documentInfo) {\n      // It should be *extremely* rare for metadata to not have been resolved\n      // when this code runs, but ensure that we handle that case here.\n      await new Promise(resolve => {\n        this.eventBus._on(\"metadataloaded\", resolve, { once: true });\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return null; // The document was closed while the metadata resolved.\n      }\n    }\n    if (!this._contentLength) {\n      // Always waiting for the entire PDF document to be loaded will, most\n      // likely, delay sandbox-creation too much in the general case for all\n      // PDF documents which are not provided as binary data to the API.\n      // Hence we'll simply have to trust that the `contentLength` (as provided\n      // by the server), when it exists, is accurate enough here.\n      await new Promise(resolve => {\n        this.eventBus._on(\"documentloaded\", resolve, { once: true });\n      });\n      if (pdfDocument !== this.pdfDocument) {\n        return null; // The document was closed while the downloadInfo resolved.\n      }\n    }\n\n    return {\n      ...this.documentInfo,\n      baseURL: this.baseUrl,\n      filesize: this._contentLength,\n      filename: this._docFilename,\n      metadata: this.metadata?.getRaw(),\n      authors: this.metadata?.get(\"dc:creator\"),\n      numPages: this.pagesCount,\n      URL: this.url,\n    };\n  },\n\n  /**\n   * A place to fetch data for telemetry after one page is rendered and the\n   * viewer is idle.\n   * @private\n   */\n  async _collectTelemetry(pdfDocument) {\n    const markInfo = await this.pdfDocument.getMarkInfo();\n    if (pdfDocument !== this.pdfDocument) {\n      return; // Document was closed while waiting for mark info.\n    }\n    const tagged = markInfo?.Marked || false;\n    this.externalServices.reportTelemetry({\n      type: \"tagged\",\n      tagged,\n    });\n  },\n\n  /**\n   * @private\n   */\n  async _initializeAutoPrint(pdfDocument, openActionPromise) {\n    const [openAction, javaScript] = await Promise.all([\n      openActionPromise,\n      !this.pdfViewer.enableScripting ? pdfDocument.getJavaScript() : null,\n    ]);\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the auto print data resolved.\n    }\n    let triggerAutoPrint = false;\n\n    if (openAction?.action === \"Print\") {\n      triggerAutoPrint = true;\n    }\n    if (javaScript) {\n      javaScript.some(js => {\n        if (!js) {\n          // Don't warn/fallback for empty JavaScript actions.\n          return false;\n        }\n        Window['ngxConsole'].warn(\"Warning: JavaScript support is not enabled\");\n        this.fallback(UNSUPPORTED_FEATURES.javaScript);\n        return true;\n      });\n\n      if (!triggerAutoPrint) {\n        // Hack to support auto printing.\n        for (const js of javaScript) {\n          if (js && AutoPrintRegExp.test(js)) {\n            triggerAutoPrint = true;\n            break;\n          }\n        }\n      }\n    }\n\n    if (triggerAutoPrint) {\n      this.triggerPrinting();\n    }\n  },\n\n  /**\n   * @private\n   */\n  async _initializeMetadata(pdfDocument) {\n    const { info, metadata, contentDispositionFilename, contentLength } =\n      await pdfDocument.getMetadata();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the metadata resolved.\n    }\n    this.documentInfo = info;\n    this.metadata = metadata;\n    this._contentDispositionFilename ??= contentDispositionFilename;\n    this._contentLength ??= contentLength; // See `getDownloadInfo`-call above.\n\n    // Provides some basic debug information\n    const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n    if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n      Window['ngxConsole'].log(\n        \"PDF viewer: ngx-extended-pdf-viewer running on pdf.js \" +\n          (window[\"pdfjs-dist/build/pdf\"]\n            ? window[\"pdfjs-dist/build/pdf\"].version\n            : \" developer version (?)\")\n      );\n      Window['ngxConsole'].log(\n        `PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} ` +\n          `${(info.Producer || \"-\").trim()} / ${(info.Creator || \"-\").trim()}] ` +\n          `(PDF.js: ${version || \"-\"}` +\n          `${\n            this.pdfViewer.enableWebGL ? \" [WebGL]\" : \"\"\n          }) modified by ngx-extended-pdf-viewer)`\n      );\n    }\n\n    if (info.Language) {\n      this.appConfig.viewerContainer.lang = info.Language;\n    }\n    let pdfTitle = info?.Title;\n\n    const metadataTitle = metadata?.get(\"dc:title\");\n    if (metadataTitle) {\n      // Ghostscript can produce invalid 'dc:title' Metadata entries:\n      //  - The title may be \"Untitled\" (fixes bug 1031612).\n      //  - The title may contain incorrectly encoded characters, which thus\n      //    looks broken, hence we ignore the Metadata entry when it\n      //    contains characters from the Specials Unicode block\n      //    (fixes bug 1605526).\n      if (\n        metadataTitle !== \"Untitled\" &&\n        !/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)\n      ) {\n        pdfTitle = metadataTitle;\n      }\n    }\n    if (pdfTitle) {\n      this.setTitle(\n        `${pdfTitle} - ${contentDispositionFilename || document.title}`\n      );\n    } else if (contentDispositionFilename) {\n      this.setTitle(contentDispositionFilename);\n    }\n\n    if (\n      info.IsXFAPresent &&\n      !info.IsAcroFormPresent &&\n      !pdfDocument.isPureXfa\n    ) {\n      if (pdfDocument.loadingParams.enableXfa) {\n        Window['ngxConsole'].warn(\"Warning: XFA Foreground documents are not supported\");\n      } else {\n        Window['ngxConsole'].warn(\"Warning: XFA support is not enabled\");\n      }\n      this.fallback(UNSUPPORTED_FEATURES.forms);\n    } else if (\n      (info.IsAcroFormPresent || info.IsXFAPresent) &&\n      !this.pdfViewer.renderForms\n    ) {\n      Window['ngxConsole'].warn(\"Warning: Interactive form support is not enabled\");\n      this.fallback(UNSUPPORTED_FEATURES.forms);\n    }\n\n    if (info.IsSignaturesPresent) {\n      Window['ngxConsole'].warn(\"Warning: Digital signatures validation is not supported\");\n      this.fallback(UNSUPPORTED_FEATURES.signatures);\n    }\n\n    // Telemetry labels must be C++ variable friendly.\n    let versionId = \"other\";\n    if (KNOWN_VERSIONS.includes(info.PDFFormatVersion)) {\n      versionId = `v${info.PDFFormatVersion.replace(\".\", \"_\")}`;\n    }\n    let generatorId = \"other\";\n    if (info.Producer) {\n      const producer = info.Producer.toLowerCase();\n      KNOWN_GENERATORS.some(function (generator) {\n        if (!producer.includes(generator)) {\n          return false;\n        }\n        generatorId = generator.replace(/[ .-]/g, \"_\");\n        return true;\n      });\n    }\n    let formType = null;\n    if (info.IsXFAPresent) {\n      formType = \"xfa\";\n    } else if (info.IsAcroFormPresent) {\n      formType = \"acroform\";\n    }\n    this.externalServices.reportTelemetry({\n      type: \"documentInfo\",\n      version: versionId,\n      generator: generatorId,\n      formType,\n    });\n\n    this.eventBus.dispatch(\"metadataloaded\", { source: this });\n  },\n\n  /**\n   * @private\n   */\n  async _initializePageLabels(pdfDocument) {\n    const labels = await pdfDocument.getPageLabels();\n\n    if (pdfDocument !== this.pdfDocument) {\n      return; // The document was closed while the page labels resolved.\n    }\n    if (!labels || AppOptions.get(\"disablePageLabels\")) {\n      return;\n    }\n    const numLabels = labels.length;\n    // Ignore page labels that correspond to standard page numbering,\n    // or page labels that are all empty.\n    let standardLabels = 0,\n      emptyLabels = 0;\n    for (let i = 0; i < numLabels; i++) {\n      const label = labels[i];\n      if (label === (i + 1).toString()) {\n        standardLabels++;\n      } else if (label === \"\") {\n        emptyLabels++;\n      } else {\n        break;\n      }\n    }\n    if (standardLabels >= numLabels || emptyLabels >= numLabels) {\n      return;\n    }\n    const { pdfViewer, pdfThumbnailViewer, toolbar } = this;\n\n    pdfViewer.setPageLabels(labels);\n    pdfThumbnailViewer.setPageLabels(labels);\n\n    // Changing toolbar page display to use labels and we need to set\n    // the label of the current page.\n    toolbar.setPagesCount(numLabels, true);\n    toolbar.setPageNumber(\n      pdfViewer.currentPageNumber,\n      pdfViewer.currentPageLabel\n    );\n  },\n\n  /**\n   * @private\n   */\n  _initializePdfHistory({ fingerprint, viewOnLoad, initialDest = null }) {\n    if (!this.pdfHistory) {\n      return;\n    }\n    this.pdfHistory.initialize({\n      fingerprint,\n      resetHistory: viewOnLoad === ViewOnLoad.INITIAL,\n      updateUrl: AppOptions.get(\"historyUpdateUrl\"),\n    });\n\n    if (this.pdfHistory.initialBookmark) {\n      this.initialBookmark = this.pdfHistory.initialBookmark;\n\n      this.initialRotation = this.pdfHistory.initialRotation;\n    }\n\n    // Always let the browser history/document hash take precedence.\n    if (\n      initialDest &&\n      !this.initialBookmark &&\n      viewOnLoad === ViewOnLoad.UNKNOWN\n    ) {\n      this.initialBookmark = JSON.stringify(initialDest);\n      // TODO: Re-factor the `PDFHistory` initialization to remove this hack\n      // that's currently necessary to prevent weird initial history state.\n      this.pdfHistory.push({ explicitDest: initialDest, pageNumber: null });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initializeAnnotationStorageCallbacks(pdfDocument) {\n    if (pdfDocument !== this.pdfDocument) {\n      return;\n    }\n    const { annotationStorage } = pdfDocument;\n\n    annotationStorage.onSetModified = () => {\n      window.addEventListener(\"beforeunload\", beforeUnload);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        this._annotationStorageModified = true;\n      }\n    };\n    annotationStorage.onResetModified = () => {\n      window.removeEventListener(\"beforeunload\", beforeUnload);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        delete this._annotationStorageModified;\n      }\n    };\n  },\n\n  setInitialView(\n    storedHash,\n    { rotation, sidebarView, scrollMode, spreadMode } = {}\n  ) {\n    const setRotation = angle => {\n      if (isValidRotation(angle)) {\n        this.pdfViewer.pagesRotation = angle;\n      }\n    };\n    const setViewerModes = (scroll, spread) => {\n      if (isValidScrollMode(scroll)) {\n        this.pdfViewer.scrollMode = scroll;\n      }\n      if (isValidSpreadMode(spread)) {\n        this.pdfViewer.spreadMode = spread;\n      }\n    };\n    this.isInitialViewSet = true;\n    this.pdfSidebar.setInitialView(sidebarView);\n\n    setViewerModes(scrollMode, spreadMode);\n\n    if (this.initialBookmark) {\n      setRotation(this.initialRotation);\n      delete this.initialRotation;\n\n      this.pdfLinkService.setHash(this.initialBookmark);\n      this.initialBookmark = null;\n    } else if (storedHash) {\n      setRotation(rotation);\n\n      this.pdfLinkService.setHash(storedHash);\n    }\n\n    // Ensure that the correct page number is displayed in the UI,\n    // even if the active page didn't change during document load.\n    this.toolbar.setPageNumber(\n      this.pdfViewer.currentPageNumber,\n      this.pdfViewer.currentPageLabel\n    );\n    this.secondaryToolbar.setPageNumber(this.pdfViewer.currentPageNumber);\n\n    if (!this.pdfViewer.currentScaleValue) {\n      // Scale was not initialized: invalid bookmark or scale was not specified.\n      // Setting the default one.\n      // eslint-disable-next-line no-undef\n      const defaultZoomOption = PDFViewerApplicationOptions.get('defaultZoomValue');\n      // #556 #543 modified by ngx-extended-pdf-viewer\n      if (defaultZoomOption) {\n        this.pdfViewer.currentScaleValue = defaultZoomOption;\n      }\n      // #556 #543 end of modification\n    }\n  },\n\n  /**\n   * @private\n   */\n  _cleanup() {\n    if (!this.pdfDocument) {\n      return; // run cleanup when document is loaded\n    }\n    this.pdfViewer.cleanup();\n    this.pdfThumbnailViewer.cleanup();\n\n    // We don't want to remove fonts used by active page SVGs.\n    this.pdfDocument.cleanup(\n      /* keepLoadedFonts = */ this.pdfViewer.renderer === RendererType.SVG\n    );\n  },\n\n  forceRendering() {\n    this.pdfRenderingQueue.printing = !!this.printService;\n    this.pdfRenderingQueue.isThumbnailViewEnabled =\n      this.pdfSidebar.isThumbnailViewVisible;\n    this.pdfRenderingQueue.renderHighestPriority();\n  },\n\n  beforePrint() {\n    // Given that the \"beforeprint\" browser event is synchronous, we\n    // unfortunately cannot await the scripting event dispatching here.\n    this.pdfScriptingManager.dispatchWillPrint();\n\n    if (this.printService) {\n      // There is no way to suppress beforePrint/afterPrint events,\n      // but PDFPrintService may generate double events -- this will ignore\n      // the second event that will be coming from native window.printPDF().\n      return;\n    }\n\n    if (!this.supportsPrinting) {\n      this.l10n.get(\"printing_not_supported\").then(msg => {\n        this._otherError(msg);\n      });\n      return;\n    }\n\n    // The beforePrint is a sync method and we need to know layout before\n    // returning from this method. Ensure that we can get sizes of the pages.\n    if (!this.pdfViewer.pageViewsReady) {\n      this.l10n.get(\"printing_not_ready\").then(msg => {\n        // eslint-disable-next-line no-alert\n        window.alert(msg);\n      });\n      return;\n    }\n\n    const pagesOverview = this.pdfViewer.getPagesOverview();\n    const printContainer = this.appConfig.printContainer;\n    const printResolution = AppOptions.get(\"printResolution\");\n    const optionalContentConfigPromise =\n      this.pdfViewer.optionalContentConfigPromise;\n\n    const printService = PDFPrintServiceFactory.instance.createPrintService(\n      this.pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise,\n      this.l10n,\n      this.pdfViewer.eventBus // #588 modified by ngx-extended-pdf-viewer\n    );\n    this.printService = printService;\n    this.forceRendering();\n\n    printService.layout();\n\n    this.externalServices.reportTelemetry({\n      type: \"print\",\n    });\n  },\n\n  afterPrint() {\n    // Given that the \"afterprint\" browser event is synchronous, we\n    // unfortunately cannot await the scripting event dispatching here.\n    this.pdfScriptingManager.dispatchDidPrint();\n\n    if (this.printService) {\n      document.body.removeAttribute(\"data-pdfjsprinting\");\n      this.printService.destroy();\n      this.printService = null;\n\n      this.pdfDocument?.annotationStorage.resetModified();\n    }\n    this.forceRendering();\n  },\n\n  rotatePages(delta) {\n    this.pdfViewer.pagesRotation += delta;\n    // Note that the thumbnail viewer is updated, and rendering is triggered,\n    // in the 'rotationchanging' event handler.\n  },\n\n  requestPresentationMode() {\n    this.pdfPresentationMode?.request();\n  },\n\n  triggerPrinting() {\n    if (!this.supportsPrinting) {\n      return;\n    }\n    window.printPDF();\n  },\n\n  bindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.beforePrint = this.beforePrint.bind(this);\n    _boundEvents.afterPrint = this.afterPrint.bind(this);\n\n    eventBus._on(\"resize\", webViewerResize);\n    eventBus._on(\"hashchange\", webViewerHashchange);\n    eventBus._on(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._on(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._on(\"pagerendered\", webViewerPageRendered);\n    eventBus._on(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._on(\"pagechanging\", webViewerPageChanging);\n    eventBus._on(\"scalechanging\", webViewerScaleChanging);\n    eventBus._on(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._on(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._on(\"pagemode\", webViewerPageMode);\n    eventBus._on(\"namedaction\", webViewerNamedAction);\n    eventBus._on(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._on(\"presentationmode\", webViewerPresentationMode);\n    eventBus._on(\"print\", webViewerPrint);\n    eventBus._on(\"download\", webViewerDownload);\n    eventBus._on(\"save\", webViewerSave);\n    eventBus._on(\"firstpage\", webViewerFirstPage);\n    eventBus._on(\"lastpage\", webViewerLastPage);\n    eventBus._on(\"nextpage\", webViewerNextPage);\n    eventBus._on(\"previouspage\", webViewerPreviousPage);\n    eventBus._on(\"zoomin\", webViewerZoomIn);\n    eventBus._on(\"zoomout\", webViewerZoomOut);\n    eventBus._on(\"zoomreset\", webViewerZoomReset);\n    eventBus._on(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._on(\"scalechanged\", webViewerScaleChanged);\n    eventBus._on(\"rotatecw\", webViewerRotateCw);\n    eventBus._on(\"rotateccw\", webViewerRotateCcw);\n    eventBus._on(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n    eventBus._on(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._on(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._on(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._on(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._on(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._on(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._on(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._on(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (AppOptions.get(\"pdfBug\")) {\n      _boundEvents.reportPageStatsPDFBug = reportPageStatsPDFBug;\n\n      eventBus._on(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n      eventBus._on(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._on(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._on(\"openfile\", webViewerOpenFile);\n    }\n  },\n\n  bindWindowEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    _boundEvents.windowResize = () => {\n      eventBus.dispatch(\"resize\", { source: window });\n    };\n    _boundEvents.windowHashChange = () => {\n      eventBus.dispatch(\"hashchange\", {\n        source: window,\n        hash: document.location.hash.substring(1),\n      });\n    };\n    _boundEvents.windowBeforePrint = () => {\n      eventBus.dispatch(\"beforeprint\", { source: window });\n    };\n    _boundEvents.windowAfterPrint = () => {\n      eventBus.dispatch(\"afterprint\", { source: window });\n    };\n    _boundEvents.windowUpdateFromSandbox = event => {\n      eventBus.dispatch(\"updatefromsandbox\", {\n        source: window,\n        detail: event.detail,\n      });\n    };\n\n    window.addEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.addEventListener(\"wheel\", webViewerWheel, { passive: false });\n    // #914 modified by ngx-extended-pdf-viewer\n    // window.addEventListener(\"touchstart\", webViewerTouchStart, {\n    //  passive: false,\n    // });\n    // #914 end of modification by ngx-extended-pdf-viewer\n    window.addEventListener(\"click\", webViewerClick);\n    window.addEventListener(\"keydown\", webViewerKeyDown);\n    window.addEventListener(\"resize\", _boundEvents.windowResize);\n    window.addEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.addEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.addEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.addEventListener(\n      \"updatefromsandbox\",\n      _boundEvents.windowUpdateFromSandbox\n    );\n  },\n\n  unbindEvents() {\n    const { eventBus, _boundEvents } = this;\n\n    eventBus._off(\"resize\", webViewerResize);\n    eventBus._off(\"hashchange\", webViewerHashchange);\n    eventBus._off(\"beforeprint\", _boundEvents.beforePrint);\n    eventBus._off(\"afterprint\", _boundEvents.afterPrint);\n    eventBus._off(\"pagerendered\", webViewerPageRendered);\n    eventBus._off(\"updateviewarea\", webViewerUpdateViewarea);\n    eventBus._off(\"pagechanging\", webViewerPageChanging);\n    eventBus._off(\"scalechanging\", webViewerScaleChanging);\n    eventBus._off(\"rotationchanging\", webViewerRotationChanging);\n    eventBus._off(\"sidebarviewchanged\", webViewerSidebarViewChanged);\n    eventBus._off(\"pagemode\", webViewerPageMode);\n    eventBus._off(\"namedaction\", webViewerNamedAction);\n    eventBus._off(\"presentationmodechanged\", webViewerPresentationModeChanged);\n    eventBus._off(\"presentationmode\", webViewerPresentationMode);\n    eventBus._off(\"print\", webViewerPrint);\n    eventBus._off(\"download\", webViewerDownload);\n    eventBus._off(\"save\", webViewerSave);\n    eventBus._off(\"firstpage\", webViewerFirstPage);\n    eventBus._off(\"lastpage\", webViewerLastPage);\n    eventBus._off(\"nextpage\", webViewerNextPage);\n    eventBus._off(\"previouspage\", webViewerPreviousPage);\n    eventBus._off(\"zoomin\", webViewerZoomIn);\n    eventBus._off(\"zoomout\", webViewerZoomOut);\n    eventBus._off(\"zoomreset\", webViewerZoomReset);\n    eventBus._off(\"pagenumberchanged\", webViewerPageNumberChanged);\n    eventBus._off(\"scalechanged\", webViewerScaleChanged);\n    eventBus._off(\"rotatecw\", webViewerRotateCw);\n    eventBus._off(\"rotateccw\", webViewerRotateCcw);\n    eventBus._off(\"optionalcontentconfig\", webViewerOptionalContentConfig);\n    eventBus._off(\"switchscrollmode\", webViewerSwitchScrollMode);\n    eventBus._off(\"scrollmodechanged\", webViewerScrollModeChanged);\n    eventBus._off(\"switchspreadmode\", webViewerSwitchSpreadMode);\n    eventBus._off(\"spreadmodechanged\", webViewerSpreadModeChanged);\n    eventBus._off(\"documentproperties\", webViewerDocumentProperties);\n    eventBus._off(\"findfromurlhash\", webViewerFindFromUrlHash);\n    eventBus._off(\"updatefindmatchescount\", webViewerUpdateFindMatchesCount);\n    eventBus._off(\"updatefindcontrolstate\", webViewerUpdateFindControlState);\n\n    if (_boundEvents.reportPageStatsPDFBug) {\n      eventBus._off(\"pagerendered\", _boundEvents.reportPageStatsPDFBug);\n      eventBus._off(\"pagechanging\", _boundEvents.reportPageStatsPDFBug);\n\n      _boundEvents.reportPageStatsPDFBug = null;\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      eventBus._off(\"fileinputchange\", webViewerFileInputChange);\n      eventBus._off(\"openfile\", webViewerOpenFile);\n    }\n\n    _boundEvents.beforePrint = null;\n    _boundEvents.afterPrint = null;\n  },\n\n  unbindWindowEvents() {\n    const { _boundEvents } = this;\n\n    window.removeEventListener(\"visibilitychange\", webViewerVisibilityChange);\n    window.removeEventListener(\"wheel\", webViewerWheel, { passive: false });\n    // #914 modified by ngx-extended-pdf-viewer\n    // window.removeEventListener(\"touchstart\", webViewerTouchStart, {\n    //  passive: false,\n    // });\n    // #914 end of modification\n    window.removeEventListener(\"click\", webViewerClick);\n    window.removeEventListener(\"keydown\", webViewerKeyDown);\n    window.removeEventListener(\"resize\", _boundEvents.windowResize);\n    window.removeEventListener(\"hashchange\", _boundEvents.windowHashChange);\n    window.removeEventListener(\"beforeprint\", _boundEvents.windowBeforePrint);\n    window.removeEventListener(\"afterprint\", _boundEvents.windowAfterPrint);\n    window.removeEventListener(\n      \"updatefromsandbox\",\n      _boundEvents.windowUpdateFromSandbox\n    );\n\n    _boundEvents.windowResize = null;\n    _boundEvents.windowHashChange = null;\n    _boundEvents.windowBeforePrint = null;\n    _boundEvents.windowAfterPrint = null;\n    _boundEvents.windowUpdateFromSandbox = null;\n  },\n\n  accumulateWheelTicks(ticks) {\n    // If the scroll direction changed, reset the accumulated wheel ticks.\n    if (\n      (this._wheelUnusedTicks > 0 && ticks < 0) ||\n      (this._wheelUnusedTicks < 0 && ticks > 0)\n    ) {\n      this._wheelUnusedTicks = 0;\n    }\n    this._wheelUnusedTicks += ticks;\n    const wholeTicks =\n      Math.sign(this._wheelUnusedTicks) *\n      Math.floor(Math.abs(this._wheelUnusedTicks));\n    this._wheelUnusedTicks -= wholeTicks;\n    return wholeTicks;\n  },\n\n  /**\n   * Should be called *after* all pages have loaded, or if an error occurred,\n   * to unblock the \"load\" event; see https://bugzilla.mozilla.org/show_bug.cgi?id=1618553\n   * @private\n   */\n  _unblockDocumentLoadEvent() {\n    if (document.blockUnblockOnload) {\n      document.blockUnblockOnload(false);\n    }\n    // Ensure that this method is only ever run once.\n    this._unblockDocumentLoadEvent = () => {};\n  },\n\n  /**\n   * @ignore\n   */\n  _reportDocumentStatsTelemetry() {\n    const { stats } = this.pdfDocument;\n    if (stats !== this._docStats) {\n      this._docStats = stats;\n\n      this.externalServices.reportTelemetry({\n        type: \"documentStats\",\n        stats,\n      });\n    }\n  },\n\n  /**\n   * Used together with the integration-tests, to enable awaiting full\n   * initialization of the scripting/sandbox.\n   */\n  get scriptingReady() {\n    return this.pdfScriptingManager.ready;\n  },\n};\n\nlet validateFileURL;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const HOSTED_VIEWER_ORIGINS = [\n    \"null\",\n    \"http://mozilla.github.io\",\n    \"https://mozilla.github.io\",\n  ];\n  validateFileURL = function (file) {\n    if (file === undefined) {\n      return;\n    }\n    try {\n      const viewerOrigin = new URL(window.location.href).origin || \"null\";\n      if (HOSTED_VIEWER_ORIGINS.includes(viewerOrigin)) {\n        // Hosted or local viewer, allow for any file locations\n        return;\n      }\n      const { origin, protocol } = new URL(file, window.location.href);\n      // Removing of the following line will not guarantee that the viewer will\n      // start accepting URLs from foreign origin -- CORS headers on the remote\n      // server must be properly configured.\n      // IE10 / IE11 does not include an origin in `blob:`-URLs. So don't block\n      // any blob:-URL. The browser's same-origin policy will block requests to\n      // blob:-URLs from other origins, so this is safe.\n      if (origin !== viewerOrigin && protocol !== \"blob:\") {\n        throw new Error(\"file origin does not match viewer's\");\n      }\n    } catch (ex) {\n      PDFViewerApplication.l10n.get(\"loading_error\").then(msg => {\n        PDFViewerApplication._documentError(msg, { message: ex?.message });\n      });\n      throw ex;\n    }\n  };\n}\n\nasync function loadFakeWorker() {\n  if (!GlobalWorkerOptions.workerSrc) {\n    GlobalWorkerOptions.workerSrc = AppOptions.get(\"workerSrc\");\n\n    // modified by ngx-extended-pdf-viewer #376\n    if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc();\n    }\n    // end of modification\n  }\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    window.pdfjsWorker = await import(\"pdfjs/core/worker.js\");\n    return;\n  }\n  await loadScript(PDFWorker.workerSrc);\n}\n\nasync function initPDFBug(enabledTabs) {\n  const { debuggerScriptPath, mainContainer } = PDFViewerApplication.appConfig;\n  await loadScript(debuggerScriptPath);\n  PDFBug.init({ OPS }, mainContainer, enabledTabs);\n}\n\nfunction reportPageStatsPDFBug({ pageNumber }) {\n  if (typeof Stats === \"undefined\" || !Stats.enabled) {\n    return;\n  }\n  const pageView = PDFViewerApplication.pdfViewer.getPageView(\n    /* index = */ pageNumber - 1\n  );\n  const pageStats = pageView?.pdfPage?.stats;\n  if (!pageStats) {\n    return;\n  }\n  Stats.add(pageNumber, pageStats);\n}\n\nfunction webViewerInitialized() {\n  const appConfig = PDFViewerApplication.appConfig;\n  let file;\n  // #907 modified by ngx-extended-pdf-viewer\n  // if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  //   const queryString = document.location.search.substring(1);\n  //   const params = parseQueryString(queryString);\n  //   file = params.get(\"file\") ?? AppOptions.get(\"defaultUrl\");\n  //   validateFileURL(file);\n  // } else if (PDFJSDev.test(\"MOZCENTRAL\")) {\n  //   file = window.location.href;\n  // } else if (PDFJSDev.test(\"CHROME\")) {\n  //   file = AppOptions.get(\"defaultUrl\");\n  // }\n  // #907 end of modification by ngx-extended-pdf-viewer\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    const fileInput = document.createElement(\"input\");\n    fileInput.id = appConfig.openFileInputName;\n    fileInput.className = \"fileInput\";\n    fileInput.setAttribute(\"accept\", \".pdf,application/pdf\");\n    fileInput.setAttribute(\"type\", \"file\");\n    fileInput.oncontextmenu = noContextMenuHandler;\n    document.body.appendChild(fileInput);\n\n    if (\n      !window.File ||\n      !window.FileReader ||\n      !window.FileList ||\n      !window.Blob\n    ) {\n      appConfig.toolbar.openFile.hidden = true;\n      appConfig.secondaryToolbar.openFileButton.hidden = true;\n    } else {\n      fileInput.value = null;\n    }\n\n    fileInput.addEventListener(\"change\", function (evt) {\n      const files = evt.target.files;\n      if (!files || files.length === 0) {\n        return;\n      }\n      PDFViewerApplication.eventBus.dispatch(\"fileinputchange\", {\n        source: this,\n        fileInput: evt.target,\n      });\n    });\n\n    // Enable dragging-and-dropping a new PDF file onto the viewerContainer.\n    appConfig.mainContainer.addEventListener(\"dragover\", function (evt) {\n      if (AppOptions.get(\"enableDragAndDrop\")) { // #686 modified by ngx-extended-pdf-viewer\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = \"move\";\n      } // #686 end of modification\n    });\n    appConfig.mainContainer.addEventListener(\"drop\", function (evt) {\n      if (AppOptions.get(\"enableDragAndDrop\")) { // #686 modified by ngx-extended-pdf-viewer\n        evt.preventDefault();\n\n        const files = evt.dataTransfer.files;\n        if (!files || files.length === 0) {\n          return;\n        }\n        PDFViewerApplication.eventBus.dispatch(\"fileinputchange\",  {\n          source: this,\n          fileInput: evt.dataTransfer,\n          dropEvent: evt // #972 allowing users to read the drop coordinate\n        });\n      } // #686 end of modification\n    });\n  } else {\n    appConfig.toolbar.openFile.hidden = true;\n    appConfig.secondaryToolbar.openFileButton.hidden = true;\n  }\n\n  if (!PDFViewerApplication.supportsDocumentFonts) {\n    AppOptions.set(\"disableFontFace\", true);\n    PDFViewerApplication.l10n.get(\"web_fonts_disabled\").then(msg => {\n      Window['ngxConsole'].warn(msg);\n    });\n  }\n\n  if (!PDFViewerApplication.supportsPrinting) {\n    appConfig.toolbar.print.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.printButton.classList.add(\"hidden\");\n  }\n\n  if (!PDFViewerApplication.supportsFullscreen) {\n    appConfig.toolbar.presentationModeButton.classList.add(\"hidden\");\n    appConfig.secondaryToolbar.presentationModeButton.classList.add(\"hidden\");\n  }\n\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    appConfig.toolbar.viewFind.classList.add(\"hidden\");\n  }\n\n  appConfig.mainContainer.addEventListener(\n    \"transitionend\",\n    function (evt) {\n      if (evt.target === /* mainContainer */ this) {\n        PDFViewerApplication.eventBus.dispatch(\"resize\", { source: this });\n      }\n    },\n    true\n  );\n\n  try {\n    webViewerOpenFileViaURL(file);\n  } catch (reason) {\n    PDFViewerApplication.l10n.get(\"loading_error\").then(msg => {\n      PDFViewerApplication._documentError(msg, reason);\n    });\n  }\n}\n\nfunction webViewerOpenFileViaURL(file) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    if (file) {\n      PDFViewerApplication.open(file);\n    } else {\n      PDFViewerApplication._hideViewBookmark();\n    }\n  } else if (PDFJSDev.test(\"MOZCENTRAL || CHROME\")) {\n    PDFViewerApplication.setTitleUsingUrl(file, /* downloadUrl = */ file);\n    PDFViewerApplication.initPassiveLoading();\n  } else {\n    if (file) {\n      throw new Error(\"Not implemented: webViewerOpenFileViaURL\");\n    } else {\n      PDFViewerApplication._hideViewBookmark();\n    }\n  }\n}\n\nfunction webViewerPageRendered({ pageNumber, error }) {\n  // If the page is still visible when it has finished rendering,\n  // ensure that the page number input loading indicator is hidden.\n  if (pageNumber === PDFViewerApplication.page) {\n    PDFViewerApplication.toolbar.updateLoadingIndicatorState(false);\n  }\n\n  // Use the rendered page to set the corresponding thumbnail image.\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    const pageView = PDFViewerApplication.pdfViewer.getPageView(\n      /* index = */ pageNumber - 1\n    );\n    const thumbnailView = PDFViewerApplication.pdfThumbnailViewer.getThumbnail(\n      /* index = */ pageNumber - 1\n    );\n    if (pageView && thumbnailView) {\n      thumbnailView.setImage(pageView);\n    }\n  }\n\n  if (error) {\n    PDFViewerApplication.l10n.get(\"rendering_error\").then(msg => {\n      PDFViewerApplication._otherError(msg, error);\n    });\n  }\n\n  // It is a good time to report stream and font types.\n  PDFViewerApplication._reportDocumentStatsTelemetry();\n}\n\nfunction webViewerPageMode({ mode }) {\n  // Handle the 'pagemode' hash parameter, see also `PDFLinkService_setHash`.\n  let view;\n  switch (mode) {\n    case \"thumbs\":\n      view = SidebarView.THUMBS;\n      break;\n    case \"bookmarks\":\n    case \"outline\": // non-standard\n      view = SidebarView.OUTLINE;\n      break;\n    case \"attachments\": // non-standard\n      view = SidebarView.ATTACHMENTS;\n      break;\n    case \"layers\": // non-standard\n      view = SidebarView.LAYERS;\n      break;\n    case \"none\":\n      view = SidebarView.NONE;\n      break;\n    default:\n      Window['ngxConsole'].error('Invalid \"pagemode\" hash parameter: ' + mode);\n      return;\n  }\n  PDFViewerApplication.pdfSidebar.switchView(view, /* forceOpen = */ true);\n}\n\nfunction webViewerNamedAction(evt) {\n  // Processing a couple of named actions that might be useful, see also\n  // `PDFLinkService.executeNamedAction`.\n  switch (evt.action) {\n    case \"GoToPage\":\n      PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n      break;\n\n    case \"Find\":\n      if (!PDFViewerApplication.supportsIntegratedFind) {\n        PDFViewerApplication.findBar.toggle();\n      }\n      break;\n\n    case \"Print\":\n      PDFViewerApplication.triggerPrinting();\n      break;\n\n    case \"SaveAs\":\n      webViewerSave();\n      break;\n  }\n}\n\nfunction webViewerPresentationModeChanged(evt) {\n  PDFViewerApplication.pdfViewer.presentationModeState = evt.state;\n}\n\nfunction webViewerSidebarViewChanged(evt) {\n  PDFViewerApplication.pdfRenderingQueue.isThumbnailViewEnabled =\n    PDFViewerApplication.pdfSidebar.isThumbnailViewVisible;\n\n  if (PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    PDFViewerApplication.store?.set(\"sidebarView\", evt.view).catch(() => {\n      // Unable to write to storage.\n    });\n  }\n}\n\nfunction webViewerUpdateViewarea(evt) {\n  const location = evt.location;\n\n   if (PDFViewerApplication.isInitialViewSet) {\n    // #90 #543 modified by ngx-extended-pdf-viewer\n    const settings = {};\n    if (location.pageNumber !== undefined || location.pageNumber !== null) {\n      settings.page = location.pageNumber;\n    }\n    if (location.scale) {\n      settings.zoom = location.scale;\n    }\n    if (location.left) {\n      settings.scrollLeft = location.left;\n    }\n    if (location.top) {\n      settings.scrollTop = location.top;\n    }\n    if (location.rotation !== undefined || location.rotation !== null) {\n      settings.rotation = location.rotation;\n    }\n    PDFViewerApplication.store\n      ?.setMultiple(settings)\n      .catch(() => {\n        // Unable to write to storage.\n      });\n  }\n  const href = PDFViewerApplication.pdfLinkService.getAnchorUrl(\n    location.pdfOpenParams\n  );\n  PDFViewerApplication.appConfig.toolbar.viewBookmark.href = href;\n  PDFViewerApplication.appConfig.secondaryToolbar.viewBookmarkButton.href =\n    href;\n\n  // Show/hide the loading indicator in the page number input element.\n  const currentPage = PDFViewerApplication.pdfViewer.getPageView(\n    /* index = */ PDFViewerApplication.page - 1\n  );\n  const loading = currentPage?.renderingState !== RenderingStates.FINISHED;\n  PDFViewerApplication.toolbar.updateLoadingIndicatorState(loading);\n}\n\nfunction webViewerScrollModeChanged(evt) {\n  if (PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    PDFViewerApplication.store?.set(\"scrollMode\", evt.mode).catch(() => {\n      // Unable to write to storage.\n    });\n  }\n}\n\nfunction webViewerSpreadModeChanged(evt) {\n  if (PDFViewerApplication.isInitialViewSet) {\n    // Only update the storage when the document has been loaded *and* rendered.\n    PDFViewerApplication.store?.set(\"spreadMode\", evt.mode).catch(() => {\n      // Unable to write to storage.\n    });\n  }\n}\n\nfunction webViewerResize() {\n  const { pdfDocument, pdfViewer } = PDFViewerApplication;\n  if (!pdfDocument) {\n    return;\n  }\n  const currentScaleValue = pdfViewer.currentScaleValue;\n  if (\n    currentScaleValue === \"auto\" ||\n    currentScaleValue === \"page-fit\" ||\n    currentScaleValue === \"page-width\"\n  ) {\n    // Note: the scale is constant for 'page-actual'.\n    pdfViewer.currentScaleValue = currentScaleValue;\n  }\n  pdfViewer.update();\n}\n\nfunction webViewerHashchange(evt) {\n  const hash = evt.hash;\n  if (!hash) {\n    return;\n  }\n  if (!PDFViewerApplication.isInitialViewSet) {\n    PDFViewerApplication.initialBookmark = hash;\n  } else if (!PDFViewerApplication.pdfHistory?.popStateInProgress) {\n    PDFViewerApplication.pdfLinkService.setHash(hash);\n  }\n}\n\nlet webViewerFileInputChange, webViewerOpenFile;\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  webViewerFileInputChange = function (evt) {\n    if (PDFViewerApplication.pdfViewer?.isInPresentationMode) {\n      return; // Opening a new PDF file isn't supported in Presentation Mode.\n    }\n    const file = evt.fileInput.files[0];\n\n    if (!compatibilityParams.disableCreateObjectURL) {\n      let url = URL.createObjectURL(file);\n      if (file.name) {\n        url = { url, originalUrl: file.name };\n      }\n      PDFViewerApplication.open(url);\n    } else {\n      PDFViewerApplication.setTitleUsingUrl(file.name);\n      // Read the local file into a Uint8Array.\n      const fileReader = new FileReader();\n      fileReader.onload = function webViewerChangeFileReaderOnload(event) {\n        const buffer = event.target.result;\n        PDFViewerApplication.open(new Uint8Array(buffer));\n      };\n      fileReader.readAsArrayBuffer(file);\n    }\n  };\n\n  webViewerOpenFile = function (evt) {\n    const openFileInputName = PDFViewerApplication.appConfig.openFileInputName;\n    document.getElementById(openFileInputName).click();\n  };\n}\n\nfunction webViewerPresentationMode() {\n  PDFViewerApplication.requestPresentationMode();\n}\nfunction webViewerPrint() {\n  PDFViewerApplication.triggerPrinting();\n}\nfunction webViewerDownload() {\n  PDFViewerApplication.downloadOrSave({ sourceEventType: \"download\" });\n}\nfunction webViewerSave() {\n  PDFViewerApplication.downloadOrSave({ sourceEventType: \"save\" });\n}\nfunction webViewerFirstPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = 1;\n  }\n}\nfunction webViewerLastPage() {\n  if (PDFViewerApplication.pdfDocument) {\n    PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n  }\n}\nfunction webViewerNextPage() {\n  PDFViewerApplication.pdfViewer.nextPage();\n}\nfunction webViewerPreviousPage() {\n  PDFViewerApplication.pdfViewer.previousPage();\n}\nfunction webViewerZoomIn() {\n  PDFViewerApplication.zoomIn();\n}\nfunction webViewerZoomOut() {\n  PDFViewerApplication.zoomOut();\n}\nfunction webViewerZoomReset() {\n  PDFViewerApplication.zoomReset();\n}\nfunction webViewerPageNumberChanged(evt) {\n  const pdfViewer = PDFViewerApplication.pdfViewer;\n  // Note that for `<input type=\"number\">` HTML elements, an empty string will\n  // be returned for non-number inputs; hence we simply do nothing in that case.\n  if (evt.value !== \"\") {\n    PDFViewerApplication.pdfLinkService.goToPage(evt.value);\n  }\n\n  // Ensure that the page number input displays the correct value, even if the\n  // value entered by the user was invalid (e.g. a floating point number).\n  if (\n    evt.value !== pdfViewer.currentPageNumber.toString() &&\n    evt.value !== pdfViewer.currentPageLabel\n  ) {\n    PDFViewerApplication.toolbar.setPageNumber(\n      pdfViewer.currentPageNumber,\n      pdfViewer.currentPageLabel\n    );\n  }\n}\nfunction webViewerScaleChanged(evt) {\n  PDFViewerApplication.pdfViewer.currentScaleValue = evt.value;\n}\nfunction webViewerRotateCw() {\n  PDFViewerApplication.rotatePages(90);\n}\nfunction webViewerRotateCcw() {\n  PDFViewerApplication.rotatePages(-90);\n}\nfunction webViewerOptionalContentConfig(evt) {\n  PDFViewerApplication.pdfViewer.optionalContentConfigPromise = evt.promise;\n}\nfunction webViewerSwitchScrollMode(evt) {\n  PDFViewerApplication.pdfViewer.scrollMode = evt.mode;\n}\nfunction webViewerSwitchSpreadMode(evt) {\n  PDFViewerApplication.pdfViewer.spreadMode = evt.mode;\n}\nfunction webViewerDocumentProperties() {\n  PDFViewerApplication.pdfDocumentProperties.open();\n}\n\nfunction webViewerFindFromUrlHash(evt) {\n  PDFViewerApplication.eventBus.dispatch(\"find\", {\n    source: evt.source,\n    type: \"\",\n    query: evt.query,\n    phraseSearch: evt.phraseSearch,\n    caseSensitive: false,\n    entireWord: false,\n    ignoreAccents: false, // #177\n    fuzzySearch: false, // #304\n    highlightAll: true,\n    findPrevious: false,\n  });\n}\n\nfunction webViewerUpdateFindMatchesCount({ matchesCount }) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindMatchesCount(matchesCount);\n  } else {\n    PDFViewerApplication.findBar.updateResultsCount(matchesCount);\n  }\n}\n\nfunction webViewerUpdateFindControlState({\n  state,\n  previous,\n  matchesCount,\n  rawQuery,\n}) {\n  if (PDFViewerApplication.supportsIntegratedFind) {\n    PDFViewerApplication.externalServices.updateFindControlState({\n      result: state,\n      findPrevious: previous,\n      matchesCount,\n      rawQuery,\n    });\n  } else {\n    PDFViewerApplication.findBar.updateUIState(state, previous, matchesCount);\n  }\n}\n\nfunction webViewerScaleChanging(evt) {\n  PDFViewerApplication.toolbar.setPageScale(evt.presetValue, evt.scale);\n\n  PDFViewerApplication.pdfViewer.update();\n}\n\nfunction webViewerRotationChanging(evt) {\n  PDFViewerApplication.pdfThumbnailViewer.pagesRotation = evt.pagesRotation;\n\n  PDFViewerApplication.forceRendering();\n  // Ensure that the active page doesn't change during rotation.\n  PDFViewerApplication.pdfViewer.currentPageNumber = evt.pageNumber;\n}\n\nfunction webViewerPageChanging({ pageNumber, pageLabel }) {\n  PDFViewerApplication.toolbar.setPageNumber(pageNumber, pageLabel);\n  PDFViewerApplication.secondaryToolbar.setPageNumber(pageNumber);\n\n  if (PDFViewerApplication.pdfSidebar.isThumbnailViewVisible) {\n    PDFViewerApplication.pdfThumbnailViewer.scrollThumbnailIntoView(pageNumber);\n  }\n  const pageNumberInput = document.getElementById(\"pageNumber\");\n  if (pageNumberInput) {\n    const pageScrollEvent = new CustomEvent(\"page-change\");\n    pageNumberInput.dispatchEvent(pageScrollEvent);\n  }\n}\n\nfunction webViewerVisibilityChange(evt) {\n  if (document.visibilityState === \"visible\") {\n    // Ignore mouse wheel zooming during tab switches (bug 1503412).\n    setZoomDisabledTimeout();\n  }\n}\n\nlet zoomDisabledTimeout = null;\nfunction setZoomDisabledTimeout() {\n  if (zoomDisabledTimeout) {\n    clearTimeout(zoomDisabledTimeout);\n  }\n  zoomDisabledTimeout = setTimeout(function () {\n    zoomDisabledTimeout = null;\n  }, WHEEL_ZOOM_DISABLED_TIMEOUT);\n}\n\nfunction webViewerWheel(evt) {\n  const { pdfViewer, supportedMouseWheelZoomModifierKeys } =\n    PDFViewerApplication;\n\n  if (pdfViewer.isInPresentationMode) {\n    return;\n  }\n\n  const cmd =\n    (evt.ctrlKey ? 1 : 0) |\n    (evt.altKey ? 2 : 0) |\n    (evt.shiftKey ? 4 : 0) |\n    (evt.metaKey ? 8 : 0);\n\n  if (window.isKeyIgnored && window.isKeyIgnored(cmd, \"WHEEL\")) {\n    return;\n  }\n\n  // #1007 modified by ngx-extended-pdf-viewer\n  const defaultWheelAction = AppOptions.get(\"wheelAction\");\n\n  const modifierKeyHasBeenPressed =\n    (evt.ctrlKey && supportedMouseWheelZoomModifierKeys.ctrlKey) || (evt.metaKey && supportedMouseWheelZoomModifierKeys.metaKey);\n  const userIntendsToZoom = modifierKeyHasBeenPressed ? defaultWheelAction !== \"zoom\" : defaultWheelAction === \"zoom\";\n  if (userIntendsToZoom) {\n    // #1007 end of modification by ngx-extended-pdf-viewer\n    // Only zoom the pages, not the entire viewer.\n    evt.preventDefault();\n    // NOTE: this check must be placed *after* preventDefault.\n    if (zoomDisabledTimeout || document.visibilityState === \"hidden\") {\n      return;\n    }\n\n    const previousScale = pdfViewer.currentScale;\n\n    const delta = normalizeWheelEventDirection(evt);\n    let ticks = 0;\n    if (\n      evt.deltaMode === WheelEvent.DOM_DELTA_LINE ||\n      evt.deltaMode === WheelEvent.DOM_DELTA_PAGE\n    ) {\n      // For line-based devices, use one tick per event, because different\n      // OSs have different defaults for the number lines. But we generally\n      // want one \"clicky\" roll of the wheel (which produces one event) to\n      // adjust the zoom by one step.\n      if (Math.abs(delta) >= 1) {\n        ticks = Math.sign(delta);\n      } else {\n        // If we're getting fractional lines (I can't think of a scenario\n        // this might actually happen), be safe and use the accumulator.\n        ticks = PDFViewerApplication.accumulateWheelTicks(delta);\n      }\n    } else {\n      // pixel-based devices\n      const PIXELS_PER_LINE_SCALE = 30;\n      ticks = PDFViewerApplication.accumulateWheelTicks(\n        delta / PIXELS_PER_LINE_SCALE\n      );\n    }\n\n    if (ticks < 0) {\n      PDFViewerApplication.zoomOut(-ticks);\n    } else if (ticks > 0) {\n      PDFViewerApplication.zoomIn(ticks);\n    }\n\n    const currentScale = pdfViewer.currentScale;\n    if (previousScale !== currentScale) {\n      // After scaling the page via zoomIn/zoomOut, the position of the upper-\n      // left corner is restored. When the mouse wheel is used, the position\n      // under the cursor should be restored instead.\n      const scaleCorrectionFactor = currentScale / previousScale - 1;\n      const rect = pdfViewer.container.getBoundingClientRect();\n      const dx = evt.clientX - rect.left;\n      const dy = evt.clientY - rect.top;\n      pdfViewer.container.scrollLeft += dx * scaleCorrectionFactor;\n      pdfViewer.container.scrollTop += dy * scaleCorrectionFactor;\n    }\n  } else {\n    setZoomDisabledTimeout();\n  }\n}\n\n// #914 modified by ngx-extended-pdf-viewer\n// function webViewerTouchStart(evt) {\n//  if (evt.touches.length > 1) {\n    // Disable touch-based zooming, because the entire UI bits gets zoomed and\n    // that doesn't look great. If we do want to have a good touch-based\n    // zooming experience, we need to implement smooth zoom capability (probably\n    // using a CSS transform for faster visual response, followed by async\n    // re-rendering at the final zoom level) and do gesture detection on the\n    // touchmove events to drive it. Or if we want to settle for a less good\n    // experience we can make the touchmove events drive the existing step-zoom\n    // behaviour that the ctrl+mousewheel path takes.\n//    evt.preventDefault();\n//  }\n// }\n// #914 end of modification\n\nfunction webViewerClick(evt) {\n  if (!PDFViewerApplication.secondaryToolbar.isOpen) {\n    return;\n  }\n  const appConfig = PDFViewerApplication.appConfig;\n  if (\n    PDFViewerApplication.pdfViewer.containsElement(evt.target) ||\n    (appConfig.toolbar.container.contains(evt.target) &&\n      evt.target !== appConfig.secondaryToolbar.toggleButton)\n  ) {\n    if (\n      evt.target &&\n      evt.target.parentElement === appConfig.secondaryToolbar.toggleButton\n    ) {\n      return;\n    }\n    if (\n      evt.target &&\n      evt.target.parentElement &&\n      evt.target.parentElement.parentElement ===\n        appConfig.secondaryToolbar.toggleButton\n    ) {\n      return;\n    }\n\n    PDFViewerApplication.secondaryToolbar.close();\n  }\n}\n\nfunction webViewerKeyDown(evt) {\n  if (PDFViewerApplication.overlayManager.active) {\n    return;\n  }\n  const { eventBus, pdfViewer } = PDFViewerApplication;\n  const isViewerInPresentationMode = pdfViewer.isInPresentationMode;\n\n  let handled = false,\n    ensureViewerFocused = false;\n  const cmd =\n    (evt.ctrlKey ? 1 : 0) |\n    (evt.altKey ? 2 : 0) |\n    (evt.shiftKey ? 4 : 0) |\n    (evt.metaKey ? 8 : 0);\n\n  if (window.isKeyIgnored && window.isKeyIgnored(cmd, evt.keyCode)) {\n    return;\n  }\n  // First, handle the key bindings that are independent whether an input\n  // control is selected or not.\n  if (cmd === 1 || cmd === 8 || cmd === 5 || cmd === 12) {\n    // either CTRL or META key with optional SHIFT.\n    switch (evt.keyCode) {\n      case 70: // f\n        if (!PDFViewerApplication.supportsIntegratedFind && !evt.shiftKey) {\n          PDFViewerApplication.findBar.open();\n          handled = true;\n        }\n        break;\n      case 71: // g\n        if (!PDFViewerApplication.supportsIntegratedFind) {\n          const { state } = PDFViewerApplication.findController;\n          if (state) {\n            const eventState = Object.assign(Object.create(null), state, {\n              source: window,\n              type: \"again\",\n              findPrevious: cmd === 5 || cmd === 12,\n            });\n            eventBus.dispatch(\"find\", eventState);\n          }\n          handled = true;\n        }\n        break;\n      case 61: // FF/Mac '='\n      case 107: // FF '+' and '='\n      case 187: // Chrome '+'\n      case 171: // FF with German keyboard\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomIn();\n        }\n        handled = true;\n        break;\n      case 173: // FF/Mac '-'\n      case 109: // FF '-'\n      case 189: // Chrome '-'\n        if (!isViewerInPresentationMode) {\n          PDFViewerApplication.zoomOut();\n        }\n        handled = true;\n        break;\n      case 48: // '0'\n      case 96: // '0' on Numpad of Swedish keyboard\n        if (!isViewerInPresentationMode) {\n          // keeping it unhandled (to restore page zoom to 100%)\n          setTimeout(function () {\n            // ... and resetting the scale after browser adjusts its scale\n            PDFViewerApplication.zoomReset();\n          });\n          handled = false;\n        }\n        break;\n\n      case 38: // up arrow\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 40: // down arrow\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n    }\n  }\n\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC || CHROME\")) {\n    // CTRL or META without shift\n    if (cmd === 1 || cmd === 8) {\n      switch (evt.keyCode) {\n        case 83: // s\n          eventBus.dispatch(\"download\", { source: window });\n          handled = true;\n          break;\n\n        case 79: // o\n          if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n            eventBus.dispatch(\"openfile\", { source: window });\n            handled = true;\n          }\n          break;\n      }\n    }\n  }\n\n  // CTRL+ALT or Option+Command\n  if (cmd === 3 || cmd === 10) {\n    switch (evt.keyCode) {\n      case 80: // p\n        PDFViewerApplication.requestPresentationMode();\n        handled = true;\n        break;\n      case 71: // g\n        // focuses input#pageNumber field\n        PDFViewerApplication.appConfig.toolbar.pageNumber.select();\n        handled = true;\n        break;\n    }\n  }\n\n  if (handled) {\n    if (ensureViewerFocused && !isViewerInPresentationMode) {\n      pdfViewer.focus();\n    }\n    evt.preventDefault();\n    return;\n  }\n\n  // Some shortcuts should not get handled if a control/input element\n  // is selected.\n  const curElement = getActiveOrFocusedElement();\n  const curElementTagName = curElement?.tagName.toUpperCase();\n  if (\n    curElementTagName === \"INPUT\" ||\n    curElementTagName === \"TEXTAREA\" ||\n    curElementTagName === \"SELECT\" ||\n    curElement?.isContentEditable\n  ) {\n    // Make sure that the secondary toolbar is closed when Escape is pressed.\n    if (evt.keyCode !== /* Esc = */ 27) {\n      return;\n    }\n  }\n\n  // No control key pressed at all.\n  if (cmd === 0) {\n    let turnPage = 0,\n      turnOnlyIfPageFit = false;\n    switch (evt.keyCode) {\n      case 38: // up arrow\n      case 33: // pg up\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 8: // backspace\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = -1;\n        break;\n      case 37: // left arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 75: // 'k'\n      case 80: // 'p'\n        turnPage = -1;\n        break;\n      case 27: // esc key\n        if (PDFViewerApplication.secondaryToolbar.isOpen) {\n          PDFViewerApplication.secondaryToolbar.close();\n          handled = true;\n        }\n        if (\n          !PDFViewerApplication.supportsIntegratedFind &&\n          PDFViewerApplication.findBar.opened\n        ) {\n          PDFViewerApplication.findBar.close();\n          handled = true;\n        }\n        break;\n      case 40: // down arrow\n      case 34: // pg down\n        // vertical scrolling using arrow/pg keys\n        if (pdfViewer.isVerticalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 13: // enter key\n      case 32: // spacebar\n        if (!isViewerInPresentationMode) {\n          turnOnlyIfPageFit = true;\n        }\n        turnPage = 1;\n        break;\n      case 39: // right arrow\n        // horizontal scrolling using arrow keys\n        if (pdfViewer.isHorizontalScrollbarEnabled) {\n          turnOnlyIfPageFit = true;\n        }\n      /* falls through */\n      case 74: // 'j'\n      case 78: // 'n'\n        turnPage = 1;\n        break;\n\n      case 36: // home\n        if (isViewerInPresentationMode || PDFViewerApplication.page > 1) {\n          PDFViewerApplication.page = 1;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n      case 35: // end\n        if (\n          isViewerInPresentationMode ||\n          PDFViewerApplication.page < PDFViewerApplication.pagesCount\n        ) {\n          PDFViewerApplication.page = PDFViewerApplication.pagesCount;\n          handled = true;\n          ensureViewerFocused = true;\n        }\n        break;\n\n      case 83: // 's'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.SELECT);\n        break;\n      case 72: // 'h'\n        PDFViewerApplication.pdfCursorTools.switchTool(CursorTool.HAND);\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(90);\n        break;\n\n      case 115: // F4\n        PDFViewerApplication.pdfSidebar.toggle();\n        break;\n    }\n\n    if (\n      turnPage !== 0 &&\n      (!turnOnlyIfPageFit || pdfViewer.currentScaleValue === \"page-fit\")\n    ) {\n      if (turnPage > 0) {\n        pdfViewer.nextPage();\n      } else {\n        pdfViewer.previousPage();\n      }\n      handled = true;\n    }\n  }\n\n  // shift-key\n  if (cmd === 4) {\n    switch (evt.keyCode) {\n      case 13: // enter key\n      case 32: // spacebar\n        if (\n          !isViewerInPresentationMode &&\n          pdfViewer.currentScaleValue !== \"page-fit\"\n        ) {\n          break;\n        }\n        pdfViewer.previousPage();\n\n        handled = true;\n        break;\n\n      case 82: // 'r'\n        PDFViewerApplication.rotatePages(-90);\n        break;\n    }\n  }\n\n  // ngx-extended-pdf-viewer must not enforce getting the focus\n\n  if (ensureViewerFocused && !pdfViewer.containsElement(curElement)) {\n    // The page container is not focused, but a page navigation key has been\n    // pressed. Change the focus to the viewer container to make sure that\n    // navigation by keyboard works as expected.\n    pdfViewer.focus();\n  }\n\n  if (handled) {\n    evt.preventDefault();\n  }\n}\n\nfunction beforeUnload(evt) {\n  evt.preventDefault();\n  evt.returnValue = \"\";\n  return false;\n}\n\n/* Abstract factory for the print service. */\nconst PDFPrintServiceFactory = {\n  instance: {\n    supportsPrinting: false,\n    createPrintService() {\n      throw new Error(\"Not implemented: createPrintService\");\n    },\n  },\n};\n\nexport {\n  DefaultExternalServices,\n  PDFPrintServiceFactory,\n  PDFViewerApplication,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst DEFAULT_SCALE_VALUE = \"auto\";\nconst DEFAULT_SCALE = 1.0;\nconst DEFAULT_SCALE_DELTA = 1.1;\nconst MIN_SCALE = 0.1;\nconst MAX_SCALE = 10.0;\nconst UNKNOWN_SCALE = 0;\nconst MAX_AUTO_SCALE = 1.25;\nconst SCROLLBAR_PADDING = 40;\nconst VERTICAL_PADDING = 5;\n\nconst LOADINGBAR_END_OFFSET_VAR = \"--loadingBar-end-offset\";\n\nconst RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3,\n};\n\nconst PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3,\n};\n\nconst SidebarView = {\n  UNKNOWN: -1,\n  NONE: 0,\n  THUMBS: 1, // Default value.\n  OUTLINE: 2,\n  ATTACHMENTS: 3,\n  LAYERS: 4,\n};\n\nconst RendererType = {\n  CANVAS: \"canvas\",\n  SVG: \"svg\",\n};\n\nconst TextLayerMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_ENHANCE: 2,\n};\n\nconst ScrollMode = {\n  UNKNOWN: -1,\n  VERTICAL: 0, // Default value.\n  HORIZONTAL: 1,\n  WRAPPED: 2,\n  PAGE: 3,\n};\n\nconst SpreadMode = {\n  UNKNOWN: -1,\n  NONE: 0, // Default value.\n  ODD: 1,\n  EVEN: 2,\n};\n\n// Used by `PDFViewerApplication`, and by the API unit-tests.\nconst AutoPrintRegExp = /\\bprint\\s*\\(/;\n\n/**\n * Returns scale factor for the canvas. It makes sense for the HiDPI displays.\n * @returns {Object} The object with horizontal (sx) and vertical (sy)\n *                   scales. The scaled property is set to false if scaling is\n *                   not required, true otherwise.\n */\nfunction getOutputScale(ctx) {\n  const devicePixelRatio = window.devicePixelRatio || 1;\n  const backingStoreRatio =\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1;\n  const pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1,\n  };\n}\n\n/**\n * Scrolls specified element into view of its parent.\n * @param {Object} element - The element to be visible.\n * @param {Object} spot - An object with optional top and left properties,\n *   specifying the offset from the top left edge.\n * @param {boolean} [scrollMatches] - When scrolling search results into view,\n *   ignore elements that either: Contains marked content identifiers,\n *   or have the CSS-rule `overflow: hidden;` set. The default value is `false`.\n */\n// #492 modified by ngx-extended-pdf-viewer\nfunction scrollIntoView(element, spot, scrollMatches = false, infiniteScroll=false) {\n// #492 end of modification\n  // Assuming offsetParent is available (it's not available when viewer is in\n  // hidden iframe or object). We have to scroll: if the offsetParent is not set\n  // producing the error. See also animationStarted.\n\n  // #716 modified by ngx-extended-pdf-viewer\n  if (element.classList.contains(\"stf__item\")) {\n    Window['ngxConsole'].log(\"don't scroll in book mode\");\n    return;\n  }\n  // #716 end of modification\n\n  let parent = element.offsetParent;\n  if (!parent) {\n    Window['ngxConsole'].error(\"offsetParent is not set -- cannot scroll\");\n    return;\n  }\n  let offsetY = element.offsetTop + element.clientTop;\n  let offsetX = element.offsetLeft + element.clientLeft;\n  while (\n    (parent.clientHeight === parent.scrollHeight &&\n      parent.clientWidth === parent.scrollWidth) ||\n    (scrollMatches &&\n      (parent.classList.contains(\"markedContent\") ||\n        getComputedStyle(parent).overflow === \"hidden\"))\n  ) {\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n\n    parent = parent.offsetParent;\n    if (!parent) {\n      // modified by ngx-extended-pdf-viewer #492\n      if (infiniteScroll) {\n        if (document.body.clientHeight > offsetY) {\n          // infinite scroll\n          offsetY -= 32;\n          window.scrollTo(window.scrollX, offsetY);\n        }\n      }\n      // end of modification #492\n      return; // no need to scroll\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\n\n/**\n * Helper function to start monitoring the scroll event and converting them into\n * PDF.js friendly one: with scroll debounce and scroll direction.\n */\nfunction watchScroll(viewAreaElement, callback) {\n  const debounceScroll = function (evt) {\n    if (rAF) {\n      return;\n    }\n    // schedule an invocation of scroll for next animation frame.\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n\n      const currentX = viewAreaElement.scrollLeft;\n      const lastX = state.lastX;\n      if (currentX !== lastX) {\n        state.right = currentX > lastX;\n      }\n      state.lastX = currentX;\n      const currentY = viewAreaElement.scrollTop;\n      const lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n\n  const state = {\n    right: true,\n    down: true,\n    lastX: viewAreaElement.scrollLeft,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll,\n  };\n\n  let rAF = null;\n  viewAreaElement.addEventListener(\"scroll\", debounceScroll, true);\n  return state;\n}\n\n/**\n * Helper function to parse query string (e.g. ?param1=value&param2=...).\n * @param {string}\n * @returns {Map}\n */\nfunction parseQueryString(query) {\n  const params = new Map();\n  for (const [key, value] of new URLSearchParams(query)) {\n    params.set(key.toLowerCase(), value);\n  }\n  return params;\n}\n\n/**\n * Use binary search to find the index of the first item in a given array which\n * passes a given condition. The items are expected to be sorted in the sense\n * that if the condition is true for one item in the array, then it is also true\n * for all following items.\n *\n * @returns {number} Index of the first array element to pass the test,\n *                   or |items.length| if no such element exists.\n */\nfunction binarySearchFirstItem(items, condition) {\n  let minIndex = 0;\n  let maxIndex = items.length - 1;\n\n  if (maxIndex < 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n\n  while (minIndex < maxIndex) {\n    const currentIndex = (minIndex + maxIndex) >> 1;\n    const currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex; /* === maxIndex */\n}\n\n/**\n *  Approximates float number as a fraction using Farey sequence (max order\n *  of 8).\n *  @param {number} x - Positive float number.\n *  @returns {Array} Estimated fraction: the first array item is a numerator,\n *                   the second one is a denominator.\n */\nfunction approximateFraction(x) {\n  // Fast paths for int numbers or their inversions.\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  const xinv = 1 / x;\n  const limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n\n  const x_ = x > 1 ? xinv : x;\n  // a/b and c/d are neighbours in Farey sequence.\n  let a = 0,\n    b = 1,\n    c = 1,\n    d = 1;\n  // Limiting search to order 8.\n  while (true) {\n    // Generating next term in sequence (order of q).\n    const p = a + c,\n      q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  let result;\n  // Select closest of the neighbours to x.\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\n\nfunction roundToDivide(x, div) {\n  const r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\n\n/**\n * @typedef {Object} GetPageSizeInchesParameters\n * @property {number[]} view\n * @property {number} userUnit\n * @property {number} rotate\n */\n\n/**\n * @typedef {Object} PageSize\n * @property {number} width - In inches.\n * @property {number} height - In inches.\n */\n\n/**\n * Gets the size of the specified page, converted from PDF units to inches.\n * @param {GetPageSizeInchesParameters} params\n * @returns {PageSize}\n */\nfunction getPageSizeInches({ view, userUnit, rotate }) {\n  const [x1, y1, x2, y2] = view;\n  // We need to take the page rotation into account as well.\n  const changeOrientation = rotate % 180 !== 0;\n\n  const width = ((x2 - x1) / 72) * userUnit;\n  const height = ((y2 - y1) / 72) * userUnit;\n\n  return {\n    width: changeOrientation ? height : width,\n    height: changeOrientation ? width : height,\n  };\n}\n\n/**\n * Helper function for getVisibleElements.\n *\n * @param {number} index - initial guess at the first visible element\n * @param {Array} views - array of pages, into which `index` is an index\n * @param {number} top - the top of the scroll pane\n * @returns {number} less than or equal to `index` that is definitely at or\n *   before the first visible element in `views`, but not by too much. (Usually,\n *   this will be the first element in the first partially visible row in\n *   `views`, although sometimes it goes back one row further.)\n */\nfunction backtrackBeforeAllVisibleElements(index, views, top) {\n  // binarySearchFirstItem's assumption is that the input is ordered, with only\n  // one index where the conditions flips from false to true: [false ...,\n  // true...]. With vertical scrolling and spreads, it is possible to have\n  // [false ..., true, false, true ...]. With wrapped scrolling we can have a\n  // similar sequence, with many more mixed true and false in the middle.\n  //\n  // So there is no guarantee that the binary search yields the index of the\n  // first visible element. It could have been any of the other visible elements\n  // that were preceded by a hidden element.\n\n  // Of course, if either this element or the previous (hidden) element is also\n  // the first element, there's nothing to worry about.\n  if (index < 2) {\n    return index;\n  }\n\n  // That aside, the possible cases are represented below.\n  //\n  //     ****  = fully hidden\n  //     A*B*  = mix of partially visible and/or hidden pages\n  //     CDEF  = fully visible\n  //\n  // (1) Binary search could have returned A, in which case we can stop.\n  // (2) Binary search could also have returned B, in which case we need to\n  // check the whole row.\n  // (3) Binary search could also have returned C, in which case we need to\n  // check the whole previous row.\n  //\n  // There's one other possibility:\n  //\n  //     ****  = fully hidden\n  //     ABCD  = mix of fully and/or partially visible pages\n  //\n  // (4) Binary search could only have returned A.\n\n  // Initially assume that we need to find the beginning of the current row\n  // (case 1, 2, or 4), which means finding a page that is above the current\n  // page's top. If the found page is partially visible, we're definitely not in\n  // case 3, and this assumption is correct.\n  let elt = views[index].div;\n  let pageTop = elt.offsetTop + elt.clientTop;\n\n  if (pageTop >= top) {\n    // The found page is fully visible, so we're actually either in case 3 or 4,\n    // and unfortunately we can't tell the difference between them without\n    // scanning the entire previous row, so we just conservatively assume that\n    // we do need to backtrack to that row. In both cases, the previous page is\n    // in the previous row, so use its top instead.\n    elt = views[index - 1].div;\n    pageTop = elt.offsetTop + elt.clientTop;\n  }\n\n  // Now we backtrack to the first page that still has its bottom below\n  // `pageTop`, which is the top of a page in the first visible row (unless\n  // we're in case 4, in which case it's the row before that).\n  // `index` is found by binary search, so the page at `index - 1` is\n  // invisible and we can start looking for potentially visible pages from\n  // `index - 2`. (However, if this loop terminates on its first iteration,\n  // which is the case when pages are stacked vertically, `index` should remain\n  // unchanged, so we use a distinct loop variable.)\n  for (let i = index - 2; i >= 0; --i) {\n    elt = views[i].div;\n    if (elt.offsetTop + elt.clientTop + elt.clientHeight <= pageTop) {\n      // We have reached the previous row, so stop now.\n      // This loop is expected to terminate relatively quickly because the\n      // number of pages per row is expected to be small.\n      break;\n    }\n    index = i;\n  }\n  return index;\n}\n\n/**\n * @typedef {Object} GetVisibleElementsParameters\n * @property {HTMLElement} scrollEl - A container that can possibly scroll.\n * @property {Array} views - Objects with a `div` property that contains an\n *   HTMLElement, which should all be descendants of `scrollEl` satisfying the\n *   relevant layout assumptions.\n * @property {boolean} sortByVisibility - If `true`, the returned elements are\n *   sorted in descending order of the percent of their padding box that is\n *   visible. The default value is `false`.\n * @property {boolean} horizontal - If `true`, the elements are assumed to be\n *   laid out horizontally instead of vertically. The default value is `false`.\n * @property {boolean} rtl - If `true`, the `scrollEl` container is assumed to\n *   be in right-to-left mode. The default value is `false`.\n */\n\n/**\n * Generic helper to find out what elements are visible within a scroll pane.\n *\n * Well, pretty generic. There are some assumptions placed on the elements\n * referenced by `views`:\n *   - If `horizontal`, no left of any earlier element is to the right of the\n *     left of any later element.\n *   - Otherwise, `views` can be split into contiguous rows where, within a row,\n *     no top of any element is below the bottom of any other element, and\n *     between rows, no bottom of any element in an earlier row is below the\n *     top of any element in a later row.\n *\n * (Here, top, left, etc. all refer to the padding edge of the element in\n * question. For pages, that ends up being equivalent to the bounding box of the\n * rendering canvas. Earlier and later refer to index in `views`, not page\n * layout.)\n *\n * @param {GetVisibleElementsParameters}\n * @returns {Object} `{ first, last, views: [{ id, x, y, view, percent }] }`\n */\nfunction getVisibleElements({\n  scrollEl,\n  views,\n  sortByVisibility = false,\n  horizontal = false,\n  rtl = false,\n}) {\n  const top = scrollEl.scrollTop,   // performance measuring: 761 ms\n    bottom = top + scrollEl.clientHeight;\n  const left = scrollEl.scrollLeft,\n    right = left + scrollEl.clientWidth;\n\n  // Throughout this \"generic\" function, comments will assume we're working with\n  // PDF document pages, which is the most important and complex case. In this\n  // case, the visible elements we're actually interested is the page canvas,\n  // which is contained in a wrapper which adds no padding/border/margin, which\n  // is itself contained in `view.div` which adds no padding (but does add a\n  // border). So, as specified in this function's doc comment, this function\n  // does all of its work on the padding edge of the provided views, starting at\n  // offsetLeft/Top (which includes margin) and adding clientLeft/Top (which is\n  // the border). Adding clientWidth/Height gets us the bottom-right corner of\n  // the padding edge.\n  function isElementBottomAfterViewTop(view) {\n    const element = view.div;\n    const elementBottom =\n      element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  function isElementNextAfterViewHorizontally(view) {\n    const element = view.div;\n    const elementLeft = element.offsetLeft + element.clientLeft;\n    const elementRight = elementLeft + element.clientWidth;\n    return rtl ? elementLeft < right : elementRight > left;\n  }\n\n  const visible = [],\n    ids = new Set(),\n    numViews = views.length;\n  let firstVisibleElementInd = binarySearchFirstItem(\n    views,\n    horizontal\n      ? isElementNextAfterViewHorizontally\n      : isElementBottomAfterViewTop\n  );\n\n  // Please note the return value of the `binarySearchFirstItem` function when\n  // no valid element is found (hence the `firstVisibleElementInd` check below).\n  if (\n    firstVisibleElementInd > 0 &&\n    firstVisibleElementInd < numViews &&\n    !horizontal\n  ) {\n    // In wrapped scrolling (or vertical scrolling with spreads), with some page\n    // sizes, isElementBottomAfterViewTop doesn't satisfy the binary search\n    // condition: there can be pages with bottoms above the view top between\n    // pages with bottoms below. This function detects and corrects that error;\n    // see it for more comments.\n    firstVisibleElementInd = backtrackBeforeAllVisibleElements(\n      firstVisibleElementInd,\n      views,\n      top\n    );\n  }\n\n  // lastEdge acts as a cutoff for us to stop looping, because we know all\n  // subsequent pages will be hidden.\n  //\n  // When using wrapped scrolling or vertical scrolling with spreads, we can't\n  // simply stop the first time we reach a page below the bottom of the view;\n  // the tops of subsequent pages on the same row could still be visible. In\n  // horizontal scrolling, we don't have that issue, so we can stop as soon as\n  // we pass `right`, without needing the code below that handles the -1 case.\n  let lastEdge = horizontal ? right : -1;\n\n  for (let i = firstVisibleElementInd; i < numViews; i++) {\n    const view = views[i],\n      element = view.div;\n    const currentWidth = element.offsetLeft + element.clientLeft;\n    const currentHeight = element.offsetTop + element.clientTop;\n    const viewWidth = element.clientWidth,\n      viewHeight = element.clientHeight;\n    const viewRight = currentWidth + viewWidth;\n    const viewBottom = currentHeight + viewHeight;\n\n    if (lastEdge === -1) {\n      // As commented above, this is only needed in non-horizontal cases.\n      // Setting lastEdge to the bottom of the first page that is partially\n      // visible ensures that the next page fully below lastEdge is on the\n      // next row, which has to be fully hidden along with all subsequent rows.\n      if (viewBottom >= bottom) {\n        lastEdge = viewBottom;\n      }\n    } else if ((horizontal ? currentWidth : currentHeight) > lastEdge) {\n      break;\n    }\n\n    if (\n      viewBottom <= top ||\n      currentHeight >= bottom ||\n      viewRight <= left ||\n      currentWidth >= right\n    ) {\n      continue;\n    }\n\n    const hiddenHeight =\n      Math.max(0, top - currentHeight) + Math.max(0, viewBottom - bottom);\n    const hiddenWidth =\n      Math.max(0, left - currentWidth) + Math.max(0, viewRight - right);\n\n    const fractionHeight = (viewHeight - hiddenHeight) / viewHeight,\n      fractionWidth = (viewWidth - hiddenWidth) / viewWidth;\n    const percent = (fractionHeight * fractionWidth * 100) | 0;\n\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view,\n      percent,\n      widthPercent: (fractionWidth * 100) | 0,\n    });\n    ids.add(view.id);\n  }\n\n  const first = visible[0],\n    last = visible[visible.length - 1];\n\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      const pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id; // ensure stability\n    });\n  }\n  return { first, last, views: visible, ids };\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\n\nfunction normalizeWheelEventDirection(evt) {\n  let delta = Math.hypot(evt.deltaX, evt.deltaY);\n  const angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    // All that is left-up oriented has to change the sign.\n    delta = -delta;\n  }\n  return delta;\n}\n\nfunction normalizeWheelEventDelta(evt) {\n  let delta = normalizeWheelEventDirection(evt);\n\n  const MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  const MOUSE_DOM_DELTA_LINE_MODE = 1;\n  const MOUSE_PIXELS_PER_LINE = 30;\n  const MOUSE_LINES_PER_PAGE = 30;\n\n  // Converts delta to per-page units\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\n\nfunction isValidRotation(angle) {\n  return Number.isInteger(angle) && angle % 90 === 0;\n}\n\nfunction isValidScrollMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(ScrollMode).includes(mode) &&\n    mode !== ScrollMode.UNKNOWN\n  );\n}\n\nfunction isValidSpreadMode(mode) {\n  return (\n    Number.isInteger(mode) &&\n    Object.values(SpreadMode).includes(mode) &&\n    mode !== SpreadMode.UNKNOWN\n  );\n}\n\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\n/**\n * Promise that is resolved when DOM window becomes visible.\n */\nconst animationStarted = new Promise(function (resolve) {\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"LIB\") &&\n    typeof window === \"undefined\"\n  ) {\n    // Prevent \"ReferenceError: window is not defined\" errors when running the\n    // unit-tests in Node.js environments.\n    setTimeout(resolve, 20);\n    return;\n  }\n  window.ngxZone.runOutsideAngular(() => {\n    window.requestAnimationFrame(resolve);\n  });\n});\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nclass ProgressBar {\n  constructor(id, { height, width, units } = {}) {\n    this.visible = true;\n\n    // Fetch the sub-elements for later.\n    this.div = document.querySelector(id + \" .progress\");\n    // Get the loading bar element, so it can be resized to fit the viewer.\n    if (this.div) {\n      this.bar = this.div.parentNode;\n    }\n\n    // Get options, with sensible defaults.\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || \"%\";\n\n    // Initialize heights.\n    if (this.div) {\n      this.div.style.height = this.height + this.units;\n    }\n    this.percent = 0;\n  }\n\n  _updateBar() {\n    if (this._indeterminate) {\n      this.div.classList.add(\"indeterminate\");\n      this.div.style.width = this.width + this.units;\n      return;\n    }\n\n    if (this.div) {\n      this.div.classList.remove(\"indeterminate\");\n    }\n\n    const progressSize = (this.width * this._percent) / 100;\n    if (this.div) {\n      this.div.style.width = progressSize + this.units;\n    }\n  }\n\n  get percent() {\n    return this._percent;\n  }\n\n  set percent(val) {\n    this._indeterminate = isNaN(val);\n    this._percent = clamp(val, 0, 100);\n    this._updateBar();\n  }\n\n  setWidth(viewer) {\n    if (!viewer) {\n      return;\n    }\n    const container = viewer.parentNode; // performance measuring: 1274 ms\n    const scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n    if (scrollbarWidth > 0) {\n      const doc = document.documentElement;\n      doc.style.setProperty(LOADINGBAR_END_OFFSET_VAR, `${scrollbarWidth}px`);\n    }\n  }\n\n  hide() {\n    if (!this.visible) {\n      return;\n    }\n    this.visible = false;\n    this.div = document.querySelector(\".body #mainContainer .progress\"); // always set this new instead of trying to cache this value\n    if (this.div) {\n      this.bar = this.div.parentNode; // always set this new instead of trying to cache this value\n      this.bar.classList.add(\"hidden\");\n    }\n\n    document.body.classList.remove(\"loadingInProgress\");\n  }\n\n  show() {\n    if (this.visible) {\n      return;\n    }\n    this.visible = true;\n    this.bar.classList.remove(\"hidden\");\n  }\n}\n\n/**\n * Get the active or focused element in current DOM.\n *\n * Recursively search for the truly active or focused element in case there are\n * shadow DOMs.\n *\n * @returns {Element} the truly active or focused element.\n */\nfunction getActiveOrFocusedElement() {\n  let curRoot = document;\n  let curActiveOrFocused =\n    curRoot.activeElement || curRoot.querySelector(\":focus\");\n\n  while (curActiveOrFocused?.shadowRoot) {\n    curRoot = curActiveOrFocused.shadowRoot;\n    curActiveOrFocused =\n      curRoot.activeElement || curRoot.querySelector(\":focus\");\n  }\n\n  return curActiveOrFocused;\n}\n\n/**\n * Converts API PageLayout values to the format used by `BaseViewer`.\n * NOTE: This is supported to the extent that the viewer implements the\n *       necessary Scroll/Spread modes (since SinglePage, TwoPageLeft,\n *       and TwoPageRight all suggests using non-continuous scrolling).\n * @param {string} mode - The API PageLayout value.\n * @returns {Object}\n */\nfunction apiPageLayoutToViewerModes(layout) {\n  let scrollMode = ScrollMode.VERTICAL,\n    spreadMode = SpreadMode.NONE;\n\n  switch (layout) {\n    case \"SinglePage\":\n      scrollMode = ScrollMode.PAGE;\n      break;\n    case \"OneColumn\":\n      break;\n    case \"TwoPageLeft\":\n      scrollMode = ScrollMode.PAGE;\n    /* falls through */\n    case \"TwoColumnLeft\":\n      spreadMode = SpreadMode.ODD;\n      break;\n    case \"TwoPageRight\":\n      scrollMode = ScrollMode.PAGE;\n    /* falls through */\n    case \"TwoColumnRight\":\n      spreadMode = SpreadMode.EVEN;\n      break;\n  }\n  return { scrollMode, spreadMode };\n}\n\n/**\n * Converts API PageMode values to the format used by `PDFSidebar`.\n * NOTE: There's also a \"FullScreen\" parameter which is not possible to support,\n *       since the Fullscreen API used in browsers requires that entering\n *       fullscreen mode only occurs as a result of a user-initiated event.\n * @param {string} mode - The API PageMode value.\n * @returns {number} A value from {SidebarView}.\n */\nfunction apiPageModeToSidebarView(mode) {\n  switch (mode) {\n    case \"UseNone\":\n      return SidebarView.NONE;\n    case \"UseThumbs\":\n      return SidebarView.THUMBS;\n    case \"UseOutlines\":\n      return SidebarView.OUTLINE;\n    case \"UseAttachments\":\n      return SidebarView.ATTACHMENTS;\n    case \"UseOC\":\n      return SidebarView.LAYERS;\n  }\n  return SidebarView.NONE; // Default value.\n}\n\nexport {\n  animationStarted,\n  apiPageLayoutToViewerModes,\n  apiPageModeToSidebarView,\n  approximateFraction,\n  AutoPrintRegExp,\n  backtrackBeforeAllVisibleElements, // only exported for testing\n  binarySearchFirstItem,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_DELTA,\n  DEFAULT_SCALE_VALUE,\n  getActiveOrFocusedElement,\n  getOutputScale,\n  getPageSizeInches,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n  normalizeWheelEventDelta,\n  normalizeWheelEventDirection,\n  parseQueryString,\n  PresentationModeState,\n  ProgressBar,\n  RendererType,\n  RenderingStates,\n  roundToDivide,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SidebarView,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst WaitOnType = {\n  EVENT: \"event\",\n  TIMEOUT: \"timeout\",\n};\n\n/**\n * @typedef {Object} WaitOnEventOrTimeoutParameters\n * @property {Object} target - The event target, can for example be:\n *   `window`, `document`, a DOM element, or an {EventBus} instance.\n * @property {string} name - The name of the event.\n * @property {number} delay - The delay, in milliseconds, after which the\n *   timeout occurs (if the event wasn't already dispatched).\n */\n\n/**\n * Allows waiting for an event or a timeout, whichever occurs first.\n * Can be used to ensure that an action always occurs, even when an event\n * arrives late or not at all.\n *\n * @param {WaitOnEventOrTimeoutParameters}\n * @returns {Promise} A promise that is resolved with a {WaitOnType} value.\n */\nfunction waitOnEventOrTimeout({ target, name, delay = 0 }) {\n  return new Promise(function (resolve, reject) {\n    if (\n      typeof target !== \"object\" ||\n      !(name && typeof name === \"string\") ||\n      !(Number.isInteger(delay) && delay >= 0)\n    ) {\n      throw new Error(\"waitOnEventOrTimeout - invalid parameters.\");\n    }\n\n    function handler(type) {\n      if (target instanceof EventBus) {\n        target._off(name, eventHandler);\n      } else {\n        target.removeEventListener(name, eventHandler);\n      }\n\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n      resolve(type);\n    }\n\n    const eventHandler = handler.bind(null, WaitOnType.EVENT);\n    if (target instanceof EventBus) {\n      target._on(name, eventHandler);\n    } else {\n      target.addEventListener(name, eventHandler);\n    }\n\n    const timeoutHandler = handler.bind(null, WaitOnType.TIMEOUT);\n    const timeout = setTimeout(timeoutHandler, delay);\n  });\n}\n\n/**\n * Simple event bus for an application. Listeners are attached using the `on`\n * and `off` methods. To raise an event, the `dispatch` method shall be used.\n */\nclass EventBus {\n  constructor() {\n    this._listeners = Object.create(null);\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   * @param {Object} [options]\n   */\n  on(eventName, listener, options = null) {\n    this._on(eventName, listener, {\n      external: true,\n      once: options?.once,\n    });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} listener\n   * @param {Object} [options]\n   */\n  off(eventName, listener, options = null) {\n    this._off(eventName, listener, {\n      external: true,\n      once: options?.once,\n    });\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Object} data\n   */\n  dispatch(eventName, data) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners || eventListeners.length === 0) {\n      return;\n    }\n    let externalListeners;\n    // Making copy of the listeners array in case if it will be modified\n    // during dispatch.\n    for (const { listener, external, once } of eventListeners.slice(0)) {\n      if (once) {\n        this._off(eventName, listener);\n      }\n      if (external) {\n        (externalListeners ||= []).push(listener);\n        continue;\n      }\n      listener(data);\n    }\n    // Dispatch any \"external\" listeners *after* the internal ones, to give the\n    // viewer components time to handle events and update their state first.\n    if (externalListeners) {\n      for (const listener of externalListeners) {\n        listener(data);\n      }\n      externalListeners = null;\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  _on(eventName, listener, options = null) {\n    const eventListeners = (this._listeners[eventName] ||= []);\n    eventListeners.push({\n      listener,\n      external: options?.external === true,\n      once: options?.once === true,\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _off(eventName, listener, options = null) {\n    const eventListeners = this._listeners[eventName];\n    if (!eventListeners) {\n      return;\n    }\n    for (let i = 0, ii = eventListeners.length; i < ii; i++) {\n      if (eventListeners[i].listener === listener) {\n        eventListeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\n/**\n * NOTE: Only used to support various PDF viewer tests in `mozilla-central`.\n */\nclass AutomationEventBus extends EventBus {\n  dispatch(eventName, data) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: AutomationEventBus.dispatch\");\n    }\n    super.dispatch(eventName, data);\n\n    const details = Object.create(null);\n    if (data) {\n      for (const key in data) {\n        const value = data[key];\n        if (key === \"source\") {\n          if (value === window || value === document) {\n            return; // No need to re-dispatch (already) global events.\n          }\n          continue; // Ignore the `source` property.\n        }\n        details[key] = value;\n      }\n    }\n    const event = document.createEvent(\"CustomEvent\");\n    event.initCustomEvent(eventName, true, true, details);\n    document.dispatchEvent(event);\n  }\n}\n\nexport { AutomationEventBus, EventBus, waitOnEventOrTimeout, WaitOnType };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals module, __non_webpack_require__ */\n\n\"use strict\";\n\nmodule.exports = window[\"pdfjs-dist/build/pdf\"];\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GrabToPan } from \"./grab_to_pan.js\";\nimport { PresentationModeState } from \"./ui_utils.js\";\n\nconst CursorTool = {\n  SELECT: 0, // The default value.\n  HAND: 1,\n  ZOOM: 2,\n};\n\n/**\n * @typedef {Object} PDFCursorToolsOptions\n * @property {HTMLDivElement} container - The document container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [cursorToolOnLoad] - The cursor tool that will be enabled\n *   on load; the constants from {CursorTool} should be used. The default value\n *   is `CursorTool.SELECT`.\n */\n\nclass PDFCursorTools {\n  /**\n   * @param {PDFCursorToolsOptions} options\n   */\n  constructor({ container, eventBus, cursorToolOnLoad = CursorTool.SELECT }) {\n    this.container = container;\n    this.eventBus = eventBus;\n\n    this.active = CursorTool.SELECT;\n    this.activeBeforePresentationMode = null;\n\n    this.handTool = new GrabToPan({\n      element: this.container,\n    });\n\n    this._addEventListeners();\n\n    // Defer the initial `switchTool` call, to give other viewer components\n    // time to initialize *and* register 'cursortoolchanged' event listeners.\n    Promise.resolve().then(() => {\n      this.switchTool(cursorToolOnLoad);\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {CursorTool}.\n   */\n  get activeTool() {\n    return this.active;\n  }\n\n  /**\n   * NOTE: This method is ignored while Presentation Mode is active.\n   * @param {number} tool - The cursor mode that should be switched to,\n   *                        must be one of the values in {CursorTool}.\n   */\n  switchTool(tool) {\n    if (this.activeBeforePresentationMode !== null) {\n      return; // Cursor tools cannot be used in Presentation Mode.\n    }\n    if (tool === this.active) {\n      return; // The requested tool is already active.\n    }\n\n    const disableActiveTool = () => {\n      switch (this.active) {\n        case CursorTool.SELECT:\n          break;\n        case CursorTool.HAND:\n          this.handTool.deactivate();\n          break;\n        case CursorTool.ZOOM:\n        /* falls through */\n      }\n    };\n\n    // Enable the new cursor tool.\n    switch (tool) {\n      case CursorTool.SELECT:\n        disableActiveTool();\n        break;\n      case CursorTool.HAND:\n        disableActiveTool();\n        this.handTool.activate();\n        break;\n      case CursorTool.ZOOM:\n      /* falls through */\n      default:\n        Window['ngxConsole'].error(`switchTool: \"${tool}\" is an unsupported value.`);\n        return;\n    }\n    // Update the active tool *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = tool;\n\n    this._dispatchEvent();\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"cursortoolchanged\", {\n      source: this,\n      tool: this.active,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.eventBus._on(\"switchcursortool\", evt => {\n      this.switchTool(evt.tool);\n    });\n\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      switch (evt.state) {\n        case PresentationModeState.FULLSCREEN: {\n          const previouslyActive = this.active;\n\n          this.switchTool(CursorTool.SELECT);\n          this.activeBeforePresentationMode = previouslyActive;\n          break;\n        }\n        case PresentationModeState.NORMAL: {\n          const previouslyActive = this.activeBeforePresentationMode;\n\n          this.activeBeforePresentationMode = null;\n          this.switchTool(previouslyActive);\n          break;\n        }\n      }\n    });\n  }\n}\n\nexport { CursorTool, PDFCursorTools };\n","/* Copyright 2013 Rob Wu <rob@robwu.nl>\n * https://github.com/Rob--W/grab-to-pan.js\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Class name of element which can be grabbed.\nconst CSS_CLASS_GRAB = \"grab-to-pan-grab\";\n\nclass GrabToPan {\n  /**\n   * Construct a GrabToPan instance for a given HTML element.\n   * @param {Element} options.element\n   * @param {function} [options.ignoreTarget] - See `ignoreTarget(node)`.\n   * @param {function(boolean)} [options.onActiveChanged] - Called when\n   *   grab-to-pan is (de)activated. The first argument is a boolean that\n   *   shows whether grab-to-pan is activated.\n   */\n  constructor(options) {\n    this.element = options.element;\n    this.document = options.element.ownerDocument;\n    if (typeof options.ignoreTarget === \"function\") {\n      this.ignoreTarget = options.ignoreTarget;\n    }\n    this.onActiveChanged = options.onActiveChanged;\n\n    // Bind the contexts to ensure that `this` always points to\n    // the GrabToPan instance.\n    this.activate = this.activate.bind(this);\n    this.deactivate = this.deactivate.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this._onMouseDown = this.#onMouseDown.bind(this);\n    this._onMouseMove = this.#onMouseMove.bind(this);\n    this._endPan = this.#endPan.bind(this);\n\n    // This overlay will be inserted in the document when the mouse moves during\n    // a grab operation, to ensure that the cursor has the desired appearance.\n    const overlay = (this.overlay = document.createElement(\"div\"));\n    overlay.className = \"grab-to-pan-grabbing\";\n  }\n\n  /**\n   * Bind a mousedown event to the element to enable grab-detection.\n   */\n  activate() {\n    if (!this.active) {\n      this.active = true;\n      this.element.addEventListener(\"mousedown\", this._onMouseDown, true);\n      this.element.classList.add(CSS_CLASS_GRAB);\n\n      this.onActiveChanged?.(true);\n    }\n  }\n\n  /**\n   * Removes all events. Any pending pan session is immediately stopped.\n   */\n  deactivate() {\n    if (this.active) {\n      this.active = false;\n      this.element.removeEventListener(\"mousedown\", this._onMouseDown, true);\n      this._endPan();\n      this.element.classList.remove(CSS_CLASS_GRAB);\n\n      this.onActiveChanged?.(false);\n    }\n  }\n\n  toggle() {\n    if (this.active) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  }\n\n  /**\n   * Whether to not pan if the target element is clicked.\n   * Override this method to change the default behaviour.\n   *\n   * @param {Element} node - The target of the event.\n   * @returns {boolean} Whether to not react to the click event.\n   */\n  ignoreTarget(node) {\n      // #716 modified by ngx-extended-pdf-viewer\n    if (document.querySelector(\".stf__item\")) {\n      return true;\n    }\n\t// #716 end of modification\n\t\n    // Check whether the clicked element is, a child of, an input element/link.\n    return node.matches(\n      \"a[href], a[href] *, input, textarea, button, button *, select, option\"\n    );\n  }\n\n  #onMouseDown(event) {\n    if (event.button !== 0 || this.ignoreTarget(event.target)) {\n      return;\n    }\n    if (event.originalTarget) {\n      try {\n        // eslint-disable-next-line no-unused-expressions\n        event.originalTarget.tagName;\n      } catch (e) {\n        // Mozilla-specific: element is a scrollbar (XUL element)\n        return;\n      }\n    }\n\n    this.scrollLeftStart = this.element.scrollLeft;\n    this.scrollTopStart = this.element.scrollTop;\n    this.clientXStart = event.clientX;\n    this.clientYStart = event.clientY;\n\n    /* modified by ngx-extended-pdf-viewer #469 */\n    if (isOverPerfectScrollbar(this.clientXStart, this.clientYStart, \"ps__rail-x\")) {\n      return;\n    }\n    if (isOverPerfectScrollbar(this.clientXStart, this.clientYStart, \"ps__rail-y\")) {\n      return;\n    }\n    /* end of modification */\n\n    this.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n    this.document.addEventListener(\"mouseup\", this._endPan, true);\n    // When a scroll event occurs before a mousemove, assume that the user\n    // dragged a scrollbar (necessary for Opera Presto, Safari and IE)\n    // (not needed for Chrome/Firefox)\n    this.element.addEventListener(\"scroll\", this._endPan, true);\n    event.preventDefault();\n    event.stopPropagation();\n\n    const focusedElement = document.activeElement;\n    if (focusedElement && !focusedElement.contains(event.target)) {\n      focusedElement.blur();\n    }\n  }\n\n  #onMouseMove(event) {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    if (!(event.buttons & 1)) {\n      // The left mouse button is released.\n      this._endPan();\n      return;\n    }\n    const xDiff = event.clientX - this.clientXStart;\n    const yDiff = event.clientY - this.clientYStart;\n    const scrollTop = this.scrollTopStart - yDiff;\n    const scrollLeft = this.scrollLeftStart - xDiff;\n    if (this.element.scrollTo) {\n      this.element.scrollTo({\n        top: scrollTop,\n        left: scrollLeft,\n        behavior: \"instant\",\n      });\n    } else {\n      this.element.scrollTop = scrollTop;\n      this.element.scrollLeft = scrollLeft;\n    }\n    if (!this.overlay.parentNode) {\n      document.body.appendChild(this.overlay);\n    }\n  }\n\n  #endPan() {\n    this.element.removeEventListener(\"scroll\", this._endPan, true);\n    this.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    this.document.removeEventListener(\"mouseup\", this._endPan, true);\n    // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n    this.overlay.remove();\n  }\n}\n\n/* modified by ngx-extended-pdf-viewer #469 */\nfunction isOverPerfectScrollbar(x, y, divName) {\n  const  perfectScrollbar = document.getElementsByClassName(divName);\n  if (perfectScrollbar && perfectScrollbar.length === 1) {\n    var {top, right, bottom, left} = perfectScrollbar[0].getBoundingClientRect();\n    if (y >= top && y <= bottom) {\n      if (x <= right && x >= left) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n/* end of modification */\n\nexport { GrabToPan };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass OverlayManager {\n  constructor() {\n    this._overlays = {};\n    this._active = null;\n    this._keyDownBound = this._keyDown.bind(this);\n  }\n\n  get active() {\n    return this._active;\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that is registered.\n   * @param {HTMLDivElement} element - The overlay's DOM element.\n   * @param {function} [callerCloseMethod] - The method that, if present, calls\n   *                   `OverlayManager.close` from the object registering the\n   *                   overlay. Access to this method is necessary in order to\n   *                   run cleanup code when e.g. the overlay is force closed.\n   *                   The default is `null`.\n   * @param {boolean} [canForceClose] - Indicates if opening the overlay closes\n   *                  an active overlay. The default is `false`.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    registered.\n   */\n  async register(\n    name,\n    element,\n    callerCloseMethod = null,\n    canForceClose = false\n  ) {\n    let container;\n    if (!name || !element || !(container = element.parentNode)) {\n      throw new Error(\"Not enough parameters.\");\n    } else if (this._overlays[name]) {\n      throw new Error(\"The overlay is already registered.\");\n    }\n    this._overlays[name] = {\n      element,\n      container,\n      callerCloseMethod,\n      canForceClose,\n    };\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that is unregistered.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    unregistered.\n   */\n  async unregister(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active === name) {\n      throw new Error(\"The overlay cannot be removed while it is active.\");\n    }\n    delete this._overlays[name];\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that should be opened.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    opened.\n   */\n  async open(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (this._active) {\n      if (this._overlays[name].canForceClose) {\n        this._closeThroughCaller();\n      } else if (this._active === name) {\n        throw new Error(\"The overlay is already active.\");\n      } else {\n        throw new Error(\"Another overlay is currently active.\");\n      }\n    }\n    this._active = name;\n    this._overlays[this._active].element.classList.remove(\"hidden\");\n    this._overlays[this._active].container.classList.remove(\"hidden\");\n\n    window.addEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  /**\n   * @param {string} name - The name of the overlay that should be closed.\n   * @returns {Promise} A promise that is resolved when the overlay has been\n   *                    closed.\n   */\n  async close(name) {\n    if (!this._overlays[name]) {\n      throw new Error(\"The overlay does not exist.\");\n    } else if (!this._active) {\n      throw new Error(\"The overlay is currently not active.\");\n    } else if (this._active !== name) {\n      throw new Error(\"Another overlay is currently active.\");\n    }\n    this._overlays[this._active].container.classList.add(\"hidden\");\n    this._overlays[this._active].element.classList.add(\"hidden\");\n    this._active = null;\n\n    window.removeEventListener(\"keydown\", this._keyDownBound);\n  }\n\n  /**\n   * @private\n   */\n  _keyDown(evt) {\n    if (this._active && evt.keyCode === /* Esc = */ 27) {\n      this._closeThroughCaller();\n      evt.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _closeThroughCaller() {\n    if (this._overlays[this._active].callerCloseMethod) {\n      this._overlays[this._active].callerCloseMethod();\n    }\n    if (this._active) {\n      this.close(this._active);\n    }\n  }\n}\n\nexport { OverlayManager };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PasswordResponses } from \"pdfjs-lib\";\n\n/**\n * @typedef {Object} PasswordPromptOptions\n * @property {string} overlayName - Name of the overlay for the overlay manager.\n * @property {HTMLDivElement} container - Div container for the overlay.\n * @property {HTMLParagraphElement} label - Label containing instructions for\n *                                          entering the password.\n * @property {HTMLInputElement} input - Input field for entering the password.\n * @property {HTMLButtonElement} submitButton - Button for submitting the\n *                                              password.\n * @property {HTMLButtonElement} cancelButton - Button for cancelling password\n *                                              entry.\n */\n\nclass PasswordPrompt {\n  /**\n   * @param {PasswordPromptOptions} options\n   * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n   * @param {IL10n} l10n - Localization service.\n   * @param {boolean} [isViewerEmbedded] - If the viewer is embedded, in e.g.\n   *   an <iframe> or an <object>. The default value is `false`.\n   */\n  constructor(options, overlayManager, l10n, isViewerEmbedded = false) {\n    this.overlayName = options.overlayName;\n    this.container = options.container;\n    this.label = options.label;\n    this.input = options.input;\n    this.submitButton = options.submitButton;\n    this.cancelButton = options.cancelButton;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n    this._isViewerEmbedded = isViewerEmbedded;\n\n    this.updateCallback = null;\n    this.reason = null;\n\n    // Attach the event listeners.\n    this.submitButton.addEventListener(\"click\", this.verify.bind(this));\n    this.cancelButton.addEventListener(\"click\", this.close.bind(this));\n    this.input.addEventListener(\"keydown\", e => {\n      if (e.keyCode === /* Enter = */ 13) {\n        this.verify();\n      }\n    });\n\n    this.overlayManager.register(\n      this.overlayName,\n      this.container,\n      this.close.bind(this),\n      true\n    );\n  }\n\n  async open() {\n    await this.overlayManager.open(this.overlayName);\n    this.input.type = \"password\";\n    this.input.focus();\n\n    const passwordIncorrect =\n      this.reason === PasswordResponses.INCORRECT_PASSWORD;\n\n    if (!this._isViewerEmbedded || passwordIncorrect) {\n      this.input.focus();\n    }\n    this.label.textContent = await this.l10n.get(\n      `password_${passwordIncorrect ? \"invalid\" : \"label\"}`\n    );\n  }\n\n  close() {\n    this.overlayManager.close(this.overlayName).then(() => {\n      this.input.type = \"\";\n      this.input.value = \"\";\n    });\n  }\n\n  verify() {\n    const password = this.input.value;\n    if (password?.length > 0) {\n      this.close();\n      this.updateCallback(password);\n    }\n  }\n\n  setUpdateCallback(updateCallback, reason) {\n    this.updateCallback = updateCallback;\n    this.reason = reason;\n  }\n}\n\nexport { PasswordPrompt };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createPromiseCapability, getFilenameFromUrl } from \"pdfjs-lib\";\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\n\n/**\n * @typedef {Object} PDFAttachmentViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {DownloadManager} downloadManager - The download manager.\n */\n\n/**\n * @typedef {Object} PDFAttachmentViewerRenderParameters\n * @property {Object|null} attachments - A lookup table of attachment objects.\n */\n\nclass PDFAttachmentViewer extends BaseTreeViewer {\n  /**\n   * @param {PDFAttachmentViewerOptions} options\n   */\n  constructor(options) {\n    super(options);\n    this.downloadManager = options.downloadManager;\n\n    this.eventBus._on(\n      \"fileattachmentannotation\",\n      this._appendAttachment.bind(this)\n    );\n  }\n\n  reset(keepRenderedCapability = false) {\n    super.reset();\n    this._attachments = null;\n\n    if (!keepRenderedCapability) {\n      // The only situation in which the `_renderedCapability` should *not* be\n      // replaced is when appending FileAttachment annotations.\n      this._renderedCapability = createPromiseCapability();\n    }\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n    }\n    this._pendingDispatchEvent = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(attachmentsCount) {\n    this._renderedCapability.resolve();\n\n    if (this._pendingDispatchEvent) {\n      clearTimeout(this._pendingDispatchEvent);\n      this._pendingDispatchEvent = null;\n    }\n    if (attachmentsCount === 0) {\n      // Delay the event when no \"regular\" attachments exist, to allow time for\n      // parsing of any FileAttachment annotations that may be present on the\n      // *initially* rendered page; this reduces the likelihood of temporarily\n      // disabling the attachmentsView when the `PDFSidebar` handles the event.\n      this._pendingDispatchEvent = setTimeout(() => {\n        this.eventBus.dispatch(\"attachmentsloaded\", {\n          source: this,\n          attachmentsCount: 0,\n        });\n        this._pendingDispatchEvent = null;\n      });\n      return;\n    }\n\n    this.eventBus.dispatch(\"attachmentsloaded\", {\n      source: this,\n      attachmentsCount,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { content, filename }) {\n    element.onclick = () => {\n      this.downloadManager.openOrDownloadData(element, content, filename);\n      return false;\n    };\n  }\n\n  /**\n   * @param {PDFAttachmentViewerRenderParameters} params\n   */\n  render({ attachments, keepRenderedCapability = false }) {\n    if (this._attachments) {\n      this.reset(keepRenderedCapability);\n    }\n    this._attachments = attachments || null;\n\n    if (!attachments) {\n      this._dispatchEvent(/* attachmentsCount = */ 0);\n      return;\n    }\n    const names = Object.keys(attachments).sort(function (a, b) {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    const fragment = document.createDocumentFragment();\n    let attachmentsCount = 0;\n    for (const name of names) {\n      const item = attachments[name];\n      const content = item.content,\n        filename = getFilenameFromUrl(item.filename);\n\n      const div = document.createElement(\"div\");\n      div.className = \"treeItem\";\n\n      const element = document.createElement(\"a\");\n      this._bindLink(element, { content, filename });\n      element.textContent = this._normalizeTextContent(filename);\n\n      div.appendChild(element);\n\n      fragment.appendChild(div);\n      attachmentsCount++;\n    }\n\n    this._finishRendering(fragment, attachmentsCount);\n  }\n\n  /**\n   * Used to append FileAttachment annotations to the sidebar.\n   * @private\n   */\n  _appendAttachment({ id, filename, content }) {\n    const renderedPromise = this._renderedCapability.promise;\n\n    renderedPromise.then(() => {\n      if (renderedPromise !== this._renderedCapability.promise) {\n        return; // The FileAttachment annotation belongs to a previous document.\n      }\n      let attachments = this._attachments;\n\n      if (!attachments) {\n        attachments = Object.create(null);\n      } else {\n        for (const name in attachments) {\n          if (id === name) {\n            return; // Ignore the new attachment if it already exists.\n          }\n        }\n      }\n      attachments[id] = {\n        filename,\n        content,\n      };\n      this.render({\n        attachments,\n        keepRenderedCapability: true,\n      });\n    });\n  }\n}\n\nexport { PDFAttachmentViewer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { removeNullCharacters } from \"pdfjs-lib\";\n\nconst TREEITEM_OFFSET_TOP = -100; // px\nconst TREEITEM_SELECTED_CLASS = \"selected\";\n\nclass BaseTreeViewer {\n  constructor(options) {\n    if (this.constructor === BaseTreeViewer) {\n      throw new Error(\"Cannot initialize BaseTreeViewer.\");\n    }\n    this.container = options.container;\n    this.eventBus = options.eventBus;\n\n    this.reset();\n  }\n\n  reset() {\n    this._pdfDocument = null;\n    this._lastToggleIsShow = true;\n    this._currentTreeItem = null;\n\n    // Remove the tree from the DOM.\n    this.container.textContent = \"\";\n    // Ensure that the left (right in RTL locales) margin is always reset,\n    // to prevent incorrect tree alignment if a new document is opened.\n    this.container.classList.remove(\"treeWithDeepNesting\");\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(count) {\n    throw new Error(\"Not implemented: _dispatchEvent\");\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, params) {\n    throw new Error(\"Not implemented: _bindLink\");\n  }\n\n  /**\n   * @private\n   */\n  _normalizeTextContent(str) {\n    // Chars in range [0x01-0x1F] will be replaced with a white space\n    // and 0x00 by \"\".\n    return (\n      removeNullCharacters(str, /* replaceInvisible */ true) ||\n      /* en dash = */ \"\\u2013\"\n    );\n  }\n\n  /**\n   * Prepend a button before a tree item which allows the user to collapse or\n   * expand all tree items at that level; see `_toggleTreeItem`.\n   * @private\n   */\n  _addToggleButton(div, hidden = false) {\n    const toggler = document.createElement(\"div\");\n    toggler.className = \"treeItemToggler\";\n    if (hidden) {\n      toggler.classList.add(\"treeItemsHidden\");\n    }\n    toggler.onclick = evt => {\n      evt.stopPropagation();\n      toggler.classList.toggle(\"treeItemsHidden\");\n\n      if (evt.shiftKey) {\n        const shouldShowAll = !toggler.classList.contains(\"treeItemsHidden\");\n        this._toggleTreeItem(div, shouldShowAll);\n      }\n    };\n    div.insertBefore(toggler, div.firstChild);\n  }\n\n  /**\n   * Collapse or expand the subtree of a tree item.\n   *\n   * @param {Element} root - the root of the item (sub)tree.\n   * @param {boolean} show - whether to show the item (sub)tree. If false,\n   *   the item subtree rooted at `root` will be collapsed.\n   * @private\n   */\n  _toggleTreeItem(root, show = false) {\n    this._lastToggleIsShow = show;\n    for (const toggler of root.querySelectorAll(\".treeItemToggler\")) {\n      toggler.classList.toggle(\"treeItemsHidden\", !show);\n    }\n  }\n\n  /**\n   * Collapse or expand all subtrees of the `container`.\n   * @private\n   */\n  _toggleAllTreeItems() {\n    this._toggleTreeItem(this.container, !this._lastToggleIsShow);\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering(fragment, count, hasAnyNesting = false) {\n    if (hasAnyNesting) {\n      this.container.classList.add(\"treeWithDeepNesting\");\n\n      this._lastToggleIsShow = !fragment.querySelector(\".treeItemsHidden\");\n    }\n    this.container.appendChild(fragment);\n\n    this._dispatchEvent(count);\n  }\n\n  render(params) {\n    throw new Error(\"Not implemented: render\");\n  }\n\n  /**\n   * @private\n   */\n  _updateCurrentTreeItem(treeItem = null) {\n    if (this._currentTreeItem) {\n      // Ensure that the current treeItem-selection is always removed.\n      this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = null;\n    }\n    if (treeItem) {\n      treeItem.classList.add(TREEITEM_SELECTED_CLASS);\n      this._currentTreeItem = treeItem;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _scrollToCurrentTreeItem(treeItem) {\n    if (!treeItem) {\n      return;\n    }\n    // Ensure that the treeItem is *fully* expanded, such that it will first of\n    // all be visible and secondly that scrolling it into view works correctly.\n    let currentNode = treeItem.parentNode;\n    while (currentNode && currentNode !== this.container) {\n      if (currentNode.classList.contains(\"treeItem\")) {\n        const toggler = currentNode.firstElementChild;\n        toggler?.classList.remove(\"treeItemsHidden\");\n      }\n      currentNode = currentNode.parentNode;\n    }\n    this._updateCurrentTreeItem(treeItem);\n\n    this.container.scrollTo(\n      treeItem.offsetLeft,\n      treeItem.offsetTop + TREEITEM_OFFSET_TOP\n    );\n  }\n}\n\nexport { BaseTreeViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  createPromiseCapability,\n  getPdfFilenameFromUrl,\n  PDFDateString,\n} from \"pdfjs-lib\";\nimport { getPageSizeInches, isPortraitOrientation } from \"./ui_utils.js\";\n\nconst DEFAULT_FIELD_CONTENT = \"-\";\n\n// See https://en.wikibooks.org/wiki/Lentis/Conversion_to_the_Metric_Standard_in_the_United_States\nconst NON_METRIC_LOCALES = [\"en-us\", \"en-lr\", \"my\"];\n\n// Should use the format: `width x height`, in portrait orientation.\n// See https://en.wikipedia.org/wiki/Paper_size\nconst US_PAGE_NAMES = {\n  \"8.5x11\": \"Letter\",\n  \"8.5x14\": \"Legal\",\n};\nconst METRIC_PAGE_NAMES = {\n  \"297x420\": \"A3\",\n  \"210x297\": \"A4\",\n};\n\nfunction getPageName(size, isPortrait, pageNames) {\n  const width = isPortrait ? size.width : size.height;\n  const height = isPortrait ? size.height : size.width;\n\n  return pageNames[`${width}x${height}`];\n}\n\n/**\n * @typedef {Object} PDFDocumentPropertiesOptions\n * @property {string} overlayName - Name/identifier for the overlay.\n * @property {Object} fields - Names and elements of the overlay's fields.\n * @property {HTMLDivElement} container - Div container for the overlay.\n * @property {HTMLButtonElement} closeButton - Button for closing the overlay.\n */\n\nclass PDFDocumentProperties {\n  /**\n   * @param {PDFDocumentPropertiesOptions} options\n   * @param {OverlayManager} overlayManager - Manager for the viewer overlays.\n   * @param {EventBus} eventBus - The application event bus.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(\n    { overlayName, fields, container, closeButton },\n    overlayManager,\n    eventBus,\n    l10n\n  ) {\n    this.overlayName = overlayName;\n    this.fields = fields;\n    this.container = container;\n    this.overlayManager = overlayManager;\n    this.l10n = l10n;\n\n    this._reset();\n    // Bind the event listener for the Close button.\n    closeButton.addEventListener(\"click\", this.close.bind(this));\n\n    this.overlayManager.register(\n      this.overlayName,\n      this.container,\n      this.close.bind(this)\n    );\n\n    eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    eventBus._on(\"rotationchanging\", evt => {\n      this._pagesRotation = evt.pagesRotation;\n    });\n\n    this._isNonMetricLocale = true; // The default viewer locale is 'en-us'.\n    l10n.getLanguage().then(locale => {\n      this._isNonMetricLocale = NON_METRIC_LOCALES.includes(locale);\n    });\n  }\n\n  /**\n   * Open the document properties overlay.\n   */\n  async open() {\n    const freezeFieldData = data => {\n      Object.defineProperty(this, \"fieldData\", {\n        value: Object.freeze(data),\n        writable: false,\n        enumerable: true,\n        configurable: true,\n      });\n    };\n\n    await Promise.all([\n      this.overlayManager.open(this.overlayName),\n      this._dataAvailableCapability.promise,\n    ]);\n    const currentPageNumber = this._currentPageNumber;\n    const pagesRotation = this._pagesRotation;\n\n    // If the document properties were previously fetched (for this PDF file),\n    // just update the dialog immediately to avoid redundant lookups.\n    if (\n      this.fieldData &&\n      currentPageNumber === this.fieldData._currentPageNumber &&\n      pagesRotation === this.fieldData._pagesRotation\n    ) {\n      this._updateUI();\n      return;\n    }\n\n    // Get the document properties.\n    const {\n      info,\n      /* metadata, */\n      contentDispositionFilename,\n      contentLength,\n    } = await this.pdfDocument.getMetadata();\n\n    const [\n      fileName,\n      fileSize,\n      creationDate,\n      modificationDate,\n      pageSize,\n      isLinearized,\n    ] = await Promise.all([\n      contentDispositionFilename || getPdfFilenameFromUrl(this.url),\n      this._parseFileSize(contentLength),\n      this._parseDate(info.CreationDate),\n      this._parseDate(info.ModDate),\n      this.pdfDocument.getPage(currentPageNumber).then(pdfPage => {\n        return this._parsePageSize(getPageSizeInches(pdfPage), pagesRotation);\n      }),\n      this._parseLinearization(info.IsLinearized),\n    ]);\n\n    freezeFieldData({\n      fileName,\n      fileSize,\n      title: info.Title,\n      author: info.Author,\n      subject: info.Subject,\n      keywords: info.Keywords,\n      creationDate,\n      modificationDate,\n      creator: info.Creator,\n      producer: info.Producer,\n      version: info.PDFFormatVersion,\n      pageCount: this.pdfDocument.numPages,\n      pageSize,\n      linearized: isLinearized,\n      _currentPageNumber: currentPageNumber,\n      _pagesRotation: pagesRotation,\n    });\n    this._updateUI();\n\n    // Get the correct fileSize, since it may not have been available\n    // or could potentially be wrong.\n    const { length } = await this.pdfDocument.getDownloadInfo();\n    if (contentLength === length) {\n      return; // The fileSize has already been correctly set.\n    }\n    const data = Object.assign(Object.create(null), this.fieldData);\n    data.fileSize = await this._parseFileSize(length);\n\n    freezeFieldData(data);\n    this._updateUI();\n  }\n\n  /**\n   * Close the document properties overlay.\n   */\n  close() {\n    this.overlayManager.close(this.overlayName);\n  }\n\n  /**\n   * Set a reference to the PDF document and the URL in order\n   * to populate the overlay fields with the document properties.\n   * Note that the overlay will contain no information if this method\n   * is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - A reference to the PDF document.\n   * @param {string} url - The URL of the document.\n   */\n  setDocument(pdfDocument, url = null) {\n    if (this.pdfDocument) {\n      this._reset();\n      this._updateUI(true);\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this.pdfDocument = pdfDocument;\n    this.url = url;\n\n    this._dataAvailableCapability.resolve();\n  }\n\n  /**\n   * @private\n   */\n  _reset() {\n    this.pdfDocument = null;\n    this.url = null;\n\n    delete this.fieldData;\n    this._dataAvailableCapability = createPromiseCapability();\n    this._currentPageNumber = 1;\n    this._pagesRotation = 0;\n  }\n\n  /**\n   * Always updates all of the dialog fields, to prevent inconsistent UI state.\n   * NOTE: If the contents of a particular field is neither a non-empty string,\n   *       nor a number, it will fall back to `DEFAULT_FIELD_CONTENT`.\n   * @private\n   */\n  _updateUI(reset = false) {\n    if (reset || !this.fieldData) {\n      for (const id in this.fields) {\n        this.fields[id].textContent = DEFAULT_FIELD_CONTENT;\n      }\n      return;\n    }\n    if (this.overlayManager.active !== this.overlayName) {\n      // Don't bother updating the dialog if has already been closed,\n      // since it will be updated the next time `this.open` is called.\n      return;\n    }\n    for (const id in this.fields) {\n      const content = this.fieldData[id];\n      this.fields[id].textContent =\n        content || content === 0 ? content : DEFAULT_FIELD_CONTENT;\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _parseFileSize(fileSize = 0) {\n    const kb = fileSize / 1024,\n      mb = kb / 1024;\n    if (!kb) {\n      return undefined;\n    }\n    return this.l10n.get(`document_properties_${mb >= 1 ? \"mb\" : \"kb\"}`, {\n      size_mb: mb >= 1 && (+mb.toPrecision(3)).toLocaleString(),\n      size_kb: mb < 1 && (+kb.toPrecision(3)).toLocaleString(),\n      size_b: fileSize.toLocaleString(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  async _parsePageSize(pageSizeInches, pagesRotation) {\n    if (!pageSizeInches) {\n      return undefined;\n    }\n    // Take the viewer rotation into account as well; compare with Adobe Reader.\n    if (pagesRotation % 180 !== 0) {\n      pageSizeInches = {\n        width: pageSizeInches.height,\n        height: pageSizeInches.width,\n      };\n    }\n    const isPortrait = isPortraitOrientation(pageSizeInches);\n\n    let sizeInches = {\n      width: Math.round(pageSizeInches.width * 100) / 100,\n      height: Math.round(pageSizeInches.height * 100) / 100,\n    };\n    // 1in == 25.4mm; no need to round to 2 decimals for millimeters.\n    let sizeMillimeters = {\n      width: Math.round(pageSizeInches.width * 25.4 * 10) / 10,\n      height: Math.round(pageSizeInches.height * 25.4 * 10) / 10,\n    };\n\n    let rawName =\n      getPageName(sizeInches, isPortrait, US_PAGE_NAMES) ||\n      getPageName(sizeMillimeters, isPortrait, METRIC_PAGE_NAMES);\n\n    if (\n      !rawName &&\n      !(\n        Number.isInteger(sizeMillimeters.width) &&\n        Number.isInteger(sizeMillimeters.height)\n      )\n    ) {\n      // Attempt to improve the page name detection by falling back to fuzzy\n      // matching of the metric dimensions, to account for e.g. rounding errors\n      // and/or PDF files that define the page sizes in an imprecise manner.\n      const exactMillimeters = {\n        width: pageSizeInches.width * 25.4,\n        height: pageSizeInches.height * 25.4,\n      };\n      const intMillimeters = {\n        width: Math.round(sizeMillimeters.width),\n        height: Math.round(sizeMillimeters.height),\n      };\n\n      // Try to avoid false positives, by only considering \"small\" differences.\n      if (\n        Math.abs(exactMillimeters.width - intMillimeters.width) < 0.1 &&\n        Math.abs(exactMillimeters.height - intMillimeters.height) < 0.1\n      ) {\n        rawName = getPageName(intMillimeters, isPortrait, METRIC_PAGE_NAMES);\n        if (rawName) {\n          // Update *both* sizes, computed above, to ensure that the displayed\n          // dimensions always correspond to the detected page name.\n          sizeInches = {\n            width: Math.round((intMillimeters.width / 25.4) * 100) / 100,\n            height: Math.round((intMillimeters.height / 25.4) * 100) / 100,\n          };\n          sizeMillimeters = intMillimeters;\n        }\n      }\n    }\n\n    const [{ width, height }, unit, name, orientation] = await Promise.all([\n      this._isNonMetricLocale ? sizeInches : sizeMillimeters,\n      this.l10n.get(\n        `document_properties_page_size_unit_${\n          this._isNonMetricLocale ? \"inches\" : \"millimeters\"\n        }`\n      ),\n      rawName &&\n        this.l10n.get(\n          `document_properties_page_size_name_${rawName.toLowerCase()}`\n        ),\n      this.l10n.get(\n        `document_properties_page_size_orientation_${\n          isPortrait ? \"portrait\" : \"landscape\"\n        }`\n      ),\n    ]);\n\n    return this.l10n.get(\n      `document_properties_page_size_dimension_${name ? \"name_\" : \"\"}string`,\n      {\n        width: width.toLocaleString(),\n        height: height.toLocaleString(),\n        unit,\n        name,\n        orientation,\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  async _parseDate(inputDate) {\n    const dateObject = PDFDateString.toDateObject(inputDate);\n    if (!dateObject) {\n      return undefined;\n    }\n    return this.l10n.get(\"document_properties_date_string\", {\n      date: dateObject.toLocaleDateString(),\n      time: dateObject.toLocaleTimeString(),\n    });\n  }\n\n  /**\n   * @private\n   */\n  _parseLinearization(isLinearized) {\n    return this.l10n.get(\n      `document_properties_linearized_${isLinearized ? \"yes\" : \"no\"}`\n    );\n  }\n}\n\nexport { PDFDocumentProperties };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FindState } from \"./pdf_find_controller.js\";\n\nconst MATCHES_COUNT_LIMIT = 1000;\n\n/**\n * Creates a \"search bar\" given a set of DOM elements that act as controls\n * for searching or for setting search preferences in the UI. This object\n * also sets up the appropriate events for the controls. Actual searching\n * is done by PDFFindController.\n */\nclass PDFFindBar {\n  constructor(options, eventBus, l10n) {\n    this.opened = false;\n\n    this.bar = options.bar;\n    this.toggleButton = options.toggleButton;\n    this.findField = options.findField;\n    this.highlightAll = options.highlightAllCheckbox;\n    this.currentPage = options.findCurrentPageCheckbox;\n    this.pageRange = options.findPageRangeField;\n    this.caseSensitive = options.caseSensitiveCheckbox;\n    this.entireWord = options.entireWordCheckbox;\n    this.findMsg = options.findMsg;\n    this.findResultsCount = options.findResultsCount;\n    this.findPreviousButton = options.findPreviousButton;\n    this.findNextButton = options.findNextButton;\n    this.findFieldMultiline = options.findFieldMultiline || null; // #201\n    this.multipleSearchTexts = options.findMultipleSearchTextsCheckbox || null; // #201\n    this.ignoreAccents = options.ignoreAccentsCheckbox || null; // #177\n    this.fuzzySearch = options.fuzzyCheckbox || null; // #304\n\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    // Add event listeners to the DOM elements.\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    this.findFieldMultiline.addEventListener(\"input\", () => {\n      // #201\n      this.dispatchEvent(\"\");\n    });\n\n    this.findField.addEventListener(\"input\", () => {\n      this.dispatchEvent(\"\");\n    });\n\n    this.bar.addEventListener(\"keydown\", e => {\n      switch (e.keyCode) {\n        case 13: // Enter\n          if (e.target === this.findField) {\n            this.dispatchEvent(\"again\", e.shiftKey);\n          }\n          break;\n        case 27: // Escape\n          this.close();\n          break;\n      }\n    });\n\n    this.findPreviousButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", true);\n    });\n\n    this.findNextButton.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"again\", false);\n    });\n\n    this.highlightAll.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"highlightallchange\");\n    });\n\n    this.caseSensitive.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"casesensitivitychange\");\n    });\n\n    this.entireWord.addEventListener(\"click\", () => {\n      this.dispatchEvent(\"entirewordchange\");\n    });\n\n    this.multipleSearchTexts.addEventListener(\"click\", () => {\n      // #201\n      this.dispatchEvent(\"multiplesearchtextschange\"); // #201\n    }); // #201\n\n    this.ignoreAccents.addEventListener(\"click\", () => {\n      // #177\n      this.dispatchEvent(\"ignoreAccentsChange\"); // #177\n    }); // #177\n\n    this.fuzzySearch.addEventListener(\"click\", () => { // #304\n      this.dispatchEvent(\"fuzzySearchChange\"); // #304\n    }); // #304\n\n    this.currentPage.addEventListener(\"click\", () => { // #802\n      this.dispatchEvent(\"currentPageChange\"); // #802\n    }); // #802\n\n    this.pageRange.addEventListener(\"input\", () => { // #802\n      this.dispatchEvent(\"pageRangeChange\"); // #802\n    }); // #802\n\n    this.eventBus._on(\"resize\", this._adjustWidth.bind(this));\n  }\n\n  reset() {\n    this.updateUIState();\n  }\n\n  dispatchEvent(type, findPrev = false) {\n    this.eventBus.dispatch(\"find\", {\n      source: this,\n      type,\n      query: this.findFieldMultiline.classList.contains(\"hidden\")\n        ? this.findField.value\n        : this.findFieldMultiline.value, // #201\n      phraseSearch: !this.multipleSearchTexts.checked, // #201\n      caseSensitive: this.caseSensitive.checked,\n      entireWord: this.entireWord.checked,\n      ignoreAccents: this.ignoreAccents.checked, // #177\n      fuzzySearch: this.fuzzySearch.checked, // #304\n      highlightAll: this.highlightAll.checked,\n      currentPage: this.currentPage.checked, // #832\n      pageRange: this.pageRange.value, // #832\n      findPrevious: findPrev,\n    });\n  }\n\n  updateUIState(state, previous, matchesCount) {\n    let findMsg = Promise.resolve(\"\");\n    let status = \"\";\n\n    switch (state) {\n      case FindState.FOUND:\n        break;\n      case FindState.PENDING:\n        status = \"pending\";\n        break;\n      case FindState.NOT_FOUND:\n        findMsg = this.l10n.get(\"find_not_found\");\n        status = \"notFound\";\n        break;\n      case FindState.WRAPPED:\n        findMsg = this.l10n.get(`find_reached_${previous ? \"top\" : \"bottom\"}`);\n        break;\n    }\n    this.findField.setAttribute(\"data-status\", status);\n    this.findFieldMultiline.classList.toggle(\"notFound\", status === \"notFound\"); // #201\n    this.findFieldMultiline.setAttribute(\"data-status\", status); // #201\n\n    findMsg.then(msg => {\n      this.findMsg.textContent = msg;\n      this._adjustWidth();\n    });\n\n    this.updateResultsCount(matchesCount);\n  }\n\n  updateResultsCount({ current = 0, total = 0 } = {}) {\n    const limit = MATCHES_COUNT_LIMIT;\n    let matchCountMsg = Promise.resolve(\"\");\n\n    if (total > 0) {\n      if (total > limit) {\n        let key = \"find_match_count_limit\";\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n          // TODO: Remove this hard-coded `[other]` form once plural support has\n          // been implemented in the mozilla-central specific `l10n.js` file.\n          key += \"[other]\";\n        }\n        matchCountMsg = this.l10n.get(key, { limit });\n      } else {\n        let key = \"find_match_count\";\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n          // TODO: Remove this hard-coded `[other]` form once plural support has\n          // been implemented in the mozilla-central specific `l10n.js` file.\n          key += \"[other]\";\n        }\n        matchCountMsg = this.l10n.get(key, { current, total });\n      }\n    }\n    matchCountMsg.then(msg => {\n      this.findResultsCount.textContent = msg;\n      this.findResultsCount.classList.toggle(\"hidden\", !total);\n      // Since `updateResultsCount` may be called from `PDFFindController`,\n      // ensure that the width of the findbar is always updated correctly.\n      this._adjustWidth();\n    });\n  }\n\n  open() {\n    if (!this.opened) {\n      this.opened = true;\n      this.toggleButton.classList.add(\"toggled\");\n      this.toggleButton.setAttribute(\"aria-expanded\", \"true\");\n      this.bar.classList.remove(\"hidden\");\n    }\n    this.findField.select();\n    this.findField.focus();\n    this.dispatchEvent(\"\"); // #206\n\n    this._adjustWidth();\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"false\");\n    this.bar.classList.add(\"hidden\");\n\n    this.eventBus.dispatch(\"findbarclose\", { source: this });\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _adjustWidth() {\n    if (!this.opened) {\n      return;\n    }\n\n    // The find bar has an absolute position and thus the browser extends\n    // its width to the maximum possible width once the find bar does not fit\n    // entirely within the window anymore (and its elements are automatically\n    // wrapped). Here we detect and fix that.\n    this.bar.classList.remove(\"wrapContainers\");\n\n    const findbarHeight = this.bar.clientHeight;\n    const inputContainerHeight = this.bar.firstElementChild.clientHeight;\n\n    if (findbarHeight > inputContainerHeight) {\n      // The findbar is taller than the input container, which means that\n      // the browser wrapped some of the elements. For a consistent look,\n      // wrap all of them to adjust the width of the find bar.\n      this.bar.classList.add(\"wrapContainers\");\n    }\n  }\n}\n\nexport { PDFFindBar };\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../src/display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n// eslint-disable-next-line no-unused-vars\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { deburr } from \"../external/lodash.deburr/index.js\"; // #177\nimport { getCharacterType } from \"./pdf_find_utils.js\";\nimport { Levenshtein } from \"../external/fast-levenshtein/levenshtein.js\";\nimport { scrollIntoView } from \"./ui_utils.js\";\n\nconst FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3,\n};\n\nconst FIND_TIMEOUT = 250; // ms\nconst MATCH_SCROLL_OFFSET_TOP = -50; // px\nconst MATCH_SCROLL_OFFSET_LEFT = -400; // px\n\nconst CHARACTERS_TO_NORMALIZE = {\n  \"\\u2010\": \"-\", // Hyphen\n  \"\\u2018\": \"'\", // Left single quotation mark\n  \"\\u2019\": \"'\", // Right single quotation mark\n  \"\\u201A\": \"'\", // Single low-9 quotation mark\n  \"\\u201B\": \"'\", // Single high-reversed-9 quotation mark\n  \"\\u201C\": '\"', // Left double quotation mark\n  \"\\u201D\": '\"', // Right double quotation mark\n  \"\\u201E\": '\"', // Double low-9 quotation mark\n  \"\\u201F\": '\"', // Double high-reversed-9 quotation mark\n  \"\\u00BC\": \"1/4\", // Vulgar fraction one quarter\n  \"\\u00BD\": \"1/2\", // Vulgar fraction one half\n  \"\\u00BE\": \"3/4\", // Vulgar fraction three quarters\n};\n\nlet normalizationRegex = null;\nfunction normalize(text) {\n  if (!normalizationRegex) {\n    // Compile the regular expression for text normalization once.\n    // Compile the regular expression for text normalization once.\n    const replace = Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");\n    normalizationRegex = new RegExp(`[${replace}]`, \"g\");\n  }\n  let diffs = null;\n  const normalizedText = text.replace(normalizationRegex, function (ch, index) {\n    const normalizedCh = CHARACTERS_TO_NORMALIZE[ch],\n      diff = normalizedCh.length - ch.length;\n    if (diff !== 0) {\n      (diffs ||= []).push([index, diff]);\n    }\n    return normalizedCh;\n  });\n\n  return [normalizedText, diffs];\n}\n\n// Determine the original, non-normalized, match index such that highlighting of\n// search results is correct in the `textLayer` for strings containing e.g. \"½\"\n// characters; essentially \"inverting\" the result of the `normalize` function.\nfunction getOriginalIndex(matchIndex, diffs = null) {\n  if (!diffs) {\n    return matchIndex;\n  }\n  let totalDiff = 0;\n  for (const [index, diff] of diffs) {\n    const currentIndex = index + totalDiff;\n\n    if (currentIndex >= matchIndex) {\n      break;\n    }\n    if (currentIndex + diff > matchIndex) {\n      totalDiff += matchIndex - currentIndex;\n      break;\n    }\n    totalDiff += diff;\n  }\n  return matchIndex - totalDiff;\n}\n\n/**\n * @typedef {Object} PDFFindControllerOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * Provides search functionality to find a given string in a PDF document.\n */\nclass PDFFindController {\n  /**\n   * @param {PDFFindControllerOptions} options\n   */\n   /** #492 modified by ngx-extended-pdf-viewer */\n  constructor({ linkService, eventBus, pageViewMode }) {\n    this._linkService = linkService;\n    this._eventBus = eventBus;\n    this._pageViewMode = pageViewMode;\n    /** #492 end of modification */\n    this._reset();\n    eventBus._on(\"find\", this._onFind.bind(this));\n    eventBus._on(\"findbarclose\", this._onFindBarClose.bind(this));\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      this.executeCommand = (cmd, state) => {\n        Window['ngxConsole'].error(\n          \"Deprecated method `PDFFindController.executeCommand` called, \" +\n            'please dispatch a \"find\"-event using the EventBus instead.'\n        );\n\n        const eventState = Object.assign(Object.create(null), state, {\n          type: cmd.substring(\"find\".length),\n        });\n        this._onFind(eventState);\n      };\n    }\n  }\n\n  get highlightMatches() {\n    return this._highlightMatches;\n  }\n\n  get pageMatches() {\n    return this._pageMatches;\n  }\n\n  get pageMatchesColor() {\n    // #201\n    return this._pageMatchesColor; // #201\n  } // #201\n\n  get pageMatchesLength() {\n    return this._pageMatchesLength;\n  }\n\n  get selected() {\n    return this._selected;\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  /**\n   * Set a reference to the PDF document in order to search it.\n   * Note that searching is not possible if this method is not called.\n   *\n   * @param {PDFDocumentProxy} pdfDocument - The PDF document to search.\n   */\n  setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      this._reset();\n    }\n    if (!pdfDocument) {\n      return;\n    }\n    this._pdfDocument = pdfDocument;\n    this._firstPageCapability.resolve();\n  }\n\n  /**\n   * @private\n   */\n  _onFind(state) {\n    if (!state) {\n      return;\n    }\n    const pdfDocument = this._pdfDocument;\n    const { type } = state;\n\n    if (this._state === null || this._shouldDirtyMatch(state)) {\n      this._dirtyMatch = true;\n    }\n    this._state = state;\n    if (type !== \"highlightallchange\") {\n      this._updateUIState(FindState.PENDING);\n    }\n\n    this._firstPageCapability.promise.then(() => {\n      // If the document was closed before searching began, or if the search\n      // operation was relevant for a previously opened document, do nothing.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      this._extractText();\n\n      const findbarClosed = !this._highlightMatches;\n      const pendingTimeout = !!this._findTimeout;\n\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      if (!type) {\n        // Trigger the find action with a small delay to avoid starting the\n        // search when the user is still typing (saving resources).\n        this._findTimeout = setTimeout(() => {\n          this._nextMatch();\n          this._findTimeout = null;\n        }, FIND_TIMEOUT);\n      } else if (this._dirtyMatch) {\n        // Immediately trigger searching for non-'find' operations, when the\n        // current state needs to be reset and matches re-calculated.\n        this._nextMatch();\n      } else if (type === \"again\") {\n        this._nextMatch();\n\n        // When the findbar was previously closed, and `highlightAll` is set,\n        // ensure that the matches on all active pages are highlighted again.\n        if (findbarClosed && this._state.highlightAll) {\n          this._updateAllPages();\n        }\n      } else if (type === \"highlightallchange\") {\n        // If there was a pending search operation, synchronously trigger a new\n        // search *first* to ensure that the correct matches are highlighted.\n        if (pendingTimeout) {\n          this._nextMatch();\n        } else {\n          this._highlightMatches = true;\n        }\n        this._updateAllPages(); // Update the highlighting on all active pages.\n      } else {\n        this._nextMatch();\n      }\n    });\n  }\n\n  scrollMatchIntoView({\n    element = null,\n    selectedLeft = 0,\n    pageIndex = -1,\n    matchIndex = -1,\n  }) {\n    if (!this._scrollMatches || !element) {\n      return;\n    } else if (matchIndex === -1 || matchIndex !== this._selected.matchIdx) {\n      return;\n    } else if (pageIndex === -1 || pageIndex !== this._selected.pageIdx) {\n      return;\n    }\n    this._scrollMatches = false; // Ensure that scrolling only happens once.\n\n    const spot = {\n      top: MATCH_SCROLL_OFFSET_TOP,\n      left: selectedLeft + MATCH_SCROLL_OFFSET_LEFT,\n    };\n    /** #492 modified by ngx-extended-pdf-viewer */\n    scrollIntoView(element, spot, /* scrollMatches = */ true, this._pageViewMode === 'infinite-scroll');\n    /** #492 end of modification */\n  }\n\n  _reset() {\n    this._highlightMatches = false;\n    this._scrollMatches = false;\n    this._pdfDocument = null;\n    this._pageMatches = [];\n    this._pageMatchesLength = [];\n    this._pageMatchesColor = []; // #201\n    this._state = null;\n    // Currently selected match.\n    this._selected = {\n      pageIdx: -1,\n      matchIdx: -1,\n    };\n    // Where the find algorithm currently is in the document.\n    this._offset = {\n      pageIdx: null,\n      matchIdx: null,\n      wrapped: false,\n    };\n    this._extractTextPromises = [];\n    this._pageContents = []; // Stores the normalized text for each page.\n    this._pageDiffs = [];\n    this._matchesCountTotal = 0;\n    this._pagesToSearch = null;\n    this._pendingFindMatches = new Set();\n    this._resumePageIdx = null;\n    this._dirtyMatch = false;\n    clearTimeout(this._findTimeout);\n    this._findTimeout = null;\n\n    this._firstPageCapability = createPromiseCapability();\n  }\n\n  /**\n   * @type {string} The (current) normalized search query.\n   */\n  get _query() {\n    if (this._state.query !== this._rawQuery) {\n      this._rawQuery = this._state.query;\n      [this._normalizedQuery] = normalize(this._state.query);\n    }\n    return this._normalizedQuery;\n  }\n\n  _shouldDirtyMatch(state) {\n    // When the search query changes, regardless of the actual search command\n    // used, always re-calculate matches to avoid errors (fixes bug 1030622).\n    if (state.query !== this._state.query) {\n      return true;\n    }\n    switch (state.type) {\n      case \"again\":\n        const pageNumber = this._selected.pageIdx + 1;\n        const linkService = this._linkService;\n        // Only treat a 'findagain' event as a new search operation when it's\n        // *absolutely* certain that the currently selected match is no longer\n        // visible, e.g. as a result of the user scrolling in the document.\n        //\n        // NOTE: If only a simple `this._linkService.page` check was used here,\n        // there's a risk that consecutive 'findagain' operations could \"skip\"\n        // over matches at the top/bottom of pages thus making them completely\n        // inaccessible when there's multiple pages visible in the viewer.\n        if (\n          pageNumber >= 1 &&\n          pageNumber <= linkService.pagesCount &&\n          pageNumber !== linkService.page &&\n          !linkService.isPageVisible(pageNumber)\n        ) {\n          return true;\n        }\n        return false;\n      case \"highlightallchange\":\n        return false;\n    }\n    return true;\n  }\n\n  /**\n   * Helper for multi-term search that fills the `matchesWithLength` array\n   * and handles cases where one search term includes another search term (for\n   * example, \"tamed tame\" or \"this is\"). It looks for intersecting terms in\n   * the `matches` and keeps elements with a longer match length.\n   */\n  _prepareMatches(\n    matchesWithLength,\n    matches,\n    matchesLength,\n    matchesColor // #201\n  ) {\n    function isSubTerm(currentIndex) {\n      const currentElem = matchesWithLength[currentIndex];\n      const nextElem = matchesWithLength[currentIndex + 1];\n\n      // Check for cases like \"TAMEd TAME\".\n      if (\n        currentIndex < matchesWithLength.length - 1 &&\n        currentElem.match === nextElem.match\n      ) {\n        currentElem.skipped = true;\n        return true;\n      }\n\n      // Check for cases like \"thIS IS\".\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        const prevElem = matchesWithLength[i];\n        if (prevElem.skipped) {\n          continue;\n        }\n        if (prevElem.match + prevElem.matchLength < currentElem.match) {\n          break;\n        }\n        if (\n          prevElem.match + prevElem.matchLength >=\n          currentElem.match + currentElem.matchLength\n        ) {\n          currentElem.skipped = true;\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Sort the array of `{ match: <match>, matchLength: <matchLength> }`\n    // objects on increasing index first and on the length otherwise.\n    matchesWithLength.sort(function (a, b) {\n      return a.match === b.match\n        ? a.matchLength - b.matchLength\n        : a.match - b.match;\n    });\n    for (let i = 0, len = matchesWithLength.length; i < len; i++) {\n      if (isSubTerm(i)) {\n        continue;\n      }\n      matches.push(matchesWithLength[i].match);\n      matchesLength.push(matchesWithLength[i].matchLength);\n      matchesColor.push(matchesWithLength[i].color); // #201\n    }\n  }\n\n  /**\n   * Determine if the search query constitutes a \"whole word\", by comparing the\n   * first/last character type with the preceding/following character type.\n   */\n  _isEntireWord(content, startIdx, length) {\n    if (startIdx > 0) {\n      const first = content.charCodeAt(startIdx);\n      const limit = content.charCodeAt(startIdx - 1);\n      if (getCharacterType(first) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    const endIdx = startIdx + length - 1;\n    if (endIdx < content.length - 1) {\n      const last = content.charCodeAt(endIdx);\n      const limit = content.charCodeAt(endIdx + 1);\n      if (getCharacterType(last) === getCharacterType(limit)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  _calculateFuzzyMatch(query, pageIndex, pageContent, pageDiffs) {\n    const matches = [];\n    const matchesLength = [];\n\n    const queryLen = query.length;\n    const shortLen = queryLen < 5 ? queryLen : 5;\n    const maxDistance = Math.round(queryLen / 5);\n    const shortQuery = query.substring(0, shortLen);\n    const options = {\n      useCollator: true,\n    };\n\n    for (let i = 0; i < pageContent.length - queryLen; i++) {\n      const shortCurrentContent = pageContent.substring(i, i + shortLen);\n      if (Levenshtein.distance(shortQuery, shortCurrentContent, options) < 3) {\n        const currentContent = pageContent.substring(i, i + queryLen);\n\n        const distance = Levenshtein.distance(query, currentContent, options);\n        if (distance <= maxDistance) {\n          // we've found a decent match.\n          // But maybe the match gets better one letter ahead?\n          if (i + 1 < pageContent.length - queryLen) {\n            const nextCurrentContent = pageContent.substring(i + 1, i + 1 + queryLen);\n            const nextDistance = Levenshtein.distance(query, nextCurrentContent, options);\n            if (distance >= nextDistance) {\n              continue;\n            }\n          }\n\n          const originalMatchIdx = getOriginalIndex(i, pageDiffs),\n            matchEnd = i + queryLen - 1,\n            originalQueryLen =\n              getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n          matches.push(originalMatchIdx);\n          matchesLength.push(originalQueryLen);\n          i += queryLen - 1;\n        }\n      }\n    }\n    this._pageMatches[pageIndex] = matches;\n    this._pageMatchesLength[pageIndex] = matchesLength;\n  }\n\n  _calculatePhraseMatch(\n    query,\n    pageIndex,\n    pageContent,\n    pageDiffs,\n    entireWord,\n    ignoreAccents\n  ) {\n    // #177\n    if (ignoreAccents) {\n      // #177\n      pageContent = deburr(pageContent); // #177\n      query = deburr(query); // #177\n    } // #177\n\n    const matches = [],\n      matchesLength = [];\n    const queryLen = query.length;\n\n    let matchIdx = -queryLen;\n    while (true) {\n      matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n      if (matchIdx === -1) {\n        break;\n      }\n      if (entireWord && !this._isEntireWord(pageContent, matchIdx, queryLen)) {\n        continue;\n      }\n      const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n        matchEnd = matchIdx + queryLen - 1,\n        originalQueryLen =\n          getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n      matches.push(originalMatchIdx);\n      matchesLength.push(originalQueryLen);\n    }\n    this._pageMatches[pageIndex] = matches;\n    this._pageMatchesLength[pageIndex] = matchesLength;\n  }\n\n  _calculateWordMatch(\n    query,\n    pageIndex,\n    pageContent,\n    pageDiffs,\n    entireWord,\n    ignoreAccents\n  ) {\n    // #177\n    if (ignoreAccents) {\n      // #177\n      pageContent = deburr(pageContent); // #177\n      query = deburr(query); // #177\n    } // #177\n    const matchesWithLength = [];\n\n    // Divide the query into pieces and search for text in each piece.\n    const queryArray = query.includes(\"\\n\")\n      ? query.trim().split(/\\n+/g)\n      : query.trim().match(/\\S+/g); // #201\n\n    for (let i = 0, len = queryArray.length; i < len; i++) {\n      const subquery = queryArray[i];\n      const subqueryLen = subquery.length;\n      if (subqueryLen === 0) {\n        continue;\n      }\n\n      let matchIdx = -subqueryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        if (\n          entireWord &&\n          !this._isEntireWord(pageContent, matchIdx, subqueryLen)\n        ) {\n          continue;\n        }\n        const originalMatchIdx = getOriginalIndex(matchIdx, pageDiffs),\n          matchEnd = matchIdx + subqueryLen - 1,\n          originalQueryLen =\n            getOriginalIndex(matchEnd, pageDiffs) - originalMatchIdx + 1;\n\n        // Other searches do not, so we store the length.\n        matchesWithLength.push({\n          match: originalMatchIdx,\n          matchLength: originalQueryLen,\n          skipped: false,\n          color: i, // #201\n        });\n      }\n    }\n\n    // Prepare arrays for storing the matches.\n    this._pageMatchesLength[pageIndex] = [];\n    this._pageMatchesColor[pageIndex] = []; // #201\n    this._pageMatches[pageIndex] = [];\n\n    // Sort `matchesWithLength`, remove intersecting terms and put the result\n    // into the two arrays.\n    this._prepareMatches(\n      matchesWithLength,\n      this._pageMatches[pageIndex],\n      this._pageMatchesLength[pageIndex],\n      this._pageMatchesColor[pageIndex] // #201\n    );\n  }\n\n  // #832 modification by ngx-extended-pdf-viewer\n  _isInPageRanges(page = 1, commaSeparatedRanges = \"1,3,6-7\") {\n    try {\n      if (!commaSeparatedRanges) {\n        return true;\n      }\n      const parts = commaSeparatedRanges.split(\",\");\n      return parts.some(range => this._isInPageRange(page, range));\n    } catch (e) {\n      return true;\n    }\n  }\n\n  _isInPageRange(page = 1, range = \"6-7\") {\n    try {\n      if (!range) {\n        return true;\n      }\n      if (range.includes(\"-\")) {\n        const parts = range.split(\"-\");\n        const from = parts[0].trim();\n        if (from.length > 0) {\n          if (page < Number(from)) {\n            return false;\n          }\n        }\n        const to = parts[1].trim();\n        if (to.length > 0) {\n          if (page > Number(to)) {\n            return false;\n          }\n        }\n      } else {\n        const from = range.trim();\n        if (from.length > 0) {\n          if (Number(from) === page) {\n            return true;\n          } else {\n            return false;\n          }\n        }\n      }\n      return true;\n    } catch (e) {\n      return true;\n    }\n  }\n  // #832 end of modification by ngx-extended-pdf-viewer\n\n  _calculateMatch(pageIndex) {\n    if (!this.state) {\n      return;\n    }\n    let pageContent = this._pageContents[pageIndex];\n    const pageDiffs = this._pageDiffs[pageIndex];\n    let query = this._query;\n    const {\n      caseSensitive,\n      entireWord,\n      ignoreAccents, // #177\n      fuzzySearch, // #304\n      phraseSearch,\n      currentPage, // #832\n      pageRange, // #832\n    } = this._state;\n\n    // #832 modification by ngx-extended-pdf-viewer\n    let ignoreCurrentPage = false;\n    if (currentPage) {\n      if (pageIndex !== this._linkService.page - 1) {\n        // exclude everything but the current page from the search results\n        ignoreCurrentPage = true;\n        this._pageMatches[pageIndex] = [];\n      }\n    }\n    if (!this._isInPageRanges(pageIndex + 1, pageRange)) {\n      ignoreCurrentPage = true;\n      this._pageMatches[pageIndex] = [];\n    }\n    // #832 end of modification by ngx-extended-pdf-viewer\n\n    if (query.length === 0) {\n      // Do nothing: the matches should be wiped out already.\n      return;\n    }\n    if (!ignoreCurrentPage) { // #832 modification by ngx-extended-pdf-viewer\n      if (!caseSensitive) {\n        pageContent = pageContent.toLowerCase();\n        query = query.toLowerCase();\n      }\n\n      if (fuzzySearch) {\n        if (query.length <= 2) {\n          this._calculatePhraseMatch(\n            query,\n            pageIndex,\n            pageContent,\n            pageDiffs,\n            false\n          );\n        } else {\n          this._calculateFuzzyMatch(query, pageIndex, pageContent, pageDiffs);\n        }\n      } else if (phraseSearch) {\n        this._calculatePhraseMatch(\n          query,\n          pageIndex,\n          pageContent,\n          pageDiffs,\n          entireWord,\n          ignoreAccents\n        ); // #177\n      } else {\n        this._calculateWordMatch(\n          query,\n          pageIndex,\n          pageContent,\n          pageDiffs,\n          entireWord,\n          ignoreAccents\n        ); // #177\n      }\n    } // #832 modification by ngx-extended-pdf-viewer\n    // When `highlightAll` is set, ensure that the matches on previously\n    // rendered (and still active) pages are correctly highlighted.\n    if (this._state.highlightAll) {\n      this._updatePage(pageIndex);\n    }\n    if (this._resumePageIdx === pageIndex) {\n      this._resumePageIdx = null;\n      this._nextPageMatch();\n    }\n\n    // Update the match count.\n    const pageMatchesCount = this._pageMatches[pageIndex].length;\n    if (pageMatchesCount > 0) {\n      this._matchesCountTotal += pageMatchesCount;\n      this._updateUIResultsCount();\n    } else if (pageIndex + 1 === this._pageContents.length && this._matchesCountTotal === 0) { // #832 modification by ngx-extended-pdf-viewer\n      this._updateUIResultsCount(); // #832 modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  _extractText() {\n    // Perform text extraction once if this method is called multiple times.\n    if (this._extractTextPromises.length > 0) {\n      return;\n    }\n\n    let promise = Promise.resolve();\n    for (let i = 0, ii = this._linkService.pagesCount; i < ii; i++) {\n      const extractTextCapability = createPromiseCapability();\n      this._extractTextPromises[i] = extractTextCapability.promise;\n\n      promise = promise.then(() => {\n        if (this._pdfDocument && this._extractTextPromises.length > 0) {\n          return this._pdfDocument\n            .getPage(i + 1)\n            .then(pdfPage => {\n              return pdfPage.getTextContent({\n                normalizeWhitespace: true,\n              });\n            })\n            .then(\n              textContent => {\n                const textItems = textContent.items;\n                const strBuf = [];\n\n                for (let j = 0, jj = textItems.length; j < jj; j++) {\n                  strBuf.push(textItems[j].str);\n                }\n\n                // Store the normalized page content (text items) as one string.\n                [this._pageContents[i], this._pageDiffs[i]] = normalize(\n                  strBuf.join(\"\")\n                );\n\n                extractTextCapability.resolve(i);\n              },\n              reason => {\n                Window['ngxConsole'].error(\n                  `Unable to get text content for page ${i + 1}`,\n                  reason\n                );\n                // Page error -- assuming no text content.\n                this._pageContents[i] = \"\";\n                this._pageDiffs[i] = null;\n                extractTextCapability.resolve(i);\n              }\n          );\n        }\n        // fall-through if the document has been removed from memory\n        return Promise.resolve();\n      });\n    }\n  }\n\n  _updatePage(index) {\n    if (this._scrollMatches && this._selected.pageIdx === index) {\n      // If the page is selected, scroll the page into view, which triggers\n      // rendering the page, which adds the text layer. Once the text layer\n      // is built, it will attempt to scroll the selected match into view.\n      this._linkService.page = index + 1;\n    }\n\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: index,\n    });\n  }\n\n  _updateAllPages() {\n    this._eventBus.dispatch(\"updatetextlayermatches\", {\n      source: this,\n      pageIndex: -1,\n    });\n  }\n\n  _nextMatch() {\n    const previous = this._state.findPrevious;\n    const currentPageIndex = this._linkService.page - 1;\n    const numPages = this._linkService.pagesCount;\n\n    this._highlightMatches = true;\n\n    if (this._dirtyMatch) {\n      // Need to recalculate the matches, reset everything.\n      this._dirtyMatch = false;\n      this._selected.pageIdx = this._selected.matchIdx = -1;\n      this._offset.pageIdx = currentPageIndex;\n      this._offset.matchIdx = null;\n      this._offset.wrapped = false;\n      this._resumePageIdx = null;\n      this._pageMatches.length = 0;\n      this._pageMatchesLength.length = 0;\n      this._pageMatchesColor.length = 0; // #201\n      this._matchesCountTotal = 0;\n\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n\n      // #832 modification by ngx-extended-pdf-viewer:\n      // search the current page only\n      const { currentPage } = this.state;\n      let startPage = 0;\n      let finalPage = numPages - 1;\n      if (currentPage) {\n        startPage = this._linkService.page - 1;\n        finalPage = startPage;\n      }\n\n      for (let i = startPage; i <= finalPage; i++) {\n        // #832 end of modification by ngx-extended-pdf-viewer\n        // Start finding the matches as soon as the text is extracted.\n        if (this._pendingFindMatches.has(i)) {\n          continue;\n        }\n        this._pendingFindMatches.add(i);\n        this._extractTextPromises[i].then(pageIdx => {\n          this._pendingFindMatches.delete(pageIdx);\n          this._calculateMatch(pageIdx);\n        });\n      }\n    }\n\n    // If there's no query there's no point in searching.\n    if (this._query === \"\") {\n      this._updateUIState(FindState.FOUND);\n      return;\n    }\n    // If we're waiting on a page, we return since we can't do anything else.\n    if (this._resumePageIdx) {\n      return;\n    }\n\n    const offset = this._offset;\n    // Keep track of how many pages we should maximally iterate through.\n    this._pagesToSearch = numPages;\n    // If there's already a `matchIdx` that means we are iterating through a\n    // page's matches.\n    if (offset.matchIdx !== null) {\n      const numPageMatches = this._pageMatches[offset.pageIdx].length;\n      if (\n        (!previous && offset.matchIdx + 1 < numPageMatches) ||\n        (previous && offset.matchIdx > 0)\n      ) {\n        // The simple case; we just have advance the matchIdx to select\n        // the next match on the page.\n        offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n        this._updateMatch(/* found = */ true);\n        return;\n      }\n      // We went beyond the current page's matches, so we advance to\n      // the next page.\n      this._advanceOffsetPage(previous);\n    }\n    // Start searching through the page.\n    this._nextPageMatch();\n  }\n\n  _matchesReady(matches) {\n    const offset = this._offset;\n    const numMatches = matches.length;\n    const previous = this._state.findPrevious;\n\n    if (numMatches) {\n      // There were matches for the page, so initialize `matchIdx`.\n      offset.matchIdx = previous ? numMatches - 1 : 0;\n      this._updateMatch(/* found = */ true);\n      return true;\n    }\n    // No matches, so attempt to search the next page.\n    this._advanceOffsetPage(previous);\n    if (offset.wrapped) {\n      offset.matchIdx = null;\n      if (this._pagesToSearch < 0) {\n        // No point in wrapping again, there were no matches.\n        this._updateMatch(/* found = */ false);\n        // While matches were not found, searching for a page\n        // with matches should nevertheless halt.\n        return true;\n      }\n    }\n    // Matches were not found (and searching is not done).\n    return false;\n  }\n\n  _nextPageMatch() {\n    if (this._resumePageIdx !== null) {\n      Window['ngxConsole'].error(\"There can only be one pending page.\");\n    }\n\n    let matches = null;\n    do {\n      const pageIdx = this._offset.pageIdx;\n      matches = this._pageMatches[pageIdx];\n      if (!matches) {\n        // The matches don't exist yet for processing by `_matchesReady`,\n        // so set a resume point for when they do exist.\n        this._resumePageIdx = pageIdx;\n        break;\n      }\n    } while (!this._matchesReady(matches));\n  }\n\n  _advanceOffsetPage(previous) {\n    const offset = this._offset;\n    const numPages = this._linkService.pagesCount;\n    offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n    offset.matchIdx = null;\n\n    this._pagesToSearch--;\n\n    if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n      offset.pageIdx = previous ? numPages - 1 : 0;\n      offset.wrapped = true;\n    }\n  }\n\n  _updateMatch(found = false) {\n    let state = FindState.NOT_FOUND;\n    const wrapped = this._offset.wrapped;\n    this._offset.wrapped = false;\n\n    if (found) {\n      const previousPage = this._selected.pageIdx;\n      this._selected.pageIdx = this._offset.pageIdx;\n      this._selected.matchIdx = this._offset.matchIdx;\n      state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n\n      // Update the currently selected page to wipe out any selected matches.\n      if (previousPage !== -1 && previousPage !== this._selected.pageIdx) {\n        this._updatePage(previousPage);\n      }\n    }\n\n    this._updateUIState(state, this._state.findPrevious);\n    if (this._selected.pageIdx !== -1) {\n      // Ensure that the match will be scrolled into view.\n      this._scrollMatches = true;\n\n      this._updatePage(this._selected.pageIdx);\n    }\n  }\n\n  _onFindBarClose(evt) {\n    const pdfDocument = this._pdfDocument;\n    // Since searching is asynchronous, ensure that the removal of highlighted\n    // matches (from the UI) is async too such that the 'updatetextlayermatches'\n    // events will always be dispatched in the expected order.\n    this._firstPageCapability.promise.then(() => {\n      // Only update the UI if the document is open, and is the current one.\n      if (\n        !this._pdfDocument ||\n        (pdfDocument && this._pdfDocument !== pdfDocument)\n      ) {\n        return;\n      }\n      // Ensure that a pending, not yet started, search operation is aborted.\n      if (this._findTimeout) {\n        clearTimeout(this._findTimeout);\n        this._findTimeout = null;\n      }\n      // Abort any long running searches, to avoid a match being scrolled into\n      // view *after* the findbar has been closed. In this case `this._offset`\n      // will most likely differ from `this._selected`, hence we also ensure\n      // that any new search operation will always start with a clean slate.\n      if (this._resumePageIdx) {\n        this._resumePageIdx = null;\n        this._dirtyMatch = true;\n      }\n      // Avoid the UI being in a pending state when the findbar is re-opened.\n      this._updateUIState(FindState.FOUND);\n\n      this._highlightMatches = false;\n      this._updateAllPages(); // Wipe out any previously highlighted matches.\n    });\n  }\n\n  _requestMatchesCount() {\n    const { pageIdx, matchIdx } = this._selected;\n    let current = 0,\n      total = this._matchesCountTotal;\n    if (matchIdx !== -1) {\n      for (let i = 0; i < pageIdx; i++) {\n        current += this._pageMatches[i]?.length || 0;\n      }\n      current += matchIdx + 1;\n    }\n    // When searching starts, this method may be called before the `pageMatches`\n    // have been counted (in `_calculateMatch`). Ensure that the UI won't show\n    // temporarily broken state when the active find result doesn't make sense.\n    if (current < 1 || current > total) {\n      current = total = 0;\n    }\n    return { current, total };\n  }\n\n  _updateUIResultsCount() {\n    this._eventBus.dispatch(\"updatefindmatchescount\", {\n      source: this,\n      matchesCount: this._requestMatchesCount(),\n    });\n  }\n\n  _updateUIState(state, previous = false) {\n    this._eventBus.dispatch(\"updatefindcontrolstate\", {\n      source: this,\n      state,\n      previous,\n      matchesCount: this._requestMatchesCount(),\n      rawQuery: this._state?.query ?? null,\n    });\n  }\n}\n\nexport { FindState, PDFFindController }\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\n// modified by ngx-extended-pdf-viewer\nexport function deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n// modified by ngx-extended-pdf-viewer\n// module.exports = deburr;\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CharacterType = {\n  SPACE: 0,\n  ALPHA_LETTER: 1,\n  PUNCT: 2,\n  HAN_LETTER: 3,\n  KATAKANA_LETTER: 4,\n  HIRAGANA_LETTER: 5,\n  HALFWIDTH_KATAKANA_LETTER: 6,\n  THAI_LETTER: 7,\n};\n\nfunction isAlphabeticalScript(charCode) {\n  return charCode < 0x2e80;\n}\n\nfunction isAscii(charCode) {\n  return (charCode & 0xff80) === 0;\n}\n\nfunction isAsciiAlpha(charCode) {\n  return (\n    (charCode >= /* a = */ 0x61 && charCode <= /* z = */ 0x7a) ||\n    (charCode >= /* A = */ 0x41 && charCode <= /* Z = */ 0x5a)\n  );\n}\n\nfunction isAsciiDigit(charCode) {\n  return charCode >= /* 0 = */ 0x30 && charCode <= /* 9 = */ 0x39;\n}\n\nfunction isAsciiSpace(charCode) {\n  return (\n    charCode === /* SPACE = */ 0x20 ||\n    charCode === /* TAB = */ 0x09 ||\n    charCode === /* CR = */ 0x0d ||\n    charCode === /* LF = */ 0x0a\n  );\n}\n\nfunction isHan(charCode) {\n  return (\n    (charCode >= 0x3400 && charCode <= 0x9fff) ||\n    (charCode >= 0xf900 && charCode <= 0xfaff)\n  );\n}\n\nfunction isKatakana(charCode) {\n  return charCode >= 0x30a0 && charCode <= 0x30ff;\n}\n\nfunction isHiragana(charCode) {\n  return charCode >= 0x3040 && charCode <= 0x309f;\n}\n\nfunction isHalfwidthKatakana(charCode) {\n  return charCode >= 0xff60 && charCode <= 0xff9f;\n}\n\nfunction isThai(charCode) {\n  return (charCode & 0xff80) === 0x0e00;\n}\n\n/**\n * This function is based on the word-break detection implemented in:\n * https://hg.mozilla.org/mozilla-central/file/tip/intl/lwbrk/WordBreaker.cpp\n */\nfunction getCharacterType(charCode) {\n  if (isAlphabeticalScript(charCode)) {\n    if (isAscii(charCode)) {\n      if (isAsciiSpace(charCode)) {\n        return CharacterType.SPACE;\n      } else if (\n        isAsciiAlpha(charCode) ||\n        isAsciiDigit(charCode) ||\n        charCode === /* UNDERSCORE = */ 0x5f\n      ) {\n        return CharacterType.ALPHA_LETTER;\n      }\n      return CharacterType.PUNCT;\n    } else if (isThai(charCode)) {\n      return CharacterType.THAI_LETTER;\n    } else if (charCode === /* NBSP = */ 0xa0) {\n      return CharacterType.SPACE;\n    }\n    return CharacterType.ALPHA_LETTER;\n  }\n\n  if (isHan(charCode)) {\n    return CharacterType.HAN_LETTER;\n  } else if (isKatakana(charCode)) {\n    return CharacterType.KATAKANA_LETTER;\n  } else if (isHiragana(charCode)) {\n    return CharacterType.HIRAGANA_LETTER;\n  } else if (isHalfwidthKatakana(charCode)) {\n    return CharacterType.HALFWIDTH_KATAKANA_LETTER;\n  }\n  return CharacterType.ALPHA_LETTER;\n}\n\nexport { CharacterType, getCharacterType };\n","// npm module fast-levenshtein 2.0.6, converted to ES2015\n\nlet levenshtein_collator;\n\ntry {\n  levenshtein_collator = Intl.Collator(\"und\", { sensitivity: \"base\" });\n} catch (missingBrowserSupport) {\n  try {\n    levenshtein_collator = Intl.Collator(\"generic\", { sensitivity: \"base\" });\n  } catch (noBrowserSupport) {\n    // run the algorithm without the help of the collation tables\n    levenshtein_collator = undefined;\n  }\n}\n\n// arrays to re-use\nconst levenshtein_prevRow = [];\nconst levenshtein_str2Char = [];\n\nexport class Levenshtein {\n  /**\n   * Calculate levenshtein distance of the two strings.\n   *\n   * @param str1 String the first string.\n   * @param str2 String the second string.\n   * @param [options] Additional options.\n   * @param [options.useCollator] Use `Intl.Collator` for locale-sensitive\n   * string comparison.\n   * @return Integer the levenshtein distance (0 and above).\n   */\n  static distance(str1, str2, options) {\n    const useCollator = options && levenshtein_collator && options.useCollator;\n\n    const str1Len = str1.length;\n    const str2Len = str2.length;\n\n    // base cases\n    if (str1Len === 0) {\n      return str2Len;\n    }\n    if (str2Len === 0) {\n      return str1Len;\n    }\n\n    // two rows\n    let curCol, nextCol, i, j, tmp;\n\n    // initialise previous row\n    for (i = 0; i < str2Len; ++i) {\n      levenshtein_prevRow[i] = i;\n      levenshtein_str2Char[i] = str2.charCodeAt(i);\n    }\n    levenshtein_prevRow[str2Len] = str2Len;\n\n    let strCmp;\n    if (useCollator) {\n      // calculate current row distance from previous row using collator\n      for (i = 0; i < str1Len; ++i) {\n        nextCol = i + 1;\n\n        for (j = 0; j < str2Len; ++j) {\n          curCol = nextCol;\n\n          // substution\n          strCmp =\n            levenshtein_collator.compare(\n              str1.charAt(i),\n              String.fromCharCode(levenshtein_str2Char[j])\n            ) === 0;\n\n          nextCol = levenshtein_prevRow[j] + (strCmp ? 0 : 1);\n\n          // insertion\n          tmp = curCol + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n          // deletion\n          tmp = levenshtein_prevRow[j + 1] + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n\n          // copy current col value into previous (in preparation for next iteration)\n          levenshtein_prevRow[j] = curCol;\n        }\n\n        // copy last col value into previous (in preparation for next iteration)\n        levenshtein_prevRow[j] = nextCol;\n      }\n    } else {\n      // calculate current row distance from previous row without collator\n      for (i = 0; i < str1Len; ++i) {\n        nextCol = i + 1;\n\n        for (j = 0; j < str2Len; ++j) {\n          curCol = nextCol;\n\n          // substution\n          strCmp = str1.charCodeAt(i) === levenshtein_str2Char[j];\n\n          nextCol = levenshtein_prevRow[j] + (strCmp ? 0 : 1);\n\n          // insertion\n          tmp = curCol + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n          // deletion\n          tmp = levenshtein_prevRow[j + 1] + 1;\n          if (nextCol > tmp) {\n            nextCol = tmp;\n          }\n\n          // copy current col value into previous (in preparation for next iteration)\n          levenshtein_prevRow[j] = curCol;\n        }\n\n        // copy last col value into previous (in preparation for next iteration)\n        levenshtein_prevRow[j] = nextCol;\n      }\n    }\n    return nextCol;\n  }\n}\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  isValidRotation,\n  parseQueryString,\n  PresentationModeState,\n} from \"./ui_utils.js\";\nimport { waitOnEventOrTimeout } from \"./event_utils.js\";\n\n// Heuristic value used when force-resetting `this._blockHashChange`.\nconst HASH_CHANGE_TIMEOUT = 1000; // milliseconds\n// Heuristic value used when adding the current position to the browser history.\nconst POSITION_UPDATED_THRESHOLD = 50;\n// Heuristic value used when adding a temporary position to the browser history.\nconst UPDATE_VIEWAREA_TIMEOUT = 1000; // milliseconds\n\n/**\n * @typedef {Object} PDFHistoryOptions\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} InitializeParameters\n * @property {string} fingerprint - The PDF document's unique fingerprint.\n * @property {boolean} [resetHistory] - Reset the browsing history.\n * @property {boolean} [updateUrl] - Attempt to update the document URL, with\n *   the current hash, when pushing/replacing browser history entries.\n */\n\n/**\n * @typedef {Object} PushParameters\n * @property {string} [namedDest] - The named destination. If absent, a\n *   stringified version of `explicitDest` is used.\n * @property {Array} explicitDest - The explicit destination array.\n * @property {number} pageNumber - The page to which the destination points.\n */\n\nfunction getCurrentHash() {\n  return document.location.hash;\n}\n\nclass PDFHistory {\n  /**\n   * @param {PDFHistoryOptions} options\n   */\n  constructor({ linkService, eventBus }) {\n    this.linkService = linkService;\n    this.eventBus = eventBus;\n\n    this._initialized = false;\n    this._fingerprint = \"\";\n    this.reset();\n\n    this._boundEvents = null;\n    this._isViewerInPresentationMode = false;\n    // Ensure that we don't miss either a 'presentationmodechanged' or a\n    // 'pagesinit' event, by registering the listeners immediately.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      this._isViewerInPresentationMode =\n        evt.state !== PresentationModeState.NORMAL;\n    });\n    this.eventBus._on(\"pagesinit\", () => {\n      this._isPagesLoaded = false;\n\n      this.eventBus._on(\n        \"pagesloaded\",\n        evt => {\n          this._isPagesLoaded = !!evt.pagesCount;\n        },\n        { once: true }\n      );\n    });\n  }\n\n  /**\n   * Initialize the history for the PDF document, using either the current\n   * browser history entry or the document hash, whichever is present.\n   * @param {InitializeParameters} params\n   */\n  initialize({ fingerprint, resetHistory = false, updateUrl = false }) {\n    if (!fingerprint || typeof fingerprint !== \"string\") {\n      Window['ngxConsole'].error(\n        'PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.'\n      );\n      return;\n    }\n    // Ensure that any old state is always reset upon initialization.\n    if (this._initialized) {\n      this.reset();\n    }\n    const reInitialized =\n      this._fingerprint !== \"\" && this._fingerprint !== fingerprint;\n    this._fingerprint = fingerprint;\n    this._updateUrl = updateUrl === true;\n\n    this._initialized = true;\n    this._bindEvents();\n    const state = window.history.state;\n\n    this._popStateInProgress = false;\n    this._blockHashChange = 0;\n    this._currentHash = getCurrentHash();\n    this._numPositionUpdates = 0;\n\n    this._uid = this._maxUid = 0;\n    this._destination = null;\n    this._position = null;\n\n    if (!this._isValidState(state, /* checkReload = */ true) || resetHistory) {\n      const { hash, page, rotation } = this._parseCurrentHash(\n        /* checkNameddest = */ true\n      );\n\n      if (!hash || reInitialized || resetHistory) {\n        // Ensure that the browser history is reset on PDF document load.\n        this._pushOrReplaceState(null, /* forceReplace = */ true);\n        return;\n      }\n      // Ensure that the browser history is initialized correctly when\n      // the document hash is present on PDF document load.\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n\n    // The browser history contains a valid entry, ensure that the history is\n    // initialized correctly on PDF document load.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n\n    if (destination.rotation !== undefined) {\n      this._initialRotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this._initialBookmark = JSON.stringify(destination.dest);\n\n      // If the history is updated, e.g. through the user changing the hash,\n      // before the initial destination has become visible, then we do *not*\n      // want to potentially add `this._position` to the browser history.\n      this._destination.page = null;\n    } else if (destination.hash) {\n      this._initialBookmark = destination.hash;\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this._initialBookmark = `page=${destination.page}`;\n    }\n  }\n\n  /**\n   * Reset the current `PDFHistory` instance, and consequently prevent any\n   * further updates and/or navigation of the browser history.\n   */\n  reset() {\n    if (this._initialized) {\n      this._pageHide(); // Simulate a 'pagehide' event when resetting.\n\n      this._initialized = false;\n      this._unbindEvents();\n    }\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    this._initialBookmark = null;\n    this._initialRotation = null;\n  }\n\n  /**\n   * Push an internal destination to the browser history.\n   * @param {PushParameters}\n   */\n  push({ namedDest = null, explicitDest, pageNumber }) {\n    if (!this._initialized) {\n      return;\n    }\n    if (namedDest && typeof namedDest !== \"string\") {\n      Window['ngxConsole'].error(\n        \"PDFHistory.push: \" +\n          `\"${namedDest}\" is not a valid namedDest parameter.`\n      );\n      return;\n    } else if (!Array.isArray(explicitDest)) {\n      Window['ngxConsole'].error(\n        \"PDFHistory.push: \" +\n          `\"${explicitDest}\" is not a valid explicitDest parameter.`\n      );\n      return;\n    } else if (!this._isValidPage(pageNumber)) {\n      // Allow an unset `pageNumber` if and only if the history is still empty;\n      // please refer to the `this._destination.page = null;` comment above.\n      if (pageNumber !== null || this._destination) {\n        Window['ngxConsole'].error(\n          \"PDFHistory.push: \" +\n            `\"${pageNumber}\" is not a valid pageNumber parameter.`\n        );\n        return;\n      }\n    }\n\n    const hash = namedDest || JSON.stringify(explicitDest);\n    if (!hash) {\n      // The hash *should* never be undefined, but if that were to occur,\n      // avoid any possible issues by not updating the browser history.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination &&\n      (isDestHashesEqual(this._destination.hash, hash) ||\n        isDestArraysEqual(this._destination.dest, explicitDest))\n    ) {\n      // When the new destination is identical to `this._destination`, and\n      // its `page` is undefined, replace the current browser history entry.\n      // NOTE: This can only occur if `this._destination` was set either:\n      //  - through the document hash being specified on load.\n      //  - through the user changing the hash of the document.\n      if (this._destination.page) {\n        return;\n      }\n      forceReplace = true;\n    }\n    if (this._popStateInProgress && !forceReplace) {\n      return;\n    }\n\n    this._pushOrReplaceState(\n      {\n        dest: explicitDest,\n        hash,\n        page: pageNumber,\n        rotation: this.linkService.rotation,\n      },\n      forceReplace\n    );\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new destination is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occurring when the new destination is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push a page to the browser history; generally the `push` method should be\n   * used instead.\n   * @param {number} pageNumber\n   */\n  pushPage(pageNumber) {\n    if (!this._initialized) {\n      return;\n    }\n    if (!this._isValidPage(pageNumber)) {\n      Window['ngxConsole'].error(\n        `PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`\n      );\n      return;\n    }\n\n    if (this._destination?.page === pageNumber) {\n      // When the new page is identical to the one in `this._destination`, we\n      // don't want to add a potential duplicate entry in the browser history.\n      return;\n    }\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    this._pushOrReplaceState({\n      // Simulate an internal destination, for `this._tryPushCurrentPosition`:\n      dest: null,\n      hash: `page=${pageNumber}`,\n      page: pageNumber,\n      rotation: this.linkService.rotation,\n    });\n\n    if (!this._popStateInProgress) {\n      // Prevent the browser history from updating while the new page is\n      // being scrolled into view, to avoid potentially inconsistent state.\n      this._popStateInProgress = true;\n      // We defer the resetting of `this._popStateInProgress`, to account for\n      // e.g. zooming occurring when the new page is being navigated to.\n      Promise.resolve().then(() => {\n        this._popStateInProgress = false;\n      });\n    }\n  }\n\n  /**\n   * Push the current position to the browser history.\n   */\n  pushCurrentPosition() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    this._tryPushCurrentPosition();\n  }\n\n  /**\n   * Go back one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  back() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid > 0) {\n      window.history.back();\n    }\n  }\n\n  /**\n   * Go forward one step in the browser history.\n   * NOTE: Avoids navigating away from the document, useful for \"named actions\".\n   */\n  forward() {\n    if (!this._initialized || this._popStateInProgress) {\n      return;\n    }\n    const state = window.history.state;\n    if (this._isValidState(state) && state.uid < this._maxUid) {\n      window.history.forward();\n    }\n  }\n\n  /**\n   * @type {boolean} Indicating if the user is currently moving through the\n   *   browser history, useful e.g. for skipping the next 'hashchange' event.\n   */\n  get popStateInProgress() {\n    return (\n      this._initialized &&\n      (this._popStateInProgress || this._blockHashChange > 0)\n    );\n  }\n\n  get initialBookmark() {\n    return this._initialized ? this._initialBookmark : null;\n  }\n\n  get initialRotation() {\n    return this._initialized ? this._initialRotation : null;\n  }\n\n  /**\n   * @private\n   */\n  _pushOrReplaceState(destination, forceReplace = false) {\n    const shouldReplace = forceReplace || !this._destination;\n    const newState = {\n      fingerprint: this._fingerprint,\n      uid: shouldReplace ? this._uid : this._uid + 1,\n      destination,\n    };\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      window.history.state?.chromecomState\n    ) {\n      // history.state.chromecomState is managed by chromecom.js.\n      newState.chromecomState = window.history.state.chromecomState;\n    }\n    this._updateInternalState(destination, newState.uid);\n\n    let newUrl;\n    if (this._updateUrl && destination?.hash) {\n      const baseUrl = document.location.href.split(\"#\")[0];\n      // Prevent errors in Firefox.\n      if (!baseUrl.startsWith(\"file://\")) {\n        newUrl = `${baseUrl}#${destination.hash}`;\n      }\n    }\n    if (shouldReplace) {\n      window.history.replaceState(newState, \"\", newUrl);\n    } else {\n      window.history.pushState(newState, \"\", newUrl);\n    }\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"CHROME\") &&\n      top === window\n    ) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  _tryPushCurrentPosition(temporary = false) {\n    if (!this._position) {\n      return;\n    }\n    let position = this._position;\n    if (temporary) {\n      position = Object.assign(Object.create(null), this._position);\n      position.temporary = true;\n    }\n\n    if (!this._destination) {\n      this._pushOrReplaceState(position);\n      return;\n    }\n    if (this._destination.temporary) {\n      // Always replace a previous *temporary* position.\n      this._pushOrReplaceState(position, /* forceReplace = */ true);\n      return;\n    }\n    if (this._destination.hash === position.hash) {\n      return; // The current document position has not changed.\n    }\n    if (\n      !this._destination.page &&\n      (POSITION_UPDATED_THRESHOLD <= 0 ||\n        this._numPositionUpdates <= POSITION_UPDATED_THRESHOLD)\n    ) {\n      // `this._destination` was set through the user changing the hash of\n      // the document. Do not add `this._position` to the browser history,\n      // to avoid \"flooding\" it with lots of (nearly) identical entries,\n      // since we cannot ensure that the document position has changed.\n      return;\n    }\n\n    let forceReplace = false;\n    if (\n      this._destination.page >= position.first &&\n      this._destination.page <= position.page\n    ) {\n      // When the `page` of `this._destination` is still visible, do not\n      // update the browsing history when `this._destination` either:\n      //  - contains an internal destination, since in this case we\n      //    cannot ensure that the document position has actually changed.\n      //  - was set through the user changing the hash of the document.\n      if (this._destination.dest !== undefined || !this._destination.first) {\n        return;\n      }\n      // To avoid \"flooding\" the browser history, replace the current entry.\n      forceReplace = true;\n    }\n    this._pushOrReplaceState(position, forceReplace);\n  }\n\n  /**\n   * @private\n   */\n  _isValidPage(val) {\n    return (\n      Number.isInteger(val) && val > 0 && val <= this.linkService.pagesCount\n    );\n  }\n\n  /**\n   * @private\n   */\n  _isValidState(state, checkReload = false) {\n    if (!state) {\n      return false;\n    }\n    if (state.fingerprint !== this._fingerprint) {\n      if (checkReload) {\n        // Potentially accept the history entry, even if the fingerprints don't\n        // match, when the viewer was reloaded (see issue 6847).\n        if (\n          typeof state.fingerprint !== \"string\" ||\n          state.fingerprint.length !== this._fingerprint.length\n        ) {\n          return false;\n        }\n        const [perfEntry] = performance.getEntriesByType(\"navigation\");\n        if (perfEntry?.type !== \"reload\") {\n          return false;\n        }\n      } else {\n        // This should only occur in viewers with support for opening more than\n        // one PDF document, e.g. the GENERIC viewer.\n        return false;\n      }\n    }\n    if (!Number.isInteger(state.uid) || state.uid < 0) {\n      return false;\n    }\n    if (state.destination === null || typeof state.destination !== \"object\") {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _updateInternalState(destination, uid, removeTemporary = false) {\n    if (this._updateViewareaTimeout) {\n      // When updating `this._destination`, make sure that we always wait for\n      // the next 'updateviewarea' event before (potentially) attempting to\n      // push the current position to the browser history.\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n    if (removeTemporary && destination?.temporary) {\n      // When the `destination` comes from the browser history,\n      // we no longer treat it as a *temporary* position.\n      delete destination.temporary;\n    }\n    this._destination = destination;\n    this._uid = uid;\n    this._maxUid = Math.max(this._maxUid, uid);\n    // This should always be reset when `this._destination` is updated.\n    this._numPositionUpdates = 0;\n  }\n\n  /**\n   * @private\n   */\n  _parseCurrentHash(checkNameddest = false) {\n    const hash = unescape(getCurrentHash()).substring(1);\n    const params = parseQueryString(hash);\n\n    const nameddest = params.get(\"nameddest\") || \"\";\n    let page = params.get(\"page\") | 0;\n\n    if (!this._isValidPage(page) || (checkNameddest && nameddest.length > 0)) {\n      page = null;\n    }\n    return { hash, page, rotation: this.linkService.rotation };\n  }\n\n  /**\n   * @private\n   */\n  _updateViewarea({ location }) {\n    if (this._updateViewareaTimeout) {\n      clearTimeout(this._updateViewareaTimeout);\n      this._updateViewareaTimeout = null;\n    }\n\n    this._position = {\n      hash: this._isViewerInPresentationMode\n        ? `page=${location.pageNumber}`\n        : location.pdfOpenParams.substring(1),\n      page: this.linkService.page,\n      first: location.pageNumber,\n      rotation: location.rotation,\n    };\n\n    if (this._popStateInProgress) {\n      return;\n    }\n\n    if (\n      POSITION_UPDATED_THRESHOLD > 0 &&\n      this._isPagesLoaded &&\n      this._destination &&\n      !this._destination.page\n    ) {\n      // If the current destination was set through the user changing the hash\n      // of the document, we will usually not try to push the current position\n      // to the browser history; see `this._tryPushCurrentPosition()`.\n      //\n      // To prevent `this._tryPushCurrentPosition()` from effectively being\n      // reduced to a no-op in this case, we will assume that the position\n      // *did* in fact change if the 'updateviewarea' event was dispatched\n      // more than `POSITION_UPDATED_THRESHOLD` times.\n      this._numPositionUpdates++;\n    }\n\n    if (UPDATE_VIEWAREA_TIMEOUT > 0) {\n      // When closing the browser, a 'pagehide' event will be dispatched which\n      // *should* allow us to push the current position to the browser history.\n      // In practice, it seems that the event is arriving too late in order for\n      // the session history to be successfully updated.\n      // (For additional details, please refer to the discussion in\n      //  https://bugzilla.mozilla.org/show_bug.cgi?id=1153393.)\n      //\n      // To workaround this we attempt to *temporarily* add the current position\n      // to the browser history only when the viewer is *idle*,\n      // i.e. when scrolling and/or zooming does not occur.\n      //\n      // PLEASE NOTE: It's absolutely imperative that the browser history is\n      // *not* updated too often, since that would render the viewer more or\n      // less unusable. Hence the use of a timeout to delay the update until\n      // the viewer has been idle for `UPDATE_VIEWAREA_TIMEOUT` milliseconds.\n      this._updateViewareaTimeout = setTimeout(() => {\n        if (!this._popStateInProgress) {\n          this._tryPushCurrentPosition(/* temporary = */ true);\n        }\n        this._updateViewareaTimeout = null;\n      }, UPDATE_VIEWAREA_TIMEOUT);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _popState({ state }) {\n    const newHash = getCurrentHash(),\n      hashChanged = this._currentHash !== newHash;\n    this._currentHash = newHash;\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" &&\n        PDFJSDev.test(\"CHROME\") &&\n        state?.chromecomState &&\n        !this._isValidState(state)) ||\n      !state\n    ) {\n      // This case corresponds to the user changing the hash of the document.\n      this._uid++;\n\n      const { hash, page, rotation } = this._parseCurrentHash();\n      this._pushOrReplaceState(\n        { hash, page, rotation },\n        /* forceReplace = */ true\n      );\n      return;\n    }\n    if (!this._isValidState(state)) {\n      // This should only occur in viewers with support for opening more than\n      // one PDF document, e.g. the GENERIC viewer.\n      return;\n    }\n\n    // Prevent the browser history from updating until the new destination,\n    // as stored in the browser history, has been scrolled into view.\n    this._popStateInProgress = true;\n\n    if (hashChanged) {\n      // When the hash changed, implying that the 'popstate' event will be\n      // followed by a 'hashchange' event, then we do *not* want to update the\n      // browser history when handling the 'hashchange' event (in web/app.js)\n      // since that would *overwrite* the new destination navigated to below.\n      //\n      // To avoid accidentally disabling all future user-initiated hash changes,\n      // if there's e.g. another 'hashchange' listener that stops the event\n      // propagation, we make sure to always force-reset `this._blockHashChange`\n      // after `HASH_CHANGE_TIMEOUT` milliseconds have passed.\n      this._blockHashChange++;\n      waitOnEventOrTimeout({\n        target: window,\n        name: \"hashchange\",\n        delay: HASH_CHANGE_TIMEOUT,\n      }).then(() => {\n        this._blockHashChange--;\n      });\n    }\n\n    // Navigate to the new destination.\n    const destination = state.destination;\n    this._updateInternalState(\n      destination,\n      state.uid,\n      /* removeTemporary = */ true\n    );\n\n    if (isValidRotation(destination.rotation)) {\n      this.linkService.rotation = destination.rotation;\n    }\n    if (destination.dest) {\n      this.linkService.goToDestination(destination.dest);\n    } else if (destination.hash) {\n      this.linkService.setHash(destination.hash);\n    } else if (destination.page) {\n      // Fallback case; shouldn't be necessary, but better safe than sorry.\n      this.linkService.page = destination.page;\n    }\n\n    // Since `PDFLinkService.goToDestination` is asynchronous, we thus defer the\n    // resetting of `this._popStateInProgress` slightly.\n    Promise.resolve().then(() => {\n      this._popStateInProgress = false;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _pageHide() {\n    // Attempt to push the `this._position` into the browser history when\n    // navigating away from the document. This is *only* done if the history\n    // is empty/temporary, since otherwise an existing browser history entry\n    // will end up being overwritten (given that new entries cannot be pushed\n    // into the browser history when the 'unload' event has already fired).\n    if (!this._destination || this._destination.temporary) {\n      this._tryPushCurrentPosition();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _bindEvents() {\n    if (this._boundEvents) {\n      return; // The event listeners were already added.\n    }\n    this._boundEvents = {\n      updateViewarea: this._updateViewarea.bind(this),\n      popState: this._popState.bind(this),\n      pageHide: this._pageHide.bind(this),\n    };\n\n    this.eventBus._on(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.addEventListener(\"popstate\", this._boundEvents.popState);\n    window.addEventListener(\"pagehide\", this._boundEvents.pageHide);\n  }\n\n  /**\n   * @private\n   */\n  _unbindEvents() {\n    if (!this._boundEvents) {\n      return; // The event listeners were already removed.\n    }\n    this.eventBus._off(\"updateviewarea\", this._boundEvents.updateViewarea);\n    window.removeEventListener(\"popstate\", this._boundEvents.popState);\n    window.removeEventListener(\"pagehide\", this._boundEvents.pageHide);\n\n    this._boundEvents = null;\n  }\n}\n\nfunction isDestHashesEqual(destHash, pushHash) {\n  if (typeof destHash !== \"string\" || typeof pushHash !== \"string\") {\n    return false;\n  }\n  if (destHash === pushHash) {\n    return true;\n  }\n  const nameddest = parseQueryString(destHash).get(\"nameddest\");\n  if (nameddest === pushHash) {\n    return true;\n  }\n  return false;\n}\n\nfunction isDestArraysEqual(firstDest, secondDest) {\n  function isEntryEqual(first, second) {\n    if (typeof first !== typeof second) {\n      return false;\n    }\n    if (Array.isArray(first) || Array.isArray(second)) {\n      return false;\n    }\n    if (first !== null && typeof first === \"object\" && second !== null) {\n      if (Object.keys(first).length !== Object.keys(second).length) {\n        return false;\n      }\n      for (const key in first) {\n        if (!isEntryEqual(first[key], second[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return first === second || (Number.isNaN(first) && Number.isNaN(second));\n  }\n\n  if (!(Array.isArray(firstDest) && Array.isArray(secondDest))) {\n    return false;\n  }\n  if (firstDest.length !== secondDest.length) {\n    return false;\n  }\n  for (let i = 0, ii = firstDest.length; i < ii; i++) {\n    if (!isEntryEqual(firstDest[i], secondDest[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { isDestArraysEqual, isDestHashesEqual, PDFHistory };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\n\n/**\n * @typedef {Object} PDFLayerViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - Localization service.\n */\n\n/**\n * @typedef {Object} PDFLayerViewerRenderParameters\n * @property {OptionalContentConfig|null} optionalContentConfig - An\n *   {OptionalContentConfig} instance.\n * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n */\n\nclass PDFLayerViewer extends BaseTreeViewer {\n  constructor(options) {\n    super(options);\n    this.l10n = options.l10n;\n\n    this.eventBus._on(\"resetlayers\", this._resetLayers.bind(this));\n    this.eventBus._on(\"togglelayerstree\", this._toggleAllTreeItems.bind(this));\n  }\n\n  reset() {\n    super.reset();\n    this._optionalContentConfig = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(layersCount) {\n    this.eventBus.dispatch(\"layersloaded\", {\n      source: this,\n      layersCount,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { groupId, input }) {\n    const setVisibility = () => {\n      this._optionalContentConfig.setVisibility(groupId, input.checked);\n\n      this.eventBus.dispatch(\"optionalcontentconfig\", {\n        source: this,\n        promise: Promise.resolve(this._optionalContentConfig),\n      });\n    };\n\n    element.onclick = evt => {\n      if (evt.target === input) {\n        setVisibility();\n        return true;\n      } else if (evt.target !== element) {\n        return true; // The target is the \"label\", which is handled above.\n      }\n      input.checked = !input.checked;\n      setVisibility();\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  async _setNestedName(element, { name = null }) {\n    if (typeof name === \"string\") {\n      element.textContent = this._normalizeTextContent(name);\n      return;\n    }\n    element.textContent = await this.l10n.get(\"additional_layers\");\n    element.style.fontStyle = \"italic\";\n  }\n\n  /**\n   * @private\n   */\n  _addToggleButton(div, { name = null }) {\n    super._addToggleButton(div, /* hidden = */ name === null);\n  }\n\n  /**\n   * @private\n   */\n  _toggleAllTreeItems() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n\n  /**\n   * @param {PDFLayerViewerRenderParameters} params\n   */\n  render({ optionalContentConfig, pdfDocument }) {\n    if (this._optionalContentConfig) {\n      this.reset();\n    }\n    this._optionalContentConfig = optionalContentConfig || null;\n    this._pdfDocument = pdfDocument || null;\n\n    const groups = optionalContentConfig?.getOrder();\n    if (!groups) {\n      this._dispatchEvent(/* layersCount = */ 0);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment(),\n      queue = [{ parent: fragment, groups }];\n    let layersCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const groupId of levelData.groups) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        div.appendChild(element);\n\n        if (typeof groupId === \"object\") {\n          hasAnyNesting = true;\n          this._addToggleButton(div, groupId);\n          this._setNestedName(element, groupId);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n\n          queue.push({ parent: itemsDiv, groups: groupId.order });\n        } else {\n          const group = optionalContentConfig.getGroup(groupId);\n\n          const input = document.createElement(\"input\");\n          this._bindLink(element, { groupId, input });\n          input.type = \"checkbox\";\n          input.id = groupId;\n          input.checked = group.visible;\n\n          const label = document.createElement(\"label\");\n          label.setAttribute(\"for\", groupId);\n          label.textContent = this._normalizeTextContent(group.name);\n\n          element.appendChild(input);\n          element.appendChild(label);\n\n          layersCount++;\n        }\n\n        levelData.parent.appendChild(div);\n      }\n    }\n\n    this._finishRendering(fragment, layersCount, hasAnyNesting);\n  }\n\n  /**\n   * @private\n   */\n  async _resetLayers() {\n    if (!this._optionalContentConfig) {\n      return;\n    }\n    // Fetch the default optional content configuration...\n    const optionalContentConfig =\n      await this._pdfDocument.getOptionalContentConfig();\n\n    this.eventBus.dispatch(\"optionalcontentconfig\", {\n      source: this,\n      promise: Promise.resolve(optionalContentConfig),\n    });\n\n    // ... and reset the sidebarView to the default state.\n    this.render({\n      optionalContentConfig,\n      pdfDocument: this._pdfDocument,\n    });\n  }\n}\n\nexport { PDFLayerViewer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { addLinkAttributes, LinkTarget } from \"pdfjs-lib\";\nimport { parseQueryString } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFLinkServiceOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} [externalLinkTarget] - Specifies the `target` attribute\n *   for external links. Must use one of the values from {LinkTarget}.\n *   Defaults to using no target.\n * @property {string} [externalLinkRel] - Specifies the `rel` attribute for\n *   external links. Defaults to stripping the referrer.\n * @property {boolean} [ignoreDestinationZoom] - Ignores the zoom argument,\n *   thus preserving the current zoom level in the viewer, when navigating\n *   to internal destinations. The default value is `false`.\n */\n\n/**\n * Performs navigation functions inside PDF, such as opening specified page,\n * or destination.\n * @implements {IPDFLinkService}\n */\nclass PDFLinkService {\n  /**\n   * @param {PDFLinkServiceOptions} options\n   */\n  constructor({\n    eventBus,\n    externalLinkTarget = null,\n    externalLinkRel = null,\n    ignoreDestinationZoom = false,\n  } = {}) {\n    this.eventBus = eventBus;\n    this.externalLinkTarget = externalLinkTarget;\n    this.externalLinkRel = externalLinkRel;\n    this.externalLinkEnabled = true;\n    this._ignoreDestinationZoom = ignoreDestinationZoom;\n\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n\n    this._pagesRefCache = null;\n  }\n\n  setDocument(pdfDocument, baseUrl = null) {\n    this.baseUrl = baseUrl;\n    this.pdfDocument = pdfDocument;\n    this._pagesRefCache = Object.create(null);\n  }\n\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  setHistory(pdfHistory) {\n    this.pdfHistory = pdfHistory;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return this.pdfDocument ? this.pdfDocument.numPages : 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return this.pdfViewer.currentPageNumber;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {\n    this.pdfViewer.currentPageNumber = value;\n  }\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return this.pdfViewer.pagesRotation;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {\n    this.pdfViewer.pagesRotation = value;\n  }\n\n  /**\n   * @private\n   */\n  _goToDestinationHelper(rawDest, namedDest = null, explicitDest) {\n    // Dest array looks like that: <page-ref> </XYZ|/FitXXX> <args..>\n    const destRef = explicitDest[0];\n    let pageNumber;\n\n    if (typeof destRef === \"object\" && destRef !== null) {\n      pageNumber = this._cachedPageNumber(destRef);\n\n      if (!pageNumber) {\n        // Fetch the page reference if it's not yet available. This could\n        // only occur during loading, before all pages have been resolved.\n        this.pdfDocument\n          .getPageIndex(destRef)\n          .then(pageIndex => {\n            this.cachePageRef(pageIndex + 1, destRef);\n            this._goToDestinationHelper(rawDest, namedDest, explicitDest);\n          })\n          .catch(() => {\n            Window['ngxConsole'].error(\n              `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n                `a valid page reference, for dest=\"${rawDest}\".`\n            );\n          });\n        return;\n      }\n    } else if (Number.isInteger(destRef)) {\n      pageNumber = destRef + 1;\n    } else {\n      Window['ngxConsole'].error(\n        `PDFLinkService._goToDestinationHelper: \"${destRef}\" is not ` +\n          `a valid destination reference, for dest=\"${rawDest}\".`\n      );\n      return;\n    }\n    if (!pageNumber || pageNumber < 1 || pageNumber > this.pagesCount) {\n      Window['ngxConsole'].error(\n        `PDFLinkService._goToDestinationHelper: \"${pageNumber}\" is not ` +\n          `a valid page number, for dest=\"${rawDest}\".`\n      );\n      return;\n    }\n\n    if (this.pdfHistory) {\n      // Update the browser history before scrolling the new destination into\n      // view, to be able to accurately capture the current document position.\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.push({ namedDest, explicitDest, pageNumber });\n    }\n\n    this.pdfViewer.scrollPageIntoView({\n      pageNumber,\n      destArray: explicitDest,\n      ignoreDestinationZoom: this._ignoreDestinationZoom,\n    });\n  }\n\n  /**\n   * This method will, when available, also update the browser history.\n   *\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  async goToDestination(dest) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let namedDest, explicitDest;\n    if (typeof dest === \"string\") {\n      namedDest = dest;\n      explicitDest = await this.pdfDocument.getDestination(dest);\n    } else {\n      namedDest = null;\n      explicitDest = await dest;\n    }\n    if (!Array.isArray(explicitDest)) {\n      Window['ngxConsole'].error(\n        `PDFLinkService.goToDestination: \"${explicitDest}\" is not ` +\n          `a valid destination array, for dest=\"${dest}\".`\n      );\n      return;\n    }\n    this._goToDestinationHelper(dest, namedDest, explicitDest);\n  }\n\n  /**\n   * This method will, when available, also update the browser history.\n   *\n   * @param {number|string} val - The page number, or page label.\n   */\n  goToPage(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageNumber =\n      (typeof val === \"string\" && this.pdfViewer.pageLabelToPageNumber(val)) ||\n      val | 0;\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      Window['ngxConsole'].error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);\n      return;\n    }\n\n    if (this.pdfHistory) {\n      // Update the browser history before scrolling the new page into view,\n      // to be able to accurately capture the current document position.\n      this.pdfHistory.pushCurrentPosition();\n      this.pdfHistory.pushPage(pageNumber);\n    }\n\n    this.pdfViewer.scrollPageIntoView({ pageNumber });\n  }\n\n  /**\n   * Wrapper around the `addLinkAttributes`-function in the API.\n   * @param {HTMLAnchorElement} link\n   * @param {string} url\n   * @param {boolean} [newWindow]\n   */\n  addLinkAttributes(link, url, newWindow = false) {\n    addLinkAttributes(link, {\n      url,\n      target: newWindow ? LinkTarget.BLANK : this.externalLinkTarget,\n      rel: this.externalLinkRel,\n      enabled: this.externalLinkEnabled,\n    });\n  }\n\n  /**\n   * @param {string|Array} dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    if (typeof dest === \"string\") {\n      if (dest.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(dest));\n      }\n    } else if (Array.isArray(dest)) {\n      const str = JSON.stringify(dest);\n      if (str.length > 0) {\n        return this.getAnchorUrl(\"#\" + escape(str));\n      }\n    }\n    return this.getAnchorUrl(\"\");\n  }\n\n  /**\n   * Prefix the full url on anchor links to make sure that links are resolved\n   * relative to the current URL instead of the one defined in <base href>.\n   * @param {string} anchor - The anchor hash, including the #.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(anchor) {\n    return (this.baseUrl || \"\") + anchor;\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let pageNumber, dest;\n    if (hash.includes(\"=\")) {\n      const params = parseQueryString(hash);\n      if (params.has(\"search\")) {\n        this.eventBus.dispatch(\"findfromurlhash\", {\n          source: this,\n          query: params.get(\"search\").replace(/\"/g, \"\"),\n          phraseSearch: params.get(\"phrase\") === \"true\",\n        });\n      }\n      // borrowing syntax from \"Parameters for Opening PDF Files\"\n      if (params.has(\"page\")) {\n        pageNumber = params.get(\"page\") | 0 || 1;\n      }\n      if (params.has(\"zoom\")) {\n        // Build the destination array.\n        const zoomArgs = params.get(\"zoom\").split(\",\"); // scale,left,top\n        const zoomArg = zoomArgs[0];\n        const zoomArgNumber = parseFloat(zoomArg);\n\n        if (!zoomArg.includes(\"Fit\")) {\n          // If the zoomArg is a number, it has to get divided by 100. If it's\n          // a string, it should stay as it is.\n          dest = [\n            null,\n            { name: \"XYZ\" },\n            zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            zoomArgs.length > 2 ? zoomArgs[2] | 0 : null,\n            zoomArgNumber ? zoomArgNumber / 100 : zoomArg,\n          ];\n        } else {\n          if (zoomArg === \"Fit\" || zoomArg === \"FitB\") {\n            dest = [null, { name: zoomArg }];\n          } else if (\n            zoomArg === \"FitH\" ||\n            zoomArg === \"FitBH\" ||\n            zoomArg === \"FitV\" ||\n            zoomArg === \"FitBV\"\n          ) {\n            dest = [\n              null,\n              { name: zoomArg },\n              zoomArgs.length > 1 ? zoomArgs[1] | 0 : null,\n            ];\n          } else if (zoomArg === \"FitR\") {\n            if (zoomArgs.length !== 5) {\n              Window['ngxConsole'].error(\n                'PDFLinkService.setHash: Not enough parameters for \"FitR\".'\n              );\n            } else {\n              dest = [\n                null,\n                { name: zoomArg },\n                zoomArgs[1] | 0,\n                zoomArgs[2] | 0,\n                zoomArgs[3] | 0,\n                zoomArgs[4] | 0,\n              ];\n            }\n          } else {\n            Window['ngxConsole'].error(\n              `PDFLinkService.setHash: \"${zoomArg}\" is not ` +\n                \"a valid zoom value.\"\n            );\n          }\n        }\n      }\n      if (dest) {\n        this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber || this.page,\n          destArray: dest,\n          allowNegativeOffset: true,\n        });\n      } else if (pageNumber) {\n        this.page = pageNumber; // simple page\n      }\n      if (params.has(\"pagemode\")) {\n        this.eventBus.dispatch(\"pagemode\", {\n          source: this,\n          mode: params.get(\"pagemode\"),\n        });\n      }\n      // Ensure that this parameter is *always* handled last, in order to\n      // guarantee that it won't be overridden (e.g. by the \"page\" parameter).\n      if (params.has(\"nameddest\")) {\n        this.goToDestination(params.get(\"nameddest\"));\n      }\n    } else {\n      // Named (or explicit) destination.\n      dest = unescape(hash);\n      try {\n        dest = JSON.parse(dest);\n\n        if (!Array.isArray(dest)) {\n          // Avoid incorrectly rejecting a valid named destination, such as\n          // e.g. \"4.3\" or \"true\", because `JSON.parse` converted its type.\n          dest = dest.toString();\n        }\n      } catch (ex) {}\n\n      if (typeof dest === \"string\" || isValidExplicitDestination(dest)) {\n        this.goToDestination(dest);\n        return;\n      }\n      Window['ngxConsole'].error(\n        `PDFLinkService.setHash: \"${unescape(hash)}\" is not ` +\n          \"a valid destination.\"\n      );\n    }\n  }\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {\n    // See PDF reference, table 8.45 - Named action\n    switch (action) {\n      case \"GoBack\":\n        this.pdfHistory?.back();\n        break;\n\n      case \"GoForward\":\n        this.pdfHistory?.forward();\n        break;\n\n      case \"NextPage\":\n        this.pdfViewer.nextPage();\n        break;\n\n      case \"PrevPage\":\n        this.pdfViewer.previousPage();\n        break;\n\n      case \"LastPage\":\n        this.page = this.pagesCount;\n        break;\n\n      case \"FirstPage\":\n        this.page = 1;\n        break;\n\n      default:\n        break; // No action according to spec\n    }\n\n    this.eventBus.dispatch(\"namedaction\", {\n      source: this,\n      action,\n    });\n  }\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {\n    if (!pageRef) {\n      return;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    this._pagesRefCache[refStr] = pageNum;\n  }\n\n  /**\n   * @private\n   */\n  _cachedPageNumber(pageRef) {\n    if (!pageRef) {\n      return null;\n    }\n    const refStr =\n      pageRef.gen === 0 ? `${pageRef.num}R` : `${pageRef.num}R${pageRef.gen}`;\n    return this._pagesRefCache?.[refStr] || null;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return this.pdfViewer.isPageVisible(pageNumber);\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    return this.pdfViewer.isPageCached(pageNumber);\n  }\n}\n\nfunction isValidExplicitDestination(dest) {\n  if (!Array.isArray(dest)) {\n    return false;\n  }\n  const destLength = dest.length;\n  if (destLength < 2) {\n    return false;\n  }\n  const page = dest[0];\n  if (\n    !(\n      typeof page === \"object\" &&\n      Number.isInteger(page.num) &&\n      Number.isInteger(page.gen)\n    ) &&\n    !(Number.isInteger(page) && page >= 0)\n  ) {\n    return false;\n  }\n  const zoom = dest[1];\n  if (!(typeof zoom === \"object\" && typeof zoom.name === \"string\")) {\n    return false;\n  }\n  let allowNull = true;\n  switch (zoom.name) {\n    case \"XYZ\":\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case \"Fit\":\n    case \"FitB\":\n      return destLength === 2;\n    case \"FitH\":\n    case \"FitBH\":\n    case \"FitV\":\n    case \"FitBV\":\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case \"FitR\":\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (let i = 2; i < destLength; i++) {\n    const param = dest[i];\n    if (!(typeof param === \"number\" || (allowNull && param === null))) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @implements {IPDFLinkService}\n */\nclass SimpleLinkService {\n  constructor() {\n    this.externalLinkEnabled = true;\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesCount() {\n    return 0;\n  }\n\n  /**\n   * @type {number}\n   */\n  get page() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set page(value) {}\n\n  /**\n   * @type {number}\n   */\n  get rotation() {\n    return 0;\n  }\n\n  /**\n   * @param {number} value\n   */\n  set rotation(value) {}\n\n  /**\n   * @param {string|Array} dest - The named, or explicit, PDF destination.\n   */\n  async goToDestination(dest) {}\n\n  /**\n   * @param {number|string} val - The page number, or page label.\n   */\n  goToPage(val) {}\n\n  /**\n   * @param {HTMLAnchorElement} link\n   * @param {string} url\n   * @param {boolean} [newWindow]\n   */\n  addLinkAttributes(link, url, newWindow = false) {\n    addLinkAttributes(link, { url, enabled: this.externalLinkEnabled });\n  }\n\n  /**\n   * @param dest - The PDF destination object.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getDestinationHash(dest) {\n    return \"#\";\n  }\n\n  /**\n   * @param hash - The PDF parameters/hash.\n   * @returns {string} The hyperlink to the PDF object.\n   */\n  getAnchorUrl(hash) {\n    return \"#\";\n  }\n\n  /**\n   * @param {string} hash\n   */\n  setHash(hash) {}\n\n  /**\n   * @param {string} action\n   */\n  executeNamedAction(action) {}\n\n  /**\n   * @param {number} pageNum - page number.\n   * @param {Object} pageRef - reference to the page.\n   */\n  cachePageRef(pageNum, pageRef) {}\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    return true;\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    return true;\n  }\n}\n\nexport { PDFLinkService, SimpleLinkService };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseTreeViewer } from \"./base_tree_viewer.js\";\nimport { createPromiseCapability } from \"pdfjs-lib\";\nimport { SidebarView } from \"./ui_utils.js\";\n\n/**\n * @typedef {Object} PDFOutlineViewerOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {EventBus} eventBus - The application event bus.\n */\n\n/**\n * @typedef {Object} PDFOutlineViewerRenderParameters\n * @property {Array|null} outline - An array of outline objects.\n * @property {PDFDocument} pdfDocument - A {PDFDocument} instance.\n */\n\nclass PDFOutlineViewer extends BaseTreeViewer {\n  /**\n   * @param {PDFOutlineViewerOptions} options\n   */\n  constructor(options) {\n    super(options);\n    this.linkService = options.linkService;\n\n    this.eventBus._on(\"toggleoutlinetree\", this._toggleAllTreeItems.bind(this));\n    this.eventBus._on(\n      \"currentoutlineitem\",\n      this._currentOutlineItem.bind(this)\n    );\n\n    this.eventBus._on(\"pagechanging\", evt => {\n      this._currentPageNumber = evt.pageNumber;\n    });\n    this.eventBus._on(\"pagesloaded\", evt => {\n      this._isPagesLoaded = !!evt.pagesCount;\n\n      // If the capability is still pending, see the `_dispatchEvent`-method,\n      // we know that the `currentOutlineItem`-button can be enabled here.\n      if (\n        this._currentOutlineItemCapability &&\n        !this._currentOutlineItemCapability.settled\n      ) {\n        this._currentOutlineItemCapability.resolve(\n          /* enabled = */ this._isPagesLoaded\n        );\n      }\n    });\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this._sidebarView = evt.view;\n    });\n  }\n\n  reset() {\n    super.reset();\n    this._outline = null;\n\n    this._pageNumberToDestHashCapability = null;\n    this._currentPageNumber = 1;\n    this._isPagesLoaded = null;\n\n    if (\n      this._currentOutlineItemCapability &&\n      !this._currentOutlineItemCapability.settled\n    ) {\n      this._currentOutlineItemCapability.resolve(/* enabled = */ false);\n    }\n    this._currentOutlineItemCapability = null;\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent(outlineCount) {\n    this._currentOutlineItemCapability = createPromiseCapability();\n    if (\n      outlineCount === 0 ||\n      this._pdfDocument?.loadingParams.disableAutoFetch\n    ) {\n      this._currentOutlineItemCapability.resolve(/* enabled = */ false);\n    } else if (this._isPagesLoaded !== null) {\n      this._currentOutlineItemCapability.resolve(\n        /* enabled = */ this._isPagesLoaded\n      );\n    }\n\n    this.eventBus.dispatch(\"outlineloaded\", {\n      source: this,\n      outlineCount,\n      currentOutlineItemPromise: this._currentOutlineItemCapability.promise,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _bindLink(element, { url, newWindow, dest }) {\n    const { linkService } = this;\n\n    if (url) {\n      linkService.addLinkAttributes(element, url, newWindow);\n      return;\n    }\n\n    element.href = linkService.getDestinationHash(dest);\n    element.onclick = evt => {\n      this._updateCurrentTreeItem(evt.target.parentNode);\n\n      if (dest) {\n        linkService.goToDestination(dest);\n      }\n      return false;\n    };\n  }\n\n  /**\n   * @private\n   */\n  _setStyles(element, { bold, italic }) {\n    if (bold) {\n      element.style.fontWeight = \"bold\";\n    }\n    if (italic) {\n      element.style.fontStyle = \"italic\";\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addToggleButton(div, { count, items }) {\n    let hidden = false;\n    if (count < 0) {\n      let totalCount = items.length;\n      if (totalCount > 0) {\n        const queue = [...items];\n        while (queue.length > 0) {\n          const { count: nestedCount, items: nestedItems } = queue.shift();\n          if (nestedCount > 0 && nestedItems.length > 0) {\n            totalCount += nestedItems.length;\n            queue.push(...nestedItems);\n          }\n        }\n      }\n      if (Math.abs(count) === totalCount) {\n        hidden = true;\n      }\n    }\n    super._addToggleButton(div, hidden);\n  }\n\n  /**\n   * @private\n   */\n  _toggleAllTreeItems() {\n    if (!this._outline) {\n      return;\n    }\n    super._toggleAllTreeItems();\n  }\n\n  /**\n   * @param {PDFOutlineViewerRenderParameters} params\n   */\n  render({ outline, pdfDocument }) {\n    if (this._outline) {\n      this.reset();\n    }\n    this._outline = outline || null;\n    this._pdfDocument = pdfDocument || null;\n\n    if (!outline) {\n      this._dispatchEvent(/* outlineCount = */ 0);\n      return;\n    }\n\n    const fragment = document.createDocumentFragment();\n    const queue = [{ parent: fragment, items: outline }];\n    let outlineCount = 0,\n      hasAnyNesting = false;\n    while (queue.length > 0) {\n      const levelData = queue.shift();\n      for (const item of levelData.items) {\n        const div = document.createElement(\"div\");\n        div.className = \"treeItem\";\n\n        const element = document.createElement(\"a\");\n        this._bindLink(element, item);\n        this._setStyles(element, item);\n        element.textContent = this._normalizeTextContent(item.title);\n\n        div.appendChild(element);\n\n        if (item.items.length > 0) {\n          hasAnyNesting = true;\n          this._addToggleButton(div, item);\n\n          const itemsDiv = document.createElement(\"div\");\n          itemsDiv.className = \"treeItems\";\n          div.appendChild(itemsDiv);\n\n          queue.push({ parent: itemsDiv, items: item.items });\n        }\n\n        levelData.parent.appendChild(div);\n        outlineCount++;\n      }\n    }\n\n    this._finishRendering(fragment, outlineCount, hasAnyNesting);\n  }\n\n  /**\n   * Find/highlight the current outline item, corresponding to the active page.\n   * @private\n   */\n  async _currentOutlineItem() {\n    if (!this._isPagesLoaded) {\n      throw new Error(\"_currentOutlineItem: All pages have not been loaded.\");\n    }\n    if (!this._outline || !this._pdfDocument) {\n      return;\n    }\n\n    const pageNumberToDestHash = await this._getPageNumberToDestHash(\n      this._pdfDocument\n    );\n    if (!pageNumberToDestHash) {\n      return;\n    }\n    this._updateCurrentTreeItem(/* treeItem = */ null);\n\n    if (this._sidebarView !== SidebarView.OUTLINE) {\n      return; // The outline view is no longer visible, hence do nothing.\n    }\n    // When there is no destination on the current page, always check the\n    // previous ones in (reverse) order.\n    for (let i = this._currentPageNumber; i > 0; i--) {\n      const destHash = pageNumberToDestHash.get(i);\n      if (!destHash) {\n        continue;\n      }\n      const linkElement = this.container.querySelector(`a[href=\"${destHash}\"]`);\n      if (!linkElement) {\n        continue;\n      }\n      this._scrollToCurrentTreeItem(linkElement.parentNode);\n      break;\n    }\n  }\n\n  /**\n   * To (significantly) simplify the overall implementation, we will only\n   * consider *one* destination per page when finding/highlighting the current\n   * outline item (similar to e.g. Adobe Reader); more specifically, we choose\n   * the *first* outline item at the *lowest* level of the outline tree.\n   * @private\n   */\n  async _getPageNumberToDestHash(pdfDocument) {\n    if (this._pageNumberToDestHashCapability) {\n      return this._pageNumberToDestHashCapability.promise;\n    }\n    this._pageNumberToDestHashCapability = createPromiseCapability();\n\n    const pageNumberToDestHash = new Map(),\n      pageNumberNesting = new Map();\n    const queue = [{ nesting: 0, items: this._outline }];\n    while (queue.length > 0) {\n      const levelData = queue.shift(),\n        currentNesting = levelData.nesting;\n      for (const { dest, items } of levelData.items) {\n        let explicitDest, pageNumber;\n        if (typeof dest === \"string\") {\n          explicitDest = await pdfDocument.getDestination(dest);\n\n          if (pdfDocument !== this._pdfDocument) {\n            return null; // The document was closed while the data resolved.\n          }\n        } else {\n          explicitDest = dest;\n        }\n        if (Array.isArray(explicitDest)) {\n          const [destRef] = explicitDest;\n\n          if (typeof destRef === \"object\" && destRef !== null) {\n            pageNumber = this.linkService._cachedPageNumber(destRef);\n\n            if (!pageNumber) {\n              try {\n                pageNumber = (await pdfDocument.getPageIndex(destRef)) + 1;\n\n                if (pdfDocument !== this._pdfDocument) {\n                  return null; // The document was closed while the data resolved.\n                }\n                this.linkService.cachePageRef(pageNumber, destRef);\n              } catch (ex) {\n                // Invalid page reference, ignore it and continue parsing.\n              }\n            }\n          } else if (Number.isInteger(destRef)) {\n            pageNumber = destRef + 1;\n          }\n\n          if (\n            Number.isInteger(pageNumber) &&\n            (!pageNumberToDestHash.has(pageNumber) ||\n              currentNesting > pageNumberNesting.get(pageNumber))\n          ) {\n            const destHash = this.linkService.getDestinationHash(dest);\n            pageNumberToDestHash.set(pageNumber, destHash);\n            pageNumberNesting.set(pageNumber, currentNesting);\n          }\n        }\n\n        if (items.length > 0) {\n          queue.push({ nesting: currentNesting + 1, items });\n        }\n      }\n    }\n\n    this._pageNumberToDestHashCapability.resolve(\n      pageNumberToDestHash.size > 0 ? pageNumberToDestHash : null\n    );\n    return this._pageNumberToDestHashCapability.promise;\n  }\n}\n\nexport { PDFOutlineViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  normalizeWheelEventDelta,\n  PresentationModeState,\n  ScrollMode,\n  SpreadMode,\n} from \"./ui_utils.js\";\n\nconst DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS = 1500; // in ms\nconst DELAY_BEFORE_HIDING_CONTROLS = 3000; // in ms\nconst ACTIVE_SELECTOR = \"pdfPresentationMode\";\nconst CONTROLS_SELECTOR = \"pdfPresentationModeControls\";\nconst MOUSE_SCROLL_COOLDOWN_TIME = 50; // in ms\nconst PAGE_SWITCH_THRESHOLD = 0.1;\n\n// Number of CSS pixels for a movement to count as a swipe.\nconst SWIPE_MIN_DISTANCE_THRESHOLD = 50;\n\n// Swipe angle deviation from the x or y axis before it is not\n// considered a swipe in that direction any more.\nconst SWIPE_ANGLE_THRESHOLD = Math.PI / 6;\n\n/**\n * @typedef {Object} PDFPresentationModeOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {EventBus} eventBus - The application event bus.\n */\n\nclass PDFPresentationMode {\n  /**\n   * @param {PDFPresentationModeOptions} options\n   */\n  constructor({ container, pdfViewer, eventBus }) {\n    this.container = container;\n    this.pdfViewer = pdfViewer;\n    this.eventBus = eventBus;\n\n    this.active = false;\n    this.args = null;\n    this.contextMenuOpen = false;\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n    this.touchSwipeState = null;\n  }\n\n  /**\n   * Request the browser to enter fullscreen mode.\n   * @returns {boolean} Indicating if the request was successful.\n   */\n  request() {\n    if (this.switchInProgress || this.active || !this.pdfViewer.pagesCount) {\n      return false;\n    }\n    this._addFullscreenChangeListeners();\n    this._setSwitchInProgress();\n    this._notifyStateChange();\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else {\n        return false;\n      }\n    } else {\n      if (this.container.requestFullscreen) {\n        this.container.requestFullscreen();\n      } else if (this.container.mozRequestFullScreen) {\n        this.container.mozRequestFullScreen();\n      } else if (this.container.webkitRequestFullscreen) {\n        // #426 modified by ngx-extended-pdf-viewer\n        document.body.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n        this._prepareFullscreenMode();\n        // #426 end of modification\n      } else {\n        return false;\n      }\n\n    }\n\n    this.args = {\n      pageNumber: this.pdfViewer.currentPageNumber,\n      scaleValue: this.pdfViewer.currentScaleValue,\n      scrollMode: this.pdfViewer.scrollMode,\n      spreadMode: this.pdfViewer.spreadMode,\n    };\n\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _mouseWheel(evt) {\n    if (!this.active) {\n      return;\n    }\n\n    evt.preventDefault();\n\n    const delta = normalizeWheelEventDelta(evt);\n    const currentTime = Date.now();\n    const storedTime = this.mouseScrollTimeStamp;\n\n    // If we've already switched page, avoid accidentally switching again.\n    if (\n      currentTime > storedTime &&\n      currentTime - storedTime < MOUSE_SCROLL_COOLDOWN_TIME\n    ) {\n      return;\n    }\n    // If the scroll direction changed, reset the accumulated scroll delta.\n    if (\n      (this.mouseScrollDelta > 0 && delta < 0) ||\n      (this.mouseScrollDelta < 0 && delta > 0)\n    ) {\n      this._resetMouseScrollState();\n    }\n    this.mouseScrollDelta += delta;\n\n    if (Math.abs(this.mouseScrollDelta) >= PAGE_SWITCH_THRESHOLD) {\n      const totalDelta = this.mouseScrollDelta;\n      this._resetMouseScrollState();\n      const success =\n        totalDelta > 0\n          ? this.pdfViewer.previousPage()\n          : this.pdfViewer.nextPage();\n      if (success) {\n        this.mouseScrollTimeStamp = currentTime;\n      }\n    }\n  }\n\n  get isFullscreen() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return !!document.fullscreenElement;\n    }\n    return !!(\n      document.fullscreenElement ||\n      document.mozFullScreen ||\n      document.webkitIsFullScreen\n    );\n  }\n\n  /**\n   * @private\n   */\n  _notifyStateChange() {\n    let state = PresentationModeState.NORMAL;\n    if (this.switchInProgress) {\n      state = PresentationModeState.CHANGING;\n    } else if (this.active) {\n      state = PresentationModeState.FULLSCREEN;\n    }\n    this.eventBus.dispatch(\"presentationmodechanged\", {\n      source: this,\n      state,\n    });\n  }\n\n  /**\n   * Used to initialize a timeout when requesting Presentation Mode,\n   * i.e. when the browser is requested to enter fullscreen mode.\n   * This timeout is used to prevent the current page from being scrolled\n   * partially, or completely, out of view when entering Presentation Mode.\n   * NOTE: This issue seems limited to certain zoom levels (e.g. page-width).\n   *\n   * @private\n   */\n  _setSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n    }\n    this.switchInProgress = setTimeout(() => {\n      this._removeFullscreenChangeListeners();\n      delete this.switchInProgress;\n      this._notifyStateChange();\n    }, DELAY_BEFORE_RESETTING_SWITCH_IN_PROGRESS);\n  }\n\n  /**\n   * @private\n   */\n  _resetSwitchInProgress() {\n    if (this.switchInProgress) {\n      clearTimeout(this.switchInProgress);\n      delete this.switchInProgress;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _enter() {\n    this.active = true;\n    this._resetSwitchInProgress();\n    this._notifyStateChange();\n    this.container.classList.add(ACTIVE_SELECTOR);\n\n    // Ensure that the correct page is scrolled into view when entering\n    // Presentation Mode, by waiting until fullscreen mode in enabled.\n    setTimeout(() => {\n      this.pdfViewer.scrollMode = ScrollMode.PAGE;\n      this.pdfViewer.spreadMode = SpreadMode.NONE;\n      this.pdfViewer.currentPageNumber = this.args.pageNumber;\n      this.pdfViewer.currentScaleValue = \"page-fit\";\n    }, 0);\n\n    this._addWindowListeners();\n    this._showControls();\n    this.contextMenuOpen = false;\n\n    // Text selection is disabled in Presentation Mode, thus it's not possible\n    // for the user to deselect text that is selected (e.g. with \"Select all\")\n    // when entering Presentation Mode, hence we remove any active selection.\n    window.getSelection().removeAllRanges();\n  }\n\n  /**\n   * @private\n   */\n  _exit() {\n    this._tidyUpFullscreenMode();\n    const pageNumber = this.pdfViewer.currentPageNumber;\n    this.container.classList.remove(ACTIVE_SELECTOR);\n\n    // Ensure that the correct page is scrolled into view when exiting\n    // Presentation Mode, by waiting until fullscreen mode is disabled.\n    setTimeout(() => {\n      this.active = false;\n      this._removeFullscreenChangeListeners();\n      this._notifyStateChange();\n\n      this.pdfViewer.scrollMode = this.args.scrollMode;\n      this.pdfViewer.spreadMode = this.args.spreadMode;\n      this.pdfViewer.currentScaleValue = this.args.scaleValue;\n      this.pdfViewer.currentPageNumber = pageNumber;\n      this.args = null;\n    }, 0);\n\n    this._removeWindowListeners();\n    this._hideControls();\n    this._resetMouseScrollState();\n    this.contextMenuOpen = false;\n  }\n\n  // #426 modified by ngx-extended-pdf-viewer\n  _prepareFullscreenMode() {\n    const domElement = document.getElementsByClassName(\"zoom\")[0].parentElement;\n    const parent = domElement.parentElement;\n    this.ngxContainer = parent;\n    for (let i = 0; i < parent.childElementCount; i++) {\n      if (parent.children.item(i) === domElement) {\n        this.ngxContainerIndex = i;\n      }\n    }\n    parent.removeChild(domElement);\n    document.body.append(domElement);\n    const siblings = document.body.children;\n    for (let i = 0; i < siblings.length; i++) {\n      const s = siblings.item(i);\n      if (s !== domElement && s instanceof HTMLElement) {\n        s.classList.add(\"hidden-by-fullscreen\");\n      }\n    }\n    document.getElementById(\"sidebarContainer\").classList.add(\"hidden-by-fullscreen\");\n    document.getElementsByClassName(\"toolbar\")[0].classList.add(\"hidden-by-fullscreen\");\n  }\n\n  _tidyUpFullscreenMode() {\n    if (this.ngxContainer) {\n      const domElement = document.getElementsByClassName(\"zoom\")[0].parentElement;\n      document.body.removeChild(domElement);\n      if (this.ngxContainerIndex >= this.ngxContainer.childElementCount) {\n        this.ngxContainer.append(domElement);\n      } else {\n        this.ngxContainer.insertBefore(domElement, this.ngxContainer.children.item(this.ngxContainerIndex));\n      }\n      this.ngxContainer = undefined;\n      const siblings = document.body.children;\n      for (let i = 0; i < siblings.length; i++) {\n        const s = siblings.item(i);\n        if (s !== domElement && s instanceof HTMLElement) {\n          if (s.classList.contains(\"hidden-by-fullscreen\")) {\n            s.classList.remove(\"hidden-by-fullscreen\");\n          }\n        }\n      }\n\n      document.getElementById(\"sidebarContainer\").classList.remove(\"hidden-by-fullscreen\");\n      document.getElementsByClassName(\"toolbar\")[0].classList.remove(\"hidden-by-fullscreen\");\n    }\n  }\n\n  // #426 end of modification\n\n  /**\n   * @private\n   */\n  _mouseDown(evt) {\n    if (this.contextMenuOpen) {\n      this.contextMenuOpen = false;\n      evt.preventDefault();\n      return;\n    }\n    if (evt.button === 0) {\n      // Enable clicking of links in presentation mode. Note: only links\n      // pointing to destinations in the current PDF document work.\n      const isInternalLink =\n        evt.target.href && evt.target.classList.contains(\"internalLink\");\n      if (!isInternalLink) {\n        // Unless an internal link was clicked, advance one page.\n        evt.preventDefault();\n\n        if (evt.shiftKey) {\n          this.pdfViewer.previousPage();\n        } else {\n          this.pdfViewer.nextPage();\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _contextMenu() {\n    this.contextMenuOpen = true;\n  }\n\n  /**\n   * @private\n   */\n  _showControls() {\n    if (this.controlsTimeout) {\n      clearTimeout(this.controlsTimeout);\n    } else {\n      this.container.classList.add(CONTROLS_SELECTOR);\n    }\n    this.controlsTimeout = setTimeout(() => {\n      this.container.classList.remove(CONTROLS_SELECTOR);\n      delete this.controlsTimeout;\n    }, DELAY_BEFORE_HIDING_CONTROLS);\n  }\n\n  /**\n   * @private\n   */\n  _hideControls() {\n    if (!this.controlsTimeout) {\n      return;\n    }\n    clearTimeout(this.controlsTimeout);\n    this.container.classList.remove(CONTROLS_SELECTOR);\n    delete this.controlsTimeout;\n  }\n\n  /**\n   * Resets the properties used for tracking mouse scrolling events.\n   *\n   * @private\n   */\n  _resetMouseScrollState() {\n    this.mouseScrollTimeStamp = 0;\n    this.mouseScrollDelta = 0;\n  }\n\n  /**\n   * @private\n   */\n  _touchSwipe(evt) {\n    if (!this.active) {\n      return;\n    }\n    if (evt.touches.length > 1) {\n      // Multiple touch points detected; cancel the swipe.\n      this.touchSwipeState = null;\n      return;\n    }\n\n    switch (evt.type) {\n      case \"touchstart\":\n        this.touchSwipeState = {\n          startX: evt.touches[0].pageX,\n          startY: evt.touches[0].pageY,\n          endX: evt.touches[0].pageX,\n          endY: evt.touches[0].pageY,\n        };\n        break;\n      case \"touchmove\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        this.touchSwipeState.endX = evt.touches[0].pageX;\n        this.touchSwipeState.endY = evt.touches[0].pageY;\n        // Avoid the swipe from triggering browser gestures (Chrome in\n        // particular has some sort of swipe gesture in fullscreen mode).\n        evt.preventDefault();\n        break;\n      case \"touchend\":\n        if (this.touchSwipeState === null) {\n          return;\n        }\n        let delta = 0;\n        const dx = this.touchSwipeState.endX - this.touchSwipeState.startX;\n        const dy = this.touchSwipeState.endY - this.touchSwipeState.startY;\n        const absAngle = Math.abs(Math.atan2(dy, dx));\n        if (\n          Math.abs(dx) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n          (absAngle <= SWIPE_ANGLE_THRESHOLD ||\n            absAngle >= Math.PI - SWIPE_ANGLE_THRESHOLD)\n        ) {\n          // Horizontal swipe.\n          delta = dx;\n        } else if (\n          Math.abs(dy) > SWIPE_MIN_DISTANCE_THRESHOLD &&\n          Math.abs(absAngle - Math.PI / 2) <= SWIPE_ANGLE_THRESHOLD\n        ) {\n          // Vertical swipe.\n          delta = dy;\n        }\n        if (delta > 0) {\n          this.pdfViewer.previousPage();\n        } else if (delta < 0) {\n          this.pdfViewer.nextPage();\n        }\n        break;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addWindowListeners() {\n    this.showControlsBind = this._showControls.bind(this);\n    this.mouseDownBind = this._mouseDown.bind(this);\n    this.mouseWheelBind = this._mouseWheel.bind(this);\n    this.resetMouseScrollStateBind = this._resetMouseScrollState.bind(this);\n    this.contextMenuBind = this._contextMenu.bind(this);\n    this.touchSwipeBind = this._touchSwipe.bind(this);\n\n    window.addEventListener(\"mousemove\", this.showControlsBind);\n    window.addEventListener(\"mousedown\", this.mouseDownBind);\n    window.addEventListener(\"wheel\", this.mouseWheelBind, { passive: false });\n    window.addEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.addEventListener(\"contextmenu\", this.contextMenuBind);\n    window.addEventListener(\"touchstart\", this.touchSwipeBind);\n    window.addEventListener(\"touchmove\", this.touchSwipeBind);\n    window.addEventListener(\"touchend\", this.touchSwipeBind);\n  }\n\n  /**\n   * @private\n   */\n  _removeWindowListeners() {\n    window.removeEventListener(\"mousemove\", this.showControlsBind);\n    window.removeEventListener(\"mousedown\", this.mouseDownBind);\n    window.removeEventListener(\"wheel\", this.mouseWheelBind, {\n      passive: false,\n    });\n    window.removeEventListener(\"keydown\", this.resetMouseScrollStateBind);\n    window.removeEventListener(\"contextmenu\", this.contextMenuBind);\n    window.removeEventListener(\"touchstart\", this.touchSwipeBind);\n    window.removeEventListener(\"touchmove\", this.touchSwipeBind);\n    window.removeEventListener(\"touchend\", this.touchSwipeBind);\n\n    delete this.showControlsBind;\n    delete this.mouseDownBind;\n    delete this.mouseWheelBind;\n    delete this.resetMouseScrollStateBind;\n    delete this.contextMenuBind;\n    delete this.touchSwipeBind;\n  }\n\n  /**\n   * @private\n   */\n  _fullscreenChange() {\n    if (this.isFullscreen) {\n      this._enter();\n    } else {\n      this._exit();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addFullscreenChangeListeners() {\n    this.fullscreenChangeBind = this._fullscreenChange.bind(this);\n\n    window.addEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      window.addEventListener(\"mozfullscreenchange\", this.fullscreenChangeBind);\n      window.addEventListener(\n        \"webkitfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  _removeFullscreenChangeListeners() {\n    window.removeEventListener(\"fullscreenchange\", this.fullscreenChangeBind);\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      window.removeEventListener(\n        \"mozfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n      window.removeEventListener(\n        \"webkitfullscreenchange\",\n        this.fullscreenChangeBind\n      );\n    }\n\n    delete this.fullscreenChangeBind;\n  }\n}\n\nexport { PDFPresentationMode };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IRenderableView} IRenderableView */\n/** @typedef {import(\"./pdf_viewer\").PDFViewer} PDFViewer */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./pdf_thumbnail_viewer\").PDFThumbnailViewer} PDFThumbnailViewer */\n\nimport { RenderingCancelledException } from \"pdfjs-lib\";\nimport { RenderingStates } from \"./ui_utils.js\";\n\nconst CLEANUP_TIMEOUT = 30000;\n\n/**\n * Controls rendering of the views for pages and thumbnails.\n */\nclass PDFRenderingQueue {\n  constructor() {\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    /** @type {number} */\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  /**\n   * @param {PDFViewer} pdfViewer\n   */\n  setViewer(pdfViewer) {\n    this.pdfViewer = pdfViewer;\n  }\n\n  /**\n   * @param {PDFThumbnailViewer} pdfThumbnailViewer\n   */\n  setThumbnailViewer(pdfThumbnailViewer) {\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isHighestPriority(view) {\n    return this.highestPriorityPage === view.renderingId;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasViewer() {\n    return !!this.pdfViewer;\n  }\n\n  /**\n   * @param {Object} currentlyVisiblePages\n   */\n  renderHighestPriority(currentlyVisiblePages) {\n    if (this.idleTimeout) {\n      clearTimeout(this.idleTimeout);\n      this.idleTimeout = null;\n    }\n\n    // Pages have a higher priority than thumbnails, so check them first.\n    if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n      return;\n    }\n    // No pages needed rendering, so check thumbnails.\n    if (\n      this.isThumbnailViewEnabled &&\n      this.pdfThumbnailViewer?.forceRendering()\n    ) {\n      return;\n    }\n\n    if (this.printing) {\n      // If printing is currently ongoing do not reschedule cleanup.\n      return;\n    }\n\n    if (this.onIdle) {\n      this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n    }\n  }\n\n  /**\n   * @param {Object} visible\n   * @param {Array} views\n   * @param {boolean} scrolledDown\n   * @param {boolean} [preRenderExtra]\n   */\n  getHighestPriority(visible, views, scrolledDown, preRenderExtra = false) {\n    /**\n     * The state has changed. Figure out which page has the highest priority to\n     * render next (if any).\n     *\n     * Priority:\n     * 1. visible pages\n     * 2. if last scrolled down, the page after the visible pages, or\n     *    if last scrolled up, the page before the visible pages\n     */\n    const visibleViews = visible.views,\n      numVisible = visibleViews.length;\n\n    if (numVisible === 0) {\n      return null;\n    }\n    for (let i = 0; i < numVisible; i++) {\n      const view = visibleViews[i].view;\n      if (!this.isViewFinished(view)) {\n        return view;\n      }\n    }\n    const firstId = visible.first.id,\n      lastId = visible.last.id;\n\n    // All the visible views have rendered; try to handle any \"holes\" in the\n    // page layout (can happen e.g. with spreadModes at higher zoom levels).\n    if (lastId - firstId + 1 > numVisible) {\n      const visibleIds = visible.ids;\n      for (let i = 1, ii = lastId - firstId; i < ii; i++) {\n        const holeId = scrolledDown ? firstId + i : lastId - i;\n        if (visibleIds.has(holeId)) {\n          continue;\n        }\n        const holeView = views[holeId - 1];\n        if (!this.isViewFinished(holeView)) {\n          return holeView;\n        }\n      }\n    }\n\n    // All the visible views have rendered; try to render next/previous page.\n    // (IDs start at 1, so no need to add 1 when `scrolledDown === true`.)\n    let preRenderIndex = scrolledDown ? lastId : firstId - 2;\n    let preRenderView = views[preRenderIndex];\n\n    if (preRenderView && !this.isViewFinished(preRenderView)) {\n      return preRenderView;\n    }\n    if (preRenderExtra) {\n      preRenderIndex += scrolledDown ? 1 : -1;\n      preRenderView = views[preRenderIndex];\n\n      if (preRenderView && !this.isViewFinished(preRenderView)) {\n        return preRenderView;\n      }\n    }\n    // Everything that needs to be rendered has been.\n    return null;\n  }\n\n  /**\n   * @param {IRenderableView} view\n   * @returns {boolean}\n   */\n  isViewFinished(view) {\n    return view.renderingState === RenderingStates.FINISHED;\n  }\n\n  /**\n   * Render a page or thumbnail view. This calls the appropriate function\n   * based on the views state. If the view is already rendered it will return\n   * `false`.\n   *\n   * @param {IRenderableView} view\n   */\n  renderView(view) {\n    switch (view.renderingState) {\n      case RenderingStates.FINISHED:\n        return false;\n      case RenderingStates.PAUSED:\n        this.highestPriorityPage = view.renderingId;\n        view.resume();\n        break;\n      case RenderingStates.RUNNING:\n        this.highestPriorityPage = view.renderingId;\n        break;\n      case RenderingStates.INITIAL:\n        this.highestPriorityPage = view.renderingId;\n        view\n          .draw()\n          .finally(() => {\n            this.renderHighestPriority();\n          })\n          .catch(reason => {\n            if (reason instanceof RenderingCancelledException) {\n              return;\n            }\n            Window['ngxConsole'].error(`renderView: \"${reason}\"`);\n          });\n        break;\n    }\n    return true;\n  }\n}\n\nexport { PDFRenderingQueue };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n\nimport { apiPageLayoutToViewerModes, RenderingStates } from \"./ui_utils.js\";\nimport { createPromiseCapability, shadow } from \"pdfjs-lib\";\n\n/**\n * @typedef {Object} PDFScriptingManagerOptions\n * @property {EventBus} eventBus - The application event bus.\n * @property {string} sandboxBundleSrc - The path and filename of the scripting\n *   bundle.\n * @property {Object} [scriptingFactory] - The factory that is used when\n *   initializing scripting; must contain a `createScripting` method.\n *   PLEASE NOTE: Primarily intended for the default viewer use-case.\n * @property {function} [docPropertiesLookup] - The function that is used to\n *   lookup the necessary document properties.\n */\n\nclass PDFScriptingManager {\n  /**\n   * @param {PDFScriptingManagerOptions} options\n   */\n  constructor({\n    eventBus,\n    sandboxBundleSrc = null,\n    scriptingFactory = null,\n    docPropertiesLookup = null,\n  }) {\n    this._pdfDocument = null;\n    this._pdfViewer = null;\n    this._closeCapability = null;\n    this._destroyCapability = null;\n\n    this._scripting = null;\n    this._mouseState = Object.create(null);\n    this._ready = false;\n\n    this._eventBus = eventBus;\n    this._sandboxBundleSrc = sandboxBundleSrc;\n    this._scriptingFactory = scriptingFactory;\n    this._docPropertiesLookup = docPropertiesLookup;\n\n    // The default viewer already handles adding/removing of DOM events,\n    // hence limit this to only the viewer components.\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"COMPONENTS\") &&\n      !this._scriptingFactory\n    ) {\n      window.addEventListener(\"updatefromsandbox\", event => {\n        this._eventBus.dispatch(\"updatefromsandbox\", {\n          source: window,\n          detail: event.detail,\n        });\n      });\n    }\n  }\n\n  setViewer(pdfViewer) {\n    this._pdfViewer = pdfViewer;\n  }\n\n  async setDocument(pdfDocument) {\n    if (this._pdfDocument) {\n      await this._destroyScripting();\n    }\n    this._pdfDocument = pdfDocument;\n\n    if (!pdfDocument) {\n      return;\n    }\n    const [objects, calculationOrder, docActions] = await Promise.all([\n      pdfDocument.getFieldObjects(),\n      pdfDocument.getCalculationOrderIds(),\n      pdfDocument.getJSActions(),\n    ]);\n\n    if (!objects && !docActions) {\n      // No FieldObjects or JavaScript actions were found in the document.\n      await this._destroyScripting();\n      return;\n    }\n    if (pdfDocument !== this._pdfDocument) {\n      return; // The document was closed while the data resolved.\n    }\n    try {\n      this._scripting = this._createScripting();\n    } catch (error) {\n      Window['ngxConsole'].error(`PDFScriptingManager.setDocument: \"${error?.message}\".`);\n\n      await this._destroyScripting();\n      return;\n    }\n\n    this._internalEvents.set(\"updatefromsandbox\", event => {\n      if (event?.source !== window) {\n        return;\n      }\n      this._updateFromSandbox(event.detail);\n    });\n    this._internalEvents.set(\"dispatcheventinsandbox\", event => {\n      this._scripting?.dispatchEventInSandbox(event.detail);\n    });\n\n    this._internalEvents.set(\"pagechanging\", ({ pageNumber, previous }) => {\n      if (pageNumber === previous) {\n        return; // The current page didn't change.\n      }\n      this._dispatchPageClose(previous);\n      this._dispatchPageOpen(pageNumber);\n    });\n    this._internalEvents.set(\"pagerendered\", ({ pageNumber }) => {\n      if (!this._pageOpenPending.has(pageNumber)) {\n        return; // No pending \"PageOpen\" event for the newly rendered page.\n      }\n      if (pageNumber !== this._pdfViewer.currentPageNumber) {\n        return; // The newly rendered page is no longer the current one.\n      }\n      this._dispatchPageOpen(pageNumber);\n    });\n    this._internalEvents.set(\"pagesdestroy\", async event => {\n      await this._dispatchPageClose(this._pdfViewer.currentPageNumber);\n\n      await this._scripting?.dispatchEventInSandbox({\n        id: \"doc\",\n        name: \"WillClose\",\n      });\n\n      this._closeCapability?.resolve();\n    });\n\n    this._domEvents.set(\"mousedown\", event => {\n      this._mouseState.isDown = true;\n    });\n    this._domEvents.set(\"mouseup\", event => {\n      this._mouseState.isDown = false;\n    });\n\n    for (const [name, listener] of this._internalEvents) {\n      this._eventBus._on(name, listener);\n    }\n    for (const [name, listener] of this._domEvents) {\n      window.addEventListener(name, listener);\n    }\n\n    try {\n      const docProperties = await this._getDocProperties();\n      if (pdfDocument !== this._pdfDocument) {\n        return; // The document was closed while the properties resolved.\n      }\n\n      await this._scripting.createSandbox({\n        objects,\n        calculationOrder,\n        appInfo: {\n          platform: navigator.platform,\n          language: navigator.language,\n        },\n        docInfo: {\n          ...docProperties,\n          actions: docActions,\n        },\n      });\n\n      this._eventBus.dispatch(\"sandboxcreated\", { source: this });\n    } catch (error) {\n      Window['ngxConsole'].error(`PDFScriptingManager.setDocument: \"${error?.message}\".`);\n\n      await this._destroyScripting();\n      return;\n    }\n\n    await this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"Open\",\n    });\n    await this._dispatchPageOpen(\n      this._pdfViewer.currentPageNumber,\n      /* initialize = */ true\n    );\n\n    // Defer this slightly, to ensure that scripting is *fully* initialized.\n    Promise.resolve().then(() => {\n      if (pdfDocument === this._pdfDocument) {\n        this._ready = true;\n      }\n    });\n  }\n\n  async dispatchWillSave(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"WillSave\",\n    });\n  }\n\n  async dispatchDidSave(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"DidSave\",\n    });\n  }\n\n  async dispatchWillPrint(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"WillPrint\",\n    });\n  }\n\n  async dispatchDidPrint(detail) {\n    return this._scripting?.dispatchEventInSandbox({\n      id: \"doc\",\n      name: \"DidPrint\",\n    });\n  }\n\n  get mouseState() {\n    return this._mouseState;\n  }\n\n  get destroyPromise() {\n    return this._destroyCapability?.promise || null;\n  }\n\n  get ready() {\n    return this._ready;\n  }\n\n  /**\n   * @private\n   */\n  get _internalEvents() {\n    return shadow(this, \"_internalEvents\", new Map());\n  }\n\n  /**\n   * @private\n   */\n  get _domEvents() {\n    return shadow(this, \"_domEvents\", new Map());\n  }\n\n  /**\n   * @private\n   */\n  get _pageOpenPending() {\n    return shadow(this, \"_pageOpenPending\", new Set());\n  }\n\n  /**\n   * @private\n   */\n  get _visitedPages() {\n    return shadow(this, \"_visitedPages\", new Map());\n  }\n\n  /**\n   * @private\n   */\n  async _updateFromSandbox(detail) {\n    // Ignore some events, see below, that don't make sense in PresentationMode.\n    const isInPresentationMode =\n      this._pdfViewer.isInPresentationMode ||\n      this._pdfViewer.isChangingPresentationMode;\n\n    const { id, siblings, command, value } = detail;\n    if (!id) {\n      switch (command) {\n        case \"clear\":\n          Window['ngxConsole'].clear();\n          break;\n        case \"error\":\n          Window['ngxConsole'].error(value);\n          break;\n        case \"layout\":\n          if (isInPresentationMode) {\n            return;\n          }\n          const modes = apiPageLayoutToViewerModes(value);\n          this._pdfViewer.spreadMode = modes.spreadMode;\n          break;\n        case \"page-num\":\n          this._pdfViewer.currentPageNumber = value + 1;\n          break;\n        case \"print\":\n          await this._pdfViewer.pagesPromise;\n          this._eventBus.dispatch(\"print\", { source: this });\n          break;\n        case \"println\":\n          Window['ngxConsole'].log(value);\n          break;\n        case \"zoom\":\n          if (isInPresentationMode) {\n            return;\n          }\n          this._pdfViewer.currentScaleValue = value;\n          break;\n        case \"SaveAs\":\n          this._eventBus.dispatch(\"save\", { source: this });\n          break;\n        case \"FirstPage\":\n          this._pdfViewer.currentPageNumber = 1;\n          break;\n        case \"LastPage\":\n          this._pdfViewer.currentPageNumber = this._pdfViewer.pagesCount;\n          break;\n        case \"NextPage\":\n          this._pdfViewer.nextPage();\n          break;\n        case \"PrevPage\":\n          this._pdfViewer.previousPage();\n          break;\n        case \"ZoomViewIn\":\n          if (isInPresentationMode) {\n            return;\n          }\n          this._pdfViewer.increaseScale();\n          break;\n        case \"ZoomViewOut\":\n          if (isInPresentationMode) {\n            return;\n          }\n          this._pdfViewer.decreaseScale();\n          break;\n      }\n      return;\n    }\n\n    if (isInPresentationMode) {\n      if (detail.focus) {\n        return;\n      }\n    }\n    delete detail.id;\n    delete detail.siblings;\n\n    const ids = siblings ? [id, ...siblings] : [id];\n    for (const elementId of ids) {\n      const element = document.getElementById(elementId);\n      if (element) {\n        element.dispatchEvent(new CustomEvent(\"updatefromsandbox\", { detail }));\n      } else {\n        // The element hasn't been rendered yet, use the AnnotationStorage.\n        this._pdfDocument?.annotationStorage.setValue(elementId, undefined, detail); // #868 modified by ngx-extended-pdf-viewer\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _dispatchPageOpen(pageNumber, initialize = false) {\n    const pdfDocument = this._pdfDocument,\n      visitedPages = this._visitedPages;\n\n    if (initialize) {\n      this._closeCapability = createPromiseCapability();\n    }\n    if (!this._closeCapability) {\n      return; // Scripting isn't fully initialized yet.\n    }\n    const pageView = this._pdfViewer.getPageView(/* index = */ pageNumber - 1);\n\n    if (pageView?.renderingState !== RenderingStates.FINISHED) {\n      this._pageOpenPending.add(pageNumber);\n      return; // Wait for the page to finish rendering.\n    }\n    this._pageOpenPending.delete(pageNumber);\n\n    const actionsPromise = (async () => {\n      // Avoid sending, and thus serializing, the `actions` data more than once.\n      const actions = await (!visitedPages.has(pageNumber)\n        ? pageView.pdfPage?.getJSActions()\n        : null);\n      if (pdfDocument !== this._pdfDocument) {\n        return; // The document was closed while the actions resolved.\n      }\n\n      await this._scripting?.dispatchEventInSandbox({\n        id: \"page\",\n        name: \"PageOpen\",\n        pageNumber,\n        actions,\n      });\n    })();\n    visitedPages.set(pageNumber, actionsPromise);\n  }\n\n  /**\n   * @private\n   */\n  async _dispatchPageClose(pageNumber) {\n    const pdfDocument = this._pdfDocument,\n      visitedPages = this._visitedPages;\n\n    if (!this._closeCapability) {\n      return; // Scripting isn't fully initialized yet.\n    }\n    if (this._pageOpenPending.has(pageNumber)) {\n      return; // The page is still rendering; no \"PageOpen\" event dispatched.\n    }\n    const actionsPromise = visitedPages.get(pageNumber);\n    if (!actionsPromise) {\n      return; // The \"PageClose\" event must be preceded by a \"PageOpen\" event.\n    }\n    visitedPages.set(pageNumber, null);\n\n    // Ensure that the \"PageOpen\" event is dispatched first.\n    await actionsPromise;\n    if (pdfDocument !== this._pdfDocument) {\n      return; // The document was closed while the actions resolved.\n    }\n\n    await this._scripting?.dispatchEventInSandbox({\n      id: \"page\",\n      name: \"PageClose\",\n      pageNumber,\n    });\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an {Object}\n   *   containing the necessary document properties; please find the expected\n   *   format in `PDFViewerApplication._scriptingDocProperties`.\n   * @private\n   */\n  async _getDocProperties() {\n    if (this._docPropertiesLookup) {\n      return this._docPropertiesLookup(this._pdfDocument);\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"COMPONENTS\")) {\n      const { docPropertiesLookup } = require(\"./generic_scripting.js\");\n\n      return docPropertiesLookup(this._pdfDocument);\n    }\n    throw new Error(\"_getDocProperties: Unable to lookup properties.\");\n  }\n\n  /**\n   * @private\n   */\n  _createScripting() {\n    this._destroyCapability = createPromiseCapability();\n\n    if (this._scripting) {\n      throw new Error(\"_createScripting: Scripting already exists.\");\n    }\n    if (this._scriptingFactory) {\n      return this._scriptingFactory.createScripting({\n        sandboxBundleSrc: this._sandboxBundleSrc,\n      });\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"COMPONENTS\")) {\n      const { GenericScripting } = require(\"./generic_scripting.js\");\n\n      return new GenericScripting(this._sandboxBundleSrc);\n    }\n    throw new Error(\"_createScripting: Cannot create scripting.\");\n  }\n\n  /**\n   * @private\n   */\n  async _destroyScripting() {\n    if (!this._scripting) {\n      this._pdfDocument = null;\n\n      this._destroyCapability?.resolve();\n      return;\n    }\n    if (this._closeCapability) {\n      await Promise.race([\n        this._closeCapability.promise,\n        new Promise(resolve => {\n          // Avoid the scripting/sandbox-destruction hanging indefinitely.\n          setTimeout(resolve, 1000);\n        }),\n      ]).catch(reason => {\n        // Ignore any errors, to ensure that the sandbox is always destroyed.\n      });\n      this._closeCapability = null;\n    }\n    this._pdfDocument = null;\n\n    try {\n      await this._scripting.destroySandbox();\n    } catch (ex) {}\n\n    for (const [name, listener] of this._internalEvents) {\n      this._eventBus._off(name, listener);\n    }\n    this._internalEvents.clear();\n\n    for (const [name, listener] of this._domEvents) {\n      window.removeEventListener(name, listener);\n    }\n    this._domEvents.clear();\n\n    this._pageOpenPending.clear();\n    this._visitedPages.clear();\n\n    this._scripting = null;\n    delete this._mouseState.isDown;\n    this._ready = false;\n\n    this._destroyCapability?.resolve();\n  }\n}\n\nexport { PDFScriptingManager };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  PresentationModeState,\n  RenderingStates,\n  SidebarView,\n} from \"./ui_utils.js\";\n\nconst UI_NOTIFICATION_CLASS = \"pdfSidebarNotification\";\n\n/**\n * @typedef {Object} PDFSidebarOptions\n * @property {PDFSidebarElements} elements - The DOM elements.\n * @property {PDFViewer} pdfViewer - The document viewer.\n * @property {PDFThumbnailViewer} pdfThumbnailViewer - The thumbnail viewer.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IL10n} l10n - The localization service.\n */\n\n/**\n * @typedef {Object} PDFSidebarElements\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} viewerContainer - The viewer container\n *   (in which the viewer element is placed).\n * @property {HTMLButtonElement} toggleButton - The button used for\n *   opening/closing the sidebar.\n * @property {HTMLButtonElement} thumbnailButton - The button used to show\n *   the thumbnail view.\n * @property {HTMLButtonElement} outlineButton - The button used to show\n *   the outline view.\n * @property {HTMLButtonElement} attachmentsButton - The button used to show\n *   the attachments view.\n * @property {HTMLButtonElement} layersButton - The button used to show\n *   the layers view.\n * @property {HTMLDivElement} thumbnailView - The container in which\n *   the thumbnails are placed.\n * @property {HTMLDivElement} outlineView - The container in which\n *   the outline is placed.\n * @property {HTMLDivElement} attachmentsView - The container in which\n *   the attachments are placed.\n * @property {HTMLDivElement} layersView - The container in which\n *   the layers are placed.\n * @property {HTMLDivElement} outlineOptionsContainer - The container in which\n *   the outline view-specific option button(s) are placed.\n * @property {HTMLButtonElement} currentOutlineItemButton - The button used to\n *   find the current outline item.\n */\n\nclass PDFSidebar {\n  /**\n   * @param {PDFSidebarOptions} options\n   */\n  constructor({ elements, pdfViewer, pdfThumbnailViewer, eventBus, l10n }) {\n    this.isOpen = false;\n    this.active = SidebarView.THUMBS;\n    this.isInitialViewSet = false;\n\n    /**\n     * Callback used when the sidebar has been opened/closed, to ensure that\n     * the viewers (PDFViewer/PDFThumbnailViewer) are updated correctly.\n     */\n    this.onToggled = null;\n\n    this.pdfViewer = pdfViewer;\n    this.pdfThumbnailViewer = pdfThumbnailViewer;\n\n    this.outerContainer = elements.outerContainer;\n    this.viewerContainer = elements.viewerContainer;\n    this.toggleButton = elements.toggleButton;\n\n    this.thumbnailButton = elements.thumbnailButton;\n    this.outlineButton = elements.outlineButton;\n    this.attachmentsButton = elements.attachmentsButton;\n    this.layersButton = elements.layersButton;\n\n    this.thumbnailView = elements.thumbnailView;\n    this.outlineView = elements.outlineView;\n    this.attachmentsView = elements.attachmentsView;\n    this.layersView = elements.layersView;\n\n    this._outlineOptionsContainer = elements.outlineOptionsContainer;\n    this._currentOutlineItemButton = elements.currentOutlineItemButton;\n\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n\n    this._addEventListeners();\n  }\n\n  async reset() {\n    this.isInitialViewSet = false;\n\n    this._hideUINotification(/* reset = */ true);\n    this.switchView(SidebarView.THUMBS);\n\n    this.outlineButton.disabled = false;\n    this.attachmentsButton.disabled = false;\n    this.layersButton.disabled = false;\n    // modified by ngx-extended-pdf-viewer\n    this.outlineButton.hidden = false;\n    this.attachmentsButton.hidden = false;\n    this.layersButton.hidden = false;\n    // end of modification\n    this._currentOutlineItemButton.disabled = true;\n  }\n\n  /**\n   * @type {number} One of the values in {SidebarView}.\n   */\n  get visibleView() {\n    return this.isOpen ? this.active : SidebarView.NONE;\n  }\n\n  get isThumbnailViewVisible() {\n    return this.isOpen && this.active === SidebarView.THUMBS;\n  }\n\n  get isOutlineViewVisible() {\n    return this.isOpen && this.active === SidebarView.OUTLINE;\n  }\n\n  get isAttachmentsViewVisible() {\n    return this.isOpen && this.active === SidebarView.ATTACHMENTS;\n  }\n\n  get isLayersViewVisible() {\n    return this.isOpen && this.active === SidebarView.LAYERS;\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should become visible,\n   *                        must be one of the values in {SidebarView}.\n   */\n  setInitialView(view = SidebarView.NONE) {\n    if (this.isInitialViewSet) {\n      return;\n    }\n    this.isInitialViewSet = true;\n\n    // If the user has already manually opened the sidebar, immediately closing\n    // it would be bad UX; also ignore the \"unknown\" sidebar view value.\n    if (view === SidebarView.NONE || view === SidebarView.UNKNOWN) {\n      this._dispatchEvent();\n      return;\n    }\n    // Prevent dispatching two back-to-back `sidebarviewchanged` events,\n    // since `this._switchView` dispatched the event if the view changed.\n    if (!this._switchView(view, /* forceOpen */ true)) {\n      this._dispatchEvent();\n    }\n  }\n\n  /**\n   * @param {number} view - The sidebar view that should be switched to,\n   *                        must be one of the values in {SidebarView}.\n   * @param {boolean} [forceOpen] - Ensure that the sidebar is open.\n   *                                The default value is `false`.\n   */\n  async switchView(view, forceOpen = false) {\n    await this._switchView(view, forceOpen);\n  }\n\n  /**\n   * @returns {boolean} Indicating if `this._dispatchEvent` was called.\n   * @private\n   */\n  async _switchView(view, forceOpen = false) {\n    const isViewChanged = view !== this.active;\n    let shouldForceRendering = false;\n\n    switch (view) {\n      case SidebarView.NONE:\n        if (this.isOpen) {\n          this.close();\n          return true; // Closing will trigger rendering and dispatch the event.\n        }\n        return false;\n      case SidebarView.THUMBS:\n        if (this.isOpen && isViewChanged) {\n          shouldForceRendering = true;\n        }\n        break;\n      case SidebarView.OUTLINE:\n        if (this.outlineButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.ATTACHMENTS:\n        if (this.attachmentsButton.disabled) {\n          return false;\n        }\n        break;\n      case SidebarView.LAYERS:\n        if (this.layersButton.disabled) {\n          return false;\n        }\n        break;\n      default:\n        Window['ngxConsole'].error(`PDFSidebar._switchView: \"${view}\" is not a valid view.`);\n        return false;\n    }\n    // Update the active view *after* it has been validated above,\n    // in order to prevent setting it to an invalid state.\n    this.active = view;\n\n    // Update the CSS classes, for all buttons...\n    this.thumbnailButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.THUMBS\n    );\n    this.outlineButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.OUTLINE\n    );\n    this.attachmentsButton.classList.toggle(\n      \"toggled\",\n      view === SidebarView.ATTACHMENTS\n    );\n    this.layersButton.classList.toggle(\"toggled\", view === SidebarView.LAYERS);\n    // ... and for all views.\n    this.thumbnailView.classList.toggle(\"hidden\", view !== SidebarView.THUMBS);\n    this.outlineView.classList.toggle(\"hidden\", view !== SidebarView.OUTLINE);\n    this.attachmentsView.classList.toggle(\n      \"hidden\",\n      view !== SidebarView.ATTACHMENTS\n    );\n    this.layersView.classList.toggle(\"hidden\", view !== SidebarView.LAYERS);\n\n    // Finally, update view-specific CSS classes.\n    this._outlineOptionsContainer.classList.toggle(\n      \"hidden\",\n      view !== SidebarView.OUTLINE\n    );\n\n    if (forceOpen && !this.isOpen) {\n      await this.open();\n      return true; // Opening will trigger rendering and dispatch the event.\n    }\n    await this.pdfThumbnailViewer.renderThumbnails();\n    if (shouldForceRendering) {\n      this._updateThumbnailViewer();\n      this._forceRendering();\n    }\n    if (isViewChanged) {\n      this._dispatchEvent();\n    }\n    return isViewChanged;\n  }\n\n  async open() {\n    if (this.isOpen) {\n      return;\n    }\n    await this.pdfThumbnailViewer.renderThumbnails();\n    this.isOpen = true;\n    this.toggleButton.classList.add(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"true\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\", \"sidebarOpen\");\n\n    if (this.active === SidebarView.THUMBS) {\n      this._updateThumbnailViewer();\n    }\n    this._forceRendering();\n    this._dispatchEvent();\n\n    this._hideUINotification();\n  }\n\n  close() {\n    if (!this.isOpen) {\n      return;\n    }\n    this.isOpen = false;\n    this.toggleButton.classList.remove(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"false\");\n\n    this.outerContainer.classList.add(\"sidebarMoving\");\n    this.outerContainer.classList.remove(\"sidebarOpen\");\n\n    this._forceRendering();\n    this._dispatchEvent();\n  }\n\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _dispatchEvent() {\n    this.eventBus.dispatch(\"sidebarviewchanged\", {\n      source: this,\n      view: this.visibleView,\n    });\n  }\n\n  /**\n   * @private\n   */\n  _forceRendering() {\n    if (this.onToggled) {\n      this.onToggled();\n    } else {\n      // Fallback\n      this.pdfViewer.forceRendering();\n      this.pdfThumbnailViewer.forceRendering();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateThumbnailViewer() {\n    const { pdfViewer, pdfThumbnailViewer } = this;\n\n    // Use the rendered pages to set the corresponding thumbnail images.\n    const pagesCount = pdfViewer.pagesCount;\n    for (let pageIndex = 0; pageIndex < pagesCount; pageIndex++) {\n      const pageView = pdfViewer.getPageView(pageIndex);\n      if (pageView?.renderingState === RenderingStates.FINISHED) {\n        const thumbnailView = pdfThumbnailViewer.getThumbnail(pageIndex);\n        thumbnailView.setImage(pageView);\n      }\n    }\n    pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber);\n  }\n\n  /**\n   * @private\n   */\n  _showUINotification() {\n    this.l10n.get(\"toggle_sidebar_notification2.title\").then(msg => {\n      this.toggleButton.title = msg;\n    });\n\n    if (!this.isOpen) {\n      // Only show the notification on the `toggleButton` if the sidebar is\n      // currently closed, to avoid unnecessarily bothering the user.\n      this.toggleButton.classList.add(UI_NOTIFICATION_CLASS);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _hideUINotification(reset = false) {\n    if (this.isOpen || reset) {\n      // Only hide the notification on the `toggleButton` if the sidebar is\n      // currently open, or when the current PDF document is being closed.\n      this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS);\n    }\n\n    if (reset) {\n      this.l10n.get(\"toggle_sidebar.title\").then(msg => {\n        this.toggleButton.title = msg;\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    this.viewerContainer.addEventListener(\"transitionend\", evt => {\n      if (evt.target === this.viewerContainer) {\n        this.outerContainer.classList.remove(\"sidebarMoving\");\n      }\n    });\n\n    this.toggleButton.addEventListener(\"click\", () => {\n      this.toggle();\n    });\n\n    // Buttons for switching views.\n    this.thumbnailButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.THUMBS);\n    });\n\n    this.outlineButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.OUTLINE);\n    });\n    this.outlineButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"toggleoutlinetree\", { source: this });\n    });\n\n    this.attachmentsButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.ATTACHMENTS);\n    });\n\n    this.layersButton.addEventListener(\"click\", () => {\n      this.switchView(SidebarView.LAYERS);\n    });\n    this.layersButton.addEventListener(\"dblclick\", () => {\n      this.eventBus.dispatch(\"resetlayers\", { source: this });\n    });\n\n    // Buttons for view-specific options.\n    this._currentOutlineItemButton.addEventListener(\"click\", () => {\n      this.eventBus.dispatch(\"currentoutlineitem\", { source: this });\n    });\n\n    // Disable/enable views.\n    const onTreeLoaded = (count, button, view) => {\n      button.disabled = !count;\n      // modified by ngx-extended-pdf-viewer\n      button.hidden = !count;\n      // end of modification\n\n      if (count) {\n        this._showUINotification();\n      } else if (this.active === view) {\n        // If the `view` was opened by the user during document load,\n        // switch away from it if it turns out to be empty.\n        this.switchView(SidebarView.THUMBS);\n      }\n    };\n\n    this.eventBus._on(\"outlineloaded\", evt => {\n      onTreeLoaded(evt.outlineCount, this.outlineButton, SidebarView.OUTLINE);\n\n      if (evt.enableCurrentOutlineItemButton) {\n        // #645 modified by ngx-extended-pdf-viewer\n        if (evt.currentOutlineItemPromise) { // #645 modified by ngx-extended-pdf-viewer\n\t      \tevt.currentOutlineItemPromise.then(enabled => {\n\t        if (!this.isInitialViewSet) {\n\t          return;\n\t        }\n\t        this._currentOutlineItemButton.disabled = !enabled;\n\t      });        } // #645 modified by ngx-extended-pdf-viewer\n      }\n    });\n\n    this.eventBus._on(\"attachmentsloaded\", evt => {\n      onTreeLoaded(\n        evt.attachmentsCount,\n        this.attachmentsButton,\n        SidebarView.ATTACHMENTS\n      );\n    });\n\n    this.eventBus._on(\"layersloaded\", evt => {\n      onTreeLoaded(evt.layersCount, this.layersButton, SidebarView.LAYERS);\n    });\n\n    // Update the thumbnailViewer, if visible, when exiting presentation mode.\n    this.eventBus._on(\"presentationmodechanged\", evt => {\n      if (\n        evt.state === PresentationModeState.NORMAL &&\n        this.isThumbnailViewVisible\n      ) {\n        this._updateThumbnailViewer();\n      }\n    });\n  }\n}\n\nexport { PDFSidebar };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SIDEBAR_WIDTH_VAR = \"--sidebar-width\";\nconst SIDEBAR_MIN_WIDTH = 200; // pixels\nconst SIDEBAR_RESIZING_CLASS = \"sidebarResizing\";\n\n/**\n * @typedef {Object} PDFSidebarResizerOptions\n * @property {HTMLDivElement} outerContainer - The outer container\n *   (encasing both the viewer and sidebar elements).\n * @property {HTMLDivElement} resizer - The DOM element that can be dragged in\n *   order to adjust the width of the sidebar.\n */\n\nclass PDFSidebarResizer {\n  /**\n   * @param {PDFSidebarResizerOptions} options\n   * @param {EventBus} eventBus - The application event bus.\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, eventBus, l10n) {\n    this.isRTL = false;\n    this.sidebarOpen = false;\n    this.doc = document.documentElement;\n    this._width = null;\n    this._outerContainerWidth = null;\n    this._boundEvents = Object.create(null);\n\n    this.outerContainer = options.outerContainer;\n    this.resizer = options.resizer;\n    this.eventBus = eventBus;\n\n    l10n.getDirection().then(dir => {\n      this.isRTL = dir === \"rtl\";\n    });\n    this._addEventListeners();\n  }\n\n  /**\n   * @type {number}\n   */\n  get outerContainerWidth() {\n    return (this._outerContainerWidth ||= this.outerContainer.clientWidth);\n  }\n\n  /**\n   * @private\n   * returns {boolean} Indicating if the sidebar width was updated.\n   */\n  _updateWidth(width = 0) {\n    // Prevent the sidebar from becoming too narrow, or from occupying more\n    // than half of the available viewer width.\n    const maxWidth = Math.floor(this.outerContainerWidth / 2);\n    if (width > maxWidth) {\n      width = maxWidth;\n    }\n    if (width < SIDEBAR_MIN_WIDTH) {\n      width = SIDEBAR_MIN_WIDTH;\n    }\n    // Only update the UI when the sidebar width did in fact change.\n    if (width === this._width) {\n      return false;\n    }\n    this._width = width;\n    this.doc.style.setProperty(SIDEBAR_WIDTH_VAR, `${width}px`);\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _mouseMove(evt) {\n    let width = evt.clientX;\n    // For sidebar resizing to work correctly in RTL mode, invert the width.\n    if (this.isRTL) {\n      width = this.outerContainerWidth - width;\n    }\n    this._updateWidth(width);\n  }\n\n  /**\n   * @private\n   */\n  _mouseUp(evt) {\n    // Re-enable the `transition-duration` rules when sidebar resizing ends...\n    this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n    // ... and ensure that rendering will always be triggered.\n    this.eventBus.dispatch(\"resize\", { source: this });\n\n    const _boundEvents = this._boundEvents;\n    window.removeEventListener(\"mousemove\", _boundEvents.mouseMove);\n    window.removeEventListener(\"mouseup\", _boundEvents.mouseUp);\n  }\n\n  /**\n   * @private\n   */\n  _addEventListeners() {\n    const _boundEvents = this._boundEvents;\n    _boundEvents.mouseMove = this._mouseMove.bind(this);\n    _boundEvents.mouseUp = this._mouseUp.bind(this);\n\n    this.resizer.addEventListener(\"mousedown\", evt => {\n      if (evt.button !== 0) {\n        return;\n      }\n      // Disable the `transition-duration` rules when sidebar resizing begins,\n      // in order to improve responsiveness and to avoid visual glitches.\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n\n      window.addEventListener(\"mousemove\", _boundEvents.mouseMove);\n      window.addEventListener(\"mouseup\", _boundEvents.mouseUp);\n    });\n\n    this.eventBus._on(\"sidebarviewchanged\", evt => {\n      this.sidebarOpen = !!evt?.view;\n    });\n\n    this.eventBus._on(\"resize\", evt => {\n      // When the *entire* viewer is resized, such that it becomes narrower,\n      // ensure that the sidebar doesn't end up being too wide.\n      if (evt?.source !== window) {\n        return;\n      }\n      // Always reset the cached width when the viewer is resized.\n      this._outerContainerWidth = null;\n\n      if (!this._width) {\n        // The sidebar hasn't been resized, hence no need to adjust its width.\n        return;\n      }\n      // NOTE: If the sidebar is closed, we don't need to worry about\n      //       visual glitches nor ensure that rendering is triggered.\n      if (!this.sidebarOpen) {\n        this._updateWidth(this._width);\n        return;\n      }\n      this.outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);\n      const updated = this._updateWidth(this._width);\n\n      Promise.resolve().then(() => {\n        this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);\n        // Trigger rendering if the sidebar width changed, to avoid\n        // depending on the order in which 'resize' events are handled.\n        if (updated) {\n          this.eventBus.dispatch(\"resize\", { source: this });\n        }\n      });\n    });\n  }\n}\n\nexport { PDFSidebarResizer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../src/display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./interfaces\").IL10n} IL10n */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./pdf_rendering_queue\").PDFRenderingQueue} PDFRenderingQueue */\n\nimport {\n  getVisibleElements,\n  isValidRotation,\n  RenderingStates,\n  scrollIntoView,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { PDFThumbnailView, TempImageFactory } from \"./pdf_thumbnail_view.js\";\n\nconst THUMBNAIL_SCROLL_MARGIN = -19;\nconst THUMBNAIL_SELECTED_CLASS = \"selected\";\n\n/**\n * @typedef {Object} PDFThumbnailViewerOptions\n * @property {HTMLDivElement} container - The container for the thumbnail\n *   elements.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IL10n} l10n - Localization service.\n */\n\n/**\n * Viewer control to display thumbnails for pages in a PDF document.\n */\nclass PDFThumbnailViewer {\n  /**\n   * @param {PDFThumbnailViewerOptions} options\n   */\n  constructor({ container, eventBus, linkService, renderingQueue, l10n }) {\n    this.container = container;\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n    this.l10n = l10n;\n\n    this.scroll = watchScroll(this.container, this._scrollUpdated.bind(this));\n    this._resetView();\n\n    eventBus._on(\"optionalcontentconfigchanged\", () => {\n      // Ensure that the thumbnails always render with the *default* optional\n      // content configuration.\n      this._setImageDisabled = true;\n    });\n  }\n\n  /**\n   * @private\n   */\n  _scrollUpdated() {\n    this.renderingQueue.renderHighestPriority();\n  }\n\n  getThumbnail(index) {\n    return this._thumbnails[index];\n  }\n\n  /**\n   * @private\n   */\n  _getVisibleThumbs() {\n    return getVisibleElements({\n      scrollEl: this.container,\n      views: this._thumbnails,\n    });\n  }\n\n  scrollThumbnailIntoView(pageNumber) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const thumbnailView = this._thumbnails[pageNumber - 1];\n\n    if (!thumbnailView) {\n      Window['ngxConsole'].error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');\n      return;\n    }\n\n    if (pageNumber !== this._currentPageNumber) {\n      const prevThumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      // Remove the highlight from the previous thumbnail...\n      prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);\n      // ... and add the highlight to the new thumbnail.\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    }\n    const { first, last, views } = this._getVisibleThumbs();\n\n    // If the thumbnail isn't currently visible, scroll it into view.\n    if (views.length > 0) {\n      let shouldScroll = false;\n      if (pageNumber <= first.id || pageNumber >= last.id) {\n        shouldScroll = true;\n      } else {\n        for (const { id, percent } of views) {\n          if (id !== pageNumber) {\n            continue;\n          }\n          shouldScroll = percent < 100;\n          break;\n        }\n      }\n      if (shouldScroll) {\n        scrollIntoView(thumbnailView.div, { top: THUMBNAIL_SCROLL_MARGIN });\n      }\n    }\n\n    this._currentPageNumber = pageNumber;\n  }\n\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid thumbnails rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const updateArgs = { rotation };\n    for (const thumbnail of this._thumbnails) {\n      thumbnail.update(updateArgs);\n    }\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (\n        this._thumbnails[i] &&\n        this._thumbnails[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._thumbnails[i].reset();\n      }\n    }\n    TempImageFactory.destroyCanvas();\n  }\n\n  /**\n   * @private\n   */\n  _resetView() {\n    this._thumbnails = [];\n    this._currentPageNumber = 1;\n    this._pageLabels = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._setImageDisabled = false;\n\n    // Remove the thumbnails from the DOM.\n    this.container.textContent = \"\";\n  }\n\n  /**\n   * @param {PDFDocumentProxy} pdfDocument\n   */\n  setDocument(pdfDocument) {\n    this.initialized = false;\n    if (this.pdfDocument) {\n      this._cancelRendering();\n      this._resetView();\n    }\n\n    this.pdfDocument = pdfDocument;\n  }\n\n  async renderThumbnails() {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (this.initialized) {\n      return;\n    }\n    this.initialized = true;\n    const pdfDocument = this.pdfDocument;\n    const firstPagePromise = pdfDocument.getPage(1);\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n    try {\n      const firstPdfPage = await firstPagePromise;\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n\n      const pagesCount = pdfDocument.numPages;\n      const viewport = firstPdfPage.getViewport({ scale: 1 });\n      const checkSetImageDisabled = () => {\n        return this._setImageDisabled;\n      };\n\n      for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n        const thumbnail = new PDFThumbnailView({\n          container: this.container,\n          id: pageNum,\n          defaultViewport: viewport.clone(),\n          optionalContentConfigPromise,\n          linkService: this.linkService,\n          renderingQueue: this.renderingQueue,\n          checkSetImageDisabled,\n          l10n: this.l10n,\n        });\n        this._thumbnails.push(thumbnail);\n      }\n      // Set the first `pdfPage` immediately, since it's already loaded,\n      // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n      // the `this.#ensurePdfPageLoaded` method before rendering can start.\n      const firstThumbnailView = this._thumbnails[0];\n      if (firstThumbnailView) {\n        firstThumbnailView.setPdfPage(firstPdfPage);\n      }\n\n      // Ensure that the current thumbnail is always highlighted on load.\n      const thumbnailView = this._thumbnails[this._currentPageNumber - 1];\n      thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS);\n    } catch (reason) {\n      Window[\"ngxConsole\"].error(\"Unable to initialize thumbnail viewer\", reason);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      if (this._thumbnails[i]) {\n        this._thumbnails[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      Window['ngxConsole'].error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\");\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFThumbnailView` instances.\n    for (let i = 0, ii = this._thumbnails.length; i < ii; i++) {\n      this._thumbnails[i].setPageLabel(this._pageLabels?.[i] ?? null);\n    }\n  }\n\n  /**\n   * @param {PDFThumbnailView} thumbView\n   * @returns {Promise<PDFPageProxy | null>}\n   */\n  async #ensurePdfPageLoaded(thumbView) {\n    if (thumbView.pdfPage) {\n      return thumbView.pdfPage;\n    }\n    try {\n      const pdfPage = await this.pdfDocument.getPage(thumbView.id);\n      if (!thumbView.pdfPage) {\n        thumbView.setPdfPage(pdfPage);\n      }\n      return pdfPage;\n    } catch (reason) {\n      Window['ngxConsole'].error(\"Unable to get page for thumb view\", reason);\n      return null; // Page error -- there is nothing that can be done.\n    }\n  }\n\n  #getScrollAhead(visible) {\n    if (visible.first?.id === 1) {\n      return true;\n    } else if (visible.last?.id === this._thumbnails.length) {\n      return false;\n    }\n    return this.scroll.down;\n  }\n\n  forceRendering() {\n    const visibleThumbs = this._getVisibleThumbs();\n    const scrollAhead = this.#getScrollAhead(visibleThumbs);\n    const thumbView = this.renderingQueue.getHighestPriority(\n      visibleThumbs,\n      this._thumbnails,\n      scrollAhead\n    );\n    if (thumbView) {\n      this.#ensurePdfPageLoaded(thumbView).then(() => {\n        this.renderingQueue.renderView(thumbView);\n      });\n      return true;\n    }\n    return false;\n  }\n}\n\nexport { PDFThumbnailViewer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IL10n} IL10n */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n/** @typedef {import(\"./interfaces\").IRenderableView} IRenderableView */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./pdf_rendering_queue\").PDFRenderingQueue} PDFRenderingQueue */\n\nimport { getOutputScale, RenderingStates } from \"./ui_utils.js\";\nimport { RenderingCancelledException } from \"pdfjs-lib\";\n\nconst DRAW_UPSCALE_FACTOR = 2; // See comment in `PDFThumbnailView.draw` below.\nconst MAX_NUM_SCALING_STEPS = 3;\nconst THUMBNAIL_CANVAS_BORDER_WIDTH = 1; // px\nconst THUMBNAIL_WIDTH = 98; // px\n\n/**\n * @typedef {Object} PDFThumbnailViewOptions\n * @property {HTMLDivElement} container - The viewer element.\n * @property {number} id - The thumbnail's unique ID (normally its number).\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n *   The default value is `null`.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {function} checkSetImageDisabled\n * @property {IL10n} l10n - Localization service.\n */\n\nclass TempImageFactory {\n  static #tempCanvas = null;\n\n  static getCanvas(width, height) {\n    const tempCanvas = (this.#tempCanvas ||= document.createElement(\"canvas\"));\n    tempCanvas.width = width;\n    tempCanvas.height = height;\n\n    // Since this is a temporary canvas, we need to fill it with a white\n    // background ourselves. `_getPageDrawContext` uses CSS rules for this.\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      tempCanvas.mozOpaque = true;\n    }\n\n    const ctx = tempCanvas.getContext(\"2d\", { alpha: false });\n    ctx.save();\n    ctx.fillStyle = \"rgb(255, 255, 255)\";\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n    return [tempCanvas, tempCanvas.getContext(\"2d\")];\n  }\n\n  static destroyCanvas() {\n    const tempCanvas = this.#tempCanvas;\n    if (tempCanvas) {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      tempCanvas.width = 0;\n      tempCanvas.height = 0;\n    }\n    this.#tempCanvas = null;\n  }\n}\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFThumbnailView {\n  /**\n   * @param {PDFThumbnailViewOptions} options\n   */\n  constructor({\n    container,\n    id,\n    defaultViewport,\n    optionalContentConfigPromise,\n    linkService,\n    renderingQueue,\n    checkSetImageDisabled,\n    l10n,\n  }) {\n    this.id = id;\n    this.renderingId = \"thumbnail\" + id;\n    this.pageLabel = null;\n\n    this.pdfPage = null;\n    this.rotation = 0;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise = optionalContentConfigPromise || null;\n\n    this.linkService = linkService;\n    this.renderingQueue = renderingQueue;\n\n    this.renderTask = null;\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this._checkSetImageDisabled =\n      checkSetImageDisabled ||\n      function () {\n        return false;\n      };\n\n    const pageWidth = this.viewport.width,\n      pageHeight = this.viewport.height,\n      pageRatio = pageWidth / pageHeight;\n\n    this.canvasWidth = THUMBNAIL_WIDTH;\n    this.canvasHeight = (this.canvasWidth / pageRatio) | 0;\n    this.scale = this.canvasWidth / pageWidth;\n\n    this.l10n = l10n;\n\n    if (window.pdfThumbnailGenerator) {\n      window.pdfThumbnailGenerator(this, linkService, id, container, this._thumbPageTitle);\n    } else {\n      this.createThumbnail(this, linkService, id, container, this._thumbPageTitle);\n    }\n  }\n\n  createThumbnail(pdfThumbnailView, linkService, id, container, thumbPageTitlePromise) {\n    const anchor = document.createElement(\"a\");\n    anchor.href = linkService.getAnchorUrl(\"#page=\" + id);\n    thumbPageTitlePromise.then(msg => {\n      anchor.title = msg;\n    });\n    anchor.onclick = function () {\n      linkService.goToPage(id);\n      return false;\n    };\n    pdfThumbnailView.anchor = anchor;\n\n    const div = document.createElement(\"div\");\n    div.className = \"thumbnail\";\n    div.setAttribute(\"data-page-number\", this.id);\n    pdfThumbnailView.div = div;\n\n    const ring = document.createElement(\"div\");\n    ring.className = \"thumbnailSelectionRing\";\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n    pdfThumbnailView.ring = ring;\n\n    div.appendChild(ring);\n    anchor.appendChild(div);\n    container.appendChild(anchor);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({ scale: 1, rotation: totalRotation });\n    this.reset();\n  }\n\n  reset() {\n    this.cancelRendering();\n    this.renderingState = RenderingStates.INITIAL;\n\n    const pageWidth = this.viewport.width,\n      pageHeight = this.viewport.height,\n      pageRatio = pageWidth / pageHeight;\n\n    this.canvasHeight = (this.canvasWidth / pageRatio) | 0;\n    this.scale = this.canvasWidth / pageWidth;\n\n    this.div.removeAttribute(\"data-loaded\");\n    const ring = this.ring;\n    ring.textContent = \"\"; // Remove the thumbnail from the DOM.\n    const borderAdjustment = 2 * THUMBNAIL_CANVAS_BORDER_WIDTH;\n    ring.style.width = this.canvasWidth + borderAdjustment + \"px\";\n    ring.style.height = this.canvasHeight + borderAdjustment + \"px\";\n\n    if (this.canvas) {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      this.canvas.width = 0;\n      this.canvas.height = 0;\n      delete this.canvas;\n    }\n    if (this.image) {\n      this.image.removeAttribute(\"src\");\n      delete this.image;\n    }\n  }\n\n  update({ rotation = null }) {\n    if (typeof rotation === \"number\") {\n      this.rotation = rotation; // The rotation may be zero.\n    }\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = this.viewport.clone({\n      scale: 1,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering() {\n    if (this.renderTask) {\n      this.renderTask.cancel();\n      this.renderTask = null;\n    }\n    this.resume = null;\n  }\n\n  /**\n   * @private\n   */\n  _getPageDrawContext(upscaleFactor = 1) {\n    // Keep the no-thumbnail outline visible, i.e. `data-loaded === false`,\n    // until rendering/image conversion is complete, to avoid display issues.\n    const canvas = document.createElement(\"canvas\");\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n\n    canvas.width = (upscaleFactor * this.canvasWidth * outputScale.sx) | 0;\n    canvas.height = (upscaleFactor * this.canvasHeight * outputScale.sy) | 0;\n\n    const transform = outputScale.scaled\n      ? [outputScale.sx, 0, 0, outputScale.sy, 0, 0]\n      : null;\n\n    return { ctx, canvas, transform };\n  }\n\n  /**\n   * @private\n   */\n  _convertCanvasToImage(canvas) {\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      throw new Error(\"_convertCanvasToImage: Rendering has not finished.\");\n    }\n    const reducedCanvas = this._reduceImage(canvas);\n\n    const image = document.createElement(\"img\");\n    image.className = \"thumbnailImage\";\n    this._thumbPageCanvas.then(msg => {\n      image.setAttribute(\"aria-label\", msg);\n    });\n    image.style.width = this.canvasWidth + \"px\";\n    image.style.height = this.canvasHeight + \"px\";\n\n    image.src = reducedCanvas.toDataURL();\n    this.image = image;\n\n    this.div.setAttribute(\"data-loaded\", true);\n    this.ring.appendChild(image);\n\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    reducedCanvas.width = 0;\n    reducedCanvas.height = 0;\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      Window['ngxConsole'].error(\"Must be in new state before drawing\");\n      return Promise.resolve();\n    }\n    const { pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    const finishRenderTask = async (error = null) => {\n      // The renderTask may have been replaced by a new one, so only remove\n      // the reference to the renderTask if it matches the one that is\n      // triggering this callback.\n      if (renderTask === this.renderTask) {\n        this.renderTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        return;\n      }\n      this.renderingState = RenderingStates.FINISHED;\n      this._convertCanvasToImage(canvas);\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    // Render the thumbnail at a larger size and downsize the canvas (similar\n    // to `setImage`), to improve consistency between thumbnails created by\n    // the `draw` and `setImage` methods (fixes issue 8233).\n    // NOTE: To primarily avoid increasing memory usage too much, but also to\n    //   reduce downsizing overhead, we purposely limit the up-scaling factor.\n    const { ctx, canvas, transform } =\n      this._getPageDrawContext(DRAW_UPSCALE_FACTOR);\n    const drawViewport = this.viewport.clone({\n      scale: DRAW_UPSCALE_FACTOR * this.scale,\n    });\n    const renderContinueCallback = cont => {\n      if (!this.renderingQueue.isHighestPriority(this)) {\n        this.renderingState = RenderingStates.PAUSED;\n        this.resume = () => {\n          this.renderingState = RenderingStates.RUNNING;\n          cont();\n        };\n        return;\n      }\n      cont();\n    };\n\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: drawViewport,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n      background: PDFViewerApplicationOptions.get(\"pdfBackgroundColor\"),\n    };\n    const renderTask = (this.renderTask = pdfPage.render(renderContext));\n    renderTask.onContinue = renderContinueCallback;\n\n    const resultPromise = renderTask.promise.then(\n      function () {\n        return finishRenderTask(null);\n      },\n      function (error) {\n        return finishRenderTask(error);\n      }\n    );\n    resultPromise.finally(() => {\n      // Zeroing the width and height causes Firefox to release graphics\n      // resources immediately, which can greatly reduce memory consumption.\n      canvas.width = 0;\n      canvas.height = 0;\n\n      // Only trigger cleanup, once rendering has finished, when the current\n      // pageView is *not* cached on the `BaseViewer`-instance.\n      const pageCached = this.linkService.isPageCached(this.id);\n      if (!pageCached) {\n        this.pdfPage?.cleanup();\n      }\n    });\n\n    return resultPromise;\n  }\n\n  setImage(pageView) {\n    if (this._checkSetImageDisabled()) {\n      return;\n    }\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      return;\n    }\n    const { canvas, pdfPage } = pageView;\n    if (!canvas) {\n      return;\n    }\n    if (!this.pdfPage) {\n      this.setPdfPage(pdfPage);\n    }\n    this.renderingState = RenderingStates.FINISHED;\n    this._convertCanvasToImage(canvas);\n  }\n\n  /**\n   * @private\n   */\n  _reduceImage(img) {\n    const { ctx, canvas } = this._getPageDrawContext();\n\n    if (img.width <= 2 * canvas.width) {\n      ctx.drawImage(\n        img,\n        0,\n        0,\n        img.width,\n        img.height,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n      return canvas;\n    }\n    // drawImage does an awful job of rescaling the image, doing it gradually.\n    let reducedWidth = canvas.width << MAX_NUM_SCALING_STEPS;\n    let reducedHeight = canvas.height << MAX_NUM_SCALING_STEPS;\n    const [reducedImage, reducedImageCtx] = TempImageFactory.getCanvas(\n      reducedWidth,\n      reducedHeight\n    );\n\n    while (reducedWidth > img.width || reducedHeight > img.height) {\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    reducedImageCtx.drawImage(\n      img,\n      0,\n      0,\n      img.width,\n      img.height,\n      0,\n      0,\n      reducedWidth,\n      reducedHeight\n    );\n    while (reducedWidth > 2 * canvas.width) {\n      reducedImageCtx.drawImage(\n        reducedImage,\n        0,\n        0,\n        reducedWidth,\n        reducedHeight,\n        0,\n        0,\n        reducedWidth >> 1,\n        reducedHeight >> 1\n      );\n      reducedWidth >>= 1;\n      reducedHeight >>= 1;\n    }\n    ctx.drawImage(\n      reducedImage,\n      0,\n      0,\n      reducedWidth,\n      reducedHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    return canvas;\n  }\n\n  get _thumbPageTitle() {\n    return this.l10n.get(\"thumb_page_title\", {\n      page: this.pageLabel ?? this.id,\n    });\n  }\n\n  get _thumbPageCanvas() {\n    return this.l10n.get(\"thumb_page_canvas\", {\n      page: this.pageLabel ?? this.id,\n    });\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    this._thumbPageTitle.then(msg => {\n      this.anchor.title = msg;\n    });\n\n    if (this.renderingState !== RenderingStates.FINISHED) {\n      return;\n    }\n\n    this._thumbPageCanvas.then(msg => {\n      this.image?.setAttribute(\"aria-label\", msg);\n    });\n  }\n}\n\nexport { PDFThumbnailView, TempImageFactory };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ScrollMode, SpreadMode } from \"./ui_utils.js\";\nimport { BaseViewer } from \"./base_viewer.js\";\n\nclass PDFViewer extends BaseViewer {}\n\nclass PDFSinglePageViewer extends BaseViewer {\n  _resetView() {\n    super._resetView();\n    this._scrollMode = ScrollMode.PAGE;\n    this._spreadMode = SpreadMode.NONE;\n  }\n\n  // eslint-disable-next-line accessor-pairs\n  set scrollMode(mode) {}\n\n  _updateScrollMode() {}\n\n  // eslint-disable-next-line accessor-pairs\n  set spreadMode(mode) {}\n\n  _updateSpreadMode() {}\n}\n\nexport { PDFSinglePageViewer, PDFViewer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../src/display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"../src/display/api\").PDFPageProxy} PDFPageProxy */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../src/display/display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"./interfaces\").IL10n} IL10n */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFAnnotationLayerFactory} IPDFAnnotationLayerFactory */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFStructTreeLayerFactory} IPDFStructTreeLayerFactory */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFTextLayerFactory} IPDFTextLayerFactory */\n/** @typedef {import(\"./interfaces\").IPDFXfaLayerFactory} IPDFXfaLayerFactory */\n\nimport {\n  AnnotationMode,\n  createPromiseCapability,\n  PermissionFlag,\n  PixelsPerInch,\n  version,\n} from \"pdfjs-lib\";\nimport {\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_DELTA,\n  DEFAULT_SCALE_VALUE,\n  getVisibleElements,\n  isPortraitOrientation,\n  isValidRotation,\n  isValidScrollMode,\n  isValidSpreadMode,\n  MAX_AUTO_SCALE,\n  MAX_SCALE,\n  MIN_SCALE,\n  PresentationModeState,\n  RendererType,\n  RenderingStates,\n  SCROLLBAR_PADDING,\n  scrollIntoView,\n  ScrollMode,\n  SpreadMode,\n  TextLayerMode,\n  UNKNOWN_SCALE,\n  VERTICAL_PADDING,\n  watchScroll,\n} from \"./ui_utils.js\";\nimport { AnnotationLayerBuilder } from \"./annotation_layer_builder.js\";\nimport { NullL10n } from \"./l10n_utils.js\";\nimport { PageFlip } from \"./page-flip.module.js\"; // #716 modified by ngx-extended-pdf-viewer\nimport { PDFPageView } from \"./pdf_page_view.js\";\nimport { PDFRenderingQueue } from \"./pdf_rendering_queue.js\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { StructTreeLayerBuilder } from \"./struct_tree_layer_builder.js\";\nimport { TextHighlighter } from \"./text_highlighter.js\";\nimport { TextLayerBuilder } from \"./text_layer_builder.js\";\nimport { XfaLayerBuilder } from \"./xfa_layer_builder.js\";\n\n\nconst DEFAULT_CACHE_SIZE = 10;\nconst ENABLE_PERMISSIONS_CLASS = \"enablePermissions\";\n\nconst PagesCountLimit = {\n  FORCE_SCROLL_MODE_PAGE: 15000,\n  FORCE_LAZY_PAGE_INIT: 7500,\n  PAUSE_EAGER_PAGE_INIT: 500,\n};\n\n/**\n * @typedef {Object} PDFViewerOptions\n * @property {HTMLDivElement} container - The container for the viewer element.\n * @property {HTMLDivElement} [viewer] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {IPDFLinkService} linkService - The navigation/linking service.\n * @property {IDownloadManager} [downloadManager] - The download manager\n *   component.\n * @property {PDFFindController} [findController] - The find controller\n *   component.\n * @property {PDFScriptingManager} [scriptingManager] - The scripting manager\n *   component.\n * @property {PDFRenderingQueue} [renderingQueue] - The rendering queue object.\n * @property {boolean} [removePageBorders] - Removes the border shadow around\n *   the pages. The default value is `false`.\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {number} [annotationMode] - Controls if the annotation layer is\n *   created, and if interactive form elements or `AnnotationStorage`-data are\n *   being rendered. The constants from {@link AnnotationMode} should be used;\n *   see also {@link RenderParameters} and {@link GetOperatorListParameters}.\n *   The default value is `AnnotationMode.ENABLE_FORMS`.\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   mainly for annotation icons. Include trailing slash.\n * @property {boolean} [enablePrintAutoRotate] - Enables automatic rotation of\n *   landscape pages upon printing. The default is `false`.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n * @property {boolean} [enablePermissions] - Enables PDF document permissions,\n *   when they exist. The default value is `false`.\n */\n\nclass PDFPageViewBuffer {\n  // Here we rely on the fact that `Set`s preserve the insertion order.\n  #buf = new Set();\n\n  #size = 0;\n\n  constructor(size) {\n    this.#size = size;\n  }\n\n  push(view) {\n    const buf = this.#buf;\n    if (buf.has(view)) {\n      buf.delete(view); // Move the view to the \"end\" of the buffer.\n    }\n    buf.add(view);\n\n    if (buf.size > this.#size) {\n      this.#destroyFirstView();\n    }\n  }\n\n  /**\n   * After calling resize, the size of the buffer will be `newSize`.\n   * The optional parameter `idsToKeep` is, if present, a Set of page-ids to\n   * push to the back of the buffer, delaying their destruction. The size of\n   * `idsToKeep` has no impact on the final size of the buffer; if `idsToKeep`\n   * is larger than `newSize`, some of those pages will be destroyed anyway.\n   */\n  resize(newSize, idsToKeep = null) {\n    this.#size = newSize;\n\n    const buf = this.#buf;\n    if (idsToKeep) {\n      const ii = buf.size;\n      let i = 1;\n      for (const view of buf) {\n        if (idsToKeep.has(view.id)) {\n          buf.delete(view); // Move the view to the \"end\" of the buffer.\n          buf.add(view);\n        }\n        if (++i > ii) {\n          break;\n        }\n      }\n    }\n\n    while (buf.size > this.#size) {\n      this.#destroyFirstView();\n    }\n  }\n\n  has(view) {\n    return this.#buf.has(view);\n  }\n\n  [Symbol.iterator]() {\n    return this.#buf.keys();\n  }\n\n  #destroyFirstView() {\n    const firstView = this.#buf.keys().next().value;\n\n    firstView?.destroy();\n    this.#buf.delete(firstView);\n  }\n}\n\n/**\n * Simple viewer control to display PDF content/pages.\n *\n * @implements {IPDFAnnotationLayerFactory}\n * @implements {IPDFStructTreeLayerFactory}\n * @implements {IPDFTextLayerFactory}\n * @implements {IPDFXfaLayerFactory}\n */\nclass BaseViewer {\n  #buffer = null;\n\n  #annotationMode = AnnotationMode.ENABLE_FORMS;\n\n  #previousAnnotationMode = null;\n\n  #enablePermissions = false;\n\n  #previousContainerHeight = 0;\n\n  #scrollModePageState = null;\n\n  /**\n   * @param {PDFViewerOptions} options\n   */\n  constructor(options) {\n    if (this.constructor === BaseViewer) {\n      throw new Error(\"Cannot initialize BaseViewer.\");\n    }\n    const viewerVersion =\n      typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n    if (version !== viewerVersion) {\n      throw new Error(\n        `The API version \"${version}\" does not match the Viewer version \"${viewerVersion}\".`\n      );\n    }\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n\n    /** #495 modified by ngx-extended-pdf-viewer */\n    this.pageViewMode = options.pageViewMode || \"multiple\";\n    /** end of modification */\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n    ) {\n      if (\n        !(\n          this.container?.tagName.toUpperCase() === \"DIV\" &&\n          this.viewer?.tagName.toUpperCase() === \"DIV\"\n        )\n      ) {\n        throw new Error(\"Invalid `container` and/or `viewer` option.\");\n      }\n\n      if (\n        this.container.offsetParent &&\n        getComputedStyle(this.container).position !== \"absolute\"\n      ) {\n        throw new Error(\"The `container` must be absolutely positioned.\");\n      }\n    }\n    this.eventBus = options.eventBus;\n    this.linkService = options.linkService || new SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.findController = options.findController || null;\n    this._scriptingManager = options.scriptingManager || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.textLayerMode = options.textLayerMode ?? TextLayerMode.ENABLE;\n    this.#annotationMode =\n      options.annotationMode ?? AnnotationMode.ENABLE_FORMS;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels;\n    this.l10n = options.l10n || NullL10n;\n    this.#enablePermissions = options.enablePermissions || false;\n\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      // Custom rendering queue is not specified, using default one\n      this.renderingQueue = new PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n    this._doc = document.documentElement;\n\n    this.scroll = watchScroll(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._onBeforeDraw = this._onAfterDraw = null;\n    this._resetView();\n\n    if (this.removePageBorders) {\n      this.viewer.classList.add(\"removePageBorders\");\n    }\n    // Defer the dispatching of this event, to give other viewer components\n    // time to initialize *and* register 'baseviewerinit' event listeners.\n    Promise.resolve().then(() => {\n      this.eventBus.dispatch(\"baseviewerinit\", { source: this });\n    });\n  }\n\n  get pagesCount() {\n    return this._pages.length;\n  }\n\n  getPageView(index) {\n    return this._pages[index];\n  }\n\n  /**\n   * @type {boolean} - True if all {PDFPageView} objects are initialized.\n   */\n  get pageViewsReady() {\n    if (!this._pagesCapability.settled) {\n      return false;\n    }\n    // Prevent printing errors when 'disableAutoFetch' is set, by ensuring\n    // that *all* pages have in fact been completely loaded.\n    return this._pages.every(function (pageView) {\n      return pageView?.pdfPage;\n    });\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get renderForms() {\n    return this.#annotationMode === AnnotationMode.ENABLE_FORMS;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get enableScripting() {\n    return !!this._scriptingManager;\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentPageNumber() {\n    return this._currentPageNumber;\n  }\n\n  /**\n   * @param {number} val - The page number.\n   */\n  set currentPageNumber(val) {\n    if (!Number.isInteger(val)) {\n      throw new Error(\"Invalid page number.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n\n    // #716 modified by ngx-extended-pdf-viewer\n    const flip = Math.abs(this._currentPageNumber - val) < 2;\n    // #716 end of modification\n\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(val, /* resetCurrentPageView = */ true)) {\n      Window['ngxConsole'].error(`currentPageNumber: \"${val}\" is not a valid page.`);\n    }\n\t// #716 modified by ngx-extended-pdf-viewer\n    if (this.pageFlip) {\n      if (flip) {\n        Window['ngxConsole'].log(\"Flip\");\n        this.pageFlip.flip(val - 1);\n      } else {\n        Window['ngxConsole'].log(\"turn to page\");\n        this.pageFlip.turnToPage(val - 1);\n      }\n    }\n    // #716 end of modification\n  }\n\n  /** #495 modified by ngx-extended-pdf-viewer */\n  hidePagesDependingOnpageViewMode() {\n    if (this.pageViewMode === \"book\") {\n      if (!this.pageFlip) {\n        setTimeout(() => {\n          if (!this.pageFlip) {\n            const page1 = this._pages[0].div;\n            const htmlParentElement = page1.parentElement;\n            const viewer = htmlParentElement.parentElement;\n            viewer.style.width = 2 * page1.clientWidth + \"px\";\n            viewer.style.overflow = \"hidden\";\n            viewer.style.marginLeft = \"auto\";\n            viewer.style.marginRight = \"auto\";\n            this.pageFlip = new PageFlip(htmlParentElement, {\n              width: page1.clientWidth,\n              height: page1.clientHeight,\n              showCover: true,\n              size: \"fixed\",\n            });\n            this.pageFlip.loadFromHTML(document.querySelectorAll(\".page\"));\n            this.ensureAdjecentPagesAreLoaded();\n            // triggered by page turning\n            this.pageFlip.on(\"flip\", e => {\n              if (this._currentPageNumber !== e.data + 1) {\n                this._setCurrentPageNumber(e.data + 1, false);\n              }\n            });\n          }\n        }, 100);\n      }\n      // #716 end of modification\n    }\n  }\n  /** end of modification */\n\n  /**\n   * @returns {boolean} Whether the pageNumber is valid (within bounds).\n   * @private\n   */\n  _setCurrentPageNumber(val, resetCurrentPageView = false) {\n    if (this._currentPageNumber === val) {\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n      return true;\n    }\n\n    if (!(0 < val && val <= this.pagesCount)) {\n      return false;\n    }\n    const previous = this._currentPageNumber;\n    this._currentPageNumber = val;\n\n    /** #495 modified by ngx-extended-pdf-viewer */\n    this.hidePagesDependingOnpageViewMode();\n    // #716 modified by ngx-extended-pdf-viewer\n    if (this.pageViewMode === \"book\" || this.pageViewMode === \"infinite-scroll\") {\n      const pageView = this._pages[this.currentPageNumber - 1];\n      if (pageView.div.parentElement.classList.contains(\"spread\")) {\n        pageView.div.parentElement.childNodes.forEach(div => {\n          const pageNumber = Number(div.getAttribute(\"data-page-number\"));\n          const pv = this._pages[pageNumber - 1];\n          this.#ensurePdfPageLoaded(pv).then(() => {\n            this.renderingQueue.renderView(pv);\n          });\n          div.style.display = \"inline-block\";\n        });\n      } else {\n        this.#ensurePdfPageLoaded(pageView).then(() => {\n          this.renderingQueue.renderView(pageView);\n        });\n        // #716 modified by ngx-extended-pdf-viewer\n        if (this.pageViewMode === \"book\") {\n          this.ensureAdjecentPagesAreLoaded();\n        }\n        // #716 modified by ngx-extended-pdf-viewer\n      }\n    }\n    /** end of modification */\n\n    this.eventBus.dispatch(\"pagechanging\", {\n      source: this,\n      pageNumber: val,\n      pageLabel: this._pageLabels?.[val - 1] ?? null,\n      previous,\n    });\n\n    if (resetCurrentPageView) {\n      this._resetCurrentPageView();\n    }\n    return true;\n  }\n\n  // #950 modified by ngx-extended-pdf-viewer\n  /**\n   * Adds a page to the rendering queue\n   * @param {number} pageIndex Index of the page to render\n   * @returns {boolean} false, if the page has already been rendered\n   * or if it's out of range\n   */\n  addPageToRenderQueue(pageIndex = 0) {\n    if (pageIndex >= 0 && pageIndex <= this._pages.length - 1) {\n      const pageView = this._pages[pageIndex];\n      const isLoading = pageView.div.querySelector(\".loadingIcon\");\n      if (isLoading) {\n        this.#ensurePdfPageLoaded(pageView).then(() => {\n          this.renderingQueue.renderView(pageView);\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  // #950 end of modification by ngx-extended-pdf-viewer\n\n  // #716 modified by ngx-extended-pdf-viewer\n  ensureAdjecentPagesAreLoaded() {\n    if (!window.adjacentPagesLoader) {\n      window.adjacentPagesLoader = evt => {\n        Window['ngxConsole'].log(\"rendered\", evt);\n        let pageView = this._pages[Math.min(this._pages.length - 1, this.currentPageNumber)];\n        if (pageView) {\n          let isLoading = pageView.div.querySelector(\".loadingIcon\");\n          if (isLoading) {\n            Window['ngxConsole'].log(\"asking for the next page\");\n            this.#ensurePdfPageLoaded(pageView).then(() => {\n              this.renderingQueue.renderView(pageView);\n            });\n          } else {\n            pageView = this._pages[Math.min(this._pages.length - 1, this.currentPageNumber + 1)];\n            isLoading = pageView.div.querySelector(\".loadingIcon\");\n            if (isLoading) {\n              Window['ngxConsole'].log(\"asking for the next + 1 page\");\n              this.#ensurePdfPageLoaded(pageView).then(() => {\n                this.renderingQueue.renderView(pageView);\n              });\n            } else {\n              pageView = this._pages[Math.min(this._pages.length - 1, this.currentPageNumber + 2)];\n              isLoading = pageView.div.querySelector(\".loadingIcon\");\n              if (isLoading) {\n                Window['ngxConsole'].log(\"asking for the next + 2 page\");\n                this.#ensurePdfPageLoaded(pageView).then(() => {\n                  this.renderingQueue.renderView(pageView);\n                });\n              } else {\n                pageView = this._pages[Math.min(this._pages.length - 1, this.currentPageNumber + 3)];\n                isLoading = pageView.div.querySelector(\".loadingIcon\");\n                if (isLoading) {\n                  Window['ngxConsole'].log(\"asking for the next + 3 page\");\n                  this.#ensurePdfPageLoaded(pageView).then(() => {\n                    this.renderingQueue.renderView(pageView);\n                  });\n                } else {\n                  pageView = this._pages[Math.max(0, this.currentPageNumber - 1)];\n                  isLoading = pageView.div.querySelector(\".loadingIcon\");\n                  if (isLoading) {\n                    Window['ngxConsole'].log(\"asking for the current page\");\n                    this.#ensurePdfPageLoaded(pageView).then(() => {\n                      this.renderingQueue.renderView(pageView);\n                    });\n                  } else {\n                    pageView = this._pages[Math.max(0, this.currentPageNumber - 2)];\n                    isLoading = pageView.div.querySelector(\".loadingIcon\");\n                    if (isLoading) {\n                      Window['ngxConsole'].log(\"asking for the previous page\");\n                      this.#ensurePdfPageLoaded(pageView).then(() => {\n                        this.renderingQueue.renderView(pageView);\n                      });\n                    } else {\n                      Window['ngxConsole'].log(\"Finished preloading the pages\");\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      };\n      this.eventBus._on(\"pagerendered\", window.adjacentPagesLoader);\n    }\n    window.adjacentPagesLoader();\n  }\n  // #716 modified by ngx-extended-pdf-viewer\n\n  /**\n   * @type {string|null} Returns the current page label, or `null` if no page\n   *   labels exist.\n   */\n  get currentPageLabel() {\n    return this._pageLabels?.[this._currentPageNumber - 1] ?? null;\n  }\n\n  /**\n   * @param {string} val - The page label.\n   */\n  set currentPageLabel(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    let page = val | 0; // Fallback page number.\n    if (this._pageLabels) {\n      const i = this._pageLabels.indexOf(val);\n      if (i >= 0) {\n        page = i + 1;\n      }\n    }\n    // The intent can be to just reset a scroll position and/or scale.\n    if (!this._setCurrentPageNumber(page, /* resetCurrentPageView = */ true)) {\n      Window['ngxConsole'].error(`currentPageLabel: \"${val}\" is not a valid page.`);\n    }\n  }\n\n  /**\n   * @type {number}\n   */\n  get currentScale() {\n    return this._currentScale !== UNKNOWN_SCALE\n      ? this._currentScale\n      : DEFAULT_SCALE;\n  }\n\n  /**\n   * @param {number} val - Scale of the pages in percents.\n   */\n  set currentScale(val) {\n    if (isNaN(val)) {\n      throw new Error(\"Invalid numeric scale.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {string}\n   */\n  get currentScaleValue() {\n    return this._currentScaleValue;\n  }\n\n  /**\n   * @param val - The scale of the pages (in percent or predefined value).\n   */\n  set currentScaleValue(val) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    this._setScale(val, false);\n  }\n\n  /**\n   * @type {number}\n   */\n  get pagesRotation() {\n    return this._pagesRotation;\n  }\n\n  /**\n   * @param {number} rotation - The rotation of the pages (0, 90, 180, 270).\n   */\n  set pagesRotation(rotation) {\n    if (!isValidRotation(rotation)) {\n      throw new Error(\"Invalid pages rotation angle.\");\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    if (this._pagesRotation === rotation) {\n      return; // The rotation didn't change.\n    }\n    this._pagesRotation = rotation;\n\n    const pageNumber = this._currentPageNumber;\n\n    const updateArgs = { rotation };\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    // Prevent errors in case the rotation changes *before* the scale has been\n    // set to a non-default value.\n    if (this._currentScaleValue) {\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    this.eventBus.dispatch(\"rotationchanging\", {\n      source: this,\n      pagesRotation: rotation,\n      pageNumber,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n  }\n\n  get firstPagePromise() {\n    return this.pdfDocument ? this._firstPageCapability.promise : null;\n  }\n\n  get onePageRendered() {\n    return this.pdfDocument ? this._onePageRenderedCapability.promise : null;\n  }\n\n  get pagesPromise() {\n    return this.pdfDocument ? this._pagesCapability.promise : null;\n  }\n\n  /**\n   * Currently only *some* permissions are supported.\n   */\n  #initializePermissions(permissions) {\n    if (!permissions) {\n      return;\n    }\n\n    if (!permissions.includes(PermissionFlag.COPY)) {\n      this.viewer.classList.add(ENABLE_PERMISSIONS_CLASS);\n    }\n\n    if (\n      !permissions.includes(PermissionFlag.MODIFY_ANNOTATIONS) &&\n      !permissions.includes(PermissionFlag.FILL_INTERACTIVE_FORMS)\n    ) {\n      if (this.#annotationMode === AnnotationMode.ENABLE_FORMS) {\n        this.#previousAnnotationMode = this.#annotationMode; // Allow resetting.\n        this.#annotationMode = AnnotationMode.ENABLE;\n      }\n    }\n  }\n\n  #onePageRenderedOrForceFetch() {\n    // Unless the viewer *and* its pages are visible, rendering won't start and\n    // `this._onePageRenderedCapability` thus won't be resolved.\n    // To ensure that automatic printing, on document load, still works even in\n    // those cases we force-allow fetching of all pages when:\n    //  - The viewer is hidden in the DOM, e.g. in a `display: none` <iframe>\n    //    element; fixes bug 1618621.\n    //  - The viewer is visible, but none of the pages are (e.g. if the\n    //    viewer is very small); fixes bug 1618955.\n    if (\n      !this.container.offsetParent ||\n      this._getVisiblePages().views.length === 0\n    ) {\n      return Promise.resolve();\n    }\n    return this._onePageRenderedCapability.promise;\n  }\n\n  /**\n   * @param {PDFDocumentProxy} pdfDocument\n   */\n  setDocument(pdfDocument) {\n    if (this.pdfDocument) {\n      this.eventBus.dispatch(\"pagesdestroy\", { source: this });\n\n      this._cancelRendering();\n      this._resetView();\n\n      if (this.findController) {\n        this.findController.setDocument(null);\n      }\n      if (this._scriptingManager) {\n        this._scriptingManager.setDocument(null);\n      }\n    }\n\n    this.pdfDocument = pdfDocument;\n    if (!pdfDocument) {\n      return;\n    }\n    const isPureXfa = pdfDocument.isPureXfa;\n    const pagesCount = pdfDocument.numPages;\n    const firstPagePromise = pdfDocument.getPage(1);\n    // Rendering (potentially) depends on this, hence fetching it immediately.\n    const optionalContentConfigPromise = pdfDocument.getOptionalContentConfig();\n    const permissionsPromise = this.#enablePermissions\n      ? pdfDocument.getPermissions()\n      : Promise.resolve();\n\n    // Given that browsers don't handle huge amounts of DOM-elements very well,\n    // enforce usage of PAGE-scrolling when loading *very* long/large documents.\n    if (pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE) {\n      console.warn(\n        \"Forcing PAGE-scrolling for performance reasons, given the length of the document.\"\n      );\n      const mode = (this._scrollMode = ScrollMode.PAGE);\n      this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n    }\n\n    this._pagesCapability.promise.then(\n      () => {\n        this.eventBus.dispatch(\"pagesloaded\", { source: this, pagesCount });\n      },\n      () => {\n        /* Prevent \"Uncaught (in promise)\"-messages in the console. */\n      }\n    );\n\n    this._onBeforeDraw = evt => {\n      const pageView = this._pages[evt.pageNumber - 1];\n      if (!pageView) {\n        return;\n      }\n      // Add the page to the buffer at the start of drawing. That way it can be\n      // evicted from the buffer and destroyed even if we pause its rendering.\n      this.#buffer.push(pageView);\n    };\n    this.eventBus._on(\"pagerender\", this._onBeforeDraw);\n\n    this._onAfterDraw = evt => {\n      if (evt.cssTransform || this._onePageRenderedCapability.settled) {\n        return;\n      }\n      this._onePageRenderedCapability.resolve({ timestamp: evt.timestamp });\n\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    };\n    this.eventBus._on(\"pagerendered\", this._onAfterDraw);\n\n    // Fetch a single page so we can get a viewport that will be the default\n    // viewport for all pages\n    Promise.all([firstPagePromise, permissionsPromise])\n      .then(([firstPdfPage, permissions]) => {\n        if (pdfDocument !== this.pdfDocument) {\n          return; // The document was closed while the first page resolved.\n        }\n        this._firstPageCapability.resolve(firstPdfPage);\n        this._optionalContentConfigPromise = optionalContentConfigPromise;\n        this.#initializePermissions(permissions);\n\n        const viewerElement =\n          this._scrollMode === ScrollMode.PAGE ? null : this.viewer;\n        const scale = this.currentScale;\n        const viewport = firstPdfPage.getViewport({\n          scale: scale * PixelsPerInch.PDF_TO_CSS_UNITS,\n        });\n        const textLayerFactory =\n          this.textLayerMode !== TextLayerMode.DISABLE && !isPureXfa\n            ? this\n            : null;\n        const annotationLayerFactory =\n          this.#annotationMode !== AnnotationMode.DISABLE ? this : null;\n        const xfaLayerFactory = isPureXfa ? this : null;\n\n        for (let pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          const pageView = new PDFPageView({\n            container: viewerElement,\n            eventBus: this.eventBus,\n            id: pageNum,\n            scale,\n            defaultViewport: viewport.clone(),\n            optionalContentConfigPromise,\n            renderingQueue: this.renderingQueue,\n            textLayerFactory,\n            textLayerMode: this.textLayerMode,\n            annotationLayerFactory,\n            annotationMode: this.#annotationMode,\n            xfaLayerFactory,\n            textHighlighterFactory: this,\n            structTreeLayerFactory: this,\n            imageResourcesPath: this.imageResourcesPath,\n            removePageBorders: this.removePageBorders, // #194\n            renderer: this.renderer,\n            useOnlyCssZoom: this.useOnlyCssZoom,\n            maxCanvasPixels: this.maxCanvasPixels,\n            l10n: this.l10n,\n          });\n          this._pages.push(pageView);\n        }\n        // Set the first `pdfPage` immediately, since it's already loaded,\n        // rather than having to repeat the `PDFDocumentProxy.getPage` call in\n        // the `this.#ensurePdfPageLoaded` method before rendering can start.\n        const firstPageView = this._pages[0];\n        if (firstPageView) {\n          firstPageView.setPdfPage(firstPdfPage);\n          this.linkService.cachePageRef(1, firstPdfPage.ref);\n        }\n\n        if (this._scrollMode === ScrollMode.PAGE) {\n          // Ensure that the current page becomes visible on document load.\n          this.#ensurePageViewVisible();\n        } else if (this._spreadMode !== SpreadMode.NONE) {\n          this._updateSpreadMode();\n        }\n\n        // Fetch all the pages since the viewport is needed before printing\n        // starts to create the correct size canvas. Wait until one page is\n        // rendered so we don't tie up too many resources early on.\n        this.#onePageRenderedOrForceFetch().then(async () => {\n          if (this.findController) {\n            this.findController.setDocument(pdfDocument); // Enable searching.\n          }\n          if (this._scriptingManager) {\n            this._scriptingManager.setDocument(pdfDocument); // Enable scripting.\n          }\n\n          // In addition to 'disableAutoFetch' being set, also attempt to reduce\n          // resource usage when loading *very* long/large documents.\n          if (\n            pdfDocument.loadingParams.disableAutoFetch ||\n            pagesCount > PagesCountLimit.FORCE_LAZY_PAGE_INIT\n          ) {\n            // XXX: Printing is semi-broken with auto fetch disabled.\n            this._pagesCapability.resolve();\n            return;\n          }\n          let getPagesLeft = pagesCount - 1; // The first page was already loaded.\n\n          if (getPagesLeft <= 0) {\n            this._pagesCapability.resolve();\n            return;\n          }\n          for (let pageNum = 2; pageNum <= pagesCount; ++pageNum) {\n            const promise = pdfDocument.getPage(pageNum).then(\n              pdfPage => {\n                const pageView = this._pages[pageNum - 1];\n                if (!pageView.pdfPage) {\n                  pageView.setPdfPage(pdfPage);\n                }\n                this.linkService.cachePageRef(pageNum, pdfPage.ref);\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              },\n              reason => {\n                Window['ngxConsole'].error(\n                  `Unable to get page ${pageNum} to initialize viewer`,\n                  reason\n                );\n                if (--getPagesLeft === 0) {\n                  this._pagesCapability.resolve();\n                }\n              }\n            );\n\n            if (pageNum % PagesCountLimit.PAUSE_EAGER_PAGE_INIT === 0) {\n              await promise;\n            }\n          }\n        });\n\n        /** #495 modified by ngx-extended-pdf-viewer */\n        this.hidePagesDependingOnpageViewMode();\n        /** end of modification */\n\n        this.eventBus.dispatch(\"pagesinit\", { source: this });\n\n        pdfDocument.getMetadata().then(({ info }) => {\n          if (pdfDocument !== this.pdfDocument) {\n            return; // The document was closed while the metadata resolved.\n          }\n          if (info.Language) {\n            this.viewer.lang = info.Language;\n          }\n        });\n\n        if (this.defaultRenderingQueue) {\n          this.update();\n        }\n      })\n      .catch(reason => {\n        Window['ngxConsole'].error(\"Unable to initialize viewer\", reason);\n\n        this._pagesCapability.reject(reason);\n      });\n  }\n\n  /**\n   * @param {Array|null} labels\n   */\n  setPageLabels(labels) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!labels) {\n      this._pageLabels = null;\n    } else if (\n      !(Array.isArray(labels) && this.pdfDocument.numPages === labels.length)\n    ) {\n      this._pageLabels = null;\n      Window['ngxConsole'].error(`setPageLabels: Invalid page labels.`);\n    } else {\n      this._pageLabels = labels;\n    }\n    // Update all the `PDFPageView` instances.\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      this._pages[i].setPageLabel(this._pageLabels?.[i] ?? null);\n    }\n  }\n\n  _resetView() {\n    this._pages = [];\n    this._currentPageNumber = 1;\n    this._currentScale = UNKNOWN_SCALE;\n    this._currentScaleValue = null;\n    this._pageLabels = null;\n    // #950 modified by ngx-extended-pdf-viewer\n    const bufferSize = Number(PDFViewerApplicationOptions.get(\"defaultCacheSize\")) || DEFAULT_CACHE_SIZE;\n    this.#buffer = new PDFPageViewBuffer(bufferSize);\n    // #950 end of modification by ngx-extended-pdf-viewer\n    this._location = null;\n    this._pagesRotation = 0;\n    this._optionalContentConfigPromise = null;\n    this._firstPageCapability = createPromiseCapability();\n    this._onePageRenderedCapability = createPromiseCapability();\n    this._pagesCapability = createPromiseCapability();\n    this._scrollMode = ScrollMode.VERTICAL;\n    this._previousScrollMode = ScrollMode.UNKNOWN;\n    this._spreadMode = SpreadMode.NONE;\n\n    this.#scrollModePageState = {\n      previousPageNumber: 1,\n      scrollDown: true,\n      pages: [],\n    };\n\n    if (this._onBeforeDraw) {\n      this.eventBus._off(\"pagerender\", this._onBeforeDraw);\n      this._onBeforeDraw = null;\n    }\n    if (this._onAfterDraw) {\n      this.eventBus._off(\"pagerendered\", this._onAfterDraw);\n      this._onAfterDraw = null;\n    }\n    // Remove the pages from the DOM...\n    this.viewer.textContent = \"\";\n    // ... and reset the Scroll mode CSS class(es) afterwards.\n    this._updateScrollMode();\n\n    this.viewer.removeAttribute(\"lang\");\n    // Reset all PDF document permissions.\n    this.viewer.classList.remove(ENABLE_PERMISSIONS_CLASS);\n\n    if (this.#previousAnnotationMode !== null) {\n      this.#annotationMode = this.#previousAnnotationMode;\n      this.#previousAnnotationMode = null;\n    }\n  }\n\n  #ensurePageViewVisible() {\n    if (this._scrollMode !== ScrollMode.PAGE) {\n      throw new Error(\"#ensurePageViewVisible: Invalid scrollMode value.\");\n    }\n    const pageNumber = this._currentPageNumber,\n      state = this.#scrollModePageState,\n      viewer = this.viewer;\n\n    // Temporarily remove all the pages from the DOM...\n    viewer.textContent = \"\";\n    // ... and clear out the active ones.\n    state.pages.length = 0;\n\n    if (this._spreadMode === SpreadMode.NONE) {\n      // Finally, append the new page to the viewer.\n      const pageView = this._pages[pageNumber - 1];\n\n      if (this.isInPresentationMode) {\n        const spread = document.createElement(\"div\");\n        spread.className = \"spread\";\n        const dummyPage = document.createElement(\"div\");\n        dummyPage.className = \"dummyPage\";\n        dummyPage.style.height = `${this.container.clientHeight}px`;\n\n        spread.appendChild(dummyPage);\n        spread.appendChild(pageView.div);\n        viewer.appendChild(spread);\n      } else {\n        viewer.appendChild(pageView.div);\n      }\n\n      state.pages.push(pageView);\n    } else {\n      const pageIndexSet = new Set(),\n        parity = this._spreadMode - 1;\n\n      // Determine the pageIndices in the new spread.\n      if (pageNumber % 2 !== parity) {\n        // Left-hand side page.\n        pageIndexSet.add(pageNumber - 1);\n        pageIndexSet.add(pageNumber);\n      } else {\n        // Right-hand side page.\n        pageIndexSet.add(pageNumber - 2);\n        pageIndexSet.add(pageNumber - 1);\n      }\n\n      // Finally, append the new pages to the viewer and apply the spreadMode.\n      let spread = null;\n      for (const i of pageIndexSet) {\n        const pageView = this._pages[i];\n        if (!pageView) {\n          continue;\n        }\n        if (spread === null) {\n          spread = document.createElement(\"div\");\n          spread.className = \"spread\";\n          viewer.appendChild(spread);\n        } else if (i % 2 === parity) {\n          spread = spread.cloneNode(false);\n          viewer.appendChild(spread);\n        }\n        spread.appendChild(pageView.div);\n\n        state.pages.push(pageView);\n      }\n    }\n\n    state.scrollDown = pageNumber >= state.previousPageNumber;\n    state.previousPageNumber = pageNumber;\n  }\n\n  _scrollUpdate() {\n    if (this.pagesCount === 0) {\n      return;\n    }\n    this.update();\n  }\n\n  _scrollIntoView({ pageDiv, pageSpot = null, pageNumber = null }) {\n    if (this._scrollMode === ScrollMode.PAGE) {\n      if (pageNumber) {\n        // Ensure that `this._currentPageNumber` is correct.\n        this._setCurrentPageNumber(pageNumber);\n      }\n      this.#ensurePageViewVisible();\n      // Ensure that rendering always occurs, to avoid showing a blank page,\n      // even if the current position doesn't change when the page is scrolled.\n      this.update();\n    }\n\n    if (!pageSpot && !this.isInPresentationMode) {\n      const left = pageDiv.offsetLeft + pageDiv.clientLeft; // performance measuring: 789 ms\n      const right = left + pageDiv.clientWidth;\n      const { scrollLeft, clientWidth } = this.container;\n      if (\n        this._scrollMode === ScrollMode.HORIZONTAL ||\n        left < scrollLeft ||\n        right > scrollLeft + clientWidth\n      ) {\n        pageSpot = { left: 0, top: 0 };\n      }\n    }\n    scrollIntoView(pageDiv, pageSpot, false, this.pageViewMode === \"infinite-scroll\");\n  }\n\n  /**\n   * Prevent unnecessary re-rendering of all pages when the scale changes\n   * only because of limited numerical precision.\n   */\n  #isSameScale(newScale) {\n    if (\n      this.isInPresentationMode &&\n      this.container.clientHeight !== this.#previousContainerHeight\n    ) {\n      // Ensure that the current page remains centered vertically if/when\n      // the window is resized while PresentationMode is active.\n      return false;\n    }\n    return (\n      newScale === this._currentScale ||\n      Math.abs(newScale - this._currentScale) < 1e-15\n    );\n  }\n\n  _setScaleUpdatePages(newScale, newValue, noScroll = false, preset = false) {\n    this._currentScaleValue = newValue.toString();\n\n    if (this.#isSameScale(newScale)) {\n      if (preset) {\n        this.eventBus.dispatch(\"scalechanging\", {\n          source: this,\n          scale: newScale,\n          presetValue: newValue,\n        });\n      }\n      return;\n    }\n\n    this._doc.style.setProperty(\"--zoom-factor\", newScale);\n    this._doc.style.setProperty(\n      \"--viewport-scale-factor\",\n      newScale * PixelsPerInch.PDF_TO_CSS_UNITS\n    );\n\n    const updateArgs = { scale: newScale };\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    this._currentScale = newScale;\n\n    if (!noScroll) {\n      let page = this._currentPageNumber,\n        dest;\n      if (\n        this._location &&\n        !(this.isInPresentationMode || this.isChangingPresentationMode)\n      ) {\n        page = this._location.pageNumber;\n        dest = [\n          null,\n          { name: \"XYZ\" },\n          this._location.left,\n          this._location.top,\n          null,\n        ];\n      }\n      this.scrollPageIntoView({\n        pageNumber: page,\n        destArray: dest,\n        allowNegativeOffset: true,\n      });\n    }\n\n    this.eventBus.dispatch(\"scalechanging\", {\n      source: this,\n      scale: newScale,\n      presetValue: preset ? newValue : undefined,\n    });\n\n    if (this.defaultRenderingQueue) {\n      this.update();\n    }\n\n    this.#previousContainerHeight = this.container.clientHeight;\n  }\n\n  /**\n   * @private\n   */\n  get _pageWidthScaleFactor() {\n    if (\n      this._spreadMode !== SpreadMode.NONE &&\n      this._scrollMode !== ScrollMode.HORIZONTAL\n    ) {\n      return 2;\n    }\n    return 1;\n  }\n\n  _setScale(value, noScroll = false) {\n    // #90 modified by ngx-extended-pdf-viewer\n    if (null === value) {\n      value = \"auto\";\n    }\n    // #90 end of modification\n    let scale = parseFloat(value);\n\n    if (scale > 0) {\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ false);\n    } else {\n      const currentPage = this._pages[this._currentPageNumber - 1];\n      if (!currentPage) {\n        return;\n      }\n      let hPadding = SCROLLBAR_PADDING,\n        vPadding = VERTICAL_PADDING;\n\n      if (this.isInPresentationMode) {\n        hPadding = vPadding = 4;\n      } else if (this.removePageBorders) {\n        hPadding = vPadding = 0;\n      }\n      if (this._scrollMode === ScrollMode.HORIZONTAL) {\n        [hPadding, vPadding] = [vPadding, hPadding]; // Swap the padding values.\n      }\n      const pageWidthScale =\n        (((this.container.clientWidth - hPadding) / currentPage.width) *\n          currentPage.scale) /\n        this._pageWidthScaleFactor;\n      const pageHeightScale =\n        ((this.container.clientHeight - vPadding) / currentPage.height) *\n        currentPage.scale;\n      switch (value) {\n        case \"page-actual\":\n          scale = 1;\n          break;\n        case \"page-width\":\n          scale = pageWidthScale;\n          break;\n        case \"page-height\":\n          scale = pageHeightScale;\n          break;\n        case \"page-fit\":\n          scale = Math.min(pageWidthScale, pageHeightScale);\n          break;\n        case \"auto\":\n          // For pages in landscape mode, fit the page height to the viewer\n          // *unless* the page would thus become too wide to fit horizontally.\n          const horizontalScale = isPortraitOrientation(currentPage)\n            ? pageWidthScale\n            : Math.min(pageHeightScale, pageWidthScale);\n          scale = Math.min(MAX_AUTO_SCALE, horizontalScale);\n          break;\n        default:\n          Window['ngxConsole'].error(`_setScale: \"${value}\" is an unknown zoom value.`);\n          return;\n      }\n      this._setScaleUpdatePages(scale, value, noScroll, /* preset = */ true);\n    }\n  }\n\n  /**\n   * Refreshes page view: scrolls to the current page and updates the scale.\n   * @private\n   */\n  _resetCurrentPageView() {\n    if (this.isInPresentationMode) {\n      // Fixes the case when PDF has different page sizes.\n      this._setScale(this._currentScaleValue, true);\n    }\n\n    const pageView = this._pages[this._currentPageNumber - 1];\n    this._scrollIntoView({ pageDiv: pageView.div });\n  }\n\n  /**\n   * @param {string} label - The page label.\n   * @returns {number|null} The page number corresponding to the page label,\n   *   or `null` when no page labels exist and/or the input is invalid.\n   */\n  pageLabelToPageNumber(label) {\n    if (!this._pageLabels) {\n      return null;\n    }\n    const i = this._pageLabels.indexOf(label);\n    if (i < 0) {\n      return null;\n    }\n    return i + 1;\n  }\n\n  /**\n   * @typedef ScrollPageIntoViewParameters\n   * @property {number} pageNumber - The page number.\n   * @property {Array} [destArray] - The original PDF destination array, in the\n   *   format: <page-ref> </XYZ|/FitXXX> <args..>\n   * @property {boolean} [allowNegativeOffset] - Allow negative page offsets.\n   *   The default value is `false`.\n   * @property {boolean} [ignoreDestinationZoom] - Ignore the zoom argument in\n   *   the destination array. The default value is `false`.\n   */\n\n  /**\n   * Scrolls page into view.\n   * @param {ScrollPageIntoViewParameters} params\n   */\n  scrollPageIntoView({\n    pageNumber,\n    destArray = null,\n    allowNegativeOffset = false,\n    ignoreDestinationZoom = false,\n  }) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const pageView =\n      Number.isInteger(pageNumber) && this._pages[pageNumber - 1];\n    if (!pageView) {\n      Window['ngxConsole'].error(\n        `scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`\n      );\n      return;\n    }\n\n    if (this.isInPresentationMode || !destArray) {\n      this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n      return;\n    }\n    let x = 0,\n      y = 0;\n    let width = 0,\n      height = 0,\n      widthScale,\n      heightScale;\n    const changeOrientation = pageView.rotation % 180 !== 0;\n    const pageWidth =\n      (changeOrientation ? pageView.height : pageView.width) /\n      pageView.scale /\n      PixelsPerInch.PDF_TO_CSS_UNITS;\n    const pageHeight =\n      (changeOrientation ? pageView.width : pageView.height) /\n      pageView.scale /\n      PixelsPerInch.PDF_TO_CSS_UNITS;\n    let scale = 0;\n    switch (destArray[1].name) {\n      case \"XYZ\":\n        x = destArray[2];\n        y = destArray[3];\n        scale = destArray[4];\n        // If x and/or y coordinates are not supplied, default to\n        // _top_ left of the page (not the obvious bottom left,\n        // since aligning the bottom of the intended page with the\n        // top of the window is rarely helpful).\n        x = x !== null ? x : 0;\n        y = y !== null ? y : pageHeight;\n        break;\n      case \"Fit\":\n      case \"FitB\":\n        scale = \"page-fit\";\n        break;\n      case \"FitH\":\n      case \"FitBH\":\n        y = destArray[2];\n        scale = \"page-width\";\n        // According to the PDF spec, section 12.3.2.2, a `null` value in the\n        // parameter should maintain the position relative to the new page.\n        if (y === null && this._location) {\n          x = this._location.left;\n          y = this._location.top;\n        } else if (typeof y !== \"number\" || y < 0) {\n          // The \"top\" value isn't optional, according to the spec, however some\n          // bad PDF generators will pretend that it is (fixes bug 1663390).\n          y = pageHeight;\n        }\n        break;\n      case \"FitV\":\n      case \"FitBV\":\n        x = destArray[2];\n        width = pageWidth;\n        height = pageHeight;\n        scale = \"page-height\";\n        break;\n      case \"FitR\":\n        x = destArray[2];\n        y = destArray[3];\n        width = destArray[4] - x;\n        height = destArray[5] - y;\n        const hPadding = this.removePageBorders ? 0 : SCROLLBAR_PADDING;\n        const vPadding = this.removePageBorders ? 0 : VERTICAL_PADDING;\n\n        widthScale =\n          (this.container.clientWidth - hPadding) /\n          width /\n          PixelsPerInch.PDF_TO_CSS_UNITS;\n        heightScale =\n          (this.container.clientHeight - vPadding) /\n          height /\n          PixelsPerInch.PDF_TO_CSS_UNITS;\n        scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n        break;\n      default:\n        Window['ngxConsole'].error(\n          `scrollPageIntoView: \"${destArray[1].name}\" is not a valid destination type.`\n        );\n        return;\n    }\n\n    if (!ignoreDestinationZoom) {\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === UNKNOWN_SCALE) {\n        this.currentScaleValue = DEFAULT_SCALE_VALUE;\n      }\n    }\n\n    /** #495 modified by ngx-extended-pdf-viewer */\n    this.#ensurePdfPageLoaded(pageView).then(() => {\n      this.renderingQueue.renderView(pageView);\n      if (this.currentPageNumber !== pageNumber) {\n        this.currentPageNumber = pageNumber;\n      }\n    });\n    /** end of modification */\n\n\n    if (scale === \"page-fit\" && !destArray[4]) {\n      this._scrollIntoView({\n        pageDiv: pageView.div,\n        pageNumber,\n      });\n      return;\n    }\n\n    const boundingRect = [\n      pageView.viewport.convertToViewportPoint(x, y),\n      pageView.viewport.convertToViewportPoint(x + width, y + height),\n    ];\n    let left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n    let top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n\n    if (!allowNegativeOffset) {\n      // Some bad PDF generators will create destinations with e.g. top values\n      // that exceeds the page height. Ensure that offsets are not negative,\n      // to prevent a previous page from becoming visible (fixes bug 874482).\n      left = Math.max(left, 0);\n      top = Math.max(top, 0);\n    }\n    this._scrollIntoView({\n      pageDiv: pageView.div,\n      pageSpot: { left, top },\n      pageNumber,\n    });\n  }\n\n  _updateLocation(firstPage) {\n    const currentScale = this._currentScale;\n    const currentScaleValue = this._currentScaleValue;\n    const normalizedScaleValue =\n      parseFloat(currentScaleValue) === currentScale\n        ? Math.round(currentScale * 10000) / 100\n        : currentScaleValue;\n\n    const pageNumber = firstPage.id;\n    let pdfOpenParams = \"#page=\" + pageNumber;\n    pdfOpenParams += \"&zoom=\" + normalizedScaleValue;\n    const currentPageView = this._pages[pageNumber - 1];\n    const container = this.container;\n    const topLeft = currentPageView.getPagePoint(\n      container.scrollLeft - firstPage.x,\n      container.scrollTop - firstPage.y\n    );\n    const intLeft = Math.round(topLeft[0]);\n    const intTop = Math.round(topLeft[1]);\n    pdfOpenParams += \",\" + intLeft + \",\" + intTop;\n\n    this._location = {\n      pageNumber,\n      scale: normalizedScaleValue,\n      top: intTop,\n      left: intLeft,\n      rotation: this._pagesRotation,\n      pdfOpenParams,\n    };\n  }\n\n  update() {\n    const visible = this._getVisiblePages();\n    const visiblePages = visible.views,\n      numVisiblePages = visiblePages.length;\n\n    if (numVisiblePages === 0) {\n      return;\n    }\n    // #950 modified by ngx-extended-pdf-viewer\n    const bufferSize = Number(PDFViewerApplicationOptions.get(\"defaultCacheSize\")) || DEFAULT_CACHE_SIZE;\n    const newCacheSize = Math.max(bufferSize, 2 * numVisiblePages + 1);\n    // #950 end of modification\n    this.#buffer.resize(newCacheSize, visible.ids);\n\n    this.renderingQueue.renderHighestPriority(visible);\n\n    if (!this.isInPresentationMode) {\n      const isSimpleLayout =\n        this._spreadMode === SpreadMode.NONE &&\n        (this._scrollMode === ScrollMode.PAGE ||\n          this._scrollMode === ScrollMode.VERTICAL);\n      let currentId = this._currentPageNumber;\n      let stillFullyVisible = false;\n\n      for (const page of visiblePages) {\n        if (page.percent < 100) {\n          break;\n        }\n        if (page.id === currentId && isSimpleLayout) {\n          stillFullyVisible = true;\n          break;\n        }\n      }\n      if (!stillFullyVisible) {\n        currentId = visiblePages[0].id;\n      }\n      this._setCurrentPageNumber(currentId);\n    }\n\n    this._updateLocation(visible.first);\n    this.eventBus.dispatch(\"updateviewarea\", {\n      source: this,\n      location: this._location,\n    });\n    // #859 modified by ngx-extended-pdf-viewer\n    this.hidePagesDependingOnpageViewMode();\n    // #859 end of modification\n  }\n\n  containsElement(element) {\n    return this.container.contains(element);\n  }\n\n  focus() {\n    this.container.focus();\n  }\n\n  get _isContainerRtl() {\n    return getComputedStyle(this.container).direction === \"rtl\";\n  }\n\n  get isInPresentationMode() {\n    return this.presentationModeState === PresentationModeState.FULLSCREEN;\n  }\n\n  get isChangingPresentationMode() {\n    return this.presentationModeState === PresentationModeState.CHANGING;\n  }\n\n  get isHorizontalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollWidth > this.container.clientWidth;\n  }\n\n  get isVerticalScrollbarEnabled() {\n    return this.isInPresentationMode\n      ? false\n      : this.container.scrollHeight > this.container.clientHeight;\n  }\n\n  /**\n   * Helper method for `this._getVisiblePages`. Should only ever be used when\n   * the viewer can only display a single page at a time, for example:\n   *  - When PresentationMode is active.\n   */\n  _getCurrentVisiblePage() {\n    if (!this.pagesCount) {\n      return { views: [] };\n    }\n    const pageView = this._pages[this._currentPageNumber - 1];\n    // NOTE: Compute the `x` and `y` properties of the current view,\n    // since `this._updateLocation` depends of them being available.\n    const element = pageView.div;\n\n    const view = {\n      id: pageView.id,\n      x: element.offsetLeft + element.clientLeft,\n      y: element.offsetTop + element.clientTop,\n      view: pageView,\n    };\n    const ids = new Set([pageView.id]);\n\n    return { first: view, last: view, views: [view], ids };\n  }\n\n  _getVisiblePages() {\n    if (this.isInPresentationMode) {\n      // The algorithm in `getVisibleElements` doesn't work in all browsers and\n      // configurations (e.g. Chrome) when PresentationMode is active.\n      return this._getCurrentVisiblePage();\n    }\n    const views =\n        this._scrollMode === ScrollMode.PAGE\n          ? this.#scrollModePageState.pages\n          : this._pages,\n      horizontal = this._scrollMode === ScrollMode.HORIZONTAL,\n      rtl = horizontal && this._isContainerRtl;\n\n    return getVisibleElements({\n      scrollEl: this.container,\n      views,\n      sortByVisibility: true,\n      horizontal,\n      rtl,\n    });\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageVisible(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      Window['ngxConsole'].error(`isPageVisible: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n    return this._getVisiblePages().ids.has(pageNumber);\n  }\n\n  /**\n   * @param {number} pageNumber\n   */\n  isPageCached(pageNumber) {\n    if (!this.pdfDocument) {\n      return false;\n    }\n    if (\n      !(\n        Number.isInteger(pageNumber) &&\n        pageNumber > 0 &&\n        pageNumber <= this.pagesCount\n      )\n    ) {\n      Window['ngxConsole'].error(`isPageCached: \"${pageNumber}\" is not a valid page.`);\n      return false;\n    }\n    const pageView = this._pages[pageNumber - 1];\n    return this.#buffer.has(pageView);\n  }\n\n  cleanup() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (\n        this._pages[i] &&\n        this._pages[i].renderingState !== RenderingStates.FINISHED\n      ) {\n        this._pages[i].reset();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _cancelRendering() {\n    for (let i = 0, ii = this._pages.length; i < ii; i++) {\n      if (this._pages[i]) {\n        this._pages[i].cancelRendering();\n      }\n    }\n  }\n\n  /**\n   * @param {PDFPageView} pageView\n   * @returns {Promise<PDFPageProxy | null>}\n   */\n  async #ensurePdfPageLoaded(pageView) {\n    if (pageView.pdfPage) {\n      return pageView.pdfPage;\n    }\n    try {\n      const pdfPage = await this.pdfDocument.getPage(pageView.id);\n      if (!pageView.pdfPage) {\n        pageView.setPdfPage(pdfPage);\n      }\n      if (!this.linkService._cachedPageNumber(pdfPage.ref)) {\n        this.linkService.cachePageRef(pageView.id, pdfPage.ref);\n      }\n      return pdfPage;\n    } catch (reason) {\n      Window['ngxConsole'].error(\"Unable to get page for page view\", reason);\n      return null; // Page error -- there is nothing that can be done.\n    }\n  }\n\n  #getScrollAhead(visible) {\n    if (visible.first?.id === 1) {\n      return true;\n    } else if (visible.last?.id === this.pagesCount) {\n      return false;\n    }\n    switch (this._scrollMode) {\n      case ScrollMode.PAGE:\n        return this.#scrollModePageState.scrollDown;\n      case ScrollMode.HORIZONTAL:\n        return this.scroll.right;\n    }\n    return this.scroll.down;\n  }\n\n  /**\n   * Only show the `loadingIcon`-spinner on visible pages (see issue 14242).\n   */\n  #toggleLoadingIconSpinner(visibleIds) {\n    for (const id of visibleIds) {\n      const pageView = this._pages[id - 1];\n      pageView?.toggleLoadingIconSpinner(/* viewVisible = */ true);\n    }\n    for (const pageView of this.#buffer) {\n      if (visibleIds.has(pageView.id)) {\n        // Handled above, since the \"buffer\" may not contain all visible pages.\n        continue;\n      }\n      pageView.toggleLoadingIconSpinner(/* viewVisible = */ false);\n    }\n  }\n\n  forceRendering(currentlyVisiblePages) {\n    const visiblePages = currentlyVisiblePages || this._getVisiblePages();\n    const scrollAhead = this.#getScrollAhead(visiblePages);\n    const preRenderExtra =\n      this._spreadMode !== SpreadMode.NONE &&\n      this._scrollMode !== ScrollMode.HORIZONTAL;\n\n    const pageView = this.renderingQueue.getHighestPriority(\n      visiblePages,\n      this._pages,\n      scrollAhead,\n      preRenderExtra\n    );\n    this.#toggleLoadingIconSpinner(visiblePages.ids);\n\n    if (pageView) {\n      this.#ensurePdfPageLoaded(pageView).then(() => {\n        this.renderingQueue.renderView(pageView);\n      });\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @param {HTMLDivElement} textLayerDiv\n   * @param {number} pageIndex\n   * @param {PageViewport} viewport\n   * @param {boolean} enhanceTextSelection\n   * @param {EventBus} eventBus\n   * @param {TextHighlighter} highlighter\n   * @returns {TextLayerBuilder}\n   */\n  createTextLayerBuilder(\n    textLayerDiv,\n    pageIndex,\n    viewport,\n    enhanceTextSelection = false,\n    eventBus,\n    highlighter\n  ) {\n    return new TextLayerBuilder({\n      textLayerDiv,\n      eventBus,\n      pageIndex,\n      viewport,\n      enhanceTextSelection: this.isInPresentationMode\n        ? false\n        : enhanceTextSelection,\n      highlighter,\n    });\n  }\n\n  /**\n   * @param {number} pageIndex\n   * @param {EventBus} eventBus\n   * @returns {TextHighlighter}\n   */\n  createTextHighlighter(pageIndex, eventBus) {\n    return new TextHighlighter({\n      eventBus,\n      pageIndex,\n      findController: this.isInPresentationMode ? null : this.findController,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPageProxy} pdfPage\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\n   *   data in forms.\n   * @param {string} [imageResourcesPath] - Path for image resources, mainly\n   *   for annotation icons. Include trailing slash.\n   * @param {boolean} renderForms\n   * @param {IL10n} l10n\n   * @param {boolean} [enableScripting]\n   * @param {Promise<boolean>} [hasJSActionsPromise]\n   * @param {Object} [mouseState]\n   * @param {Promise<Object<string, Array<Object>> | null>}\n   *   [fieldObjectsPromise]\n   * @param {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n   * @returns {AnnotationLayerBuilder}\n   */\n  createAnnotationLayerBuilder(\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderForms = true,\n    l10n = NullL10n,\n    enableScripting = null,\n    hasJSActionsPromise = null,\n    mouseState = null,\n    fieldObjectsPromise = null,\n    annotationCanvasMap = null\n  ) {\n    return new AnnotationLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage:\n        annotationStorage || this.pdfDocument?.annotationStorage,\n      imageResourcesPath,\n      renderForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      l10n,\n      enableScripting: enableScripting ?? this.enableScripting,\n      hasJSActionsPromise:\n        hasJSActionsPromise || this.pdfDocument?.hasJSActions(),\n      fieldObjectsPromise:\n        fieldObjectsPromise || this.pdfDocument?.getFieldObjects(),\n      mouseState: mouseState || this._scriptingManager?.mouseState,\n      annotationCanvasMap,\n    });\n  }\n\n  /**\n   * @param {HTMLDivElement} pageDiv\n   * @param {PDFPageProxy} pdfPage\n   * @param {AnnotationStorage} [annotationStorage] - Storage for annotation\n   *   data in forms.\n   * @returns {XfaLayerBuilder}\n   */\n  createXfaLayerBuilder(pageDiv, pdfPage, annotationStorage = null) {\n    return new XfaLayerBuilder({\n      pageDiv,\n      pdfPage,\n      annotationStorage:\n        annotationStorage || this.pdfDocument?.annotationStorage,\n      linkService: this.linkService,\n    });\n  }\n\n  /**\n   * @param {PDFPageProxy} pdfPage\n   * @returns {StructTreeLayerBuilder}\n   */\n  createStructTreeLayerBuilder(pdfPage) {\n    return new StructTreeLayerBuilder({\n      pdfPage,\n    });\n  }\n\n  /**\n   * @type {boolean} Whether all pages of the PDF document have identical\n   *   widths and heights.\n   */\n  get hasEqualPageSizes() {\n    const firstPageView = this._pages[0];\n    for (let i = 1, ii = this._pages.length; i < ii; ++i) {\n      const pageView = this._pages[i];\n      if (\n        pageView.width !== firstPageView.width ||\n        pageView.height !== firstPageView.height\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns sizes of the pages.\n   * @returns {Array} Array of objects with width/height/rotation fields.\n   */\n  getPagesOverview() {\n    return this._pages.map(pageView => {\n      const viewport = pageView.pdfPage.getViewport({ scale: 1 });\n\n      if (!this.enablePrintAutoRotate || isPortraitOrientation(viewport)) {\n        return {\n          width: viewport.width,\n          height: viewport.height,\n          rotation: viewport.rotation,\n        };\n      }\n      // Landscape orientation.\n      return {\n        width: viewport.height,\n        height: viewport.width,\n        rotation: (viewport.rotation - 90) % 360,\n      };\n    });\n  }\n\n  /**\n   * @type {Promise<OptionalContentConfig | null>}\n   */\n  get optionalContentConfigPromise() {\n    if (!this.pdfDocument) {\n      return Promise.resolve(null);\n    }\n    if (!this._optionalContentConfigPromise) {\n      // Prevent issues if the getter is accessed *before* the `onePageRendered`\n      // promise has resolved; won't (normally) happen in the default viewer.\n      return this.pdfDocument.getOptionalContentConfig();\n    }\n    return this._optionalContentConfigPromise;\n  }\n\n  /**\n   * @param {Promise<OptionalContentConfig>} promise - A promise that is\n   *   resolved with an {@link OptionalContentConfig} instance.\n   */\n  set optionalContentConfigPromise(promise) {\n    if (!(promise instanceof Promise)) {\n      throw new Error(`Invalid optionalContentConfigPromise: ${promise}`);\n    }\n    if (!this.pdfDocument) {\n      return;\n    }\n    if (!this._optionalContentConfigPromise) {\n      // Ignore the setter *before* the `onePageRendered` promise has resolved,\n      // since it'll be overwritten anyway; won't happen in the default viewer.\n      return;\n    }\n    this._optionalContentConfigPromise = promise;\n\n    const updateArgs = { optionalContentConfigPromise: promise };\n    for (const pageView of this._pages) {\n      pageView.update(updateArgs);\n    }\n    this.update();\n\n    this.eventBus.dispatch(\"optionalcontentconfigchanged\", {\n      source: this,\n      promise,\n    });\n  }\n\n  /**\n   * @type {number} One of the values in {ScrollMode}.\n   */\n  get scrollMode() {\n    return this._scrollMode;\n  }\n\n  /**\n   * @param {number} mode - The direction in which the document pages should be\n   *   laid out within the scrolling container.\n   *   The constants from {ScrollMode} should be used.\n   */\n  set scrollMode(mode) {\n    if (this._scrollMode === mode) {\n      return; // The Scroll mode didn't change.\n    }\n    if (!isValidScrollMode(mode)) {\n      throw new Error(`Invalid scroll mode: ${mode}`);\n    }\n    if (this.pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE) {\n      return; // Disabled for performance reasons.\n    }\n    this._previousScrollMode = this._scrollMode;\n\n    this._scrollMode = mode;\n    this.eventBus.dispatch(\"scrollmodechanged\", { source: this, mode });\n\n    this._updateScrollMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateScrollMode(pageNumber = null) {\n    const scrollMode = this._scrollMode,\n      viewer = this.viewer;\n\n    viewer.classList.toggle(\n      \"scrollHorizontal\",\n      scrollMode === ScrollMode.HORIZONTAL\n    );\n    viewer.classList.toggle(\"scrollWrapped\", scrollMode === ScrollMode.WRAPPED);\n\n    if (!this.pdfDocument || !pageNumber) {\n      return;\n    }\n\n    if (scrollMode === ScrollMode.PAGE) {\n      this.#ensurePageViewVisible();\n    } else if (this._previousScrollMode === ScrollMode.PAGE) {\n      // Ensure that the current spreadMode is still applied correctly when\n      // the *previous* scrollMode was `ScrollMode.PAGE`.\n      this._updateSpreadMode();\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @type {number} One of the values in {SpreadMode}.\n   */\n  get spreadMode() {\n    return this._spreadMode;\n  }\n\n  /**\n   * @param {number} mode - Group the pages in spreads, starting with odd- or\n   *   even-number pages (unless `SpreadMode.NONE` is used).\n   *   The constants from {SpreadMode} should be used.\n   */\n  set spreadMode(mode) {\n    if (this._spreadMode === mode) {\n      return; // The Spread mode didn't change.\n    }\n    if (!isValidSpreadMode(mode)) {\n      throw new Error(`Invalid spread mode: ${mode}`);\n    }\n    this._spreadMode = mode;\n    this.eventBus.dispatch(\"spreadmodechanged\", { source: this, mode });\n\n    this._updateSpreadMode(/* pageNumber = */ this._currentPageNumber);\n  }\n\n  _updateSpreadMode(pageNumber = null) {\n    if (!this.pdfDocument) {\n      return;\n    }\n    const viewer = this.viewer,\n      pages = this._pages;\n\n    if (this._scrollMode === ScrollMode.PAGE) {\n      this.#ensurePageViewVisible();\n    } else {\n      // Temporarily remove all the pages from the DOM.\n      viewer.textContent = \"\";\n\n      if (this._spreadMode === SpreadMode.NONE) {\n        for (let i = 0, ii = pages.length; i < ii; ++i) {\n          viewer.appendChild(pages[i].div);\n        }\n      } else {\n        const parity = this._spreadMode - 1;\n        let spread = null;\n        for (let i = 0, ii = pages.length; i < ii; ++i) {\n          if (spread === null) {\n            spread = document.createElement(\"div\");\n            spread.className = \"spread\";\n            viewer.appendChild(spread);\n          } else if (i % 2 === parity) {\n            spread = spread.cloneNode(false);\n            viewer.appendChild(spread);\n          }\n          spread.appendChild(pages[i].div);\n        }\n      }\n    }\n\n    // #859 modified by ngx-extended-pdf-viewer\n    this.hidePagesDependingOnpageViewMode();\n    // end of modification by ngx-extended-pdf-viewer\n\n    if (!pageNumber) {\n      return;\n    }\n    // Non-numeric scale values can be sensitive to the scroll orientation.\n    // Call this before re-scrolling to the current page, to ensure that any\n    // changes in scale don't move the current page.\n    if (this._currentScaleValue && isNaN(this._currentScaleValue)) {\n      this._setScale(this._currentScaleValue, true);\n    }\n    this._setCurrentPageNumber(pageNumber, /* resetCurrentPageView = */ true);\n    this.update();\n  }\n\n  /**\n   * @private\n   */\n  _getPageAdvance(currentPageNumber, previous = false) {\n    switch (this._scrollMode) {\n      case ScrollMode.WRAPPED: {\n        const { views } = this._getVisiblePages(),\n          pageLayout = new Map();\n\n        // Determine the current (visible) page layout.\n        for (const { id, y, percent, widthPercent } of views) {\n          if (percent === 0 || widthPercent < 100) {\n            continue;\n          }\n          let yArray = pageLayout.get(y);\n          if (!yArray) {\n            pageLayout.set(y, (yArray ||= []));\n          }\n          yArray.push(id);\n        }\n        // Find the row of the current page.\n        for (const yArray of pageLayout.values()) {\n          const currentIndex = yArray.indexOf(currentPageNumber);\n          if (currentIndex === -1) {\n            continue;\n          }\n          const numPages = yArray.length;\n          if (numPages === 1) {\n            break;\n          }\n          // Handle documents with varying page sizes.\n          if (previous) {\n            for (let i = currentIndex - 1, ii = 0; i >= ii; i--) {\n              const currentId = yArray[i],\n                expectedId = yArray[i + 1] - 1;\n              if (currentId < expectedId) {\n                return currentPageNumber - expectedId;\n              }\n            }\n          } else {\n            for (let i = currentIndex + 1, ii = numPages; i < ii; i++) {\n              const currentId = yArray[i],\n                expectedId = yArray[i - 1] + 1;\n              if (currentId > expectedId) {\n                return expectedId - currentPageNumber;\n              }\n            }\n          }\n          // The current row is \"complete\", advance to the previous/next one.\n          if (previous) {\n            const firstId = yArray[0];\n            if (firstId < currentPageNumber) {\n              return currentPageNumber - firstId + 1;\n            }\n          } else {\n            const lastId = yArray[numPages - 1];\n            if (lastId > currentPageNumber) {\n              return lastId - currentPageNumber + 1;\n            }\n          }\n          break;\n        }\n        break;\n      }\n      case ScrollMode.HORIZONTAL: {\n        break;\n      }\n      case ScrollMode.PAGE:\n      case ScrollMode.VERTICAL: {\n        if (this._spreadMode === SpreadMode.NONE) {\n          break; // Normal vertical scrolling.\n        }\n        const parity = this._spreadMode - 1;\n\n        if (previous && currentPageNumber % 2 !== parity) {\n          break; // Left-hand side page.\n        } else if (!previous && currentPageNumber % 2 === parity) {\n          break; // Right-hand side page.\n        }\n        const { views } = this._getVisiblePages(),\n          expectedId = previous ? currentPageNumber - 1 : currentPageNumber + 1;\n\n        for (const { id, percent, widthPercent } of views) {\n          if (id !== expectedId) {\n            continue;\n          }\n          if (percent > 0 && widthPercent === 100) {\n            return 2;\n          }\n          break;\n        }\n        break;\n      }\n    }\n    return 1;\n  }\n\n  /**\n   * Go to the next page, taking scroll/spread-modes into account.\n   * @returns {boolean} Whether navigation occured.\n   */\n  nextPage() {\n    const currentPageNumber = this._currentPageNumber,\n      pagesCount = this.pagesCount;\n\n    if (currentPageNumber >= pagesCount) {\n      return false;\n    }\n    const advance =\n      this._getPageAdvance(currentPageNumber, /* previous = */ false) || 1;\n\n    this.currentPageNumber = Math.min(currentPageNumber + advance, pagesCount);\n    return true;\n  }\n\n  /**\n   * Go to the previous page, taking scroll/spread-modes into account.\n   * @returns {boolean} Whether navigation occured.\n   */\n  previousPage() {\n    const currentPageNumber = this._currentPageNumber;\n\n    if (currentPageNumber <= 1) {\n      return false;\n    }\n    const advance =\n      this._getPageAdvance(currentPageNumber, /* previous = */ true) || 1;\n\n    this.currentPageNumber = Math.max(currentPageNumber - advance, 1);\n    return true;\n  }\n\n  /**\n   * Increase the current zoom level one, or more, times.\n   * @param {number} [steps] - Defaults to zooming once.\n   */\n  increaseScale(steps = 1) {\n    let newScale = this._currentScale;\n    // modified by ngx-extended-pdf-viewer #367\n    let maxScale = Number(PDFViewerApplicationOptions.get(\"maxZoom\"));\n    if (!maxScale) {\n      maxScale = MAX_SCALE;\n    }\n    do {\n      newScale = (newScale * DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.ceil(newScale * 10) / 10;\n      newScale = Math.min(maxScale, newScale);\n    } while (--steps > 0 && newScale < maxScale);\n    // end of modification\n    this.currentScaleValue = newScale;\n  }\n\n  /**\n   * Decrease the current zoom level one, or more, times.\n   * @param {number} [steps] - Defaults to zooming once.\n   */\n  decreaseScale(steps = 1) {\n    let newScale = this._currentScale;\n    // modified by ngx-extended-pdf-viewer #367\n    let minScale = Number(PDFViewerApplicationOptions.get(\"minZoom\"));\n    if (!minScale) {\n      minScale = MIN_SCALE;\n    }\n    do {\n      newScale = (newScale / DEFAULT_SCALE_DELTA).toFixed(2);\n      newScale = Math.floor(newScale * 10) / 10;\n      newScale = Math.max(minScale, newScale);\n    } while (--steps > 0 && newScale > minScale);\n    // end of modification\n    this.currentScaleValue = newScale;\n  }\n}\n\nexport { BaseViewer, PagesCountLimit, PDFPageViewBuffer };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../src/display/api\").PDFPageProxy} PDFPageProxy */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../src/display/display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"./interfaces\").IL10n} IL10n */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { AnnotationLayer } from \"pdfjs-lib\";\nimport { NullL10n } from \"./l10n_utils.js\";\n\n/**\n * @typedef {Object} AnnotationLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPageProxy} pdfPage\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {IL10n} l10n - Localization service.\n * @property {boolean} [enableScripting]\n * @property {Promise<boolean>} [hasJSActionsPromise]\n * @property {Promise<Object<string, Array<Object>> | null>}\n *   [fieldObjectsPromise]\n * @property {Object} [mouseState]\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayerBuilder {\n  /**\n   * @param {AnnotationLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    linkService,\n    downloadManager,\n    annotationStorage = null,\n    imageResourcesPath = \"\",\n    renderForms = true,\n    l10n = NullL10n,\n    enableScripting = false,\n    hasJSActionsPromise = null,\n    fieldObjectsPromise = null,\n    mouseState = null,\n    annotationCanvasMap = null,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.imageResourcesPath = imageResourcesPath;\n    this.renderForms = renderForms;\n    this.l10n = l10n;\n    this.annotationStorage = annotationStorage;\n    this.enableScripting = enableScripting;\n    this._hasJSActionsPromise = hasJSActionsPromise;\n    this._fieldObjectsPromise = fieldObjectsPromise;\n    this._mouseState = mouseState;\n    this._annotationCanvasMap = annotationCanvasMap;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   * @returns {Promise<void>} A promise that is resolved when rendering of the\n   *   annotations is complete.\n   */\n  async render(viewport, intent = \"display\") {\n    const [annotations, hasJSActions = false, fieldObjects = null] =\n      await Promise.all([\n        this.pdfPage.getAnnotations({ intent }),\n        this._hasJSActionsPromise,\n        this._fieldObjectsPromise,\n      ]);\n\n    if (this._cancelled || annotations.length === 0) {\n      return;\n    }\n\n    const parameters = {\n      viewport: viewport.clone({ dontFlip: true }),\n      div: this.div,\n      annotations,\n      page: this.pdfPage,\n      imageResourcesPath: this.imageResourcesPath,\n      renderForms: this.renderForms,\n      linkService: this.linkService,\n      downloadManager: this.downloadManager,\n      annotationStorage: this.annotationStorage,\n      enableScripting: this.enableScripting,\n      hasJSActions,\n      fieldObjects,\n      mouseState: this._mouseState,\n      annotationCanvasMap: this._annotationCanvasMap,\n    };\n\n    if (this.div) {\n      // If an annotationLayer already exists, refresh its children's\n      // transformation matrices.\n      AnnotationLayer.update(parameters);\n    } else {\n      // Create an annotation layer div and render the annotations\n      // if there is at least one annotation.\n      this.div = document.createElement(\"div\");\n      this.div.className = \"annotationLayer\";\n      this.pageDiv.appendChild(this.div);\n      parameters.div = this.div;\n\n      AnnotationLayer.render(parameters);\n      this.l10n.translate(this.div);\n    }\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n}\n\nexport { AnnotationLayerBuilder };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\n */\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string:\n    \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string:\n    \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n\n  print_progress_percent: \"{{progress}}%\",\n\n  \"toggle_sidebar.title\": \"Toggle Sidebar\",\n  \"toggle_sidebar_notification2.title\":\n    \"Toggle Sidebar (document contains outline/attachments/layers)\",\n\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n\n  error_version_info: \"PDF.js v{{version}} (build: {{build}})\",\n  error_message: \"Message: {{message}}\",\n  error_stack: \"Stack: {{stack}}\",\n  error_file: \"File: {{file}}\",\n  error_line: \"Line: {{line}}\",\n  rendering_error: \"An error occurred while rendering the page.\",\n\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n\n  loading: \"Loading…\",\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n\n  printing_not_supported:\n    \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled:\n    \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n};\n\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\n\nconst PARTIAL_LANG_CODES = {\n  en: \"en-US\",\n  es: \"es-ES\",\n  fy: \"fy-NL\",\n  ga: \"ga-IE\",\n  gu: \"gu-IN\",\n  hi: \"hi-IN\",\n  hy: \"hy-AM\",\n  nb: \"nb-NO\",\n  ne: \"ne-NP\",\n  nn: \"nn-NO\",\n  pa: \"pa-IN\",\n  pt: \"pt-PT\",\n  sv: \"sv-SE\",\n  zh: \"zh-CN\",\n};\n\n// Try to support \"incompletely\" specified language codes (see issue 13689).\nfunction fixupLangCode(langCode) {\n  return PARTIAL_LANG_CODES[langCode?.toLowerCase()] || langCode;\n}\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\nexport { fixupLangCode, getL10nFallback, NullL10n };\n","/**\n * Class representing a book page\n */\nclass Page {\n    constructor(render, density) {\n        this.state = {\n            angle: 0,\n            area: [],\n            position: { x: 0, y: 0 },\n            hardAngle: 0,\n            hardDrawingAngle: 0,\n        };\n        this.createdDensity = density;\n        this.nowDrawingDensity = this.createdDensity;\n        this.render = render;\n    }\n    /**\n     * Set a constant page density\n     *\n     * @param {PageDensity} density\n     */\n    setDensity(density) {\n        this.createdDensity = density;\n        this.nowDrawingDensity = density;\n    }\n    /**\n     * Set temp page density to next render\n     *\n     * @param {PageDensity}  density\n     */\n    setDrawingDensity(density) {\n        this.nowDrawingDensity = density;\n    }\n    /**\n     * Set page position\n     *\n     * @param {Point} pagePos\n     */\n    setPosition(pagePos) {\n        this.state.position = pagePos;\n    }\n    /**\n     * Set page angle\n     *\n     * @param {number} angle\n     */\n    setAngle(angle) {\n        this.state.angle = angle;\n    }\n    /**\n     * Set page crop area\n     *\n     * @param {Point[]} area\n     */\n    setArea(area) {\n        this.state.area = area;\n    }\n    /**\n     * Rotate angle for hard pages to next render\n     *\n     * @param {number} angle\n     */\n    setHardDrawingAngle(angle) {\n        this.state.hardDrawingAngle = angle;\n    }\n    /**\n     * Rotate angle for hard pages\n     *\n     * @param {number} angle\n     */\n    setHardAngle(angle) {\n        this.state.hardAngle = angle;\n        this.state.hardDrawingAngle = angle;\n    }\n    /**\n     * Set page orientation\n     *\n     * @param {PageOrientation} orientation\n     */\n    setOrientation(orientation) {\n        this.orientation = orientation;\n    }\n    /**\n     * Get temp page density\n     */\n    getDrawingDensity() {\n        return this.nowDrawingDensity;\n    }\n    /**\n     * Get a constant page density\n     */\n    getDensity() {\n        return this.createdDensity;\n    }\n    /**\n     * Get rotate angle for hard pages\n     */\n    getHardAngle() {\n        return this.state.hardAngle;\n    }\n}\n\n/**\n * Class representing a book page as an image on Canvas\n */\nclass ImagePage extends Page {\n    constructor(render, href, density) {\n        super(render, density);\n        this.image = null;\n        this.isLoad = false;\n        this.loadingAngle = 0;\n        this.image = new Image();\n        this.image.src = href;\n    }\n    draw(tempDensity) {\n        const ctx = this.render.getContext();\n        const pagePos = this.render.convertToGlobal(this.state.position);\n        const pageWidth = this.render.getRect().pageWidth;\n        const pageHeight = this.render.getRect().height;\n        ctx.save();\n        ctx.translate(pagePos.x, pagePos.y);\n        ctx.beginPath();\n        for (let p of this.state.area) {\n            if (p !== null) {\n                p = this.render.convertToGlobal(p);\n                ctx.lineTo(p.x - pagePos.x, p.y - pagePos.y);\n            }\n        }\n        ctx.rotate(this.state.angle);\n        ctx.clip();\n        if (!this.isLoad) {\n            this.drawLoader(ctx, { x: 0, y: 0 }, pageWidth, pageHeight);\n        }\n        else {\n            ctx.drawImage(this.image, 0, 0, pageWidth, pageHeight);\n        }\n        ctx.restore();\n    }\n    simpleDraw(orient) {\n        const rect = this.render.getRect();\n        const ctx = this.render.getContext();\n        const pageWidth = rect.pageWidth;\n        const pageHeight = rect.height;\n        const x = orient === 1 /* RIGHT */ ? rect.left + rect.pageWidth : rect.left;\n        const y = rect.top;\n        if (!this.isLoad) {\n            this.drawLoader(ctx, { x, y }, pageWidth, pageHeight);\n        }\n        else {\n            ctx.drawImage(this.image, x, y, pageWidth, pageHeight);\n        }\n    }\n    drawLoader(ctx, shiftPos, pageWidth, pageHeight) {\n        ctx.beginPath();\n        ctx.strokeStyle = 'rgb(200, 200, 200)';\n        ctx.fillStyle = 'rgb(255, 255, 255)';\n        ctx.lineWidth = 1;\n        ctx.rect(shiftPos.x + 1, shiftPos.y + 1, pageWidth - 1, pageHeight - 1);\n        ctx.stroke();\n        ctx.fill();\n        const middlePoint = {\n            x: shiftPos.x + pageWidth / 2,\n            y: shiftPos.y + pageHeight / 2,\n        };\n        ctx.beginPath();\n        ctx.lineWidth = 10;\n        ctx.arc(middlePoint.x, middlePoint.y, 20, this.loadingAngle, (3 * Math.PI) / 2 + this.loadingAngle);\n        ctx.stroke();\n        ctx.closePath();\n        this.loadingAngle += 0.07;\n        if (this.loadingAngle >= 2 * Math.PI) {\n            this.loadingAngle = 0;\n        }\n    }\n    load() {\n        if (!this.isLoad)\n            this.image.onload = () => {\n                this.isLoad = true;\n            };\n    }\n    newTemporaryCopy() {\n        return this;\n    }\n    getTemporaryCopy() {\n        return this;\n    }\n    hideTemporaryCopy() {\n        return;\n    }\n}\n\n/**\n * Сlass representing a collection of pages\n */\nclass PageCollection {\n    constructor(app, render) {\n        /** Pages List */\n        this.pages = [];\n        /** Index of the current page in list */\n        this.currentPageIndex = 0;\n        /** Number of the current spread in book */\n        this.currentSpreadIndex = 0;\n        /**  Two-page spread in landscape mode */\n        this.landscapeSpread = [];\n        /**  One-page spread in portrait mode */\n        this.portraitSpread = [];\n        this.render = render;\n        this.app = app;\n        this.currentPageIndex = 0;\n        this.isShowCover = this.app.getSettings().showCover;\n    }\n    /**\n     * Clear pages list\n     */\n    destroy() {\n        this.pages = [];\n    }\n    /**\n     * Split the book on the two-page spread in landscape mode and one-page spread in portrait mode\n     */\n    createSpread() {\n        this.landscapeSpread = [];\n        this.portraitSpread = [];\n        for (let i = 0; i < this.pages.length; i++) {\n            this.portraitSpread.push([i]); // In portrait mode - (one spread = one page)\n        }\n        let start = 0;\n        if (this.isShowCover) {\n            this.pages[0].setDensity(\"hard\" /* HARD */);\n            this.landscapeSpread.push([start]);\n            start++;\n        }\n        for (let i = start; i < this.pages.length; i += 2) {\n            if (i < this.pages.length - 1)\n                this.landscapeSpread.push([i, i + 1]);\n            else {\n                this.landscapeSpread.push([i]);\n                this.pages[i].setDensity(\"hard\" /* HARD */);\n            }\n        }\n    }\n    /**\n     * Get spread by mode (portrait or landscape)\n     */\n    getSpread() {\n        return this.render.getOrientation() === \"landscape\" /* LANDSCAPE */\n            ? this.landscapeSpread\n            : this.portraitSpread;\n    }\n    /**\n     * Get spread index by page number\n     *\n     * @param {number} pageNum - page index\n     */\n    getSpreadIndexByPage(pageNum) {\n        const spread = this.getSpread();\n        for (let i = 0; i < spread.length; i++)\n            if (pageNum === spread[i][0] || pageNum === spread[i][1])\n                return i;\n        return null;\n    }\n    /**\n     * Get the total number of pages\n     */\n    getPageCount() {\n        return this.pages.length;\n    }\n    /**\n     * Get the pages list\n     */\n    getPages() {\n        return this.pages;\n    }\n    /**\n     * Get page by index\n     *\n     * @param {number} pageIndex\n     */\n    getPage(pageIndex) {\n        if (pageIndex >= 0 && pageIndex < this.pages.length) {\n            return this.pages[pageIndex];\n        }\n        throw new Error('Invalid page number');\n    }\n    /**\n     * Get the next page from the specified\n     *\n     * @param {Page} current\n     */\n    nextBy(current) {\n        const idx = this.pages.indexOf(current);\n        if (idx < this.pages.length - 1)\n            return this.pages[idx + 1];\n        return null;\n    }\n    /**\n     * Get previous page from specified\n     *\n     * @param {Page} current\n     */\n    prevBy(current) {\n        const idx = this.pages.indexOf(current);\n        if (idx > 0)\n            return this.pages[idx - 1];\n        return null;\n    }\n    /**\n     * Get flipping page depending on the direction\n     *\n     * @param {FlipDirection} direction\n     */\n    getFlippingPage(direction) {\n        const current = this.currentSpreadIndex;\n        if (this.render.getOrientation() === \"portrait\" /* PORTRAIT */) {\n            return direction === 0 /* FORWARD */\n                ? this.pages[current].newTemporaryCopy()\n                : this.pages[current - 1];\n        }\n        else {\n            const spread = direction === 0 /* FORWARD */\n                ? this.getSpread()[current + 1]\n                : this.getSpread()[current - 1];\n            if (spread.length === 1)\n                return this.pages[spread[0]];\n            return direction === 0 /* FORWARD */\n                ? this.pages[spread[0]]\n                : this.pages[spread[1]];\n        }\n    }\n    /**\n     * Get Next page at the time of flipping\n     *\n     * @param {FlipDirection}  direction\n     */\n    getBottomPage(direction) {\n        const current = this.currentSpreadIndex;\n        if (this.render.getOrientation() === \"portrait\" /* PORTRAIT */) {\n            return direction === 0 /* FORWARD */\n                ? this.pages[current + 1]\n                : this.pages[current - 1];\n        }\n        else {\n            const spread = direction === 0 /* FORWARD */\n                ? this.getSpread()[current + 1]\n                : this.getSpread()[current - 1];\n            if (spread.length === 1)\n                return this.pages[spread[0]];\n            return direction === 0 /* FORWARD */\n                ? this.pages[spread[1]]\n                : this.pages[spread[0]];\n        }\n    }\n    /**\n     * Show next spread\n     */\n    showNext() {\n        if (this.currentSpreadIndex < this.getSpread().length) {\n            this.currentSpreadIndex++;\n            this.showSpread();\n        }\n    }\n    /**\n     * Show prev spread\n     */\n    showPrev() {\n        if (this.currentSpreadIndex > 0) {\n            this.currentSpreadIndex--;\n            this.showSpread();\n        }\n    }\n    /**\n     * Get the number of the current spread in book\n     */\n    getCurrentPageIndex() {\n        return this.currentPageIndex;\n    }\n    /**\n     * Show specified page\n     * @param {number} pageNum - Page index (from 0s)\n     */\n    show(pageNum = null) {\n        if (pageNum === null)\n            pageNum = this.currentPageIndex;\n        if (pageNum < 0 || pageNum >= this.pages.length)\n            return;\n        const spreadIndex = this.getSpreadIndexByPage(pageNum);\n        if (spreadIndex !== null) {\n            this.currentSpreadIndex = spreadIndex;\n            this.showSpread();\n        }\n    }\n    /**\n     * Index of the current page in list\n     */\n    getCurrentSpreadIndex() {\n        return this.currentSpreadIndex;\n    }\n    /**\n     * Set new spread index as current\n     *\n     * @param {number} newIndex - new spread index\n     */\n    setCurrentSpreadIndex(newIndex) {\n        if (newIndex >= 0 && newIndex < this.getSpread().length) {\n            this.currentSpreadIndex = newIndex;\n        }\n        else {\n            throw new Error('Invalid page');\n        }\n    }\n    /**\n     * Show current spread\n     */\n    showSpread() {\n        const spread = this.getSpread()[this.currentSpreadIndex];\n        if (spread.length === 2) {\n            this.render.setLeftPage(this.pages[spread[0]]);\n            this.render.setRightPage(this.pages[spread[1]]);\n        }\n        else {\n            if (this.render.getOrientation() === \"landscape\" /* LANDSCAPE */) {\n                if (spread[0] === this.pages.length - 1) {\n                    this.render.setLeftPage(this.pages[spread[0]]);\n                    this.render.setRightPage(null);\n                }\n                else {\n                    this.render.setLeftPage(null);\n                    this.render.setRightPage(this.pages[spread[0]]);\n                }\n            }\n            else {\n                this.render.setLeftPage(null);\n                this.render.setRightPage(this.pages[spread[0]]);\n            }\n        }\n        this.currentPageIndex = spread[0];\n        this.app.updatePageIndex(this.currentPageIndex);\n    }\n}\n\n/**\n * Сlass representing a collection of pages as images on the canvas\n */\nclass ImagePageCollection extends PageCollection {\n    constructor(app, render, imagesHref) {\n        super(app, render);\n        this.imagesHref = imagesHref;\n    }\n    load() {\n        for (const href of this.imagesHref) {\n            const page = new ImagePage(this.render, href, \"soft\" /* SOFT */);\n            page.load();\n            this.pages.push(page);\n        }\n        this.createSpread();\n    }\n}\n\n/**\n * A class containing helping mathematical methods\n */\nclass Helper {\n    /**\n     * Get the distance between two points\n     *\n     * @param {Point} point1\n     * @param {Point} point2\n     */\n    static GetDistanceBetweenTwoPoint(point1, point2) {\n        if (point1 === null || point2 === null) {\n            return Infinity;\n        }\n        return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n    }\n    /**\n     * Get the length of the line segment\n     *\n     * @param {Segment} segment\n     */\n    static GetSegmentLength(segment) {\n        return Helper.GetDistanceBetweenTwoPoint(segment[0], segment[1]);\n    }\n    /**\n     * Get the angle between two lines\n     *\n     * @param {Segment} line1\n     * @param {Segment} line2\n     */\n    static GetAngleBetweenTwoLine(line1, line2) {\n        const A1 = line1[0].y - line1[1].y;\n        const A2 = line2[0].y - line2[1].y;\n        const B1 = line1[1].x - line1[0].x;\n        const B2 = line2[1].x - line2[0].x;\n        return Math.acos((A1 * A2 + B1 * B2) / (Math.sqrt(A1 * A1 + B1 * B1) * Math.sqrt(A2 * A2 + B2 * B2)));\n    }\n    /**\n     * Check for a point in a rectangle\n     *\n     * @param {Rect} rect\n     * @param {Point} pos\n     *\n     * @returns {Point} If the point enters the rectangle its coordinates will be returned, otherwise - null\n     */\n    static PointInRect(rect, pos) {\n        if (pos === null) {\n            return null;\n        }\n        if (pos.x >= rect.left &&\n            pos.x <= rect.width + rect.left &&\n            pos.y >= rect.top &&\n            pos.y <= rect.top + rect.height) {\n            return pos;\n        }\n        return null;\n    }\n    /**\n     * Transform point coordinates to a given angle\n     *\n     * @param {Point} transformedPoint - Point to rotate\n     * @param {Point} startPoint - Transformation reference point\n     * @param {number} angle - Rotation angle (in radians)\n     *\n     * @returns {Point} Point coordinates after rotation\n     */\n    static GetRotatedPoint(transformedPoint, startPoint, angle) {\n        return {\n            x: transformedPoint.x * Math.cos(angle) + transformedPoint.y * Math.sin(angle) + startPoint.x,\n            y: transformedPoint.y * Math.cos(angle) - transformedPoint.x * Math.sin(angle) + startPoint.y,\n        };\n    }\n    /**\n     * Limit a point \"linePoint\" to a given circle centered at point \"startPoint\" and a given radius\n     *\n     * @param {Point} startPoint - Circle center\n     * @param {number} radius - Circle radius\n     * @param {Point} limitedPoint - Сhecked point\n     *\n     * @returns {Point} If \"linePoint\" enters the circle, then its coordinates are returned.\n     * Else will be returned the intersection point between the line ([startPoint, linePoint]) and the circle\n     */\n    static LimitPointToCircle(startPoint, radius, limitedPoint) {\n        // If \"linePoint\" enters the circle, do nothing\n        if (Helper.GetDistanceBetweenTwoPoint(startPoint, limitedPoint) <= radius) {\n            return limitedPoint;\n        }\n        const a = startPoint.x;\n        const b = startPoint.y;\n        const n = limitedPoint.x;\n        const m = limitedPoint.y;\n        // Find the intersection between the line at two points: (startPoint and limitedPoint) and the circle.\n        let x = Math.sqrt((Math.pow(radius, 2) * Math.pow(a - n, 2)) / (Math.pow(a - n, 2) + Math.pow(b - m, 2))) + a;\n        if (limitedPoint.x < 0) {\n            x *= -1;\n        }\n        let y = ((x - a) * (b - m)) / (a - n) + b;\n        if (a - n + b === 0) {\n            y = radius;\n        }\n        return { x, y };\n    }\n    /**\n     * Find the intersection of two lines bounded by a rectangle \"rectBorder\"\n     *\n     * @param {Rect} rectBorder\n     * @param {Segment} one\n     * @param {Segment} two\n     *\n     * @returns {Point} The intersection point, or \"null\" if it does not exist, or it lies outside the rectangle \"rectBorder\"\n     */\n    static GetIntersectBetweenTwoSegment(rectBorder, one, two) {\n        return Helper.PointInRect(rectBorder, Helper.GetIntersectBeetwenTwoLine(one, two));\n    }\n    /**\n     * Find the intersection point of two lines\n     *\n     * @param one\n     * @param two\n     *\n     * @returns {Point} The intersection point, or \"null\" if it does not exist\n     * @throws Error if the segments are on the same line\n     */\n    static GetIntersectBeetwenTwoLine(one, two) {\n        const A1 = one[0].y - one[1].y;\n        const A2 = two[0].y - two[1].y;\n        const B1 = one[1].x - one[0].x;\n        const B2 = two[1].x - two[0].x;\n        const C1 = one[0].x * one[1].y - one[1].x * one[0].y;\n        const C2 = two[0].x * two[1].y - two[1].x * two[0].y;\n        const det1 = A1 * C2 - A2 * C1;\n        const det2 = B1 * C2 - B2 * C1;\n        const x = -((C1 * B2 - C2 * B1) / (A1 * B2 - A2 * B1));\n        const y = -((A1 * C2 - A2 * C1) / (A1 * B2 - A2 * B1));\n        if (isFinite(x) && isFinite(y)) {\n            return { x, y };\n        }\n        else {\n            if (Math.abs(det1 - det2) < 0.1)\n                throw new Error('Segment included');\n        }\n        return null;\n    }\n    /**\n     * Get a list of coordinates (step: 1px) between two points\n     *\n     * @param pointOne\n     * @param pointTwo\n     *\n     * @returns {Point[]}\n     */\n    static GetCordsFromTwoPoint(pointOne, pointTwo) {\n        const sizeX = Math.abs(pointOne.x - pointTwo.x);\n        const sizeY = Math.abs(pointOne.y - pointTwo.y);\n        const lengthLine = Math.max(sizeX, sizeY);\n        const result = [pointOne];\n        function getCord(c1, c2, size, length, index) {\n            if (c2 > c1) {\n                return c1 + index * (size / length);\n            }\n            else if (c2 < c1) {\n                return c1 - index * (size / length);\n            }\n            return c1;\n        }\n        for (let i = 1; i <= lengthLine; i += 1) {\n            result.push({\n                x: getCord(pointOne.x, pointTwo.x, sizeX, lengthLine, i),\n                y: getCord(pointOne.y, pointTwo.y, sizeY, lengthLine, i),\n            });\n        }\n        return result;\n    }\n}\n\n/**\n * Class representing a book page as a HTML Element\n */\nclass HTMLPage extends Page {\n    constructor(render, element, density) {\n        super(render, density);\n        this.copiedElement = null;\n        this.temporaryCopy = null;\n        this.isLoad = false;\n        this.element = element;\n        this.element.classList.add('stf__item');\n        this.element.classList.add('--' + density);\n    }\n    newTemporaryCopy() {\n        if (this.nowDrawingDensity === \"hard\" /* HARD */) {\n            return this;\n        }\n        if (this.temporaryCopy === null) {\n            this.copiedElement = this.element.cloneNode(true);\n            this.element.parentElement.appendChild(this.copiedElement);\n            this.temporaryCopy = new HTMLPage(this.render, this.copiedElement, this.nowDrawingDensity);\n        }\n        return this.getTemporaryCopy();\n    }\n    getTemporaryCopy() {\n        return this.temporaryCopy;\n    }\n    hideTemporaryCopy() {\n        if (this.temporaryCopy !== null) {\n            this.copiedElement.remove();\n            this.copiedElement = null;\n            this.temporaryCopy = null;\n        }\n    }\n    draw(tempDensity) {\n        const density = tempDensity ? tempDensity : this.nowDrawingDensity;\n        const pagePos = this.render.convertToGlobal(this.state.position);\n        const pageWidth = this.render.getRect().pageWidth;\n        const pageHeight = this.render.getRect().height;\n        this.element.classList.remove('--simple');\n        // modified by ngx-extended-pdf-viewer (added position: absolute)\n        const commonStyle = `\n            position: absolute;\n            display: block;\n            z-index: ${this.element.style.zIndex};\n            left: 0;\n            top: 0;\n            width: ${pageWidth}px;\n            height: ${pageHeight}px;\n        `;\n        // end of modification by ngx-extended-pdf-viewer\n        density === \"hard\" /* HARD */\n            ? this.drawHard(commonStyle)\n            : this.drawSoft(pagePos, commonStyle);\n    }\n    drawHard(commonStyle = '') {\n        const pos = this.render.getRect().left + this.render.getRect().width / 2;\n        const angle = this.state.hardDrawingAngle;\n        const newStyle = commonStyle +\n            `\n                backface-visibility: hidden;\n                -webkit-backface-visibility: hidden;\n                clip-path: none;\n                -webkit-clip-path: none;\n            ` +\n            (this.orientation === 0 /* LEFT */\n                ? `transform-origin: ${this.render.getRect().pageWidth}px 0;\n                   transform: translate3d(0, 0, 0) rotateY(${angle}deg);`\n                : `transform-origin: 0 0;\n                   transform: translate3d(${pos}px, 0, 0) rotateY(${angle}deg);`);\n        this.element.style.cssText = newStyle;\n    }\n    drawSoft(position, commonStyle = '') {\n        let polygon = 'polygon( ';\n        for (const p of this.state.area) {\n            if (p !== null) {\n                let g = this.render.getDirection() === 1 /* BACK */\n                    ? {\n                        x: -p.x + this.state.position.x,\n                        y: p.y - this.state.position.y,\n                    }\n                    : {\n                        x: p.x - this.state.position.x,\n                        y: p.y - this.state.position.y,\n                    };\n                g = Helper.GetRotatedPoint(g, { x: 0, y: 0 }, this.state.angle);\n                polygon += g.x + 'px ' + g.y + 'px, ';\n            }\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n        const newStyle = commonStyle +\n            `transform-origin: 0 0; clip-path: ${polygon}; -webkit-clip-path: ${polygon};` +\n            (this.render.isSafari() && this.state.angle === 0\n                ? `transform: translate(${position.x}px, ${position.y}px);`\n                : `transform: translate3d(${position.x}px, ${position.y}px, 0) rotate(${this.state.angle}rad);`);\n        this.element.style.cssText = newStyle;\n    }\n    simpleDraw(orient) {\n        const rect = this.render.getRect();\n        const pageWidth = rect.pageWidth;\n        const pageHeight = rect.height;\n        const x = orient === 1 /* RIGHT */ ? rect.left + rect.pageWidth : rect.left;\n        const y = rect.top;\n        this.element.classList.add('--simple');\n        this.element.style.cssText = `\n            position: absolute;\n            display: block;\n            height: ${pageHeight}px;\n            left: ${x}px;\n            top: ${y}px;\n            width: ${pageWidth}px;\n            z-index: ${this.render.getSettings().startZIndex + 1};`;\n    }\n    getElement() {\n        return this.element;\n    }\n    load() {\n        this.isLoad = true;\n    }\n    setOrientation(orientation) {\n        super.setOrientation(orientation);\n        this.element.classList.remove('--left', '--right');\n        this.element.classList.add(orientation === 1 /* RIGHT */ ? '--right' : '--left');\n    }\n    setDrawingDensity(density) {\n        this.element.classList.remove('--soft', '--hard');\n        this.element.classList.add('--' + density);\n        super.setDrawingDensity(density);\n    }\n}\n\n/**\n * Сlass representing a collection of pages as HTML Element\n */\nclass HTMLPageCollection extends PageCollection {\n    constructor(app, render, element, items) {\n        super(app, render);\n        this.element = element;\n        this.pagesElement = items;\n    }\n    load() {\n        for (const pageElement of this.pagesElement) {\n            const page = new HTMLPage(this.render, pageElement, pageElement.dataset['density'] === 'hard' ? \"hard\" /* HARD */ : \"soft\" /* SOFT */);\n            page.load();\n            this.pages.push(page);\n        }\n        this.createSpread();\n    }\n}\n\n/**\n * Class representing mathematical methods for calculating page position (rotation angle, clip area ...)\n */\nclass FlipCalculation {\n    /**\n     * @constructor\n     *\n     * @param {FlipDirection} direction - Flipping direction\n     * @param {FlipCorner} corner - Flipping corner\n     * @param pageWidth - Current page width\n     * @param pageHeight - Current page height\n     */\n    constructor(direction, corner, pageWidth, pageHeight) {\n        this.direction = direction;\n        this.corner = corner;\n        /** The point of intersection of the page with the borders of the book */\n        this.topIntersectPoint = null; // With top border\n        this.sideIntersectPoint = null; // With side border\n        this.bottomIntersectPoint = null; // With bottom border\n        this.pageWidth = parseInt(pageWidth, 10);\n        this.pageHeight = parseInt(pageHeight, 10);\n    }\n    /**\n     * The main calculation method\n     *\n     * @param {Point} localPos - Touch Point Coordinates (relative active page!)\n     *\n     * @returns {boolean} True - if the calculations were successful, false if errors occurred\n     */\n    calc(localPos) {\n        try {\n            // Find: page rotation angle and active corner position\n            this.position = this.calcAngleAndPosition(localPos);\n            // Find the intersection points of the scrolling page and the book\n            this.calculateIntersectPoint(this.position);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Get the crop area for the flipping page\n     *\n     * @returns {Point[]} Polygon page\n     */\n    getFlippingClipArea() {\n        const result = [];\n        let clipBottom = false;\n        result.push(this.rect.topLeft);\n        result.push(this.topIntersectPoint);\n        if (this.sideIntersectPoint === null) {\n            clipBottom = true;\n        }\n        else {\n            result.push(this.sideIntersectPoint);\n            if (this.bottomIntersectPoint === null)\n                clipBottom = false;\n        }\n        result.push(this.bottomIntersectPoint);\n        if (clipBottom || this.corner === \"bottom\" /* BOTTOM */) {\n            result.push(this.rect.bottomLeft);\n        }\n        return result;\n    }\n    /**\n     * Get the crop area for the page that is below the page to be flipped\n     *\n     * @returns {Point[]} Polygon page\n     */\n    getBottomClipArea() {\n        const result = [];\n        result.push(this.topIntersectPoint);\n        if (this.corner === \"top\" /* TOP */) {\n            result.push({ x: this.pageWidth, y: 0 });\n        }\n        else {\n            if (this.topIntersectPoint !== null) {\n                result.push({ x: this.pageWidth, y: 0 });\n            }\n            result.push({ x: this.pageWidth, y: this.pageHeight });\n        }\n        if (this.sideIntersectPoint !== null) {\n            if (Helper.GetDistanceBetweenTwoPoint(this.sideIntersectPoint, this.topIntersectPoint) >= 10)\n                result.push(this.sideIntersectPoint);\n        }\n        else {\n            if (this.corner === \"top\" /* TOP */) {\n                result.push({ x: this.pageWidth, y: this.pageHeight });\n            }\n        }\n        result.push(this.bottomIntersectPoint);\n        result.push(this.topIntersectPoint);\n        return result;\n    }\n    /**\n     * Get page rotation angle\n     */\n    getAngle() {\n        if (this.direction === 0 /* FORWARD */) {\n            return -this.angle;\n        }\n        return this.angle;\n    }\n    /**\n     * Get page area while flipping\n     */\n    getRect() {\n        return this.rect;\n    }\n    /**\n     * Get the position of the active angle when turning\n     */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Get the active corner of the page (which pull)\n     */\n    getActiveCorner() {\n        if (this.direction === 0 /* FORWARD */) {\n            return this.rect.topLeft;\n        }\n        return this.rect.topRight;\n    }\n    /**\n     * Get flipping direction\n     */\n    getDirection() {\n        return this.direction;\n    }\n    /**\n     * Get flipping progress (0-100)\n     */\n    getFlippingProgress() {\n        return Math.abs(((this.position.x - this.pageWidth) / (2 * this.pageWidth)) * 100);\n    }\n    /**\n     * Get flipping corner position (top, bottom)\n     */\n    getCorner() {\n        return this.corner;\n    }\n    /**\n     * Get start position for the page that is below the page to be flipped\n     */\n    getBottomPagePosition() {\n        if (this.direction === 1 /* BACK */) {\n            return { x: this.pageWidth, y: 0 };\n        }\n        return { x: 0, y: 0 };\n    }\n    /**\n     * Get the starting position of the shadow\n     */\n    getShadowStartPoint() {\n        if (this.corner === \"top\" /* TOP */) {\n            return this.topIntersectPoint;\n        }\n        else {\n            if (this.sideIntersectPoint !== null)\n                return this.sideIntersectPoint;\n            return this.topIntersectPoint;\n        }\n    }\n    /**\n     * Get the rotate angle of the shadow\n     */\n    getShadowAngle() {\n        const angle = Helper.GetAngleBetweenTwoLine(this.getSegmentToShadowLine(), [\n            { x: 0, y: 0 },\n            { x: this.pageWidth, y: 0 },\n        ]);\n        if (this.direction === 0 /* FORWARD */) {\n            return angle;\n        }\n        return Math.PI - angle;\n    }\n    calcAngleAndPosition(pos) {\n        let result = pos;\n        this.updateAngleAndGeometry(result);\n        if (this.corner === \"top\" /* TOP */) {\n            result = this.checkPositionAtCenterLine(result, { x: 0, y: 0 }, { x: 0, y: this.pageHeight });\n        }\n        else {\n            result = this.checkPositionAtCenterLine(result, { x: 0, y: this.pageHeight }, { x: 0, y: 0 });\n        }\n        if (Math.abs(result.x - this.pageWidth) < 1 && Math.abs(result.y) < 1) {\n            throw new Error('Point is too small');\n        }\n        return result;\n    }\n    updateAngleAndGeometry(pos) {\n        this.angle = this.calculateAngle(pos);\n        this.rect = this.getPageRect(pos);\n    }\n    calculateAngle(pos) {\n        const left = this.pageWidth - pos.x + 1;\n        const top = this.corner === \"bottom\" /* BOTTOM */ ? this.pageHeight - pos.y : pos.y;\n        let angle = 2 * Math.acos(left / Math.sqrt(top * top + left * left));\n        if (top < 0)\n            angle = -angle;\n        const da = Math.PI - angle;\n        if (!isFinite(angle) || (da >= 0 && da < 0.003))\n            throw new Error('The G point is too small');\n        if (this.corner === \"bottom\" /* BOTTOM */)\n            angle = -angle;\n        return angle;\n    }\n    getPageRect(localPos) {\n        if (this.corner === \"top\" /* TOP */) {\n            return this.getRectFromBasePoint([\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n                { x: 0, y: this.pageHeight },\n                { x: this.pageWidth, y: this.pageHeight },\n            ], localPos);\n        }\n        return this.getRectFromBasePoint([\n            { x: 0, y: -this.pageHeight },\n            { x: this.pageWidth, y: -this.pageHeight },\n            { x: 0, y: 0 },\n            { x: this.pageWidth, y: 0 },\n        ], localPos);\n    }\n    getRectFromBasePoint(points, localPos) {\n        return {\n            topLeft: this.getRotatedPoint(points[0], localPos),\n            topRight: this.getRotatedPoint(points[1], localPos),\n            bottomLeft: this.getRotatedPoint(points[2], localPos),\n            bottomRight: this.getRotatedPoint(points[3], localPos),\n        };\n    }\n    getRotatedPoint(transformedPoint, startPoint) {\n        return {\n            x: transformedPoint.x * Math.cos(this.angle) +\n                transformedPoint.y * Math.sin(this.angle) +\n                startPoint.x,\n            y: transformedPoint.y * Math.cos(this.angle) -\n                transformedPoint.x * Math.sin(this.angle) +\n                startPoint.y,\n        };\n    }\n    calculateIntersectPoint(pos) {\n        const boundRect = {\n            left: -1,\n            top: -1,\n            width: this.pageWidth + 2,\n            height: this.pageHeight + 2,\n        };\n        if (this.corner === \"top\" /* TOP */) {\n            this.topIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [pos, this.rect.topRight], [\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n            ]);\n            this.sideIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [pos, this.rect.bottomLeft], [\n                { x: this.pageWidth, y: 0 },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n            this.bottomIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [this.rect.bottomLeft, this.rect.bottomRight], [\n                { x: 0, y: this.pageHeight },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n        }\n        else {\n            this.topIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [this.rect.topLeft, this.rect.topRight], [\n                { x: 0, y: 0 },\n                { x: this.pageWidth, y: 0 },\n            ]);\n            this.sideIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [pos, this.rect.topLeft], [\n                { x: this.pageWidth, y: 0 },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n            this.bottomIntersectPoint = Helper.GetIntersectBetweenTwoSegment(boundRect, [this.rect.bottomLeft, this.rect.bottomRight], [\n                { x: 0, y: this.pageHeight },\n                { x: this.pageWidth, y: this.pageHeight },\n            ]);\n        }\n    }\n    checkPositionAtCenterLine(checkedPos, centerOne, centerTwo) {\n        let result = checkedPos;\n        const tmp = Helper.LimitPointToCircle(centerOne, this.pageWidth, result);\n        if (result !== tmp) {\n            result = tmp;\n            this.updateAngleAndGeometry(result);\n        }\n        const rad = Math.sqrt(Math.pow(this.pageWidth, 2) + Math.pow(this.pageHeight, 2));\n        let checkPointOne = this.rect.bottomRight;\n        let checkPointTwo = this.rect.topLeft;\n        if (this.corner === \"bottom\" /* BOTTOM */) {\n            checkPointOne = this.rect.topRight;\n            checkPointTwo = this.rect.bottomLeft;\n        }\n        if (checkPointOne.x <= 0) {\n            const bottomPoint = Helper.LimitPointToCircle(centerTwo, rad, checkPointTwo);\n            if (bottomPoint !== result) {\n                result = bottomPoint;\n                this.updateAngleAndGeometry(result);\n            }\n        }\n        return result;\n    }\n    getSegmentToShadowLine() {\n        const first = this.getShadowStartPoint();\n        const second = first !== this.sideIntersectPoint && this.sideIntersectPoint !== null\n            ? this.sideIntersectPoint\n            : this.bottomIntersectPoint;\n        return [first, second];\n    }\n}\n\n/**\n * Class representing the flipping process\n */\nclass Flip {\n    constructor(render, app) {\n        this.flippingPage = null;\n        this.bottomPage = null;\n        this.calc = null;\n        this.state = \"read\" /* READ */;\n        this.render = render;\n        this.app = app;\n    }\n    /**\n     * Called when the page folding (User drags page corner)\n     *\n     * @param globalPos - Touch Point Coordinates (relative window)\n     */\n    fold(globalPos) {\n        this.setState(\"user_fold\" /* USER_FOLD */);\n        // If the process has not started yet\n        if (this.calc === null)\n            this.start(globalPos);\n        this.do(this.render.convertToPage(globalPos));\n    }\n    /**\n     * Page turning with animation\n     *\n     * @param globalPos - Touch Point Coordinates (relative window)\n     */\n    flip(globalPos) {\n        if (this.app.getSettings().disableFlipByClick && !this.isPointOnCorners(globalPos))\n            return;\n        // the flipiing process is already running\n        if (this.calc !== null)\n            this.render.finishAnimation();\n        if (!this.start(globalPos))\n            return;\n        const rect = this.getBoundsRect();\n        this.setState(\"flipping\" /* FLIPPING */);\n        // Margin from top to start flipping\n        const topMargins = rect.height / 10;\n        // Defining animation start points\n        const yStart = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height - topMargins : topMargins;\n        const yDest = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height : 0;\n        // Сalculations for these points\n        this.calc.calc({ x: rect.pageWidth - topMargins, y: yStart });\n        // Run flipping animation\n        this.animateFlippingTo({ x: rect.pageWidth - topMargins, y: yStart }, { x: -rect.pageWidth, y: yDest }, true);\n    }\n    /**\n     * Start the flipping process. Find direction and corner of flipping. Creating an object for calculation.\n     *\n     * @param {Point} globalPos - Touch Point Coordinates (relative window)\n     *\n     * @returns {boolean} True if flipping is possible, false otherwise\n     */\n    start(globalPos) {\n        this.reset();\n        const bookPos = this.render.convertToBook(globalPos);\n        const rect = this.getBoundsRect();\n        // Find the direction of flipping\n        const direction = this.getDirectionByPoint(bookPos);\n        // Find the active corner\n        const flipCorner = bookPos.y >= rect.height / 2 ? \"bottom\" /* BOTTOM */ : \"top\" /* TOP */;\n        if (!this.checkDirection(direction))\n            return false;\n        try {\n            this.flippingPage = this.app.getPageCollection().getFlippingPage(direction);\n            this.bottomPage = this.app.getPageCollection().getBottomPage(direction);\n            // In landscape mode, needed to set the density  of the next page to the same as that of the flipped\n            if (this.render.getOrientation() === \"landscape\" /* LANDSCAPE */) {\n                if (direction === 1 /* BACK */) {\n                    const nextPage = this.app.getPageCollection().nextBy(this.flippingPage);\n                    if (nextPage !== null) {\n                        if (this.flippingPage.getDensity() !== nextPage.getDensity()) {\n                            this.flippingPage.setDrawingDensity(\"hard\" /* HARD */);\n                            nextPage.setDrawingDensity(\"hard\" /* HARD */);\n                        }\n                    }\n                }\n                else {\n                    const prevPage = this.app.getPageCollection().prevBy(this.flippingPage);\n                    if (prevPage !== null) {\n                        if (this.flippingPage.getDensity() !== prevPage.getDensity()) {\n                            this.flippingPage.setDrawingDensity(\"hard\" /* HARD */);\n                            prevPage.setDrawingDensity(\"hard\" /* HARD */);\n                        }\n                    }\n                }\n            }\n            this.render.setDirection(direction);\n            this.calc = new FlipCalculation(direction, flipCorner, rect.pageWidth.toString(10), // fix bug with type casting\n            rect.height.toString(10) // fix bug with type casting\n            );\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Perform calculations for the current page position. Pass data to render object\n     *\n     * @param {Point} pagePos - Touch Point Coordinates (relative active page)\n     */\n    do(pagePos) {\n        if (this.calc === null)\n            return; // Flipping process not started\n        if (this.calc.calc(pagePos)) {\n            // Perform calculations for a specific position\n            const progress = this.calc.getFlippingProgress();\n            this.bottomPage.setArea(this.calc.getBottomClipArea());\n            this.bottomPage.setPosition(this.calc.getBottomPagePosition());\n            this.bottomPage.setAngle(0);\n            this.bottomPage.setHardAngle(0);\n            this.flippingPage.setArea(this.calc.getFlippingClipArea());\n            this.flippingPage.setPosition(this.calc.getActiveCorner());\n            this.flippingPage.setAngle(this.calc.getAngle());\n            if (this.calc.getDirection() === 0 /* FORWARD */) {\n                this.flippingPage.setHardAngle((90 * (200 - progress * 2)) / 100);\n            }\n            else {\n                this.flippingPage.setHardAngle((-90 * (200 - progress * 2)) / 100);\n            }\n            this.render.setPageRect(this.calc.getRect());\n            this.render.setBottomPage(this.bottomPage);\n            this.render.setFlippingPage(this.flippingPage);\n            this.render.setShadowData(this.calc.getShadowStartPoint(), this.calc.getShadowAngle(), progress, this.calc.getDirection());\n        }\n    }\n    /**\n     * Turn to the specified page number (with animation)\n     *\n     * @param {number} page - New page number\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipToPage(page, corner) {\n        const current = this.app.getPageCollection().getCurrentSpreadIndex();\n        const next = this.app.getPageCollection().getSpreadIndexByPage(page);\n        try {\n            if (next > current) {\n                this.app.getPageCollection().setCurrentSpreadIndex(next - 1);\n                this.flipNext(corner);\n            }\n            if (next < current) {\n                this.app.getPageCollection().setCurrentSpreadIndex(next + 1);\n                this.flipPrev(corner);\n            }\n        }\n        catch (e) {\n            //\n        }\n    }\n    /**\n     * Turn to the next page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipNext(corner) {\n        this.flip({\n            x: this.render.getRect().left + this.render.getRect().pageWidth * 2 - 10,\n            y: corner === \"top\" /* TOP */ ? 1 : this.render.getRect().height - 2,\n        });\n    }\n    /**\n     * Turn to the prev page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipPrev(corner) {\n        this.flip({\n            x: 10,\n            y: corner === \"top\" /* TOP */ ? 1 : this.render.getRect().height - 2,\n        });\n    }\n    /**\n     * Called when the user has stopped flipping\n     */\n    stopMove() {\n        if (this.calc === null)\n            return;\n        const pos = this.calc.getPosition();\n        const rect = this.getBoundsRect();\n        const y = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height : 0;\n        if (pos.x <= 0)\n            this.animateFlippingTo(pos, { x: -rect.pageWidth, y }, true);\n        else\n            this.animateFlippingTo(pos, { x: rect.pageWidth, y }, false);\n    }\n    /**\n     * Fold the corners of the book when the mouse pointer is over them.\n     * Called when the mouse pointer is over the book without clicking\n     *\n     * @param globalPos\n     */\n    showCorner(globalPos) {\n        if (!this.checkState(\"read\" /* READ */, \"fold_corner\" /* FOLD_CORNER */))\n            return;\n        const rect = this.getBoundsRect();\n        const pageWidth = rect.pageWidth;\n        if (this.isPointOnCorners(globalPos)) {\n            if (this.calc === null) {\n                if (!this.start(globalPos))\n                    return;\n                this.setState(\"fold_corner\" /* FOLD_CORNER */);\n                this.calc.calc({ x: pageWidth - 1, y: 1 });\n                const fixedCornerSize = 50;\n                const yStart = this.calc.getCorner() === \"bottom\" /* BOTTOM */ ? rect.height - 1 : 1;\n                const yDest = this.calc.getCorner() === \"bottom\" /* BOTTOM */\n                    ? rect.height - fixedCornerSize\n                    : fixedCornerSize;\n                this.animateFlippingTo({ x: pageWidth - 1, y: yStart }, { x: pageWidth - fixedCornerSize, y: yDest }, false, false);\n            }\n            else {\n                this.do(this.render.convertToPage(globalPos));\n            }\n        }\n        else {\n            this.setState(\"read\" /* READ */);\n            this.render.finishAnimation();\n            this.stopMove();\n        }\n    }\n    /**\n     * Starting the flipping animation process\n     *\n     * @param {Point} start - animation start point\n     * @param {Point} dest - animation end point\n     * @param {boolean} isTurned - will the page turn over, or just bring it back\n     * @param {boolean} needReset - reset the flipping process at the end of the animation\n     */\n    animateFlippingTo(start, dest, isTurned, needReset = true) {\n        const points = Helper.GetCordsFromTwoPoint(start, dest);\n        // Create frames\n        const frames = [];\n        for (const p of points)\n            frames.push(() => this.do(p));\n        const duration = this.getAnimationDuration(points.length);\n        this.render.startAnimation(frames, duration, () => {\n            // callback function\n            if (!this.calc)\n                return;\n            if (isTurned) {\n                if (this.calc.getDirection() === 1 /* BACK */)\n                    this.app.turnToPrevPage();\n                else\n                    this.app.turnToNextPage();\n            }\n            if (needReset) {\n                this.render.setBottomPage(null);\n                this.render.setFlippingPage(null);\n                this.render.clearShadow();\n                this.setState(\"read\" /* READ */);\n                this.reset();\n            }\n        });\n    }\n    /**\n     * Get the current calculations object\n     */\n    getCalculation() {\n        return this.calc;\n    }\n    /**\n     * Get current flipping state\n     */\n    getState() {\n        return this.state;\n    }\n    setState(newState) {\n        if (this.state !== newState) {\n            this.app.updateState(newState);\n            this.state = newState;\n        }\n    }\n    getDirectionByPoint(touchPos) {\n        const rect = this.getBoundsRect();\n        if (this.render.getOrientation() === \"portrait\" /* PORTRAIT */) {\n            if (touchPos.x - rect.pageWidth <= rect.width / 5) {\n                return 1 /* BACK */;\n            }\n        }\n        else if (touchPos.x < rect.width / 2) {\n            return 1 /* BACK */;\n        }\n        return 0 /* FORWARD */;\n    }\n    getAnimationDuration(size) {\n        const defaultTime = this.app.getSettings().flippingTime;\n        if (size >= 1000)\n            return defaultTime;\n        return (size / 1000) * defaultTime;\n    }\n    checkDirection(direction) {\n        if (direction === 0 /* FORWARD */)\n            return this.app.getCurrentPageIndex() < this.app.getPageCount() - 1;\n        return this.app.getCurrentPageIndex() >= 1;\n    }\n    reset() {\n        this.calc = null;\n        this.flippingPage = null;\n        this.bottomPage = null;\n    }\n    getBoundsRect() {\n        return this.render.getRect();\n    }\n    checkState(...states) {\n        for (const state of states) {\n            if (this.state === state)\n                return true;\n        }\n        return false;\n    }\n    isPointOnCorners(globalPos) {\n        const rect = this.getBoundsRect();\n        const pageWidth = rect.pageWidth;\n        const operatingDistance = Math.sqrt(Math.pow(pageWidth, 2) + Math.pow(rect.height, 2)) / 5;\n        const bookPos = this.render.convertToBook(globalPos);\n        return (bookPos.x > 0 &&\n            bookPos.y > 0 &&\n            bookPos.x < rect.width &&\n            bookPos.y < rect.height &&\n            (bookPos.x < operatingDistance || bookPos.x > rect.width - operatingDistance) &&\n            (bookPos.y < operatingDistance || bookPos.y > rect.height - operatingDistance));\n    }\n}\n\n/**\n * Class responsible for rendering the book\n */\nclass Render {\n    constructor(app, setting) {\n        /** Left static book page */\n        this.leftPage = null;\n        /** Right static book page */\n        this.rightPage = null;\n        /** Page currently flipping */\n        this.flippingPage = null;\n        /** Next page at the time of flipping */\n        this.bottomPage = null;\n        /** Current flipping direction */\n        this.direction = null;\n        /** Current book orientation */\n        this.orientation = null;\n        /** Сurrent state of the shadows */\n        this.shadow = null;\n        /** Сurrent animation process */\n        this.animation = null;\n        /** Page borders while flipping */\n        this.pageRect = null;\n        /** Current book area */\n        this.boundsRect = null;\n        /** Timer started from start of rendering */\n        this.timer = 0;\n        /**\n         * Safari browser definitions for resolving a bug with a css property clip-area\n         *\n         * https://bugs.webkit.org/show_bug.cgi?id=126207\n         */\n        this.safari = false;\n        this.setting = setting;\n        this.app = app;\n        // detect safari\n        const regex = new RegExp('Version\\\\/[\\\\d\\\\.]+.*Safari/');\n        this.safari = regex.exec(window.navigator.userAgent) !== null;\n    }\n    /**\n     * Executed when requestAnimationFrame is called. Performs the current animation process and call drawFrame()\n     *\n     * @param timer\n     */\n    render(timer) {\n        if (this.animation !== null) {\n            // Find current frame of animation\n            const frameIndex = Math.round((timer - this.animation.startedAt) / this.animation.durationFrame);\n            if (frameIndex < this.animation.frames.length) {\n                this.animation.frames[frameIndex]();\n            }\n            else {\n                this.animation.onAnimateEnd();\n                this.animation = null;\n            }\n          }\n        this.timer = timer; // modified by ngx-extended-pdf-viewer\n        this.drawFrame(); // modified by ngx-extended-pdf-viewer\n    }\n    /**\n     * Running requestAnimationFrame, and rendering process\n     */\n    start() {\n        this.update();\n        const loop = (timer) => {\n          window.ngxZone.runOutsideAngular(() => {\n            this.render(timer);\n            requestAnimationFrame(loop);\n          });\n        };\n        window.ngxZone.runOutsideAngular(() => {\n          requestAnimationFrame(loop);\n        });\n    }\n    /**\n     * Start a new animation process\n     *\n     * @param {FrameAction[]} frames - Frame list\n     * @param {number} duration - total animation duration\n     * @param {AnimationSuccessAction} onAnimateEnd - Animation callback function\n     */\n    startAnimation(frames, duration, onAnimateEnd) {\n        this.finishAnimation(); // finish the previous animation process\n        this.animation = {\n            frames,\n            duration,\n            durationFrame: duration / frames.length,\n            onAnimateEnd,\n            startedAt: this.timer,\n        };\n    }\n    /**\n     * End the current animation process and call the callback\n     */\n    finishAnimation() {\n        if (this.animation !== null) {\n            this.animation.frames[this.animation.frames.length - 1]();\n            if (this.animation.onAnimateEnd !== null) {\n                this.animation.onAnimateEnd();\n            }\n        }\n        this.animation = null;\n    }\n    /**\n     * Recalculate the size of the displayed area, and update the page orientation\n     */\n    update() {\n        this.boundsRect = null;\n        const orientation = this.calculateBoundsRect();\n        if (this.orientation !== orientation) {\n            this.orientation = orientation;\n            this.app.updateOrientation(orientation);\n        }\n    }\n    /**\n     * Calculate the size and position of the book depending on the parent element and configuration parameters\n     */\n    calculateBoundsRect() {\n        let orientation = \"landscape\" /* LANDSCAPE */;\n        const blockWidth = this.getBlockWidth();\n        const middlePoint = {\n            x: blockWidth / 2,\n            y: this.getBlockHeight() / 2,\n        };\n        const ratio = this.setting.width / this.setting.height;\n        let pageWidth = this.setting.width;\n        let pageHeight = this.setting.height;\n        let left = middlePoint.x - pageWidth;\n        if (this.setting.size === \"stretch\" /* STRETCH */) {\n            if (blockWidth < this.setting.minWidth * 2 && this.app.getSettings().usePortrait)\n                orientation = \"portrait\" /* PORTRAIT */;\n            pageWidth =\n                orientation === \"portrait\" /* PORTRAIT */\n                    ? this.getBlockWidth()\n                    : this.getBlockWidth() / 2;\n            if (pageWidth > this.setting.maxWidth)\n                pageWidth = this.setting.maxWidth;\n            pageHeight = pageWidth / ratio;\n            if (pageHeight > this.getBlockHeight()) {\n                pageHeight = this.getBlockHeight();\n                pageWidth = pageHeight * ratio;\n            }\n            left =\n                orientation === \"portrait\" /* PORTRAIT */\n                    ? middlePoint.x - pageWidth / 2 - pageWidth\n                    : middlePoint.x - pageWidth;\n        }\n        else {\n            if (blockWidth < pageWidth * 2) {\n                if (this.app.getSettings().usePortrait) {\n                    orientation = \"portrait\" /* PORTRAIT */;\n                    left = middlePoint.x - pageWidth / 2 - pageWidth;\n                }\n            }\n        }\n        this.boundsRect = {\n            left,\n            top: middlePoint.y - pageHeight / 2,\n            width: pageWidth * 2,\n            height: pageHeight,\n            pageWidth: pageWidth,\n        };\n        return orientation;\n    }\n    /**\n     * Set the current parameters of the drop shadow\n     *\n     * @param {Point} pos - Shadow Position Start Point\n     * @param {number} angle - The angle of the shadows relative to the book\n     * @param {number} progress - Flipping progress in percent (0 - 100)\n     * @param {FlipDirection} direction - Flipping Direction, the direction of the shadow gradients\n     */\n    setShadowData(pos, angle, progress, direction) {\n        if (!this.app.getSettings().drawShadow)\n            return;\n        const maxShadowOpacity = 100 * this.getSettings().maxShadowOpacity;\n        this.shadow = {\n            pos,\n            angle,\n            width: (((this.getRect().pageWidth * 3) / 4) * progress) / 100,\n            opacity: ((100 - progress) * maxShadowOpacity) / 100 / 100,\n            direction,\n            progress: progress * 2,\n        };\n    }\n    /**\n     * Clear shadow\n     */\n    clearShadow() {\n        this.shadow = null;\n    }\n    /**\n     * Get parent block offset width\n     */\n    getBlockWidth() {\n        return this.app.getUI().getDistElement().offsetWidth;\n    }\n    /**\n     * Get parent block offset height\n     */\n    getBlockHeight() {\n        return this.app.getUI().getDistElement().offsetHeight;\n    }\n    /**\n     * Get current flipping direction\n     */\n    getDirection() {\n        return this.direction;\n    }\n    /**\n     * Сurrent size and position of the book\n     */\n    getRect() {\n        if (this.boundsRect === null)\n            this.calculateBoundsRect();\n        return this.boundsRect;\n    }\n    /**\n     * Get configuration object\n     */\n    getSettings() {\n        return this.app.getSettings();\n    }\n    /**\n     * Get current book orientation\n     */\n    getOrientation() {\n        return this.orientation;\n    }\n    /**\n     * Set page area while flipping\n     *\n     * @param direction\n     */\n    setPageRect(pageRect) {\n        this.pageRect = pageRect;\n    }\n    /**\n     * Set flipping direction\n     *\n     * @param direction\n     */\n    setDirection(direction) {\n        this.direction = direction;\n    }\n    /**\n     * Set right static book page\n     *\n     * @param page\n     */\n    setRightPage(page) {\n        if (page !== null)\n            page.setOrientation(1 /* RIGHT */);\n        this.rightPage = page;\n    }\n    /**\n     * Set left static book page\n     * @param page\n     */\n    setLeftPage(page) {\n        if (page !== null)\n            page.setOrientation(0 /* LEFT */);\n        this.leftPage = page;\n    }\n    /**\n     * Set next page at the time of flipping\n     * @param page\n     */\n    setBottomPage(page) {\n        if (page !== null)\n            page.setOrientation(this.direction === 1 /* BACK */ ? 0 /* LEFT */ : 1 /* RIGHT */);\n        this.bottomPage = page;\n    }\n    /**\n     * Set currently flipping page\n     *\n     * @param page\n     */\n    setFlippingPage(page) {\n        if (page !== null)\n            page.setOrientation(this.direction === 0 /* FORWARD */ &&\n                this.orientation !== \"portrait\" /* PORTRAIT */\n                ? 0 /* LEFT */\n                : 1 /* RIGHT */);\n        this.flippingPage = page;\n    }\n    /**\n     * Coordinate conversion function. Window coordinates -> to book coordinates\n     *\n     * @param {Point} pos - Global coordinates relative to the window\n     * @returns {Point} Coordinates relative to the book\n     */\n    convertToBook(pos) {\n        const rect = this.getRect();\n        return {\n            x: pos.x - rect.left,\n            y: pos.y - rect.top,\n        };\n    }\n    isSafari() {\n        return this.safari;\n    }\n    /**\n     * Coordinate conversion function. Window coordinates -> to current coordinates of the working page\n     *\n     * @param {Point} pos - Global coordinates relative to the window\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {Point} Coordinates relative to the work page\n     */\n    convertToPage(pos, direction) {\n        if (!direction)\n            direction = this.direction;\n        const rect = this.getRect();\n        const x = direction === 0 /* FORWARD */\n            ? pos.x - rect.left - rect.width / 2\n            : rect.width / 2 - pos.x + rect.left;\n        return {\n            x,\n            y: pos.y - rect.top,\n        };\n    }\n    /**\n     * Coordinate conversion function. Coordinates relative to the work page -> Window coordinates\n     *\n     * @param {Point} pos - Coordinates relative to the work page\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {Point} Global coordinates relative to the window\n     */\n    convertToGlobal(pos, direction) {\n        if (!direction)\n            direction = this.direction;\n        if (pos == null)\n            return null;\n        const rect = this.getRect();\n        const x = direction === 0 /* FORWARD */\n            ? pos.x + rect.left + rect.width / 2\n            : rect.width / 2 - pos.x + rect.left;\n        return {\n            x,\n            y: pos.y + rect.top,\n        };\n    }\n    /**\n     * Casting the coordinates of the corners of the rectangle in the coordinates relative to the window\n     *\n     * @param {RectPoints} rect - Coordinates of the corners of the rectangle relative to the work page\n     * @param {FlipDirection} direction  - Current flipping direction\n     *\n     * @returns {RectPoints} Coordinates of the corners of the rectangle relative to the window\n     */\n    convertRectToGlobal(rect, direction) {\n        if (!direction)\n            direction = this.direction;\n        return {\n            topLeft: this.convertToGlobal(rect.topLeft, direction),\n            topRight: this.convertToGlobal(rect.topRight, direction),\n            bottomLeft: this.convertToGlobal(rect.bottomLeft, direction),\n            bottomRight: this.convertToGlobal(rect.bottomRight, direction),\n        };\n    }\n}\n\n/**\n * Class responsible for rendering the Canvas book\n */\nclass CanvasRender extends Render {\n    constructor(app, setting, inCanvas) {\n        super(app, setting);\n        this.canvas = inCanvas;\n        this.ctx = inCanvas.getContext('2d');\n    }\n    getContext() {\n        return this.ctx;\n    }\n    reload() {\n        //\n    }\n    drawFrame() {\n        this.clear();\n        if (this.orientation !== \"portrait\" /* PORTRAIT */)\n            if (this.leftPage != null)\n                this.leftPage.simpleDraw(0 /* LEFT */);\n        if (this.rightPage != null)\n            this.rightPage.simpleDraw(1 /* RIGHT */);\n        if (this.bottomPage != null)\n            this.bottomPage.draw();\n        this.drawBookShadow();\n        if (this.flippingPage != null)\n            this.flippingPage.draw();\n        if (this.shadow != null) {\n            this.drawOuterShadow();\n            this.drawInnerShadow();\n        }\n        const rect = this.getRect();\n        if (this.orientation === \"portrait\" /* PORTRAIT */) {\n            this.ctx.beginPath();\n            this.ctx.rect(rect.left + rect.pageWidth, rect.top, rect.width, rect.height);\n            this.ctx.clip();\n        }\n    }\n    drawBookShadow() {\n        const rect = this.getRect();\n        this.ctx.save();\n        this.ctx.beginPath();\n        const shadowSize = rect.width / 20;\n        this.ctx.rect(rect.left, rect.top, rect.width, rect.height);\n        const shadowPos = { x: rect.left + rect.width / 2 - shadowSize / 2, y: 0 };\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n        const outerGradient = this.ctx.createLinearGradient(0, 0, shadowSize, 0);\n        outerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        outerGradient.addColorStop(0.4, 'rgba(0, 0, 0, 0.2)');\n        outerGradient.addColorStop(0.49, 'rgba(0, 0, 0, 0.1)');\n        outerGradient.addColorStop(0.5, 'rgba(0, 0, 0, 0.5)');\n        outerGradient.addColorStop(0.51, 'rgba(0, 0, 0, 0.4)');\n        outerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        this.ctx.clip();\n        this.ctx.fillStyle = outerGradient;\n        this.ctx.fillRect(0, 0, shadowSize, rect.height * 2);\n        this.ctx.restore();\n    }\n    drawOuterShadow() {\n        const rect = this.getRect();\n        this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.rect(rect.left, rect.top, rect.width, rect.height);\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n        this.ctx.rotate(Math.PI + this.shadow.angle + Math.PI / 2);\n        const outerGradient = this.ctx.createLinearGradient(0, 0, this.shadow.width, 0);\n        if (this.shadow.direction === 0 /* FORWARD */) {\n            this.ctx.translate(0, -100);\n            outerGradient.addColorStop(0, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            outerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        }\n        else {\n            this.ctx.translate(-this.shadow.width, -100);\n            outerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n            outerGradient.addColorStop(1, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n        }\n        this.ctx.clip();\n        this.ctx.fillStyle = outerGradient;\n        this.ctx.fillRect(0, 0, this.shadow.width, rect.height * 2);\n        this.ctx.restore();\n    }\n    drawInnerShadow() {\n        const rect = this.getRect();\n        this.ctx.save();\n        this.ctx.beginPath();\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        const pageRect = this.convertRectToGlobal(this.pageRect);\n        this.ctx.moveTo(pageRect.topLeft.x, pageRect.topLeft.y);\n        this.ctx.lineTo(pageRect.topRight.x, pageRect.topRight.y);\n        this.ctx.lineTo(pageRect.bottomRight.x, pageRect.bottomRight.y);\n        this.ctx.lineTo(pageRect.bottomLeft.x, pageRect.bottomLeft.y);\n        this.ctx.translate(shadowPos.x, shadowPos.y);\n        this.ctx.rotate(Math.PI + this.shadow.angle + Math.PI / 2);\n        const isw = (this.shadow.width * 3) / 4;\n        const innerGradient = this.ctx.createLinearGradient(0, 0, isw, 0);\n        if (this.shadow.direction === 0 /* FORWARD */) {\n            this.ctx.translate(-isw, -100);\n            innerGradient.addColorStop(1, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0.9, 'rgba(0, 0, 0, 0.05)');\n            innerGradient.addColorStop(0.7, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        }\n        else {\n            this.ctx.translate(0, -100);\n            innerGradient.addColorStop(0, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(0.1, 'rgba(0, 0, 0, 0.05)');\n            innerGradient.addColorStop(0.3, 'rgba(0, 0, 0, ' + this.shadow.opacity + ')');\n            innerGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n        }\n        this.ctx.clip();\n        this.ctx.fillStyle = innerGradient;\n        this.ctx.fillRect(0, 0, isw, rect.height * 2);\n        this.ctx.restore();\n    }\n    clear() {\n        this.ctx.fillStyle = 'white';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\n/**\n * UI Class, represents work with DOM\n */\nclass UI {\n    /**\n     * @constructor\n     *\n     * @param {HTMLElement} inBlock - Root HTML Element\n     * @param {PageFlip} app - PageFlip instanse\n     * @param {FlipSetting} setting - Configuration object\n     */\n    constructor(inBlock, app, setting) {\n        this.touchPoint = null;\n        this.swipeTimeout = 250;\n        this.onResize = () => {\n            this.update();\n        };\n        this.onMouseDown = (e) => {\n            if (this.checkTarget(e.target)) {\n                const pos = this.getMousePos(e.clientX, e.clientY);\n                this.app.startUserTouch(pos);\n                e.preventDefault();\n            }\n        };\n        this.onTouchStart = (e) => {\n            if (this.checkTarget(e.target)) {\n                if (e.changedTouches.length > 0) {\n                    const t = e.changedTouches[0];\n                    const pos = this.getMousePos(t.clientX, t.clientY);\n                    this.touchPoint = {\n                        point: pos,\n                        time: Date.now(),\n                    };\n                    // part of swipe detection\n                    setTimeout(() => {\n                        if (this.touchPoint !== null) {\n                            this.app.startUserTouch(pos);\n                        }\n                    }, this.swipeTimeout);\n                    if (!this.app.getSettings().mobileScrollSupport)\n                        e.preventDefault();\n                }\n            }\n        };\n        this.onMouseUp = (e) => {\n            const pos = this.getMousePos(e.clientX, e.clientY);\n            this.app.userStop(pos);\n        };\n        this.onMouseMove = (e) => {\n            const pos = this.getMousePos(e.clientX, e.clientY);\n            this.app.userMove(pos, false);\n        };\n        this.onTouchMove = (e) => {\n            if (e.changedTouches.length > 0) {\n                const t = e.changedTouches[0];\n                const pos = this.getMousePos(t.clientX, t.clientY);\n                if (this.app.getSettings().mobileScrollSupport) {\n                    if (this.touchPoint !== null) {\n                        if (Math.abs(this.touchPoint.point.x - pos.x) > 10 ||\n                            this.app.getState() !== \"read\" /* READ */) {\n                            if (e.cancelable)\n                                this.app.userMove(pos, true);\n                        }\n                    }\n                    if (this.app.getState() !== \"read\" /* READ */) {\n                        e.preventDefault();\n                    }\n                }\n                else {\n                    this.app.userMove(pos, true);\n                }\n            }\n        };\n        this.onTouchEnd = (e) => {\n            if (e.changedTouches.length > 0) {\n                const t = e.changedTouches[0];\n                const pos = this.getMousePos(t.clientX, t.clientY);\n                let isSwipe = false;\n                // swipe detection\n                if (this.touchPoint !== null) {\n                    const dx = pos.x - this.touchPoint.point.x;\n                    const distY = Math.abs(pos.y - this.touchPoint.point.y);\n                    if (Math.abs(dx) > this.swipeDistance &&\n                        distY < this.swipeDistance * 2 &&\n                        Date.now() - this.touchPoint.time < this.swipeTimeout) {\n                        if (dx > 0) {\n                            this.app.flipPrev(this.touchPoint.point.y < this.app.getRender().getRect().height / 2\n                                ? \"top\" /* TOP */\n                                : \"bottom\" /* BOTTOM */);\n                        }\n                        else {\n                            this.app.flipNext(this.touchPoint.point.y < this.app.getRender().getRect().height / 2\n                                ? \"top\" /* TOP */\n                                : \"bottom\" /* BOTTOM */);\n                        }\n                        isSwipe = true;\n                    }\n                    this.touchPoint = null;\n                }\n                this.app.userStop(pos, isSwipe);\n            }\n        };\n        this.parentElement = inBlock;\n        inBlock.classList.add('stf__parent');\n        // Add first wrapper\n        inBlock.insertAdjacentHTML('afterbegin', '<div class=\"stf__wrapper\"></div>');\n        this.wrapper = inBlock.querySelector('.stf__wrapper');\n        this.app = app;\n        const k = this.app.getSettings().usePortrait ? 1 : 2;\n        // Setting block sizes based on configuration\n        inBlock.style.minWidth = setting.minWidth * k + 'px';\n        inBlock.style.minHeight = setting.minHeight + 'px';\n        if (setting.size === \"fixed\" /* FIXED */) {\n            inBlock.style.minWidth = setting.width * k + 'px';\n            inBlock.style.minHeight = setting.height + 'px';\n        }\n        if (setting.autoSize) {\n            inBlock.style.width = '100%';\n            inBlock.style.maxWidth = setting.maxWidth * 2 + 'px';\n        }\n        inBlock.style.display = 'block';\n        window.addEventListener('resize', this.onResize, false);\n        this.swipeDistance = setting.swipeDistance;\n    }\n    /**\n     * Destructor. Remove all HTML elements and all event handlers\n     */\n    destroy() {\n        if (this.app.getSettings().useMouseEvents)\n            this.removeHandlers();\n        this.distElement.remove();\n        this.wrapper.remove();\n    }\n    /**\n     * Get parent element for book\n     *\n     * @returns {HTMLElement}\n     */\n    getDistElement() {\n        return this.distElement;\n    }\n    /**\n     * Get wrapper element\n     *\n     * @returns {HTMLElement}\n     */\n    getWrapper() {\n        return this.wrapper;\n    }\n    /**\n     * Updates styles and sizes based on book orientation\n     *\n     * @param {Orientation} orientation - New book orientation\n     */\n    setOrientationStyle(orientation) {\n        this.wrapper.classList.remove('--portrait', '--landscape');\n        if (orientation === \"portrait\" /* PORTRAIT */) {\n            if (this.app.getSettings().autoSize)\n                this.wrapper.style.paddingBottom =\n                    (this.app.getSettings().height / this.app.getSettings().width) * 100 + '%';\n            this.wrapper.classList.add('--portrait');\n        }\n        else {\n            if (this.app.getSettings().autoSize)\n                this.wrapper.style.paddingBottom =\n                    (this.app.getSettings().height / (this.app.getSettings().width * 2)) * 100 +\n                        '%';\n            this.wrapper.classList.add('--landscape');\n        }\n        this.update();\n    }\n    removeHandlers() {\n        window.removeEventListener('resize', this.onResize);\n        this.distElement.removeEventListener('mousedown', this.onMouseDown);\n        this.distElement.removeEventListener('touchstart', this.onTouchStart);\n        window.removeEventListener('mousemove', this.onMouseMove);\n        window.removeEventListener('touchmove', this.onTouchMove);\n        window.removeEventListener('mouseup', this.onMouseUp);\n        window.removeEventListener('touchend', this.onTouchEnd);\n    }\n    setHandlers() {\n        window.addEventListener('resize', this.onResize, false);\n        if (!this.app.getSettings().useMouseEvents)\n            return;\n        this.distElement.addEventListener('mousedown', this.onMouseDown);\n        this.distElement.addEventListener('touchstart', this.onTouchStart);\n        window.addEventListener('mousemove', this.onMouseMove);\n        window.addEventListener('touchmove', this.onTouchMove, {\n            passive: !this.app.getSettings().mobileScrollSupport,\n        });\n        window.addEventListener('mouseup', this.onMouseUp);\n        window.addEventListener('touchend', this.onTouchEnd);\n    }\n    /**\n     * Convert global coordinates to relative book coordinates\n     *\n     * @param x\n     * @param y\n     */\n    getMousePos(x, y) {\n        const rect = this.distElement.getBoundingClientRect();\n        return {\n            x: x - rect.left,\n            y: y - rect.top,\n        };\n    }\n    checkTarget(targer) {\n        if (!this.app.getSettings().clickEventForward)\n            return true;\n        if (['a', 'button'].includes(targer.tagName.toLowerCase())) {\n            return false;\n        }\n        return true;\n    }\n}\n\n/**\n * UI for HTML mode\n */\nclass HTMLUI extends UI {\n    constructor(inBlock, app, setting, items) {\n        super(inBlock, app, setting);\n        // Second wrapper to HTML page\n        this.wrapper.insertAdjacentHTML('afterbegin', '<div class=\"stf__block\"></div>');\n        this.distElement = inBlock.querySelector('.stf__block');\n        this.items = items;\n        for (const item of items) {\n            this.distElement.appendChild(item);\n        }\n        this.setHandlers();\n    }\n    clear() {\n        for (const item of this.items) {\n            this.parentElement.appendChild(item);\n        }\n    }\n    /**\n     * Update page list from HTMLElements\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    updateItems(items) {\n        this.removeHandlers();\n        this.distElement.innerHTML = '';\n        for (const item of items) {\n            this.distElement.appendChild(item);\n        }\n        this.items = items;\n        this.setHandlers();\n    }\n    update() {\n        this.app.getRender().update();\n    }\n}\n\n/**\n * UI for canvas mode\n */\nclass CanvasUI extends UI {\n    constructor(inBlock, app, setting) {\n        super(inBlock, app, setting);\n        this.wrapper.innerHTML = '<canvas class=\"stf__canvas\"></canvas>';\n        this.canvas = inBlock.querySelectorAll('canvas')[0];\n        this.distElement = this.canvas;\n        this.resizeCanvas();\n        this.setHandlers();\n    }\n    resizeCanvas() {\n        const cs = getComputedStyle(this.canvas);\n        const width = parseInt(cs.getPropertyValue('width'), 10);\n        const height = parseInt(cs.getPropertyValue('height'), 10);\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n    /**\n     * Get canvas element\n     */\n    getCanvas() {\n        return this.canvas;\n    }\n    update() {\n        this.resizeCanvas();\n        this.app.getRender().update();\n    }\n}\n\n/**\n * A class implementing a basic event model\n */\nclass EventObject {\n    constructor() {\n        this.events = new Map();\n    }\n    /**\n     * Add new event handler\n     *\n     * @param {string} eventName\n     * @param {EventCallback} callback\n     */\n    on(eventName, callback) {\n        if (!this.events.has(eventName)) {\n            this.events.set(eventName, [callback]);\n        }\n        else {\n            this.events.get(eventName).push(callback);\n        }\n        return this;\n    }\n    /**\n     * Removing all handlers from an event\n     *\n     * @param {string} event - Event name\n     */\n    off(event) {\n        this.events.delete(event);\n    }\n    trigger(eventName, app, data = null) {\n        if (!this.events.has(eventName))\n            return;\n        for (const callback of this.events.get(eventName)) {\n            callback({ data, object: app });\n        }\n    }\n}\n\n/**\n * Class responsible for rendering the HTML book\n */\nclass HTMLRender extends Render {\n    /**\n     * @constructor\n     *\n     * @param {PageFlip} app - PageFlip object\n     * @param {FlipSetting} setting - Configuration object\n     * @param {HTMLElement} element - Parent HTML Element\n     */\n    constructor(app, setting, element) {\n        super(app, setting);\n        this.outerShadow = null;\n        this.innerShadow = null;\n        this.hardShadow = null;\n        this.hardInnerShadow = null;\n        this.element = element;\n        this.createShadows();\n    }\n    createShadows() {\n        this.element.insertAdjacentHTML('beforeend', `<div class=\"stf__outerShadow\"></div>\n             <div class=\"stf__innerShadow\"></div>\n             <div class=\"stf__hardShadow\"></div>\n             <div class=\"stf__hardInnerShadow\"></div>`);\n        this.outerShadow = this.element.querySelector('.stf__outerShadow');\n        this.innerShadow = this.element.querySelector('.stf__innerShadow');\n        this.hardShadow = this.element.querySelector('.stf__hardShadow');\n        this.hardInnerShadow = this.element.querySelector('.stf__hardInnerShadow');\n    }\n    clearShadow() {\n        super.clearShadow();\n        this.outerShadow.style.cssText = 'display: none';\n        this.innerShadow.style.cssText = 'display: none';\n        this.hardShadow.style.cssText = 'display: none';\n        this.hardInnerShadow.style.cssText = 'display: none';\n    }\n    reload() {\n        const testShadow = this.element.querySelector('.stf__outerShadow');\n        if (!testShadow) {\n            this.createShadows();\n        }\n    }\n    /**\n     * Draw inner shadow to the hard page\n     */\n    drawHardInnerShadow() {\n        const rect = this.getRect();\n        const progress = this.shadow.progress > 100 ? 200 - this.shadow.progress : this.shadow.progress;\n        let innerShadowSize = ((100 - progress) * (2.5 * rect.pageWidth)) / 100 + 20;\n        if (innerShadowSize > rect.pageWidth)\n            innerShadowSize = rect.pageWidth;\n        let newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 5).toString(10)};\n            width: ${innerShadowSize}px;\n            height: ${rect.height}px;\n            background: linear-gradient(to right,\n                rgba(0, 0, 0, ${(this.shadow.opacity * progress) / 100}) 5%,\n                rgba(0, 0, 0, 0) 100%);\n            left: ${rect.left + rect.width / 2}px;\n            transform-origin: 0 0;\n        `;\n        newStyle +=\n            (this.getDirection() === 0 /* FORWARD */ && this.shadow.progress > 100) ||\n                (this.getDirection() === 1 /* BACK */ && this.shadow.progress <= 100)\n                ? `transform: translate3d(0, 0, 0);`\n                : `transform: translate3d(0, 0, 0) rotateY(180deg);`;\n        this.hardInnerShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw outer shadow to the hard page\n     */\n    drawHardOuterShadow() {\n        const rect = this.getRect();\n        const progress = this.shadow.progress > 100 ? 200 - this.shadow.progress : this.shadow.progress;\n        let shadowSize = ((100 - progress) * (2.5 * rect.pageWidth)) / 100 + 20;\n        if (shadowSize > rect.pageWidth)\n            shadowSize = rect.pageWidth;\n        let newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 4).toString(10)};\n            width: ${shadowSize}px;\n            height: ${rect.height}px;\n            background: linear-gradient(to left, rgba(0, 0, 0, ${this.shadow.opacity}) 5%, rgba(0, 0, 0, 0) 100%);\n            left: ${rect.left + rect.width / 2}px;\n            transform-origin: 0 0;\n        `;\n        newStyle +=\n            (this.getDirection() === 0 /* FORWARD */ && this.shadow.progress > 100) ||\n                (this.getDirection() === 1 /* BACK */ && this.shadow.progress <= 100)\n                ? `transform: translate3d(0, 0, 0) rotateY(180deg);`\n                : `transform: translate3d(0, 0, 0);`;\n        this.hardShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw inner shadow to the soft page\n     */\n    drawInnerShadow() {\n        const rect = this.getRect();\n        const innerShadowSize = (this.shadow.width * 3) / 4;\n        const shadowTranslate = this.getDirection() === 0 /* FORWARD */ ? innerShadowSize : 0;\n        const shadowDirection = this.getDirection() === 0 /* FORWARD */ ? 'to left' : 'to right';\n        const shadowPos = this.convertToGlobal(this.shadow.pos);\n        const angle = this.shadow.angle + (3 * Math.PI) / 2;\n        const clip = [\n            this.pageRect.topLeft,\n            this.pageRect.topRight,\n            this.pageRect.bottomRight,\n            this.pageRect.bottomLeft,\n        ];\n        let polygon = 'polygon( ';\n        for (const p of clip) {\n            let g = this.getDirection() === 1 /* BACK */\n                ? {\n                    x: -p.x + this.shadow.pos.x,\n                    y: p.y - this.shadow.pos.y,\n                }\n                : {\n                    x: p.x - this.shadow.pos.x,\n                    y: p.y - this.shadow.pos.y,\n                };\n            g = Helper.GetRotatedPoint(g, { x: shadowTranslate, y: 100 }, angle);\n            polygon += g.x + 'px ' + g.y + 'px, ';\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n        const newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 10).toString(10)};\n            width: ${innerShadowSize}px;\n            height: ${rect.height * 2}px;\n            background: linear-gradient(${shadowDirection},\n                rgba(0, 0, 0, ${this.shadow.opacity}) 5%,\n                rgba(0, 0, 0, 0.05) 15%,\n                rgba(0, 0, 0, ${this.shadow.opacity}) 35%,\n                rgba(0, 0, 0, 0) 100%);\n            transform-origin: ${shadowTranslate}px 100px;\n            transform: translate3d(${shadowPos.x - shadowTranslate}px, ${shadowPos.y - 100}px, 0) rotate(${angle}rad);\n            clip-path: ${polygon};\n            -webkit-clip-path: ${polygon};\n        `;\n        this.innerShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw outer shadow to the soft page\n     */\n    drawOuterShadow() {\n        const rect = this.getRect();\n        const shadowPos = this.convertToGlobal({ x: this.shadow.pos.x, y: this.shadow.pos.y });\n        const angle = this.shadow.angle + (3 * Math.PI) / 2;\n        const shadowTranslate = this.getDirection() === 1 /* BACK */ ? this.shadow.width : 0;\n        const shadowDirection = this.getDirection() === 0 /* FORWARD */ ? 'to right' : 'to left';\n        const clip = [\n            { x: 0, y: 0 },\n            { x: rect.pageWidth, y: 0 },\n            { x: rect.pageWidth, y: rect.height },\n            { x: 0, y: rect.height },\n        ];\n        let polygon = 'polygon( ';\n        for (const p of clip) {\n            if (p !== null) {\n                let g = this.getDirection() === 1 /* BACK */\n                    ? {\n                        x: -p.x + this.shadow.pos.x,\n                        y: p.y - this.shadow.pos.y,\n                    }\n                    : {\n                        x: p.x - this.shadow.pos.x,\n                        y: p.y - this.shadow.pos.y,\n                    };\n                g = Helper.GetRotatedPoint(g, { x: shadowTranslate, y: 100 }, angle);\n                polygon += g.x + 'px ' + g.y + 'px, ';\n            }\n        }\n        polygon = polygon.slice(0, -2);\n        polygon += ')';\n        const newStyle = `\n            display: block;\n            z-index: ${(this.getSettings().startZIndex + 10).toString(10)};\n            width: ${this.shadow.width}px;\n            height: ${rect.height * 2}px;\n            background: linear-gradient(${shadowDirection}, rgba(0, 0, 0, ${this.shadow.opacity}), rgba(0, 0, 0, 0));\n            transform-origin: ${shadowTranslate}px 100px;\n            transform: translate3d(${shadowPos.x - shadowTranslate}px, ${shadowPos.y - 100}px, 0) rotate(${angle}rad);\n            clip-path: ${polygon};\n            -webkit-clip-path: ${polygon};\n        `;\n        this.outerShadow.style.cssText = newStyle;\n    }\n    /**\n     * Draw left static page\n     */\n    drawLeftPage() {\n        if (this.orientation === \"portrait\" /* PORTRAIT */ || this.leftPage === null)\n            return;\n        if (this.direction === 1 /* BACK */ &&\n            this.flippingPage !== null &&\n            this.flippingPage.getDrawingDensity() === \"hard\" /* HARD */) {\n            const angle = this.flippingPage.getHardAngle();\n            if (angle < -90) {\n                this.leftPage.getElement().style.zIndex = (this.getSettings().startZIndex + 5).toString(10);\n                this.leftPage.setHardDrawingAngle(180 + this.flippingPage.getHardAngle());\n                this.leftPage.draw(this.flippingPage.getDrawingDensity());\n            } else {\n                this.leftPage.getElement().style.display=\"none\";\n            }                \n        }\n        else {\n            this.leftPage.simpleDraw(0 /* LEFT */);\n        }\n    }\n    /**\n     * Draw right static page\n     */\n    drawRightPage() {\n        if (this.rightPage === null)\n            return;\n        if (this.direction === 0 /* FORWARD */ &&\n            this.flippingPage !== null &&\n            this.flippingPage.getDrawingDensity() === \"hard\" /* HARD */) {\n            const angle = this.flippingPage.getHardAngle();\n            if (angle > 90) {\n                this.rightPage.getElement().style.zIndex = (this.getSettings().startZIndex + 5).toString(10);\n                this.rightPage.setHardDrawingAngle(180 + this.flippingPage.getHardAngle());\n                this.rightPage.draw(this.flippingPage.getDrawingDensity());\n            } else {\n                this.rightPage.getElement().style.display=\"none\";\n            }                \n        }\n        else {\n            this.rightPage.simpleDraw(1 /* RIGHT */);\n        }\n    }\n    /**\n     * Draw the next page at the time of flipping\n     */\n    drawBottomPage() {\n        if (this.bottomPage === null)\n            return;\n        const tempDensity = this.flippingPage != null ? this.flippingPage.getDrawingDensity() : null;\n        if (!(this.orientation === \"portrait\" /* PORTRAIT */ && this.direction === 1 /* BACK */)) {\n            this.bottomPage.getElement().style.zIndex = (this.getSettings().startZIndex + 3).toString(10);\n            this.bottomPage.draw(tempDensity);\n        }\n    }\n    drawFrame() {\n        if (this.flippingPage !== null) {\n            if (this.flippingPage.getHardAngle() === this.lastAngle) {\n                return;\n            }\n            this.lastAngle = this.flippingPage.getHardAngle();\n        } else {\n            this.lastAngle=-1234; // some non-existing value\n            \n        }\n        this.clear();\n        this.drawLeftPage();\n        this.drawRightPage();\n        this.drawBottomPage();\n        if (this.flippingPage != null) {\n            const angle = this.flippingPage.state.hardDrawingAngle;\n            if (angle <= 90) {\n                this.flippingPage.getElement().style.zIndex = (this.getSettings().startZIndex + 5).toString(10);\n                this.flippingPage.draw();\n            } else {\n                this.flippingPage.getElement().style.display=\"none\";\n            }\n        }\n        if (this.shadow != null && this.flippingPage !== null) {\n            if (this.flippingPage.getDrawingDensity() === \"soft\" /* SOFT */) {\n                this.drawOuterShadow();\n                this.drawInnerShadow();\n            }\n            else {\n                this.drawHardOuterShadow();\n                this.drawHardInnerShadow();\n            }\n        }\n    }\n    clear() {\n        for (const page of this.app.getPageCollection().getPages()) {\n            if (page !== this.leftPage &&\n                page !== this.rightPage &&\n                page !== this.flippingPage &&\n                page !== this.bottomPage) {\n              const style = page.getElement().style;\n              if (style.display !== 'none') {\n                style.cssText = 'display: none';\n              }\n            }\n\n            if (page.getTemporaryCopy() !== this.flippingPage) {\n                page.hideTemporaryCopy();\n            }\n        }\n    }\n    update() {\n        super.update();\n        if (this.rightPage !== null) {\n            this.rightPage.setOrientation(1 /* RIGHT */);\n        }\n        if (this.leftPage !== null) {\n            this.leftPage.setOrientation(0 /* LEFT */);\n        }\n    }\n}\n\nclass Settings {\n    constructor() {\n        this._default = {\n            startPage: 0,\n            size: \"fixed\" /* FIXED */,\n            width: 0,\n            height: 0,\n            minWidth: 0,\n            maxWidth: 0,\n            minHeight: 0,\n            maxHeight: 0,\n            drawShadow: true,\n            flippingTime: 1000,\n            usePortrait: true,\n            startZIndex: 0,\n            autoSize: true,\n            maxShadowOpacity: 1,\n            showCover: false,\n            mobileScrollSupport: true,\n            swipeDistance: 30,\n            clickEventForward: true,\n            useMouseEvents: true,\n            showPageCorners: true,\n            disableFlipByClick: false,\n        };\n    }\n    /**\n     * Processing parameters received from the user. Substitution default values\n     *\n     * @param userSetting\n     * @returns {FlipSetting} Сonfiguration object\n     */\n    getSettings(userSetting) {\n        const result = this._default;\n        Object.assign(result, userSetting);\n        if (result.size !== \"stretch\" /* STRETCH */ && result.size !== \"fixed\" /* FIXED */)\n            throw new Error('Invalid size type. Available only \"fixed\" and \"stretch\" value');\n        if (result.width <= 0 || result.height <= 0)\n            throw new Error('Invalid width or height');\n        if (result.flippingTime <= 0)\n            throw new Error('Invalid flipping time');\n        if (result.size === \"stretch\" /* STRETCH */) {\n            if (result.minWidth <= 0)\n                result.minWidth = 100;\n            if (result.maxWidth < result.minWidth)\n                result.maxWidth = 2000;\n            if (result.minHeight <= 0)\n                result.minHeight = 100;\n            if (result.maxHeight < result.minHeight)\n                result.maxHeight = 2000;\n        }\n        else {\n            result.minWidth = result.width;\n            result.maxWidth = result.width;\n            result.minHeight = result.height;\n            result.maxHeight = result.height;\n        }\n        return result;\n    }\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".stf__parent {\\n  position: relative;\\n  display: block;\\n  box-sizing: border-box;\\n  transform: translateZ(0);\\n\\n  -ms-touch-action: pan-y;\\n  touch-action: pan-y;\\n}\\n\\n.sft__wrapper {\\n  position: relative;\\n  width: 100%;\\n  box-sizing: border-box;\\n}\\n\\n.stf__parent canvas {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__block {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n  perspective: 2000px;\\n}\\n\\n.stf__item {\\n  display: none;\\n  position: absolute;\\n  transform-style: preserve-3d;\\n}\\n\\n.stf__outerShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__innerShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__hardShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\\n\\n.stf__hardInnerShadow {\\n  position: absolute;\\n  left: 0;\\n  top: 0;\\n}\";\nstyleInject(css_248z);\n\n/**\n * Class representing a main PageFlip object\n *\n * @extends EventObject\n */\nclass PageFlip extends EventObject {\n    /**\n     * Create a new PageFlip instance\n     *\n     * @constructor\n     * @param {HTMLElement} inBlock - Root HTML Element\n     * @param {Object} setting - Configuration object\n     */\n    constructor(inBlock, setting) {\n        super();\n        this.isUserTouch = false;\n        this.isUserMove = false;\n        this.setting = null;\n        this.pages = null;\n        this.setting = new Settings().getSettings(setting);\n        this.block = inBlock;\n    }\n    /**\n     * Destructor. Remove a root HTML element and all event handlers\n     */\n    destroy() {\n        this.ui.destroy();\n        this.block.remove();\n    }\n    /**\n     * Update the render area. Re-show current page.\n     */\n    update() {\n        this.render.update();\n        this.pages.show();\n    }\n    /**\n     * Load pages from images on the Canvas mode\n     *\n     * @param {string[]} imagesHref - List of paths to images\n     */\n    loadFromImages(imagesHref) {\n        this.ui = new CanvasUI(this.block, this, this.setting);\n        const canvas = this.ui.getCanvas();\n        this.render = new CanvasRender(this, this.setting, canvas);\n        this.flipController = new Flip(this.render, this);\n        this.pages = new ImagePageCollection(this, this.render, imagesHref);\n        this.pages.load();\n        this.render.start();\n        this.pages.show(this.setting.startPage);\n        // safari fix\n        setTimeout(() => {\n            this.ui.update();\n            this.trigger('init', this, {\n                page: this.setting.startPage,\n                mode: this.render.getOrientation(),\n            });\n        }, 1);\n    }\n    /**\n     * Load pages from HTML elements on the HTML mode\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    loadFromHTML(items) {\n        this.ui = new HTMLUI(this.block, this, this.setting, items);\n        this.render = new HTMLRender(this, this.setting, this.ui.getDistElement());\n        this.flipController = new Flip(this.render, this);\n        this.pages = new HTMLPageCollection(this, this.render, this.ui.getDistElement(), items);\n        this.pages.load();\n        this.render.start();\n        this.pages.show(this.setting.startPage);\n        // safari fix\n        setTimeout(() => {\n            this.ui.update();\n            this.trigger('init', this, {\n                page: this.setting.startPage,\n                mode: this.render.getOrientation(),\n            });\n        }, 1);\n    }\n    /**\n     * Update current pages from images\n     *\n     * @param {string[]} imagesHref - List of paths to images\n     */\n    updateFromImages(imagesHref) {\n        const current = this.pages.getCurrentPageIndex();\n        this.pages.destroy();\n        this.pages = new ImagePageCollection(this, this.render, imagesHref);\n        this.pages.load();\n        this.pages.show(current);\n        this.trigger('update', this, {\n            page: current,\n            mode: this.render.getOrientation(),\n        });\n    }\n    /**\n     * Update current pages from HTML\n     *\n     * @param {(NodeListOf<HTMLElement>|HTMLElement[])} items - List of pages as HTML Element\n     */\n    updateFromHtml(items) {\n        const current = this.pages.getCurrentPageIndex();\n        this.pages.destroy();\n        this.pages = new HTMLPageCollection(this, this.render, this.ui.getDistElement(), items);\n        this.pages.load();\n        this.ui.updateItems(items);\n        this.render.reload();\n        this.pages.show(current);\n        this.trigger('update', this, {\n            page: current,\n            mode: this.render.getOrientation(),\n        });\n    }\n    /**\n     * Clear pages from HTML (remove to initinalState)\n     */\n    clear() {\n        this.pages.destroy();\n        this.ui.clear();\n    }\n    /**\n     * Turn to the previous page (without animation)\n     */\n    turnToPrevPage() {\n        this.pages.showPrev();\n    }\n    /**\n     * Turn to the next page (without animation)\n     */\n    turnToNextPage() {\n        this.pages.showNext();\n    }\n    /**\n     * Turn to the specified page number (without animation)\n     *\n     * @param {number} page - New page number\n     */\n    turnToPage(page) {\n        this.pages.show(page);\n    }\n    /**\n     * Turn to the next page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipNext(corner = \"top\" /* TOP */) {\n        this.flipController.flipNext(corner);\n    }\n    /**\n     * Turn to the prev page (with animation)\n     *\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flipPrev(corner = \"top\" /* TOP */) {\n        this.flipController.flipPrev(corner);\n    }\n    /**\n     * Turn to the specified page number (with animation)\n     *\n     * @param {number} page - New page number\n     * @param {FlipCorner} corner - Active page corner when turning\n     */\n    flip(page, corner = \"top\" /* TOP */) {\n        this.flipController.flipToPage(page, corner);\n    }\n    /**\n     * Call a state change event trigger\n     *\n     * @param {FlippingState} newState - New  state of the object\n     */\n    updateState(newState) {\n        this.trigger('changeState', this, newState);\n    }\n    /**\n     * Call a page number change event trigger\n     *\n     * @param {number} newPage - New page Number\n     */\n    updatePageIndex(newPage) {\n        this.trigger('flip', this, newPage);\n    }\n    /**\n     * Call a page orientation change event trigger. Update UI and rendering area\n     *\n     * @param {Orientation} newOrientation - New page orientation (portrait, landscape)\n     */\n    updateOrientation(newOrientation) {\n        this.ui.setOrientationStyle(newOrientation);\n        this.update();\n        this.trigger('changeOrientation', this, newOrientation);\n    }\n    /**\n     * Get the total number of pages in a book\n     *\n     * @returns {number}\n     */\n    getPageCount() {\n        return this.pages.getPageCount();\n    }\n    /**\n     * Get the index of the current page in the page list (starts at 0)\n     *\n     * @returns {number}\n     */\n    getCurrentPageIndex() {\n        return this.pages.getCurrentPageIndex();\n    }\n    /**\n     * Get page from collection by number\n     *\n     * @param {number} pageIndex\n     * @returns {Page}\n     */\n    getPage(pageIndex) {\n        return this.pages.getPage(pageIndex);\n    }\n    /**\n     * Get the current rendering object\n     *\n     * @returns {Render}\n     */\n    getRender() {\n        return this.render;\n    }\n    /**\n     * Get current object responsible for flipping\n     *\n     * @returns {Flip}\n     */\n    getFlipController() {\n        return this.flipController;\n    }\n    /**\n     * Get current page orientation\n     *\n     * @returns {Orientation} Сurrent orientation: portrait or landscape\n     */\n    getOrientation() {\n        return this.render.getOrientation();\n    }\n    /**\n     * Get current book sizes and position\n     *\n     * @returns {PageRect}\n     */\n    getBoundsRect() {\n        return this.render.getRect();\n    }\n    /**\n     * Get configuration object\n     *\n     * @returns {FlipSetting}\n     */\n    getSettings() {\n        return this.setting;\n    }\n    /**\n     * Get UI object\n     *\n     * @returns {UI}\n     */\n    getUI() {\n        return this.ui;\n    }\n    /**\n     * Get current flipping state\n     *\n     * @returns {FlippingState}\n     */\n    getState() {\n        return this.flipController.getState();\n    }\n    /**\n     * Get page collection\n     *\n     * @returns {PageCollection}\n     */\n    getPageCollection() {\n        return this.pages;\n    }\n    /**\n     * Start page turning. Called when a user clicks or touches\n     *\n     * @param {Point} pos - Touch position in coordinates relative to the book\n     */\n    startUserTouch(pos) {\n        this.mousePosition = pos; // Save touch position\n        this.isUserTouch = true;\n        this.isUserMove = false;\n    }\n    /**\n     * Called when a finger / mouse moves\n     *\n     * @param {Point} pos - Touch position in coordinates relative to the book\n     * @param {boolean} isTouch - True if there was a touch event, not a mouse click\n     */\n    userMove(pos, isTouch) {\n        if (!this.isUserTouch && !isTouch && this.setting.showPageCorners) {\n            this.flipController.showCorner(pos); // fold Page Corner\n        }\n        else if (this.isUserTouch) {\n            if (Helper.GetDistanceBetweenTwoPoint(this.mousePosition, pos) > 5) {\n                this.isUserMove = true;\n                this.flipController.fold(pos);\n            }\n        }\n    }\n    /**\n     * Сalled when the user has stopped touching\n     *\n     * @param {Point} pos - Touch end position in coordinates relative to the book\n     * @param {boolean} isSwipe - true if there was a mobile swipe event\n     */\n    userStop(pos, isSwipe = false) {\n        if (this.isUserTouch) {\n            this.isUserTouch = false;\n            if (!isSwipe) {\n                if (!this.isUserMove)\n                    this.flipController.flip(pos);\n                else\n                    this.flipController.stopMove();\n            }\n        }\n    }\n}\n\nexport { PageFlip };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../src/display/display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../src/display/optional_content_config\").OptionalContentConfig} OptionalContentConfig */\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./interfaces\").IL10n} IL10n */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFAnnotationLayerFactory} IPDFAnnotationLayerFactory */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFStructTreeLayerFactory} IPDFStructTreeLayerFactory */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./interfaces\").IPDFTextLayerFactory} IPDFTextLayerFactory */\n/** @typedef {import(\"./interfaces\").IL10n} IPDFXfaLayerFactory */\n/** @typedef {import(\"./interfaces\").IRenderableView} IRenderableView */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./pdf_rendering_queue\").PDFRenderingQueue} PDFRenderingQueue */\n\nimport {\n  AnnotationMode,\n  createPromiseCapability,\n  PixelsPerInch,\n  RenderingCancelledException,\n  SVGGraphics,\n} from \"pdfjs-lib\";\nimport {\n  approximateFraction,\n  DEFAULT_SCALE,\n  getOutputScale,\n  RendererType,\n  RenderingStates,\n  roundToDivide,\n  TextLayerMode,\n} from \"./ui_utils.js\";\nimport { compatibilityParams } from \"./app_options.js\";\nimport { NullL10n } from \"./l10n_utils.js\";\nimport canvasSize from \"canvas-size\";\nimport { warn } from \"../src/shared/util.js\";\n\n/**\n * @typedef {Object} PDFPageViewOptions\n * @property {HTMLDivElement} [container] - The viewer element.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} id - The page unique ID (normally its number).\n * @property {number} scale - The page scale display.\n * @property {PageViewport} defaultViewport - The page viewport.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that is resolved with an {@link OptionalContentConfig} instance.\n *   The default value is `null`.\n * @property {PDFRenderingQueue} renderingQueue - The rendering queue object.\n * @property {IPDFTextLayerFactory} textLayerFactory\n * @property {number} [textLayerMode] - Controls if the text layer used for\n *   selection and searching is created, and if the improved text selection\n *   behaviour is enabled. The constants from {TextLayerMode} should be used.\n *   The default value is `TextLayerMode.ENABLE`.\n * @property {number} [annotationMode] - Controls if the annotation layer is\n *   created, and if interactive form elements or `AnnotationStorage`-data are\n *   being rendered. The constants from {@link AnnotationMode} should be used;\n *   see also {@link RenderParameters} and {@link GetOperatorListParameters}.\n *   The default value is `AnnotationMode.ENABLE_FORMS`.\n * @property {IPDFAnnotationLayerFactory} annotationLayerFactory\n * @property {IPDFXfaLayerFactory} xfaLayerFactory\n * @property {IPDFStructTreeLayerFactory} structTreeLayerFactory\n * @property {Object} [textHighlighterFactory]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {string} renderer - 'canvas' or 'svg'. The default is 'canvas'.\n * @property {boolean} [useOnlyCssZoom] - Enables CSS only zooming. The default\n *   value is `false`.\n * @property {number} [maxCanvasPixels] - The maximum supported canvas size in\n *   total pixels, i.e. width * height. Use -1 for no limit. The default value\n *   is 4096 * 4096 (16 mega-pixels).\n * @property {IL10n} l10n - Localization service.\n */\n\nconst MAX_CANVAS_PIXELS = compatibilityParams.maxCanvasPixels || 16777216;\n\n/**\n * @implements {IRenderableView}\n */\nclass PDFPageView {\n  #annotationMode = AnnotationMode.ENABLE_FORMS;\n\n  /**\n   * @param {PDFPageViewOptions} options\n   */\n  constructor(options) {\n    const container = options.container;\n    const defaultViewport = options.defaultViewport;\n\n    this.id = options.id;\n    this.renderingId = \"page\" + this.id;\n\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this._optionalContentConfigPromise =\n      options.optionalContentConfigPromise || null;\n    this.hasRestrictedScaling = false;\n    this.textLayerMode = options.textLayerMode ?? TextLayerMode.ENABLE;\n    this.#annotationMode =\n      options.annotationMode ?? AnnotationMode.ENABLE_FORMS;\n    this.imageResourcesPath = options.imageResourcesPath || \"\";\n    this.useOnlyCssZoom = options.useOnlyCssZoom || false;\n    this.maxCanvasPixels = options.maxCanvasPixels || MAX_CANVAS_PIXELS;\n\n    this.eventBus = options.eventBus;\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.xfaLayerFactory = options.xfaLayerFactory;\n    this.textHighlighter =\n      options.textHighlighterFactory?.createTextHighlighter(\n        this.id - 1,\n        this.eventBus\n      );\n    this.structTreeLayerFactory = options.structTreeLayerFactory;\n    this.renderer = options.renderer || RendererType.CANVAS;\n    this.l10n = options.l10n || NullL10n;\n\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = RenderingStates.INITIAL;\n    this.resume = null;\n    this._renderError = null;\n    this._isStandalone = !this.renderingQueue?.hasViewer();\n\n    this._annotationCanvasMap = null;\n\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    this.xfaLayer = null;\n    this.structTreeLayer = null;\n\n    const div = document.createElement(\"div\");\n    div.className = \"page\";\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n    div.setAttribute(\"data-page-number\", this.id);\n    div.setAttribute(\"role\", \"region\");\n    this.l10n.get(\"page_landmark\", { page: this.id }).then(msg => {\n      div.setAttribute(\"aria-label\", msg);\n    });\n    this.div = div;\n\n    container?.appendChild(div);\n  }\n\n  setPdfPage(pdfPage) {\n    this.pdfPage = pdfPage;\n    this.pdfPageRotate = pdfPage.rotate;\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    this.viewport = pdfPage.getViewport({\n      scale: this.scale * PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: totalRotation,\n    });\n    this.reset();\n  }\n\n  destroy() {\n    this.reset();\n    if (this.pdfPage) {\n      this.pdfPage.cleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _renderAnnotationLayer() {\n    let error = null;\n    try {\n      await this.annotationLayer.render(this.viewport, \"display\");\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"annotationlayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error,\n      });\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _renderXfaLayer() {\n    let error = null;\n    try {\n      const result = await this.xfaLayer.render(this.viewport, \"display\");\n      if (this.textHighlighter) {\n        this._buildXfaTextContentItems(result.textDivs);\n      }\n    } catch (ex) {\n      error = ex;\n    } finally {\n      this.eventBus.dispatch(\"xfalayerrendered\", {\n        source: this,\n        pageNumber: this.id,\n        error,\n      });\n    }\n  }\n\n  async _buildXfaTextContentItems(textDivs) {\n    const text = await this.pdfPage.getTextContent();\n    const items = [];\n    for (const item of text.items) {\n      items.push(item.str);\n    }\n    this.textHighlighter.setTextMapping(textDivs, items);\n    this.textHighlighter.enable();\n  }\n\n  /**\n   * @private\n   */\n  _resetZoomLayer(removeFromDOM = false) {\n    if (!this.zoomLayer) {\n      return;\n    }\n    const zoomLayerCanvas = this.zoomLayer.firstChild;\n    this.paintedViewportMap.delete(zoomLayerCanvas);\n    // Zeroing the width and height causes Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    zoomLayerCanvas.width = 0;\n    zoomLayerCanvas.height = 0;\n\n    if (removeFromDOM) {\n      // Note: `ChildNode.remove` doesn't throw if the parent node is undefined.\n      this.zoomLayer.remove();\n    }\n    this.zoomLayer = null;\n  }\n\n  reset({\n    keepZoomLayer = false,\n    keepAnnotationLayer = false,\n    keepXfaLayer = false,\n  } = {}) {\n    this.cancelRendering({ keepAnnotationLayer, keepXfaLayer });\n    this.renderingState = RenderingStates.INITIAL;\n\n    const div = this.div;\n    div.style.width = Math.floor(this.viewport.width) + \"px\";\n    div.style.height = Math.floor(this.viewport.height) + \"px\";\n\n    const childNodes = div.childNodes,\n      zoomLayerNode = (keepZoomLayer && this.zoomLayer) || null,\n      annotationLayerNode =\n        (keepAnnotationLayer && this.annotationLayer?.div) || null,\n      xfaLayerNode = (keepXfaLayer && this.xfaLayer?.div) || null;\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const node = childNodes[i];\n      switch (node) {\n        case zoomLayerNode:\n        case annotationLayerNode:\n        case xfaLayerNode:\n          continue;\n      }\n      node.remove();\n    }\n    div.removeAttribute(\"data-loaded\");\n\n    if (annotationLayerNode) {\n      // Hide the annotation layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.annotationLayer.hide();\n    }\n    if (xfaLayerNode) {\n      // Hide the XFA layer until all elements are resized\n      // so they are not displayed on the already resized page.\n      this.xfaLayer.hide();\n    }\n\n    if (!zoomLayerNode) {\n      if (this.canvas) {\n        this.paintedViewportMap.delete(this.canvas);\n        // Zeroing the width and height causes Firefox to release graphics\n        // resources immediately, which can greatly reduce memory consumption.\n        this.canvas.width = 0;\n        this.canvas.height = 0;\n        delete this.canvas;\n      }\n      this._resetZoomLayer();\n    }\n    if (this.svg) {\n      this.paintedViewportMap.delete(this.svg);\n      delete this.svg;\n    }\n\n    this.loadingIconDiv = document.createElement(\"div\");\n    this.loadingIconDiv.className = \"loadingIcon notVisible\";\n    if (this._isStandalone) {\n      this.toggleLoadingIconSpinner(/* viewVisible = */ true);\n    }\n    this.loadingIconDiv.setAttribute(\"role\", \"img\");\n    this.l10n.get(\"loading\").then(msg => {\n      this.loadingIconDiv?.setAttribute(\"aria-label\", msg);\n    });\n    div.appendChild(this.loadingIconDiv);\n  }\n\n  update({ scale = 0, rotation = null, optionalContentConfigPromise = null }) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      typeof arguments[0] !== \"object\"\n    ) {\n      Window['ngxConsole'].error(\n        \"PDFPageView.update called with separate parameters, please use an object instead.\"\n      );\n\n      this.update({\n        scale: arguments[0],\n        rotation: arguments[1],\n        optionalContentConfigPromise: arguments[2],\n      });\n      return;\n    }\n\n    this.scale = scale || this.scale;\n    if (typeof rotation === \"number\") {\n      this.rotation = rotation; // The rotation may be zero.\n    }\n    if (optionalContentConfigPromise instanceof Promise) {\n      this._optionalContentConfigPromise = optionalContentConfigPromise;\n    }\n\n    const totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n    const viewportScale = this.scale * PixelsPerInch.PDF_TO_CSS_UNITS;\n    this.viewport = this.viewport.clone({\n      scale: viewportScale,\n      rotation: totalRotation,\n    });\n\n    if (this._isStandalone) {\n      const { style } = document.documentElement;\n      style.setProperty(\"--zoom-factor\", this.scale);\n      style.setProperty(\"--viewport-scale-factor\", viewportScale);\n    }\n\n    if (this.svg) {\n      this.cssTransform({\n        target: this.svg,\n        redrawAnnotationLayer: true,\n        redrawXfaLayer: true,\n      });\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: true,\n        timestamp: performance.now(),\n        error: this._renderError,\n      });\n      return;\n    }\n\n    let isScalingRestricted = false;\n    if (this.canvas && this.maxCanvasPixels > 0) {\n      const outputScale = this.outputScale;\n      if (\n        ((Math.floor(this.viewport.width) * outputScale.sx) | 0) *\n          ((Math.floor(this.viewport.height) * outputScale.sy) | 0) >\n        this.maxCanvasPixels\n      ) {\n        isScalingRestricted = true;\n      }\n    }\n\n    if (this.canvas) {\n      if (\n        this.useOnlyCssZoom ||\n        (this.hasRestrictedScaling && isScalingRestricted)\n      ) {\n        this.cssTransform({\n          target: this.canvas,\n          redrawAnnotationLayer: true,\n          redrawXfaLayer: true,\n        });\n\n        this.eventBus.dispatch(\"pagerendered\", {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true,\n          timestamp: performance.now(),\n          error: this._renderError,\n        });\n        return;\n      }\n      if (!this.zoomLayer && !this.canvas.hidden) {\n        this.zoomLayer = this.canvas.parentNode;\n        this.zoomLayer.style.position = \"absolute\";\n      }\n    }\n    if (this.zoomLayer) {\n      this.cssTransform({ target: this.zoomLayer.firstChild });\n    }\n    this.reset({\n      keepZoomLayer: true,\n      keepAnnotationLayer: true,\n      keepXfaLayer: true,\n    });\n  }\n\n  /**\n   * PLEASE NOTE: Most likely you want to use the `this.reset()` method,\n   *              rather than calling this one directly.\n   */\n  cancelRendering({ keepAnnotationLayer = false, keepXfaLayer = false } = {}) {\n    if (this.paintTask) {\n      this.paintTask.cancel();\n      this.paintTask = null;\n    }\n    this.resume = null;\n\n    if (this.textLayer) {\n      this.textLayer.cancel();\n      this.textLayer = null;\n    }\n    if (\n      this.annotationLayer &&\n      (!keepAnnotationLayer || !this.annotationLayer.div)\n    ) {\n      this.annotationLayer.cancel();\n      this.annotationLayer = null;\n      this._annotationCanvasMap = null;\n    }\n    if (this.xfaLayer && (!keepXfaLayer || !this.xfaLayer.div)) {\n      this.xfaLayer.cancel();\n      this.xfaLayer = null;\n      this.textHighlighter?.disable();\n    }\n    if (this._onTextLayerRendered) {\n      this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered);\n      this._onTextLayerRendered = null;\n    }\n  }\n\n  cssTransform({\n    target,\n    redrawAnnotationLayer = false,\n    redrawXfaLayer = false,\n  }) {\n    // Scale target (canvas or svg), its wrapper and page container.\n    const width = this.viewport.width;\n    const height = this.viewport.height;\n    const div = this.div;\n    target.style.width =\n      target.parentNode.style.width =\n      div.style.width =\n        Math.floor(width) + \"px\";\n    target.style.height =\n      target.parentNode.style.height =\n      div.style.height =\n        Math.floor(height) + \"px\";\n    // The canvas may have been originally rotated; rotate relative to that.\n    const relativeRotation =\n      this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n    const absRotation = Math.abs(relativeRotation);\n    let scaleX = 1,\n      scaleY = 1;\n    if (absRotation === 90 || absRotation === 270) {\n      // Scale x and y because of the rotation.\n      scaleX = height / width;\n      scaleY = width / height;\n    }\n    target.style.transform = `rotate(${relativeRotation}deg) scale(${scaleX}, ${scaleY})`;\n\n    if (this.textLayer) {\n      // Rotating the text layer is more complicated since the divs inside the\n      // the text layer are rotated.\n      // TODO: This could probably be simplified by drawing the text layer in\n      // one orientation and then rotating overall.\n      const textLayerViewport = this.textLayer.viewport;\n      const textRelativeRotation =\n        this.viewport.rotation - textLayerViewport.rotation;\n      const textAbsRotation = Math.abs(textRelativeRotation);\n      let scale = width / textLayerViewport.width;\n      if (textAbsRotation === 90 || textAbsRotation === 270) {\n        scale = width / textLayerViewport.height;\n      }\n      const textLayerDiv = this.textLayer.textLayerDiv;\n      let transX, transY;\n      switch (textAbsRotation) {\n        case 0:\n          transX = transY = 0;\n          break;\n        case 90:\n          transX = 0;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 180:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = \"-\" + textLayerDiv.style.height;\n          break;\n        case 270:\n          transX = \"-\" + textLayerDiv.style.width;\n          transY = 0;\n          break;\n        default:\n          Window['ngxConsole'].error(\"Bad rotation value.\");\n          break;\n      }\n\n      textLayerDiv.style.transform =\n        `rotate(${textAbsRotation}deg) ` +\n        `scale(${scale}) ` +\n        `translate(${transX}, ${transY})`;\n      textLayerDiv.style.transformOrigin = \"0% 0%\";\n    }\n\n    if (redrawAnnotationLayer && this.annotationLayer) {\n      this._renderAnnotationLayer();\n    }\n    if (redrawXfaLayer && this.xfaLayer) {\n      this._renderXfaLayer();\n    }\n  }\n\n  get width() {\n    return this.viewport.width;\n  }\n\n  get height() {\n    return this.viewport.height;\n  }\n\n  getPagePoint(x, y) {\n    return this.viewport.convertToPdfPoint(x, y);\n  }\n\n  /**\n   * @ignore\n   */\n  toggleLoadingIconSpinner(viewVisible = false) {\n    this.loadingIconDiv?.classList.toggle(\"notVisible\", !viewVisible);\n  }\n\n  draw() {\n    if (this.renderingState !== RenderingStates.INITIAL) {\n      Window['ngxConsole'].error(\"Must be in new state before drawing\");\n      this.reset(); // Ensure that we reset all state to prevent issues.\n    }\n    const { div, pdfPage } = this;\n\n    if (!pdfPage) {\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        this.loadingIconDiv.remove();\n        delete this.loadingIconDiv;\n      }\n      return Promise.reject(new Error(\"pdfPage is not loaded\"));\n    }\n\n    this.renderingState = RenderingStates.RUNNING;\n\n    // Wrap the canvas so that if it has a CSS transform for high DPI the\n    // overflow will be hidden in Firefox.\n    const canvasWrapper = document.createElement(\"div\");\n    canvasWrapper.style.width = div.style.width;\n    canvasWrapper.style.height = div.style.height;\n    canvasWrapper.classList.add(\"canvasWrapper\");\n\n    if (this.annotationLayer?.div) {\n      // The annotation layer needs to stay on top.\n      div.insertBefore(canvasWrapper, this.annotationLayer.div);\n    } else {\n      div.appendChild(canvasWrapper);\n    }\n\n    let textLayer = null;\n    if (this.textLayerMode !== TextLayerMode.DISABLE && this.textLayerFactory) {\n      const textLayerDiv = document.createElement(\"div\");\n      textLayerDiv.className = \"textLayer\";\n      textLayerDiv.style.width = canvasWrapper.style.width;\n      textLayerDiv.style.height = canvasWrapper.style.height;\n      if (this.annotationLayer?.div) {\n        // The annotation layer needs to stay on top.\n        div.insertBefore(textLayerDiv, this.annotationLayer.div);\n      } else {\n        div.appendChild(textLayerDiv);\n      }\n\n      textLayer = this.textLayerFactory.createTextLayerBuilder(\n        textLayerDiv,\n        this.id - 1,\n        this.viewport,\n        this.textLayerMode === TextLayerMode.ENABLE_ENHANCE,\n        this.eventBus,\n        this.textHighlighter\n      );\n    }\n    this.textLayer = textLayer;\n\n    if (\n      this.#annotationMode !== AnnotationMode.DISABLE &&\n      this.annotationLayerFactory\n    ) {\n      this._annotationCanvasMap ||= new Map();\n      this.annotationLayer ||=\n        this.annotationLayerFactory.createAnnotationLayerBuilder(\n          div,\n          pdfPage,\n          /* annotationStorage = */ null,\n          this.imageResourcesPath,\n          this.#annotationMode === AnnotationMode.ENABLE_FORMS,\n          this.l10n,\n          /* enableScripting = */ null,\n          /* hasJSActionsPromise = */ null,\n          /* mouseState = */ null,\n          /* fieldObjectsPromise = */ null,\n          /* annotationCanvasMap */ this._annotationCanvasMap\n        );\n    }\n\n    if (this.xfaLayer?.div) {\n      // The xfa layer needs to stay on top.\n      div.appendChild(this.xfaLayer.div);\n    }\n\n    let renderContinueCallback = null;\n    if (this.renderingQueue) {\n      renderContinueCallback = cont => {\n        if (!this.renderingQueue.isHighestPriority(this)) {\n          this.renderingState = RenderingStates.PAUSED;\n          this.resume = () => {\n            this.renderingState = RenderingStates.RUNNING;\n            cont();\n          };\n          return;\n        }\n        cont();\n      };\n    }\n\n    const finishPaintTask = async (error = null) => {\n      // The paintTask may have been replaced by a new one, so only remove\n      // the reference to the paintTask if it matches the one that is\n      // triggering this callback.\n      if (paintTask === this.paintTask) {\n        this.paintTask = null;\n      }\n\n      if (error instanceof RenderingCancelledException) {\n        this._renderError = null;\n        return;\n      }\n      this._renderError = error;\n\n      this.renderingState = RenderingStates.FINISHED;\n\n      if (this.loadingIconDiv) {\n        this.loadingIconDiv.remove();\n        delete this.loadingIconDiv;\n      }\n      this._resetZoomLayer(/* removeFromDOM = */ true);\n\n      this.eventBus.dispatch(\"pagerendered\", {\n        source: this,\n        pageNumber: this.id,\n        cssTransform: false,\n        timestamp: performance.now(),\n        error: this._renderError,\n      });\n\n      if (error) {\n        throw error;\n      }\n    };\n\n    const paintTask =\n      this.renderer === RendererType.SVG\n        ? this.paintOnSvg(canvasWrapper)\n        : this.paintOnCanvas(canvasWrapper);\n    paintTask.onRenderContinue = renderContinueCallback;\n    this.paintTask = paintTask;\n\n    const resultPromise = paintTask.promise.then(\n      () => {\n        return finishPaintTask(null).then(() => {\n          if (textLayer) {\n            const readableStream = pdfPage.streamTextContent({\n              normalizeWhitespace: true,\n              includeMarkedContent: true,\n            });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n\n          if (this.annotationLayer) {\n            this._renderAnnotationLayer();\n          }\n        });\n      },\n      function (reason) {\n        return finishPaintTask(reason);\n      }\n    );\n\n    if (this.xfaLayerFactory) {\n      if (!this.xfaLayer) {\n        this.xfaLayer = this.xfaLayerFactory.createXfaLayerBuilder(\n          div,\n          pdfPage,\n          /* annotationStorage = */ null\n        );\n      }\n      this._renderXfaLayer();\n    }\n\n    // The structure tree is currently only supported when the text layer is\n    // enabled and a canvas is used for rendering.\n    if (this.structTreeLayerFactory && this.textLayer && this.canvas) {\n      // The structure tree must be generated after the text layer for the\n      // aria-owns to work.\n      this._onTextLayerRendered = event => {\n        if (event.pageNumber !== this.id) {\n          return;\n        }\n        this.eventBus._off(\"textlayerrendered\", this._onTextLayerRendered);\n        this._onTextLayerRendered = null;\n\n        if (!this.canvas) {\n          return; // The canvas was removed, prevent errors below.\n        }\n        this.pdfPage.getStructTree().then(tree => {\n          if (!tree) {\n            return;\n          }\n          if (!this.canvas) {\n            return; // The canvas was removed, prevent errors below.\n          }\n          const treeDom = this.structTreeLayer.render(tree);\n          treeDom.classList.add(\"structTree\");\n          this.canvas.appendChild(treeDom);\n        });\n      };\n      this.eventBus._on(\"textlayerrendered\", this._onTextLayerRendered);\n      this.structTreeLayer =\n        this.structTreeLayerFactory.createStructTreeLayerBuilder(pdfPage);\n    }\n\n    div.setAttribute(\"data-loaded\", true);\n\n    this.eventBus.dispatch(\"pagerender\", {\n      source: this,\n      pageNumber: this.id,\n    });\n    return resultPromise;\n  }\n\n  paintOnCanvas(canvasWrapper) {\n    const renderCapability = createPromiseCapability();\n    const result = {\n      promise: renderCapability.promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        renderTask.cancel();\n      },\n    };\n\n    const viewport = this.viewport;\n    const canvas = document.createElement(\"canvas\");\n\n    // Keep the canvas hidden until the first draw callback, or until drawing\n    // is complete when `!this.renderingQueue`, to prevent black flickering.\n    canvas.hidden = true;\n    let isCanvasHidden = true;\n    const showCanvas = function () {\n      if (isCanvasHidden) {\n        canvas.hidden = false;\n        isCanvasHidden = false;\n      }\n    };\n\n    canvasWrapper.appendChild(canvas);\n    this.canvas = canvas;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n\n    const ctx = canvas.getContext(\"2d\", { alpha: false });\n    const outputScale = getOutputScale(ctx);\n    this.outputScale = outputScale;\n\n    if (this.useOnlyCssZoom) {\n      const actualSizeViewport = viewport.clone({\n        scale: PixelsPerInch.PDF_TO_CSS_UNITS,\n      });\n      // Use a scale that makes the canvas have the originally intended size\n      // of the page.\n      outputScale.sx *= actualSizeViewport.width / viewport.width;\n      outputScale.sy *= actualSizeViewport.height / viewport.height;\n      outputScale.scaled = true;\n    }\n\n    if (this.maxCanvasPixels > 0) {\n      const pixelsInViewport = viewport.width * viewport.height;\n      const maxScale = Math.sqrt(this.maxCanvasPixels / pixelsInViewport);\n      if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n        outputScale.sx = maxScale;\n        outputScale.sy = maxScale;\n        outputScale.scaled = true;\n        this.hasRestrictedScaling = true;\n      } else {\n        this.hasRestrictedScaling = false;\n      }\n    }\n\n    const sfx = approximateFraction(outputScale.sx);\n    const sfy = approximateFraction(outputScale.sy);\n\n    // modified by ngx-extended-pdf-viewer #387\n    const width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    const height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    if (width >= 4096 || height >= 4096) {\n      if ((!!this.maxWidth) || (!canvasSize.test({ width, height }))) {\n        const max = this.determineMaxDimensions();\n        let divisor = Math.max(width / max, height / max);\n        const newScale = Math.floor(100 * this.scale / divisor) / 100; // round to integer percentages\n        divisor = this.scale / newScale;\n        this.scale = newScale;\n\n        const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n        PDFViewerApplicationOptions.set('maxZoom', newScale);\n\n        PDFViewerApplication.pdfViewer.currentScaleValue = this.scale;\n        viewport.width /= divisor;\n        viewport.height /= divisor;\n        warn(\"Page \" + this.id + \": Reduced the maximum zoom to \" + newScale + \" because the browser can't render larger canvases.\");\n      }\n    }\n    // end of modification\n    canvas.width = roundToDivide(viewport.width * outputScale.sx, sfx[0]);\n    canvas.height = roundToDivide(viewport.height * outputScale.sy, sfy[0]);\n    canvas.style.width = roundToDivide(viewport.width, sfx[1]) + \"px\";\n    canvas.style.height = roundToDivide(viewport.height, sfy[1]) + \"px\";\n\n    // Add the viewport so it's known what it was originally drawn with.\n    this.paintedViewportMap.set(canvas, viewport);\n\n    // Rendering area\n    const transform = !outputScale.scaled\n      ? null\n      : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n    // #916 modified by ngx-extended-pdf-viewer\n    let background = PDFViewerApplicationOptions.get(\"pdfBackgroundColor\");\n    if (typeof background === \"function\") {\n      const backgroundColor = background({ pageNumber: this.id, pageLabel: this.pageLabel });\n      if (backgroundColor) {\n        background = backgroundColor;\n      }\n    }\n    let backgroundColorToReplace = background ? PDFViewerApplicationOptions.get(\"pdfBackgroundColorToReplace\") : null;\n    if (typeof backgroundColorToReplace === \"function\") {\n      const colorToReplace = backgroundColorToReplace({ pageNumber: this.id, pageLabel: this.pageLabel });\n      if (colorToReplace) {\n        backgroundColorToReplace = colorToReplace;\n      }\n    }\n    // #916 end of modification by ngx-extended-pdf-viewer\n\n    const renderContext = {\n      canvasContext: ctx,\n      transform,\n      viewport: this.viewport,\n      annotationMode: this.#annotationMode,\n      optionalContentConfigPromise: this._optionalContentConfigPromise,\n      background,\n      backgroundColorToReplace,\n      annotationCanvasMap: this._annotationCanvasMap,\n    };\n    const renderTask = this.pdfPage.render(renderContext);\n    renderTask.onContinue = function (cont) {\n      showCanvas();\n      if (result.onRenderContinue) {\n        result.onRenderContinue(cont);\n      } else {\n        cont();\n      }\n    };\n\n    renderTask.promise.then(\n      function () {\n        showCanvas();\n        renderCapability.resolve();\n      },\n      function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      }\n    );\n    return result;\n  }\n\n  paintOnSvg(wrapper) {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"MOZCENTRAL || CHROME\")\n    ) {\n      // Return a mock object, to prevent errors such as e.g.\n      // \"TypeError: paintTask.promise is undefined\".\n      return {\n        promise: Promise.reject(new Error(\"SVG rendering is not supported.\")),\n        onRenderContinue(cont) {},\n        cancel() {},\n      };\n    }\n\n    let cancelled = false;\n    const ensureNotCancelled = () => {\n      if (cancelled) {\n        throw new RenderingCancelledException(\n          `Rendering cancelled, page ${this.id}`,\n          \"svg\"\n        );\n      }\n    };\n\n    const pdfPage = this.pdfPage;\n    const actualSizeViewport = this.viewport.clone({\n      scale: PixelsPerInch.PDF_TO_CSS_UNITS,\n    });\n    const promise = pdfPage\n      .getOperatorList({\n        annotationMode: this.#annotationMode,\n      })\n      .then(opList => {\n        ensureNotCancelled();\n        const svgGfx = new SVGGraphics(\n          pdfPage.commonObjs,\n          pdfPage.objs,\n          /* forceDataSchema = */ compatibilityParams.disableCreateObjectURL\n        );\n        return svgGfx.getSVG(opList, actualSizeViewport).then(svg => {\n          ensureNotCancelled();\n          this.svg = svg;\n          this.paintedViewportMap.set(svg, actualSizeViewport);\n\n          svg.style.width = wrapper.style.width;\n          svg.style.height = wrapper.style.height;\n          this.renderingState = RenderingStates.FINISHED;\n          wrapper.appendChild(svg);\n        });\n      });\n\n    return {\n      promise,\n      onRenderContinue(cont) {\n        cont();\n      },\n      cancel() {\n        cancelled = true;\n      },\n    };\n  }\n\n  /**\n   * @param {string|null} label\n   */\n  setPageLabel(label) {\n    this.pageLabel = typeof label === \"string\" ? label : null;\n\n    if (this.pageLabel !== null) {\n      this.div.setAttribute(\"data-page-label\", this.pageLabel);\n    } else {\n      this.div.removeAttribute(\"data-page-label\");\n    }\n  }\n\n  // modified (added) by ngx-extended-pdf-viewer #387\n  determineMaxDimensions() {\n    if (this.maxWidth) {\n      return this.maxWidth;\n    }\n    const checklist = [4096, // iOS\n      8192, // IE 9-10\n      10836, // Android\n      11180, // Firefox\n      11402, // Android,\n      14188,\n      16384\n    ];\n    for (let width of checklist) {\n      if (!canvasSize.test({width: width+1, height: width+1})) {\n        this.maxWidth = width;\n        return this.maxWidth;\n      }\n    }\n    return 16384;\n  }\n  // end of modification\n}\n\nexport { PDFPageView };\n","/*!\n * canvas-size\n * v1.2.5\n * https://github.com/jhildenbiddle/canvas-size\n * (c) 2015-2021 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter((function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            }));\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\n\nfunction _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        if (i % 2) {\n            ownKeys(Object(source), true).forEach((function(key) {\n                _defineProperty(target, key, source[key]);\n            }));\n        } else if (Object.getOwnPropertyDescriptors) {\n            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n        } else {\n            ownKeys(Object(source)).forEach((function(key) {\n                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n            }));\n        }\n    }\n    return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for (i = 0; i < sourceSymbolKeys.length; i++) {\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n}\n\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction canvasTest(settings) {\n    var size = settings.sizes.shift();\n    var width = Math.max(Math.ceil(size[0]), 1);\n    var height = Math.max(Math.ceil(size[1]), 1);\n    var fill = [ width - 1, height - 1, 1, 1 ];\n    var job = Date.now();\n    var isWorker = typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope;\n    var cropCvs, testCvs;\n    if (isWorker) {\n        cropCvs = new OffscreenCanvas(1, 1);\n        testCvs = new OffscreenCanvas(width, height);\n    } else {\n        cropCvs = document.createElement(\"canvas\");\n        cropCvs.width = 1;\n        cropCvs.height = 1;\n        testCvs = document.createElement(\"canvas\");\n        testCvs.width = width;\n        testCvs.height = height;\n    }\n    var cropCtx = cropCvs.getContext(\"2d\");\n    var testCtx = testCvs.getContext(\"2d\");\n    if (testCtx) {\n        testCtx.fillRect.apply(testCtx, fill);\n        cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\n    }\n    var isTestPass = cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\n    var benchmark = Date.now() - job;\n    if (isWorker) {\n        postMessage({\n            width: width,\n            height: height,\n            benchmark: benchmark,\n            isTestPass: isTestPass\n        });\n        if (!isTestPass && settings.sizes.length) {\n            canvasTest(settings);\n        }\n    } else if (isTestPass) {\n        settings.onSuccess(width, height, benchmark);\n    } else {\n        settings.onError(width, height, benchmark);\n        if (settings.sizes.length) {\n            canvasTest(settings);\n        }\n    }\n    return isTestPass;\n}\n\nvar testSizes = {\n    area: [ 16384, 14188, 11402, 11180, 10836, 8192, 4096, 1 ],\n    height: [ 8388607, 65535, 32767, 16384, 8192, 4096, 1 ],\n    width: [ 4194303, 65535, 32767, 16384, 8192, 4096, 1 ]\n};\n\nvar _excluded = [ \"onError\", \"onSuccess\" ];\n\nvar defaults = {\n    max: null,\n    min: 1,\n    sizes: [],\n    step: 1024,\n    usePromise: false,\n    useWorker: false,\n    onError: Function.prototype,\n    onSuccess: Function.prototype\n};\n\nvar workerJobs = {};\n\nfunction createSizesArray(settings) {\n    var isArea = settings.width === settings.height;\n    var isWidth = settings.height === 1;\n    var isHeight = settings.width === 1;\n    var sizes = [];\n    if (!settings.width || !settings.height) {\n        settings.sizes.forEach((function(testSize) {\n            var width = isArea || isWidth ? testSize : 1;\n            var height = isArea || isHeight ? testSize : 1;\n            sizes.push([ width, height ]);\n        }));\n    } else {\n        var testMin = settings.min || defaults.min;\n        var testStep = settings.step || defaults.step;\n        var testSize = Math.max(settings.width, settings.height);\n        while (testSize >= testMin) {\n            var width = isArea || isWidth ? testSize : 1;\n            var height = isArea || isHeight ? testSize : 1;\n            sizes.push([ width, height ]);\n            testSize -= testStep;\n        }\n    }\n    return sizes;\n}\n\nfunction handleMethod(settings) {\n    var hasCanvasSupport = window && \"HTMLCanvasElement\" in window;\n    var hasOffscreenCanvasSupport = window && \"OffscreenCanvas\" in window;\n    var jobID = Date.now();\n    var _onError = settings.onError, _onSuccess = settings.onSuccess, settingsWithoutCallbacks = _objectWithoutProperties(settings, _excluded);\n    var worker = null;\n    if (!hasCanvasSupport) {\n        return false;\n    }\n    if (settings.useWorker && hasOffscreenCanvasSupport) {\n        var js = \"\\n            var canvasTest = \".concat(canvasTest.toString(), \";\\n            onmessage = function(e) {\\n                canvasTest(e.data);\\n            };\\n        \");\n        var blob = new Blob([ js ], {\n            type: \"application/javascript\"\n        });\n        var blobURL = URL.createObjectURL(blob);\n        worker = new Worker(blobURL);\n        URL.revokeObjectURL(blobURL);\n        worker.onmessage = function(e) {\n            var _e$data = e.data, width = _e$data.width, height = _e$data.height, benchmark = _e$data.benchmark, isTestPass = _e$data.isTestPass;\n            if (isTestPass) {\n                workerJobs[jobID].onSuccess(width, height, benchmark);\n                delete workerJobs[jobID];\n            } else {\n                workerJobs[jobID].onError(width, height, benchmark);\n            }\n        };\n    }\n    if (settings.usePromise) {\n        return new Promise((function(resolve, reject) {\n            var promiseSettings = _objectSpread2(_objectSpread2({}, settings), {}, {\n                onError: function onError(width, height, benchmark) {\n                    var isLastTest;\n                    if (settings.sizes.length === 0) {\n                        isLastTest = true;\n                    } else {\n                        var _settings$sizes$slice = settings.sizes.slice(-1), _settings$sizes$slice2 = _slicedToArray(_settings$sizes$slice, 1), _settings$sizes$slice3 = _slicedToArray(_settings$sizes$slice2[0], 2), lastWidth = _settings$sizes$slice3[0], lastHeight = _settings$sizes$slice3[1];\n                        isLastTest = width === lastWidth && height === lastHeight;\n                    }\n                    _onError(width, height, benchmark);\n                    if (isLastTest) {\n                        reject({\n                            width: width,\n                            height: height,\n                            benchmark: benchmark\n                        });\n                    }\n                },\n                onSuccess: function onSuccess(width, height, benchmark) {\n                    _onSuccess(width, height, benchmark);\n                    resolve({\n                        width: width,\n                        height: height,\n                        benchmark: benchmark\n                    });\n                }\n            });\n            if (worker) {\n                var onError = promiseSettings.onError, onSuccess = promiseSettings.onSuccess;\n                workerJobs[jobID] = {\n                    onError: onError,\n                    onSuccess: onSuccess\n                };\n                worker.postMessage(settingsWithoutCallbacks);\n            } else {\n                canvasTest(promiseSettings);\n            }\n        }));\n    } else {\n        if (worker) {\n            workerJobs[jobID] = {\n                onError: _onError,\n                onSuccess: _onSuccess\n            };\n            worker.postMessage(settingsWithoutCallbacks);\n        } else {\n            return canvasTest(settings);\n        }\n    }\n}\n\nvar canvasSize = {\n    maxArea: function maxArea() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var sizes = createSizesArray({\n            width: options.max,\n            height: options.max,\n            min: options.min,\n            step: options.step,\n            sizes: _toConsumableArray(testSizes.area)\n        });\n        var settings = _objectSpread2(_objectSpread2(_objectSpread2({}, defaults), options), {}, {\n            sizes: sizes\n        });\n        return handleMethod(settings);\n    },\n    maxHeight: function maxHeight() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var sizes = createSizesArray({\n            width: 1,\n            height: options.max,\n            min: options.min,\n            step: options.step,\n            sizes: _toConsumableArray(testSizes.height)\n        });\n        var settings = _objectSpread2(_objectSpread2(_objectSpread2({}, defaults), options), {}, {\n            sizes: sizes\n        });\n        return handleMethod(settings);\n    },\n    maxWidth: function maxWidth() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var sizes = createSizesArray({\n            width: options.max,\n            height: 1,\n            min: options.min,\n            step: options.step,\n            sizes: _toConsumableArray(testSizes.width)\n        });\n        var settings = _objectSpread2(_objectSpread2(_objectSpread2({}, defaults), options), {}, {\n            sizes: sizes\n        });\n        return handleMethod(settings);\n    },\n    test: function test() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var settings = _objectSpread2(_objectSpread2({}, defaults), options);\n        settings.sizes = _toConsumableArray(settings.sizes);\n        if (settings.width && settings.height) {\n            settings.sizes = [ [ settings.width, settings.height ] ];\n        }\n        return handleMethod(settings);\n    }\n};\n\nexport { canvasSize as default };\n//# sourceMappingURL=canvas-size.esm.js.map\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    if (typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope) {\n      console.log(`Info: ${msg}`);\n    } else if (Window && Window['ngxConsole']) {\n      Window['ngxConsole'].log(`Info: ${msg}`);\n    } else {\n      console.log(`Info: ${msg}`);\n    }\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    if (typeof WorkerGlobalScope !== \"undefined\" && self instanceof WorkerGlobalScope) {\n      console.log(`Warning: ${msg}`);\n    } else if (Window && Window[\"ngxConsole\"]) {\n      Window[\"ngxConsole\"].log(`Warning: ${msg}`);\n    } else {\n      console.log(`Warning: ${msg}`);\n    }\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nconst NullCharactersRegExp = /\\x00+/g;\nconst InvisibleCharactersRegExp = /[\\x01-\\x1F]/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str, replaceInvisible = false) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  if (replaceInvisible) {\n    str = str.replace(InvisibleCharactersRegExp, \" \");\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../src/display/api\").PDFPageProxy} PDFPageProxy */\n\nconst PDF_ROLE_TO_HTML_ROLE = {\n  // Document level structure types\n  Document: null, // There's a \"document\" role, but it doesn't make sense here.\n  DocumentFragment: null,\n  // Grouping level structure types\n  Part: \"group\",\n  Sect: \"group\", // XXX: There's a \"section\" role, but it's abstract.\n  Div: \"group\",\n  Aside: \"note\",\n  NonStruct: \"none\",\n  // Block level structure types\n  P: null,\n  // H<n>,\n  H: \"heading\",\n  Title: null,\n  FENote: \"note\",\n  // Sub-block level structure type\n  Sub: \"group\",\n  // General inline level structure types\n  Lbl: null,\n  Span: null,\n  Em: null,\n  Strong: null,\n  Link: \"link\",\n  Annot: \"note\",\n  Form: \"form\",\n  // Ruby and Warichu structure types\n  Ruby: null,\n  RB: null,\n  RT: null,\n  RP: null,\n  Warichu: null,\n  WT: null,\n  WP: null,\n  // List standard structure types\n  L: \"list\",\n  LI: \"listitem\",\n  LBody: null,\n  // Table standard structure types\n  Table: \"table\",\n  TR: \"row\",\n  TH: \"columnheader\",\n  TD: \"cell\",\n  THead: \"columnheader\",\n  TBody: null,\n  TFoot: null,\n  // Standard structure type Caption\n  Caption: null,\n  // Standard structure type Figure\n  Figure: \"figure\",\n  // Standard structure type Formula\n  Formula: null,\n  // standard structure type Artifact\n  Artifact: null,\n};\n\nconst HEADING_PATTERN = /^H(\\d+)$/;\n\n/**\n * @typedef {Object} StructTreeLayerBuilderOptions\n * @property {PDFPageProxy} pdfPage\n */\n\nclass StructTreeLayerBuilder {\n  /**\n   * @param {StructTreeLayerBuilderOptions} options\n   */\n  constructor({ pdfPage }) {\n    this.pdfPage = pdfPage;\n  }\n\n  render(structTree) {\n    return this._walk(structTree);\n  }\n\n  _setAttributes(structElement, htmlElement) {\n    if (structElement.alt !== undefined) {\n      htmlElement.setAttribute(\"aria-label\", structElement.alt);\n    }\n    if (structElement.id !== undefined) {\n      htmlElement.setAttribute(\"aria-owns\", structElement.id);\n    }\n    if (structElement.lang !== undefined) {\n      htmlElement.setAttribute(\"lang\", structElement.lang);\n    }\n  }\n\n  _walk(node) {\n    if (!node) {\n      return null;\n    }\n\n    const element = document.createElement(\"span\");\n    if (\"role\" in node) {\n      const { role } = node;\n      const match = role.match(HEADING_PATTERN);\n      if (match) {\n        element.setAttribute(\"role\", \"heading\");\n        element.setAttribute(\"aria-level\", match[1]);\n      } else if (PDF_ROLE_TO_HTML_ROLE[role]) {\n        element.setAttribute(\"role\", PDF_ROLE_TO_HTML_ROLE[role]);\n      }\n    }\n\n    this._setAttributes(node, element);\n\n    if (node.children) {\n      if (node.children.length === 1 && \"id\" in node.children[0]) {\n        // Often there is only one content node so just set the values on the\n        // parent node to avoid creating an extra span.\n        this._setAttributes(node.children[0], element);\n      } else {\n        for (const kid of node.children) {\n          element.appendChild(this._walk(kid));\n        }\n      }\n    }\n    return element;\n  }\n}\n\nexport { StructTreeLayerBuilder };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./pdf_find_controller\").PDFFindController} PDFFindController */\n\n/**\n * @typedef {Object} TextHighlighterOptions\n * @property {PDFFindController} findController\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n */\n\n/**\n * TextHighlighter handles highlighting matches from the FindController in\n * either the text layer or XFA layer depending on the type of document.\n */\nclass TextHighlighter {\n  /**\n   * @param {TextHighlighterOptions} options\n   */\n  constructor({ findController, eventBus, pageIndex }) {\n    this.findController = findController;\n    this.matches = [];\n    this.eventBus = eventBus;\n    this.pageIdx = pageIndex;\n    this._onUpdateTextLayerMatches = null;\n    this.textDivs = null;\n    this.textContentItemsStr = null;\n    this.enabled = false;\n  }\n\n  /**\n   * Store two arrays that will map DOM nodes to text they should contain.\n   * The arrays should be of equal length and the array element at each index\n   * should correspond to the other. e.g.\n   * `items[0] = \"<span>Item 0</span>\" and texts[0] = \"Item 0\";\n   *\n   * @param {Array<Node>} divs\n   * @param {Array<string>} texts\n   */\n  setTextMapping(divs, texts) {\n    this.textDivs = divs;\n    this.textContentItemsStr = texts;\n  }\n\n  /**\n   * Start listening for events to update the highlighter and check if there are\n   * any current matches that need be highlighted.\n   */\n  enable() {\n    if (!this.textDivs || !this.textContentItemsStr) {\n      throw new Error(\"Text divs and strings have not been set.\");\n    }\n    if (this.enabled) {\n      throw new Error(\"TextHighlighter is already enabled.\");\n    }\n    this.enabled = true;\n    if (!this._onUpdateTextLayerMatches) {\n      this._onUpdateTextLayerMatches = evt => {\n        if (evt.pageIndex === this.pageIdx || evt.pageIndex === -1) {\n          this._updateMatches();\n        }\n      };\n      this.eventBus._on(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n    }\n    this._updateMatches();\n  }\n\n  disable() {\n    if (!this.enabled) {\n      return;\n    }\n    this.enabled = false;\n    if (this._onUpdateTextLayerMatches) {\n      this.eventBus._off(\n        \"updatetextlayermatches\",\n        this._onUpdateTextLayerMatches\n      );\n      this._onUpdateTextLayerMatches = null;\n    }\n  }\n\n  _convertMatches(\n    matches,\n    matchesLength,\n    matchesColor // #201\n  ) {\n    // Early exit if there is nothing to convert.\n    if (!matches) {\n      return [];\n    }\n    const { textContentItemsStr } = this;\n\n    let i = 0,\n      iIndex = 0;\n    const end = textContentItemsStr.length - 1;\n    const result = [];\n\n    for (let m = 0, mm = matches.length; m < mm; m++) {\n      // Calculate the start position.\n      let matchIdx = matches[m];\n\n      // Loop over the divIdxs.\n      while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      if (i === textContentItemsStr.length) {\n        Window['ngxConsole'].error(\"Could not find a matching mapping\");\n      }\n\n      const match = {\n        color: matchesColor ? matchesColor[m] : 0, // #201\n        begin: {\n          divIdx: i,\n          offset: matchIdx - iIndex,\n        },\n      };\n\n      // Calculate the end position.\n      matchIdx += matchesLength[m];\n\n      // Somewhat the same array as above, but use > instead of >= to get\n      // the end position right.\n      while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n        iIndex += textContentItemsStr[i].length;\n        i++;\n      }\n\n      match.end = {\n        divIdx: i,\n        offset: matchIdx - iIndex,\n      };\n      result.push(match);\n    }\n    return result;\n  }\n\n  _renderMatches(matches) {\n    // Early exit if there is nothing to render.\n    if (matches.length === 0) {\n      return;\n    }\n    const { findController, pageIdx } = this;\n    const { textContentItemsStr, textDivs } = this;\n\n    const isSelectedPage = pageIdx === findController.selected.pageIdx;\n    const selectedMatchIdx = findController.selected.matchIdx;\n    const highlightAll = findController.state.highlightAll;\n    let prevEnd = null;\n    const infinity = {\n      divIdx: -1,\n      offset: undefined,\n    };\n\n    function beginText(begin, className) {\n      const divIdx = begin.divIdx;\n      textDivs[divIdx].textContent = \"\";\n      return appendTextToDiv(divIdx, 0, begin.offset, className);\n    }\n\n    function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n      let div = textDivs[divIdx];\n      if (div.nodeType === Node.TEXT_NODE) {\n        const span = document.createElement(\"span\");\n        div.parentNode.insertBefore(span, div);\n        span.appendChild(div);\n        textDivs[divIdx] = span;\n        div = span;\n      }\n      const content = textContentItemsStr[divIdx].substring(\n        fromOffset,\n        toOffset\n      );\n      const node = document.createTextNode(content);\n      if (className) {\n        const span = document.createElement(\"span\");\n        span.className = `${className} appended`;\n        span.appendChild(node);\n        div.appendChild(span);\n        return className.includes(\"selected\") ? span.offsetLeft : 0;\n      }\n      div.appendChild(node);\n      return 0;\n    }\n\n    let i0 = selectedMatchIdx,\n      i1 = i0 + 1;\n    if (highlightAll) {\n      i0 = 0;\n      i1 = matches.length;\n    } else if (!isSelectedPage) {\n      // Not highlighting all and this isn't the selected page, so do nothing.\n      return;\n    }\n\n    for (let i = i0; i < i1; i++) {\n      const match = matches[i];\n      const begin = match.begin;\n      const end = match.end;\n      const isSelected = isSelectedPage && i === selectedMatchIdx;\n      const highlightSuffix = (isSelected ? \" selected\" : \"\") + \" color\" + match.color; // #201\n      let selectedLeft = 0;\n\n      // Match inside new div.\n      if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n        // If there was a previous div, then add the text at the end.\n        if (prevEnd !== null) {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n        }\n        // Clear the divs and set the content until the starting point.\n        beginText(begin);\n      } else {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n      }\n\n      if (begin.divIdx === end.divIdx) {\n        selectedLeft = appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          end.offset,\n          \"highlight\" + highlightSuffix\n        );\n      } else {\n        selectedLeft = appendTextToDiv(\n          begin.divIdx,\n          begin.offset,\n          infinity.offset,\n          \"highlight begin\" + highlightSuffix\n        );\n        for (let n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n          textDivs[n0].className = \"highlight middle\" + highlightSuffix;\n        }\n        beginText(end, \"highlight end\" + highlightSuffix);\n      }\n      prevEnd = end;\n\n      if (isSelected) {\n        // Attempt to scroll the selected match into view.\n        findController.scrollMatchIntoView({\n          element: textDivs[begin.divIdx],\n          selectedLeft,\n          pageIndex: pageIdx,\n          matchIndex: selectedMatchIdx,\n        });\n      }\n    }\n\n    if (prevEnd) {\n      appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n    }\n  }\n\n  _updateMatches() {\n    if (!this.enabled) {\n      return;\n    }\n    const { findController, matches, pageIdx } = this;\n    const { textContentItemsStr, textDivs } = this;\n    let clearedUntilDivIdx = -1;\n\n    // Clear all current matches.\n    for (let i = 0, ii = matches.length; i < ii; i++) {\n      const match = matches[i];\n      const begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n      for (let n = begin, end = match.end.divIdx; n <= end; n++) {\n        const div = textDivs[n];\n        div.textContent = textContentItemsStr[n];\n        div.className = \"\";\n      }\n      clearedUntilDivIdx = match.end.divIdx + 1;\n    }\n\n    if (!findController?.highlightMatches) {\n      return;\n    }\n    // Convert the matches on the `findController` into the match format\n    // used for the textLayer.\n    const pageMatches = findController.pageMatches[pageIdx] || null;\n    const pageMatchesLength = findController.pageMatchesLength[pageIdx] || null;\n    const pageMatchesColor = findController.pageMatchesColor[pageIdx] || null; // #201\n\n    this.matches = this._convertMatches(pageMatches, pageMatchesLength, pageMatchesColor); // #201\n    this._renderMatches(this.matches);\n  }\n}\n\nexport { TextHighlighter };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../src/display/display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./event_utils\").EventBus} EventBus */\n/** @typedef {import(\"./text_highlighter\").TextHighlighter} TextHighlighter */\n\nimport { renderTextLayer } from \"pdfjs-lib\";\n\nconst EXPAND_DIVS_TIMEOUT = 300; // ms\n\n/**\n * @typedef {Object} TextLayerBuilderOptions\n * @property {HTMLDivElement} textLayerDiv - The text layer container.\n * @property {EventBus} eventBus - The application event bus.\n * @property {number} pageIndex - The page index.\n * @property {PageViewport} viewport - The viewport of the text layer.\n * @property {TextHighlighter} highlighter - Optional object that will handle\n *   highlighting text from the find controller.\n * @property {boolean} enhanceTextSelection - Option to turn on improved\n *   text selection.\n */\n\n/**\n * The text layer builder provides text selection functionality for the PDF.\n * It does this by creating overlay divs over the PDF's text. These divs\n * contain text that matches the PDF text they are overlaying.\n */\nclass TextLayerBuilder {\n  constructor({\n    textLayerDiv,\n    eventBus,\n    pageIndex,\n    viewport,\n    highlighter = null,\n    enhanceTextSelection = false,\n  }) {\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus;\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageNumber = pageIndex + 1;\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.textLayerRenderTask = null;\n    this.highlighter = highlighter;\n    this.enhanceTextSelection = enhanceTextSelection;\n\n    this._bindMouse();\n  }\n\n  /**\n   * @private\n   */\n  _finishRendering() {\n    this.renderingDone = true;\n\n    if (!this.enhanceTextSelection) {\n      const endOfContent = document.createElement(\"div\");\n      endOfContent.className = \"endOfContent\";\n      this.textLayerDiv.appendChild(endOfContent);\n    }\n\n    this.eventBus.dispatch(\"textlayerrendered\", {\n      source: this,\n      pageNumber: this.pageNumber,\n      numTextDivs: this.textDivs.length,\n    });\n  }\n\n  /**\n   * Renders the text layer.\n   *\n   * @param {number} [timeout] - Wait for a specified amount of milliseconds\n   *                             before rendering.\n   */\n  render(timeout = 0) {\n    if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n      return;\n    }\n    this.cancel();\n\n    this.textDivs.length = 0;\n    this.highlighter?.setTextMapping(this.textDivs, this.textContentItemsStr);\n\n    const textLayerFrag = document.createDocumentFragment();\n    this.textLayerRenderTask = renderTextLayer({\n      textContent: this.textContent,\n      textContentStream: this.textContentStream,\n      container: textLayerFrag,\n      viewport: this.viewport,\n      textDivs: this.textDivs,\n      textContentItemsStr: this.textContentItemsStr,\n      timeout,\n      enhanceTextSelection: this.enhanceTextSelection,\n    });\n    this.textLayerRenderTask.promise.then(\n      () => {\n        this.textLayerDiv.appendChild(textLayerFrag);\n        this._finishRendering();\n        this.highlighter?.enable();\n      },\n      function (reason) {\n        // Cancelled or failed to render text layer; skipping errors.\n      }\n    );\n  }\n\n  /**\n   * Cancel rendering of the text layer.\n   */\n  cancel() {\n    if (this.textLayerRenderTask) {\n      this.textLayerRenderTask.cancel();\n      this.textLayerRenderTask = null;\n    }\n    this.highlighter?.disable();\n  }\n\n  setTextContentStream(readableStream) {\n    this.cancel();\n    this.textContentStream = readableStream;\n  }\n\n  setTextContent(textContent) {\n    this.cancel();\n    this.textContent = textContent;\n  }\n\n  /**\n   * Improves text selection by adding an additional div where the mouse was\n   * clicked. This reduces flickering of the content if the mouse is slowly\n   * dragged up or down.\n   *\n   * @private\n   */\n  _bindMouse() {\n    const div = this.textLayerDiv;\n    let expandDivsTimer = null;\n\n    div.addEventListener(\"mousedown\", evt => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        this.textLayerRenderTask.expandTextDivs(true);\n        if (\n          (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n          expandDivsTimer\n        ) {\n          clearTimeout(expandDivsTimer);\n          expandDivsTimer = null;\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        // On non-Firefox browsers, the selection will feel better if the height\n        // of the `endOfContent` div is adjusted to start at mouse click\n        // location. This avoids flickering when the selection moves up.\n        // However it does not work when selection is started on empty space.\n        let adjustTop = evt.target !== div;\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n          adjustTop =\n            adjustTop &&\n            window\n              .getComputedStyle(end)\n              .getPropertyValue(\"-moz-user-select\") !== \"none\";\n        }\n        if (adjustTop) {\n          const divBounds = div.getBoundingClientRect();\n          const r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + \"%\";\n        }\n      }\n      end.classList.add(\"active\");\n    });\n\n    div.addEventListener(\"mouseup\", () => {\n      if (this.enhanceTextSelection && this.textLayerRenderTask) {\n        if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n          expandDivsTimer = setTimeout(() => {\n            if (this.textLayerRenderTask) {\n              this.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n        } else {\n          this.textLayerRenderTask.expandTextDivs(false);\n        }\n        return;\n      }\n\n      const end = div.querySelector(\".endOfContent\");\n      if (!end) {\n        return;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        end.style.top = \"\";\n      }\n      end.classList.remove(\"active\");\n    });\n  }\n}\n\nexport { TextLayerBuilder };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../src/display/api\").PDFPageProxy} PDFPageProxy */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../src/display/display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaLayer } from \"pdfjs-lib\";\n\n/**\n * @typedef {Object} XfaLayerBuilderOptions\n * @property {HTMLDivElement} pageDiv\n * @property {PDFPageProxy} pdfPage\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {Object} [xfaHtml]\n */\n\nclass XfaLayerBuilder {\n  /**\n   * @param {XfaLayerBuilderOptions} options\n   */\n  constructor({\n    pageDiv,\n    pdfPage,\n    annotationStorage = null,\n    linkService,\n    xfaHtml = null,\n  }) {\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.annotationStorage = annotationStorage;\n    this.linkService = linkService;\n    this.xfaHtml = xfaHtml;\n\n    this.div = null;\n    this._cancelled = false;\n  }\n\n  /**\n   * @param {PageViewport} viewport\n   * @param {string} intent (default value is 'display')\n   * @returns {Promise<Object | void>} A promise that is resolved when rendering\n   *   of the XFA layer is complete. The first rendering will return an object\n   *   with a `textDivs` property that  can be used with the TextHighlighter.\n   */\n  render(viewport, intent = \"display\") {\n    if (intent === \"print\") {\n      const parameters = {\n        viewport: viewport.clone({ dontFlip: true }),\n        div: this.div,\n        xfaHtml: this.xfaHtml,\n        annotationStorage: this.annotationStorage,\n        linkService: this.linkService,\n        intent,\n      };\n\n      // Create an xfa layer div and render the form\n      const div = document.createElement(\"div\");\n      this.pageDiv.appendChild(div);\n      parameters.div = div;\n\n      const result = XfaLayer.render(parameters);\n      return Promise.resolve(result);\n    }\n\n    // intent === \"display\"\n    return this.pdfPage\n      .getXfa()\n      .then(xfaHtml => {\n        if (this._cancelled || !xfaHtml) {\n          return { textDivs: [] };\n        }\n\n        const parameters = {\n          viewport: viewport.clone({ dontFlip: true }),\n          div: this.div,\n          xfaHtml,\n          annotationStorage: this.annotationStorage,\n          linkService: this.linkService,\n          intent,\n        };\n\n        if (this.div) {\n          return XfaLayer.update(parameters);\n        }\n        // Create an xfa layer div and render the form\n        this.div = document.createElement(\"div\");\n        this.pageDiv.appendChild(this.div);\n        parameters.div = this.div;\n        return XfaLayer.render(parameters);\n      })\n      .catch(error => {\n        Window['ngxConsole'].error(error);\n      });\n  }\n\n  cancel() {\n    this._cancelled = true;\n  }\n\n  hide() {\n    if (!this.div) {\n      return;\n    }\n    this.div.hidden = true;\n  }\n}\n\nexport { XfaLayerBuilder };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SCROLLBAR_PADDING, ScrollMode, SpreadMode } from \"./ui_utils.js\";\nimport { CursorTool } from \"./pdf_cursor_tools.js\";\nimport { PagesCountLimit } from \"./base_viewer.js\";\n\n/**\n * @typedef {Object} SecondaryToolbarOptions\n * @property {HTMLDivElement} toolbar - Container for the secondary toolbar.\n * @property {HTMLButtonElement} toggleButton - Button to toggle the visibility\n *   of the secondary toolbar.\n * @property {HTMLDivElement} toolbarButtonContainer - Container where all the\n *   toolbar buttons are placed. The maximum height of the toolbar is controlled\n *   dynamically by adjusting the 'max-height' CSS property of this DOM element.\n * @property {HTMLButtonElement} presentationModeButton - Button for entering\n *   presentation mode.\n * @property {HTMLButtonElement} openFileButton - Button to open a file.\n * @property {HTMLButtonElement} printButton - Button to print the document.\n * @property {HTMLButtonElement} downloadButton - Button to download the\n *   document.\n * @property {HTMLAnchorElement} viewBookmarkButton - Button to obtain a\n *   bookmark link to the current location in the document.\n * @property {HTMLButtonElement} firstPageButton - Button to go to the first\n *   page in the document.\n * @property {HTMLButtonElement} lastPageButton - Button to go to the last page\n *   in the document.\n * @property {HTMLButtonElement} pageRotateCwButton - Button to rotate the pages\n *   clockwise.\n * @property {HTMLButtonElement} pageRotateCcwButton - Button to rotate the\n *   pages counterclockwise.\n * @property {HTMLButtonElement} cursorSelectToolButton - Button to enable the\n *   select tool.\n * @property {HTMLButtonElement} cursorHandToolButton - Button to enable the\n *   hand tool.\n * @property {HTMLButtonElement} documentPropertiesButton - Button for opening\n *   the document properties dialog.\n */\n\nclass SecondaryToolbar {\n  /**\n   * @param {SecondaryToolbarOptions} options\n   * @param {HTMLDivElement} mainContainer\n   * @param {EventBus} eventBus\n   */\n  constructor(options, mainContainer, eventBus) {\n    this.toolbar = options.toolbar;\n    this.toggleButton = options.toggleButton;\n    this.toolbarButtonContainer = options.toolbarButtonContainer;\n    this.buttons = [\n      {\n        element: options.presentationModeButton,\n        eventName: \"presentationmode\",\n        close: true,\n      },\n      { element: options.openFileButton, eventName: \"openfile\", close: true },\n      { element: options.printButton, eventName: \"print\", close: true },\n      { element: options.downloadButton, eventName: \"download\", close: true },\n      { element: options.viewBookmarkButton, eventName: null, close: true },\n      { element: options.firstPageButton, eventName: \"firstpage\", close: true },\n      { element: options.lastPageButton, eventName: \"lastpage\", close: true },\n      {\n        element: options.pageRotateCwButton,\n        eventName: \"rotatecw\",\n        close: false,\n      },\n      {\n        element: options.pageRotateCcwButton,\n        eventName: \"rotateccw\",\n        close: false,\n      },\n      {\n        element: options.cursorSelectToolButton,\n        eventName: \"switchcursortool\",\n        eventDetails: { tool: CursorTool.SELECT },\n        close: true,\n      },\n      {\n        element: options.cursorHandToolButton,\n        eventName: \"switchcursortool\",\n        eventDetails: { tool: CursorTool.HAND },\n        close: true,\n      },\n      {\n        element: options.scrollPageButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.PAGE },\n        close: true,\n      },\n      {\n        element: options.scrollVerticalButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.VERTICAL },\n        close: true,\n      },\n      {\n        element: options.scrollHorizontalButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.HORIZONTAL },\n        close: true,\n      },\n      {\n        element: options.scrollWrappedButton,\n        eventName: \"switchscrollmode\",\n        eventDetails: { mode: ScrollMode.WRAPPED },\n        close: true,\n      },\n      {\n        element: options.spreadNoneButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.NONE },\n        close: true,\n      },\n      {\n        element: options.spreadOddButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.ODD },\n        close: true,\n      },\n      {\n        element: options.spreadEvenButton,\n        eventName: \"switchspreadmode\",\n        eventDetails: { mode: SpreadMode.EVEN },\n        close: true,\n      },\n      {\n        element: options.documentPropertiesButton,\n        eventName: \"documentproperties\",\n        close: true,\n      },\n    ];\n    this.items = {\n      firstPage: options.firstPageButton,\n      lastPage: options.lastPageButton,\n      pageRotateCw: options.pageRotateCwButton,\n      pageRotateCcw: options.pageRotateCcwButton,\n    };\n\n    this.mainContainer = mainContainer;\n    this.eventBus = eventBus;\n\n    this.opened = false;\n    this.containerHeight = null;\n    this.previousContainerHeight = null;\n\n    this.reset();\n\n    // Bind the event listeners for click, cursor tool, and scroll/spread mode\n    // actions.\n    this._bindClickListeners();\n    this._bindCursorToolsListener(options);\n    this._bindScrollModeListener(options);\n    this._bindSpreadModeListener(options);\n\n    // Bind the event listener for adjusting the 'max-height' of the toolbar.\n    this.eventBus._on(\"resize\", this._setMaxHeight.bind(this));\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get isOpen() {\n    return this.opened;\n  }\n\n  setPageNumber(pageNumber) {\n    this.pageNumber = pageNumber;\n    this._updateUIState();\n  }\n\n  setPagesCount(pagesCount) {\n    this.pagesCount = pagesCount;\n    this._updateUIState();\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pagesCount = 0;\n    this._updateUIState();\n\n    // Reset the Scroll/Spread buttons too, since they're document specific.\n    this.eventBus.dispatch(\"secondarytoolbarreset\", { source: this });\n  }\n\n  _updateUIState() {\n    this.items.firstPage.disabled = this.pageNumber <= 1;\n    if (document.getElementById(\"previousPage\")) {\n      document.getElementById(\"previousPage\").disabled = this.pageNumber <= 1;\n    }\n    this.items.lastPage.disabled = this.pageNumber >= this.pagesCount;\n    if (document.getElementById(\"nextPage\")) {\n      document.getElementById(\"nextPage\").disabled = this.pageNumber >= this.pagesCount;\n    }\n\n    this.items.pageRotateCw.disabled = this.pagesCount === 0;\n    this.items.pageRotateCcw.disabled = this.pagesCount === 0;\n\n    this.eventBus.dispatch(\"updateuistate\", {\n      source: this,\n      widget: \"SecondaryToolbar\",\n      pageNumber: this.pageNumber,\n      pagesCount: this.pagesCount,\n    });\n  }\n\n  _bindClickListeners() {\n    // Button to toggle the visibility of the secondary toolbar.\n    this.toggleButton.addEventListener(\"click\", this.toggle.bind(this));\n\n    // All items within the secondary toolbar.\n    for (const { element, eventName, close, eventDetails } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          const details = { source: this };\n          for (const property in eventDetails) {\n            details[property] = eventDetails[property];\n          }\n          this.eventBus.dispatch(eventName, details);\n        }\n        if (close) {\n          this.close();\n        }\n      });\n    }\n  }\n\n  _bindCursorToolsListener(buttons) {\n    this.eventBus._on(\"cursortoolchanged\", function ({ tool }) {\n      buttons.cursorSelectToolButton.classList.toggle(\n        \"toggled\",\n        tool === CursorTool.SELECT\n      );\n      buttons.cursorHandToolButton.classList.toggle(\n        \"toggled\",\n        tool === CursorTool.HAND\n      );\n    });\n  }\n\n  _bindScrollModeListener(buttons) {\n    const scrollModeChanged = ({ mode }) => {\n      buttons.scrollPageButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.PAGE\n      );\n      buttons.scrollVerticalButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.VERTICAL\n      );\n      buttons.scrollHorizontalButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.HORIZONTAL\n      );\n      buttons.scrollWrappedButton.classList.toggle(\n        \"toggled\",\n        mode === ScrollMode.WRAPPED\n      );\n\n      // Permanently *disable* the Scroll buttons when PAGE-scrolling is being\n      // enforced for *very* long/large documents; please see the `BaseViewer`.\n      const forceScrollModePage =\n        this.pagesCount > PagesCountLimit.FORCE_SCROLL_MODE_PAGE;\n      buttons.scrollPageButton.disabled = forceScrollModePage;\n      buttons.scrollVerticalButton.disabled = forceScrollModePage;\n      buttons.scrollHorizontalButton.disabled = forceScrollModePage;\n      buttons.scrollWrappedButton.disabled = forceScrollModePage;\n\n      // Temporarily *disable* the Spread buttons when horizontal scrolling is\n      // enabled, since the non-default Spread modes doesn't affect the layout.\n      const isScrollModeHorizontal = mode === ScrollMode.HORIZONTAL;\n      buttons.spreadNoneButton.disabled = isScrollModeHorizontal;\n      buttons.spreadOddButton.disabled = isScrollModeHorizontal;\n      buttons.spreadEvenButton.disabled = isScrollModeHorizontal;\n    };\n    this.eventBus._on(\"scrollmodechanged\", scrollModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        scrollModeChanged({ mode: ScrollMode.VERTICAL });\n      }\n    });\n  }\n\n  _bindSpreadModeListener(buttons) {\n    function spreadModeChanged({ mode }) {\n      buttons.spreadNoneButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.NONE\n      );\n      buttons.spreadOddButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.ODD\n      );\n      buttons.spreadEvenButton.classList.toggle(\n        \"toggled\",\n        mode === SpreadMode.EVEN\n      );\n    }\n    this.eventBus._on(\"spreadmodechanged\", spreadModeChanged);\n\n    this.eventBus._on(\"secondarytoolbarreset\", evt => {\n      if (evt.source === this) {\n        spreadModeChanged({ mode: SpreadMode.NONE });\n      }\n    });\n  }\n\n  open() {\n    if (this.opened) {\n      return;\n    }\n    this.opened = true;\n    // this._setMaxHeight();  modified by ngx-extended-pdf-viewer\n\n    this.toggleButton.classList.add(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"true\");\n    this.toolbar.classList.remove(\"hidden\");\n  }\n\n  close() {\n    if (!this.opened) {\n      return;\n    }\n    this.opened = false;\n    this.toolbar.classList.add(\"hidden\");\n    this.toggleButton.classList.remove(\"toggled\");\n    this.toggleButton.setAttribute(\"aria-expanded\", \"false\");\n  }\n\n  toggle() {\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setMaxHeight() {\n    if (!this.opened) {\n      return; // Only adjust the 'max-height' if the toolbar is visible.\n    }\n    this.containerHeight = this.mainContainer.clientHeight;\n\n    if (this.containerHeight === this.previousContainerHeight) {\n      return;\n    }\n    this.toolbarButtonContainer.style.maxHeight = `${\n      this.containerHeight - SCROLLBAR_PADDING\n    }px`;\n\n    this.previousContainerHeight = this.containerHeight;\n  }\n}\n\nexport { SecondaryToolbar };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  animationStarted,\n  DEFAULT_SCALE,\n  DEFAULT_SCALE_VALUE,\n  MAX_SCALE,\n  MIN_SCALE,\n  noContextMenuHandler,\n} from \"./ui_utils.js\";\n\nconst PAGE_NUMBER_LOADING_INDICATOR = \"visiblePageIsLoading\";\n\n/**\n * @typedef {Object} ToolbarOptions\n * @property {HTMLDivElement} container - Container for the secondary toolbar.\n * @property {HTMLSpanElement} numPages - Label that contains number of pages.\n * @property {HTMLInputElement} pageNumber - Control for display and user input\n *   of the current page number.\n * @property {HTMLSelectElement} scaleSelect - Scale selection control.\n *   Its width is adjusted, when necessary, on UI localization.\n * @property {HTMLOptionElement} customScaleOption - The item used to display\n *   a non-predefined scale.\n * @property {HTMLButtonElement} previous - Button to go to the previous page.\n * @property {HTMLButtonElement} next - Button to go to the next page.\n * @property {HTMLButtonElement} zoomIn - Button to zoom in the pages.\n * @property {HTMLButtonElement} zoomOut - Button to zoom out the pages.\n * @property {HTMLButtonElement} viewFind - Button to open find bar.\n * @property {HTMLButtonElement} openFile - Button to open a new document.\n * @property {HTMLButtonElement} presentationModeButton - Button to switch to\n *   presentation mode.\n * @property {HTMLButtonElement} download - Button to download the document.\n * @property {HTMLAnchorElement} viewBookmark - Button to obtain a bookmark link\n *   to the current location in the document.\n */\n\nclass Toolbar {\n  /**\n   * @param {ToolbarOptions} options\n   * @param {EventBus} eventBus\n   * @param {IL10n} l10n - Localization service.\n   */\n  constructor(options, eventBus, l10n) {\n    this.toolbar = options.container;\n    this.eventBus = eventBus;\n    this.l10n = l10n;\n    this.buttons = [\n      { element: options.previous, eventName: \"previouspage\" },\n      { element: options.next, eventName: \"nextpage\" },\n      { element: options.zoomIn, eventName: \"zoomin\" },\n      { element: options.zoomOut, eventName: \"zoomout\" },\n      { element: options.openFile, eventName: \"openfile\" },\n      { element: options.print, eventName: \"print\" },\n      {\n        element: options.presentationModeButton,\n        eventName: \"presentationmode\",\n      },\n      { element: options.download, eventName: \"download\" },\n      { element: options.viewBookmark, eventName: null },\n    ];\n    this.items = {\n      numPages: options.numPages,\n      pageNumber: options.pageNumber,\n      scaleSelect: options.scaleSelect,\n      customScaleOption: options.customScaleOption,\n      previous: options.previous,\n      next: options.next,\n      zoomIn: options.zoomIn,\n      zoomOut: options.zoomOut,\n    };\n\n    this._wasLocalized = false;\n    this.reset();\n\n    // Bind the event listeners for click and various other actions.\n    this._bindListeners();\n  }\n\n  setPageNumber(pageNumber, pageLabel) {\n    this.pageNumber = pageNumber;\n    this.pageLabel = pageLabel;\n    this._updateUIState(false);\n  }\n\n  setPagesCount(pagesCount, hasPageLabels) {\n    this.pagesCount = pagesCount;\n    this.hasPageLabels = hasPageLabels;\n    this._updateUIState(true);\n  }\n\n  setPageScale(pageScaleValue, pageScale) {\n    this.pageScaleValue = (pageScaleValue || pageScale).toString();\n    this.pageScale = pageScale;\n    this._updateUIState(false);\n  }\n\n  reset() {\n    this.pageNumber = 0;\n    this.pageLabel = null;\n    this.hasPageLabels = false;\n    this.pagesCount = 0;\n    const defaultZoomOption = PDFViewerApplicationOptions.get('defaultZoomValue');\n    // #556 #543 modified by ngx-extended-pdf-viewer\n    if (defaultZoomOption) {\n      this.pageScaleValue = defaultZoomOption;\n      if (!!Number(defaultZoomOption)) {\n        this.pageScale = Number(defaultZoomOption);\n      }\n    } else {\n      this.pageScaleValue = DEFAULT_SCALE_VALUE;\n      this.pageScale = DEFAULT_SCALE;\n    }\n    // #556 #543 end of modification\n\n    this._updateUIState(true);\n    this.updateLoadingIndicatorState();\n  }\n\n  _bindListeners() {\n    const { pageNumber, scaleSelect } = this.items;\n    const self = this;\n\n    // The buttons within the toolbar.\n    for (const { element, eventName } of this.buttons) {\n      element.addEventListener(\"click\", evt => {\n        if (eventName !== null) {\n          this.eventBus.dispatch(eventName, { source: this });\n        }\n      });\n    }\n    // The non-button elements within the toolbar.\n    pageNumber.addEventListener(\"click\", function () {\n      this.select();\n    });\n    pageNumber.addEventListener(\"change\", function () {\n      self.eventBus.dispatch(\"pagenumberchanged\", {\n        source: self,\n        value: this.value,\n      });\n    });\n\n    scaleSelect.addEventListener(\"change\", function () {\n      if (this.value === \"custom\") {\n        return;\n      }\n      self.eventBus.dispatch(\"scalechanged\", {\n        source: self,\n        value: this.value,\n      });\n    });\n    // Here we depend on browsers dispatching the \"click\" event *after* the\n    // \"change\" event, when the <select>-element changes.\n    scaleSelect.addEventListener(\"click\", function (evt) {\n      const target = evt.target;\n      // Remove focus when an <option>-element was *clicked*, to improve the UX\n      // for mouse users (fixes bug 1300525 and issue 4923).\n      if (\n        this.value === self.pageScaleValue &&\n        target.tagName.toUpperCase() === \"OPTION\"\n      ) {\n        this.blur();\n      }\n    });\n    // Suppress context menus for some controls.\n    scaleSelect.oncontextmenu = noContextMenuHandler;\n\n    this.eventBus._on(\"localized\", () => {\n      this._wasLocalized = true;\n      this._updateUIState(true);\n    });\n  }\n\n  _updateUIState(resetNumPages = false) {\n    if (!this._wasLocalized) {\n      // Don't update the UI state until we localize the toolbar.\n      return;\n    }\n    const { pageNumber, pagesCount, pageScaleValue, pageScale, items } = this;\n\n    if (resetNumPages) {\n      if (this.hasPageLabels) {\n        items.pageNumber.type = \"text\";\n      } else {\n        items.pageNumber.type = \"number\";\n        this.l10n.get(\"of_pages\", { pagesCount }).then(msg => {\n          items.numPages.textContent = msg;\n        });\n      }\n      items.pageNumber.max = pagesCount;\n    }\n\n    if (this.hasPageLabels) {\n      items.pageNumber.value = this.pageLabel;\n      this.l10n.get(\"page_of_pages\", { pageNumber, pagesCount }).then(msg => {\n        items.numPages.textContent = msg;\n      });\n    } else {\n      items.pageNumber.value = pageNumber;\n    }\n\n    items.previous.disabled = pageNumber <= 1;\n    items.next.disabled = pageNumber >= pagesCount;\n\n    items.zoomOut.disabled = pageScale <= MIN_SCALE;\n    items.zoomIn.disabled = pageScale >= MAX_SCALE;\n\n    this.l10n\n      .get(\"page_scale_percent\", { scale: Math.round(pageScale * 10000) / 100 })\n      .then(msg => {\n        let predefinedValueFound = false;\n        for (const option of items.scaleSelect.options) {\n          if (option.value !== pageScaleValue) {\n            option.selected = false;\n            continue;\n          }\n          option.selected = true;\n          predefinedValueFound = true;\n        }\n        if (!predefinedValueFound) {\n          items.customScaleOption.textContent = msg;\n          items.customScaleOption.selected = true;\n        }\n      });\n    this.eventBus.dispatch(\"updateuistate\", {\n      source: this,\n      widget: \"Toolbar\",\n      pageNumber,\n      pagesCount,\n      pageScaleValue,\n      pageScale,\n    });\n  }\n\n  updateLoadingIndicatorState(loading = false) {\n    const pageNumberInput = this.items.pageNumber;\n\n    pageNumberInput.classList.toggle(PAGE_NUMBER_LOADING_INDICATOR, loading);\n  }\n\n  /**\n   * Increase the width of the zoom dropdown DOM element if, and only if, it's\n   * too narrow to fit the *longest* of the localized strings.\n   * @private\n   */\n  async _adjustScaleWidth() {\n    const { items, l10n } = this;\n\n    const predefinedValuesPromise = Promise.all([\n      l10n.get(\"page_scale_auto\"),\n      l10n.get(\"page_scale_actual\"),\n      l10n.get(\"page_scale_fit\"),\n      l10n.get(\"page_scale_width\"),\n    ]);\n\n    const style = getComputedStyle(items.scaleSelect),\n      scaleSelectContainerWidth = parseInt(\n        style.getPropertyValue(\"--scale-select-container-width\"),\n        10\n      ),\n      scaleSelectOverflow = parseInt(\n        style.getPropertyValue(\"--scale-select-overflow\"),\n        10\n      );\n\n    // The temporary canvas is used to measure text length in the DOM.\n    let canvas = document.createElement(\"canvas\");\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    let ctx = canvas.getContext(\"2d\", { alpha: false });\n\n    await animationStarted;\n    ctx.font = `${style.fontSize} ${style.fontFamily}`;\n\n    let maxWidth = 0;\n    for (const predefinedValue of await predefinedValuesPromise) {\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = ctx.measureText(predefinedValue);\n        if (width > maxWidth) {\n          maxWidth = width;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    maxWidth += 2 * scaleSelectOverflow;\n\n    if (maxWidth > scaleSelectContainerWidth) {\n      const doc = document.documentElement;\n      doc.style.setProperty(\"--scale-select-container-width\", `${maxWidth}px`);\n    }\n    // Zeroing the width and height cause Firefox to release graphics resources\n    // immediately, which can greatly reduce memory consumption.\n    canvas.width = 0;\n    canvas.height = 0;\n    canvas = ctx = null;\n  }\n}\n\nexport { Toolbar };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions } from \"./app_options\";\n\nconst DEFAULT_VIEW_HISTORY_CACHE_SIZE = 20;\n\n/**\n * View History - This is a utility for saving various view parameters for\n *                recently opened files.\n *\n * The way that the view parameters are stored depends on how PDF.js is built,\n * for 'gulp <flag>' the following cases exist:\n *  - MOZCENTRAL        - uses sessionStorage.\n *  - GENERIC or CHROME - uses localStorage, if it is available.\n */\nclass ViewHistory {\n  constructor(fingerprint, cacheSize = DEFAULT_VIEW_HISTORY_CACHE_SIZE) {\n    this.fingerprint = fingerprint;\n    this.cacheSize = cacheSize;\n\n    this._initializedPromise = this._readFromStorage().then(databaseStr => {\n      const database = JSON.parse(databaseStr || \"{}\");\n      let index = -1;\n      if (!Array.isArray(database.files)) {\n        database.files = [];\n      } else {\n        while (database.files.length >= this.cacheSize) {\n          database.files.shift();\n        }\n\n        for (let i = 0, ii = database.files.length; i < ii; i++) {\n          const branch = database.files[i];\n          if (branch.fingerprint === this.fingerprint) {\n            index = i;\n            break;\n          }\n        }\n      }\n      if (index === -1) {\n        index = database.files.push({ fingerprint: this.fingerprint }) - 1;\n      }\n      this.file = database.files[index];\n      this.database = database;\n    });\n  }\n\n  async _writeToStorage() {\n    if (AppOptions.get(\"disableHistory\")) {\n      return;\n    }\n    const databaseStr = JSON.stringify(this.database);\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      sessionStorage.setItem(\"pdfjs.history\", databaseStr);\n      return;\n    }\n    localStorage.setItem(\"pdfjs.history\", databaseStr);\n  }\n\n  async _readFromStorage() {\n    if (AppOptions.get(\"disableHistory\")) {\n      return undefined;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return sessionStorage.getItem(\"pdfjs.history\");\n    }\n    return localStorage.getItem(\"pdfjs.history\");\n  }\n\n  async set(name, val) {\n    await this._initializedPromise;\n    this.file[name] = val;\n    return this._writeToStorage();\n  }\n\n  async setMultiple(properties) {\n    await this._initializedPromise;\n    for (const name in properties) {\n      this.file[name] = properties[name];\n    }\n    return this._writeToStorage();\n  }\n\n  async get(name, defaultValue) {\n    await this._initializedPromise;\n    const val = this.file[name];\n    return val !== undefined ? val : defaultValue;\n  }\n\n  async getMultiple(properties) {\n    await this._initializedPromise;\n    const values = Object.create(null);\n\n    for (const name in properties) {\n      const val = this.file[name];\n      values[name] = val !== undefined ? val : properties[name];\n    }\n    return values;\n  }\n}\n\nexport { ViewHistory };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DefaultExternalServices, PDFViewerApplication } from \"./app.js\";\nimport { BasePreferences } from \"./preferences.js\";\nimport { DownloadManager } from \"./download_manager.js\";\nimport { GenericL10n } from \"./genericl10n.js\";\nimport { GenericScripting } from \"./generic_scripting.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/genericcom\" shall not be used outside ' +\n      \"GENERIC build.\"\n  );\n}\n\nconst GenericCom = {};\n\nclass GenericPreferences extends BasePreferences {\n  async _writeToStorage(prefObj) {\n    localStorage.setItem(\"pdfjs.preferences\", JSON.stringify(prefObj));\n  }\n\n  async _readFromStorage(prefObj) {\n    return JSON.parse(localStorage.getItem(\"pdfjs.preferences\"));\n  }\n}\n\nclass GenericExternalServices extends DefaultExternalServices {\n  static createDownloadManager(options) {\n    return new DownloadManager();\n  }\n\n  static createPreferences() {\n    return new GenericPreferences();\n  }\n\n  static createL10n({ locale = \"en-US\" }) {\n    return new GenericL10n(locale);\n  }\n\n  static createScripting({ sandboxBundleSrc }) {\n    return new GenericScripting(sandboxBundleSrc);\n  }\n}\nPDFViewerApplication.externalServices = GenericExternalServices;\n\nexport { GenericCom };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions, OptionKind } from \"./app_options.js\";\n\n/**\n * BasePreferences - Abstract base class for storing persistent settings.\n *   Used for settings that should be applied to all opened documents,\n *   or every time the viewer is loaded.\n */\nclass BasePreferences {\n  constructor() {\n    if (this.constructor === BasePreferences) {\n      throw new Error(\"Cannot initialize BasePreferences.\");\n    }\n    Object.defineProperty(this, \"defaults\", {\n      value: Object.freeze(\n        typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")\n          ? AppOptions.getAll(OptionKind.PREFERENCE)\n          : PDFJSDev.eval(\"DEFAULT_PREFERENCES\")\n      ),\n      writable: false,\n      enumerable: true,\n      configurable: false,\n    });\n    this.prefs = Object.create(null);\n\n    this._initializedPromise = this._readFromStorage(this.defaults).then(\n      prefs => {\n        for (const name in this.defaults) {\n          const prefValue = prefs?.[name];\n          // Ignore preferences whose types don't match the default values.\n          if (typeof prefValue === typeof this.defaults[name]) {\n            this.prefs[name] = prefValue;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Stub function for writing preferences to storage.\n   * @param {Object} prefObj The preferences that should be written to storage.\n   * @returns {Promise} A promise that is resolved when the preference values\n   *                    have been written.\n   */\n  async _writeToStorage(prefObj) {\n    throw new Error(\"Not implemented: _writeToStorage\");\n  }\n\n  /**\n   * Stub function for reading preferences from storage.\n   * @param {Object} prefObj The preferences that should be read from storage.\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *                    the preferences that have been read.\n   */\n  async _readFromStorage(prefObj) {\n    throw new Error(\"Not implemented: _readFromStorage\");\n  }\n\n  /**\n   * Reset the preferences to their default values and update storage.\n   * @returns {Promise} A promise that is resolved when the preference values\n   *                    have been reset.\n   */\n  async reset() {\n    await this._initializedPromise;\n    this.prefs = Object.create(null);\n    return this._writeToStorage(this.defaults);\n  }\n\n  /**\n   * Set the value of a preference.\n   * @param {string} name The name of the preference that should be changed.\n   * @param {boolean|number|string} value The new value of the preference.\n   * @returns {Promise} A promise that is resolved when the value has been set,\n   *                    provided that the preference exists and the types match.\n   */\n  async set(name, value) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Set preference: \"${name}\" is undefined.`);\n    } else if (value === undefined) {\n      throw new Error(\"Set preference: no value is specified.\");\n    }\n    const valueType = typeof value;\n    const defaultType = typeof defaultValue;\n\n    if (valueType !== defaultType) {\n      if (valueType === \"number\" && defaultType === \"string\") {\n        value = value.toString();\n      } else {\n        throw new Error(\n          `Set preference: \"${value}\" is a ${valueType}, expected a ${defaultType}.`\n        );\n      }\n    } else {\n      if (valueType === \"number\" && !Number.isInteger(value)) {\n        throw new Error(`Set preference: \"${value}\" must be an integer.`);\n      }\n    }\n    this.prefs[name] = value;\n    return this._writeToStorage(this.prefs);\n  }\n\n  /**\n   * Get the value of a preference.\n   * @param {string} name The name of the preference whose value is requested.\n   * @returns {Promise} A promise resolved with a {boolean|number|string}\n   *                    containing the value of the preference.\n   */\n  async get(name) {\n    await this._initializedPromise;\n    const defaultValue = this.defaults[name],\n      prefValue = this.prefs[name];\n\n    if (defaultValue === undefined) {\n      throw new Error(`Get preference: \"${name}\" is undefined.`);\n    }\n    return prefValue !== undefined ? prefValue : defaultValue;\n  }\n\n  /**\n   * Get the values of all preferences.\n   * @returns {Promise} A promise that is resolved with an {Object} containing\n   *                    the values of all preferences.\n   */\n  async getAll() {\n    await this._initializedPromise;\n    const obj = Object.create(null);\n\n    for (const name in this.defaults) {\n      const prefValue = this.prefs[name];\n      obj[name] = prefValue !== undefined ? prefValue : this.defaults[name];\n    }\n    return obj;\n  }\n}\n\nexport { BasePreferences };\n","/* Copyright 2013 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n\nimport { createObjectURL, createValidAbsoluteUrl, isPdfFile } from \"pdfjs-lib\";\nimport { compatibilityParams } from \"./app_options.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"CHROME || GENERIC\")) {\n  throw new Error(\n    'Module \"pdfjs-web/download_manager\" shall not be used ' +\n      \"outside CHROME and GENERIC builds.\"\n  );\n}\n\nfunction download(blobUrl, filename) {\n  const a = document.createElement(\"a\");\n  if (!a.click) {\n    throw new Error('DownloadManager: \"a.click()\" is not supported.');\n  }\n  a.href = blobUrl;\n  a.target = \"_parent\";\n  // Use a.download if available. This increases the likelihood that\n  // the file is downloaded instead of opened by another PDF plugin.\n  if (\"download\" in a) {\n    a.download = filename;\n  }\n  // <a> must be in the document for recent Firefox versions,\n  // otherwise .click() is ignored.\n  (document.body || document.documentElement).appendChild(a);\n  a.click();\n  a.remove();\n}\n\n/**\n * @implements {IDownloadManager}\n */\nclass DownloadManager {\n  constructor() {\n    this._openBlobUrls = new WeakMap();\n  }\n\n  downloadUrl(url, filename) {\n    if (!createValidAbsoluteUrl(url, \"http://example.com\")) {\n      Window['ngxConsole'].error(`downloadUrl - not a valid URL: ${url}`);\n      return; // restricted/invalid URL\n    }\n    download(url + \"#pdfjs.action=download\", filename);\n  }\n\n  downloadData(data, filename, contentType) {\n    const blobUrl = createObjectURL(\n      data,\n      contentType,\n      compatibilityParams.disableCreateObjectURL\n    );\n    download(blobUrl, filename);\n  }\n\n  /**\n   * @returns {boolean} Indicating if the data was opened.\n   */\n  openOrDownloadData(element, data, filename) {\n    const isPdfData = isPdfFile(filename);\n    const contentType = isPdfData ? \"application/pdf\" : \"\";\n\n    if (isPdfData && !compatibilityParams.disableCreateObjectURL) {\n      let blobUrl = this._openBlobUrls.get(element);\n      if (!blobUrl) {\n        blobUrl = URL.createObjectURL(new Blob([data], { type: contentType }));\n        this._openBlobUrls.set(element, blobUrl);\n      }\n      let viewerUrl;\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        // The current URL is the viewer, let's use it and append the file.\n        viewerUrl = \"?file=\" + encodeURIComponent(blobUrl + \"#\" + filename);\n      } else if (PDFJSDev.test(\"CHROME\")) {\n        // In the Chrome extension, the URL is rewritten using the history API\n        // in viewer.js, so an absolute URL must be generated.\n        viewerUrl =\n          // eslint-disable-next-line no-undef\n          chrome.runtime.getURL(\"/content/web/viewer.html\") +\n          \"?file=\" +\n          encodeURIComponent(blobUrl + \"#\" + filename);\n      }\n\n      try {\n        window.open(viewerUrl);\n        return true;\n      } catch (ex) {\n        Window['ngxConsole'].error(`openOrDownloadData: ${ex}`);\n        // Release the `blobUrl`, since opening it failed, and fallback to\n        // downloading the PDF file.\n        URL.revokeObjectURL(blobUrl);\n        this._openBlobUrls.delete(element);\n      }\n    }\n\n    this.downloadData(data, filename, contentType);\n    return false;\n  }\n\n  /**\n   * @param sourceEventType {string} Used to signal what triggered the download.\n   *   The version of PDF.js integrated with Firefox uses this to to determine\n   *   which dialog to show. \"save\" triggers \"save as\" and \"download\" triggers\n   *   the \"open with\" dialog.\n   */\n  download(blob, url, filename, sourceEventType = \"download\") {\n    if (compatibilityParams.disableCreateObjectURL && url) { // #629 modified by ngx-extended-pdf-viewer\n      // URL.createObjectURL is not supported\n        this.downloadUrl(url, filename);\n      return;\n    }\n    const blobUrl = URL.createObjectURL(blob);\n    download(blobUrl, filename);\n  }\n}\n\nexport { DownloadManager };\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./interfaces\").IL10n} IL10n */\n\nimport \"../external/webL10n/l10n.js\";\nimport { fixupLangCode, getL10nFallback } from \"./l10n_utils.js\";\n\nconst webL10n = document.webL10n;\n\n/**\n * @implements {IL10n}\n */\nclass GenericL10n {\n  constructor(lang) {\n    this._lang = lang;\n    this._ready = new Promise((resolve, reject) => {\n      webL10n.setLanguage(fixupLangCode(lang), () => {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  async getLanguage() {\n    const l10n = await this._ready;\n    return l10n.getLanguage();\n  }\n\n  async getDirection() {\n    const l10n = await this._ready;\n    return l10n.getDirection();\n  }\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    const l10n = await this._ready;\n    return l10n.get(key, args, fallback);\n  }\n\n  async translate(element) {\n    const l10n = await this._ready;\n    return l10n.translate(element);\n  }\n}\n\nexport { GenericL10n };\n","/**\n * Copyright (c) 2011-2013 Fabien Cazenave, Mozilla.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n/*\n  Additional modifications for PDF.js project:\n    - Disables language initialization on page loading.\n    - Disables document translation on page loading.\n    - Removes consoleWarn and consoleLog and use Window['ngxConsole'].log/warn directly.\n    - Removes window._ assignment.\n    - Remove compatibility code for OldIE.\n    - Replaces `String.prototype.substr()` with `String.prototype.substring()`.\n    - Removes `fireL10nReadyEvent` since the \"localized\" event it dispatches\n      is unused and may clash with an identically named event in the viewer.\n*/\n\n/*jshint browser: true, devel: true, es5: true, globalstrict: true */\n\"use strict\";\ndocument.webL10n = (function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = \"\";\n  var gTextProp = \"textContent\";\n  var gLanguage = \"\";\n  var gMacros = {};\n  var gReadyState = \"loading\";\n\n  /**\n   * Synchronously loading l10n resources significantly minimizes flickering\n   * from displaying the app with non-localized strings and then updating the\n   * strings. Although this will block all script execution on this page, we\n   * expect that the l10n resources are available locally on flash-storage.\n   *\n   * As synchronous XHR is generally considered as a bad idea, we're still\n   * loading l10n resources asynchronously -- but we keep this in a setting,\n   * just in case... and applications using this library should hide their\n   * content until the `localized' event happens.\n   */\n\n  var gAsyncResourceLoading = true; // read-only\n\n  /**\n   * DOM helpers for the so-called \"HTML API\".\n   *\n   * These functions are written for modern browsers. For old versions of IE,\n   * they're overridden in the 'startup' section at the end of this file.\n   */\n\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    // TODO: support multiple and external JSON dictionaries\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll(\"*[data-l10n-id]\") : [];\n  }\n\n  function getL10nAttributes(element) {\n    if (!element) return {};\n\n    var l10nId = element.getAttribute(\"data-l10n-id\");\n    var l10nArgs = element.getAttribute(\"data-l10n-args\");\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n        if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n          Window['ngxConsole'].warn(\"could not parse arguments for #\" + l10nId);\n        }\n      }\n    }\n    return { id: l10nId, args: args };\n  }\n\n  function fireL10nReadyEvent(lang) {\n    var evtObject = document.createEvent(\"Event\");\n    evtObject.initEvent(\"localized\", true, false);\n    evtObject.language = lang;\n    document.dispatchEvent(evtObject);\n  }\n\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType(\"text/plain; charset=utf-8\");\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n\n    // in Firefox OS with the app:// protocol, trying to XHR a non-existing\n    // URL will raise an exception here -- hence this ugly try...catch.\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n\n  /**\n   * l10n resource parser:\n   *  - reads (async XHR) the l10n resource matching `lang';\n   *  - imports linked resources (synchronously) when specified;\n   *  - parses the text data (fills `gL10nData' and `gTextData');\n   *  - triggers success/failure callbacks when done.\n   *\n   * @param {string} href\n   *    URL of the l10n resource to parse.\n   *\n   * @param {string} lang\n   *    locale (language) to parse. Must be a lowercase string.\n   *\n   * @param {Function} successCallback\n   *    triggered when the l10n resource has been successfully parsed.\n   *\n   * @param {Function} failureCallback\n   *    triggered when the an error has occurred.\n   *\n   * @return {void}\n   *    uses the following global variables: gL10nData, gTextData, gTextProp.\n   */\n\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, \"\") || \"./\";\n\n    // handle escaped characters (backslashes) in a string\n    function evalString(text) {\n      if (text.lastIndexOf(\"\\\\\") < 0) return text;\n      return text\n        .replace(/\\\\\\\\/g, \"\\\\\")\n        .replace(/\\\\n/g, \"\\n\")\n        .replace(/\\\\r/g, \"\\r\")\n        .replace(/\\\\t/g, \"\\t\")\n        .replace(/\\\\b/g, \"\\b\")\n        .replace(/\\\\f/g, \"\\f\")\n        .replace(/\\\\{/g, \"{\")\n        .replace(/\\\\}/g, \"}\")\n        .replace(/\\\\\"/g, '\"')\n        .replace(/\\\\'/g, \"'\");\n    }\n\n    // parse *.properties text data into an l10n dictionary\n    // If gAsyncResourceLoading is false, then the callback will be called\n    // synchronously. Otherwise it is called asynchronously.\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n\n      // token expressions\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/; // TODO: escape EOLs with '\\'\n\n      // parse the *.properties file into an associative array\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, \"\").split(/[\\r\\n]+/);\n        var currentLang = \"*\";\n        var genericLang = lang.split(\"-\", 1)[0];\n        var skipLang = false;\n        var match = \"\";\n\n        var languagefound = false; // #150\n        function nextEntry() {\n          var genericMatch = undefined; // #150\n\n          // Use infinite loop instead of recursion to avoid reaching the\n          // maximum recursion limit for content with many lines.\n          while (true) {\n            if (!entries.length && genericMatch) {\n              if (!languagefound) {\n                loadImport(genericMatch, nextEntry);\n              } else {\n                nextEntry();\n              } // #150\n              return; // #150\n            } // #150\n            else if (!entries.length) {\n              // #150\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n\n            // comment or blank line?\n            if (reComment.test(line)) continue;\n\n            // the extended syntax supports [lang] sections and @import rules\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) {\n                // section start?\n                // RFC 4646, section 4.4, \"All comparisons MUST be performed\n                // in a case-insensitive manner.\"\n\n                currentLang = match[1].toLowerCase();\n                skipLang =\n                  currentLang !== \"*\" &&\n                  currentLang !== lang &&\n                  currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) {\n                // @import rule?\n                if (currentLang === \"*\" || currentLang === lang) {\n                  // #150\n                  loadImport(baseURL + match[1], nextEntry);\n                  languagefound = true;\n                  return;\n                } else {\n                  // #150\n                  genericMatch = baseURL + match[1]; // #150\n                } // #150\n              }\n            }\n\n            // key-value pair\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n\n      // import another *.properties file\n      function loadImport(url, callback) {\n        xhrLoadText(\n          url,\n          function (content) {\n            parseRawLines(content, false, callback); // don't allow recursive imports\n          },\n          function () {\n            const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n            if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n              Window['ngxConsole'].warn(url + \" not found.\");\n            }\n            callback();\n          }\n        );\n      }\n\n      // fill the dictionary\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n\n    // load and parse l10n data (warning: global variables are used here)\n    xhrLoadText(\n      href,\n      function (response) {\n        gTextData += response; // mostly for debug\n\n        // parse *.properties text data into an l10n dictionary\n        parseProperties(response, function (data) {\n          // find attribute descriptions, if any\n          for (var key in data) {\n            var id,\n              prop,\n              index = key.lastIndexOf(\".\");\n            if (index > 0) {\n              // an attribute has been specified\n              id = key.substring(0, index);\n              prop = key.substring(index + 1);\n            } else {\n              // no attribute: assuming text content by default\n              id = key;\n              prop = gTextProp;\n            }\n            if (!gL10nData[id]) {\n              gL10nData[id] = {};\n            }\n            gL10nData[id][prop] = data[key];\n          }\n\n          // trigger callback\n          if (successCallback) {\n            successCallback();\n          }\n        });\n      },\n      failureCallback\n    );\n  }\n\n  // load and parse all resources for the specified locale\n  function loadLocale(lang, callback) {\n    let originalCaseLang = lang;\n    // RFC 4646, section 2.1 states that language tags have to be treated as\n    // case-insensitive. Convert to lowercase for case-insensitive comparisons.\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n\n    callback = callback || function _callback() {};\n\n    clear();\n    gLanguage = lang;\n\n    // check all <link type=\"application/l10n\" href=\"...\" /> nodes\n    // and load the resource files\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      // we might have a pre-compiled dictionary instead\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        Window['ngxConsole'].log(\n          \"The PDF viewer uses the pre-compiled language bundle stored in the HTML page.\"\n        );\n        gL10nData = dict.locales[originalCaseLang]; // modified line\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            originalCaseLang = anyCaseLang; // added line\n            anyCaseLang = anyCaseLang.toLowerCase();\n\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[originalCaseLang]; // modified line\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[originalCaseLang]; // modified line\n            }\n          }\n        }\n        callback();\n      } else {\n        Window['ngxConsole'].log(\n          \"Could not load the translation files for the PDF viewer. Check the flag useBrowserLocale, check the locales subfolder of the assets folder, or add the locale definition to the index.html\"\n        );\n      }\n      // early way out\n      fireL10nReadyEvent(lang);\n      gReadyState = \"complete\";\n      return;\n    }\n\n    // start the callback when all resources are loaded\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function () {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        fireL10nReadyEvent(lang);\n        gReadyState = \"complete\";\n      }\n    };\n\n    // load all resource files\n    function L10nResourceLink(link) {\n      var href = link.href;\n      // Note: If |gAsyncResourceLoading| is false, then the following callbacks\n      // are synchronously called.\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n          if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n            Window['ngxConsole'].warn(href + \" not found.\");\n            // lang not found, used default resource instead\n            Window['ngxConsole'].warn('\"' + lang + '\" resource not found');\n          }\n          gLanguage = \"\";\n          // Resource not loaded, but we still need to call the callback.\n          callback();\n        });\n      };\n    }\n\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n\n  // clear all l10n data\n  function clear() {\n    gL10nData = {};\n    gTextData = \"\";\n    gLanguage = \"\";\n    // TODO: clear all non predefined macros.\n    // There's no such macro /yet/ but we're planning to have some...\n  }\n\n  /**\n   * Get rules for plural forms (shared with JetPack), see:\n   * http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html\n   * https://github.com/mozilla/addon-sdk/blob/master/python-lib/plural-rules-generator.p\n   *\n   * @param {string} lang\n   *    locale (language) used.\n   *\n   * @return {Function}\n   *    returns a function that gives the plural form name for a given integer:\n   *       var fun = getPluralRules('en');\n   *       fun(1)    -> 'one'\n   *       fun(0)    -> 'other'\n   *       fun(1000) -> 'other'.\n   */\n\n  function getPluralRules(lang) {\n    var locales2rules = {\n      af: 3,\n      ak: 4,\n      am: 4,\n      ar: 1,\n      asa: 3,\n      az: 0,\n      be: 11,\n      bem: 3,\n      bez: 3,\n      bg: 3,\n      bh: 4,\n      bm: 0,\n      bn: 3,\n      bo: 0,\n      br: 20,\n      brx: 3,\n      bs: 11,\n      ca: 3,\n      cgg: 3,\n      chr: 3,\n      cs: 12,\n      cy: 17,\n      da: 3,\n      de: 3,\n      dv: 3,\n      dz: 0,\n      ee: 3,\n      el: 3,\n      en: 3,\n      eo: 3,\n      es: 3,\n      et: 3,\n      eu: 3,\n      fa: 0,\n      ff: 5,\n      fi: 3,\n      fil: 4,\n      fo: 3,\n      fr: 5,\n      fur: 3,\n      fy: 3,\n      ga: 8,\n      gd: 24,\n      gl: 3,\n      gsw: 3,\n      gu: 3,\n      guw: 4,\n      gv: 23,\n      ha: 3,\n      haw: 3,\n      he: 2,\n      hi: 4,\n      hr: 11,\n      hu: 0,\n      id: 0,\n      ig: 0,\n      ii: 0,\n      is: 3,\n      it: 3,\n      iu: 7,\n      ja: 0,\n      jmc: 3,\n      jv: 0,\n      ka: 0,\n      kab: 5,\n      kaj: 3,\n      kcg: 3,\n      kde: 0,\n      kea: 0,\n      kk: 3,\n      kl: 3,\n      km: 0,\n      kn: 0,\n      ko: 0,\n      ksb: 3,\n      ksh: 21,\n      ku: 3,\n      kw: 7,\n      lag: 18,\n      lb: 3,\n      lg: 3,\n      ln: 4,\n      lo: 0,\n      lt: 10,\n      lv: 6,\n      mas: 3,\n      mg: 4,\n      mk: 16,\n      ml: 3,\n      mn: 3,\n      mo: 9,\n      mr: 3,\n      ms: 0,\n      mt: 15,\n      my: 0,\n      nah: 3,\n      naq: 7,\n      nb: 3,\n      nd: 3,\n      ne: 3,\n      nl: 3,\n      nn: 3,\n      no: 3,\n      nr: 3,\n      nso: 4,\n      ny: 3,\n      nyn: 3,\n      om: 3,\n      or: 3,\n      pa: 3,\n      pap: 3,\n      pl: 13,\n      ps: 3,\n      pt: 3,\n      rm: 3,\n      ro: 9,\n      rof: 3,\n      ru: 11,\n      rwk: 3,\n      sah: 0,\n      saq: 3,\n      se: 7,\n      seh: 3,\n      ses: 0,\n      sg: 0,\n      sh: 11,\n      shi: 19,\n      sk: 12,\n      sl: 14,\n      sma: 7,\n      smi: 7,\n      smj: 7,\n      smn: 7,\n      sms: 7,\n      sn: 3,\n      so: 3,\n      sq: 3,\n      sr: 11,\n      ss: 3,\n      ssy: 3,\n      st: 3,\n      sv: 3,\n      sw: 3,\n      syr: 3,\n      ta: 3,\n      te: 3,\n      teo: 3,\n      th: 0,\n      ti: 4,\n      tig: 3,\n      tk: 3,\n      tl: 4,\n      tn: 3,\n      to: 0,\n      tr: 0,\n      ts: 3,\n      tzm: 22,\n      uk: 11,\n      ur: 3,\n      ve: 3,\n      vi: 0,\n      vun: 3,\n      wa: 4,\n      wae: 3,\n      wo: 0,\n      xh: 3,\n      xog: 3,\n      yo: 0,\n      zh: 0,\n      zu: 3,\n    };\n\n    // utility functions for plural rules methods\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n\n    // list of all plural rules methods:\n    // map an integer to the plural form name to use\n    var pluralRules = {\n      \"0\": function (n) {\n        return \"other\";\n      },\n      \"1\": function (n) {\n        if (isBetween(n % 100, 3, 10)) return \"few\";\n        if (n === 0) return \"zero\";\n        if (isBetween(n % 100, 11, 99)) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"2\": function (n) {\n        if (n !== 0 && n % 10 === 0) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"3\": function (n) {\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"4\": function (n) {\n        if (isBetween(n, 0, 1)) return \"one\";\n        return \"other\";\n      },\n      \"5\": function (n) {\n        if (isBetween(n, 0, 2) && n != 2) return \"one\";\n        return \"other\";\n      },\n      \"6\": function (n) {\n        if (n === 0) return \"zero\";\n        if (n % 10 == 1 && n % 100 != 11) return \"one\";\n        return \"other\";\n      },\n      \"7\": function (n) {\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"8\": function (n) {\n        if (isBetween(n, 3, 6)) return \"few\";\n        if (isBetween(n, 7, 10)) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"9\": function (n) {\n        if (n === 0 || (n != 1 && isBetween(n % 100, 1, 19))) return \"few\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"10\": function (n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19))\n          return \"few\";\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return \"one\";\n        return \"other\";\n      },\n      \"11\": function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14))\n          return \"few\";\n        if (\n          n % 10 === 0 ||\n          isBetween(n % 10, 5, 9) ||\n          isBetween(n % 100, 11, 14)\n        )\n          return \"many\";\n        if (n % 10 == 1 && n % 100 != 11) return \"one\";\n        return \"other\";\n      },\n      \"12\": function (n) {\n        if (isBetween(n, 2, 4)) return \"few\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"13\": function (n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14))\n          return \"few\";\n        if (\n          (n != 1 && isBetween(n % 10, 0, 1)) ||\n          isBetween(n % 10, 5, 9) ||\n          isBetween(n % 100, 12, 14)\n        )\n          return \"many\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"14\": function (n) {\n        if (isBetween(n % 100, 3, 4)) return \"few\";\n        if (n % 100 == 2) return \"two\";\n        if (n % 100 == 1) return \"one\";\n        return \"other\";\n      },\n      \"15\": function (n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return \"few\";\n        if (isBetween(n % 100, 11, 19)) return \"many\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"16\": function (n) {\n        if (n % 10 == 1 && n != 11) return \"one\";\n        return \"other\";\n      },\n      \"17\": function (n) {\n        if (n == 3) return \"few\";\n        if (n === 0) return \"zero\";\n        if (n == 6) return \"many\";\n        if (n == 2) return \"two\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"18\": function (n) {\n        if (n === 0) return \"zero\";\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return \"one\";\n        return \"other\";\n      },\n      \"19\": function (n) {\n        if (isBetween(n, 2, 10)) return \"few\";\n        if (isBetween(n, 0, 1)) return \"one\";\n        return \"other\";\n      },\n      \"20\": function (n) {\n        if (\n          (isBetween(n % 10, 3, 4) || n % 10 == 9) &&\n          !(\n            isBetween(n % 100, 10, 19) ||\n            isBetween(n % 100, 70, 79) ||\n            isBetween(n % 100, 90, 99)\n          )\n        )\n          return \"few\";\n        if (n % 1000000 === 0 && n !== 0) return \"many\";\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return \"two\";\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return \"one\";\n        return \"other\";\n      },\n      \"21\": function (n) {\n        if (n === 0) return \"zero\";\n        if (n == 1) return \"one\";\n        return \"other\";\n      },\n      \"22\": function (n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return \"one\";\n        return \"other\";\n      },\n      \"23\": function (n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return \"one\";\n        return \"other\";\n      },\n      \"24\": function (n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return \"few\";\n        if (isIn(n, [2, 12])) return \"two\";\n        if (isIn(n, [1, 11])) return \"one\";\n        return \"other\";\n      },\n    };\n\n    // return a function that gives the plural form name for a given integer\n    var index = locales2rules[lang.replace(/-.*$/, \"\")];\n    if (!(index in pluralRules)) {\n      const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n      if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n        Window['ngxConsole'].warn(\"plural form unknown for [\" + lang + \"]\");\n      }\n      return function () {\n        return \"other\";\n      };\n    }\n    return pluralRules[index];\n  }\n\n  // pre-defined 'plural' macro\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n\n    // TODO: support other properties (l20n still doesn't...)\n    if (prop != gTextProp) return str;\n\n    // initialize _pluralRules\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = \"[\" + gMacros._pluralRules(n) + \"]\";\n\n    // try to find a [zero|one|two] key if it's defined\n    if (n === 0 && key + \"[zero]\" in gL10nData) {\n      str = gL10nData[key + \"[zero]\"][prop];\n    } else if (n == 1 && key + \"[one]\" in gL10nData) {\n      str = gL10nData[key + \"[one]\"][prop];\n    } else if (n == 2 && key + \"[two]\" in gL10nData) {\n      str = gL10nData[key + \"[two]\"][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + \"[other]\" in gL10nData) {\n      str = gL10nData[key + \"[other]\"][prop];\n    }\n\n    return str;\n  };\n\n  /**\n   * l10n dictionary functions\n   */\n\n  // fetch an l10n object, warn if not found, apply `args' if possible\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n      if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n        Window['ngxConsole'].warn(\"Translation for the key #\" + key + \" is missing.\");\n      }\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n\n    /** This is where l10n expressions should be processed.\n     * The plan is to support C-style expressions from the l20n project;\n     * until then, only two kinds of simple expressions are supported:\n     *   {[ index ]} and {{ arguments }}.\n     */\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n\n  // replace {[macros]} with their values\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n\n    // an index/macro has been found\n    // Note: at the moment, only one parameter is supported\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n\n    // there's no macro parser yet: it has to be defined in gMacros\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n\n  // replace {{arguments}} with their values\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      Window['ngxConsole'].log(\"argument {{\" + arg + \"}} for #\" + key + \" is undefined.\");\n      return matched_text;\n    });\n  }\n\n  // translate an HTML element\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n\n    // get the related l10n object\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      const PDFViewerApplicationOptions = window.PDFViewerApplicationOptions;\n      if ((!PDFViewerApplicationOptions) || PDFViewerApplicationOptions.get(\"verbosity\") > 0) {\n        Window['ngxConsole'].warn(\"#\" + l10n.id + \" is undefined.\");\n      }\n      return;\n    }\n\n    // translate element (TODO: security checks?)\n    if (data[gTextProp]) {\n      // XXX\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        // this element has element children: replace the content of the first\n        // (non-empty) child textNode and clear other child textNodes\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = \"\";\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        // if no (non-empty) textNode is found, insert a textNode before the\n        // first element child.\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n\n  // webkit browsers don't currently support 'children' on SVG elements...\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== \"undefined\") {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n\n  // translate an HTML subtree\n  function translateFragment(element) {\n    element = element || document.documentElement;\n\n    // check all translatable children (= w/ a `data-l10n-id' attribute)\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n\n    // translate element itself if necessary\n    translateElement(element);\n  }\n\n  return {\n    // get a localized string\n    get: function (key, args, fallbackString) {\n      var index = key.lastIndexOf(\".\");\n      var prop = gTextProp;\n      if (index > 0) {\n        // An attribute has been specified\n        prop = key.substring(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return \"{{\" + key + \"}}\";\n    },\n\n    // debug\n    getData: function () {\n      return gL10nData;\n    },\n    getText: function () {\n      return gTextData;\n    },\n\n    // get|set the document language\n    getLanguage: function () {\n      return gLanguage;\n    },\n    setLanguage: function (lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n\n    // get the direction (ltr|rtl) of the current language\n    getDirection: function () {\n      // http://www.w3.org/International/questions/qa-scripts\n      // Arabic, Hebrew, Farsi, Pashto, Urdu\n      var rtlList = [\"ar\", \"he\", \"fa\", \"ps\", \"ur\"];\n      var shortCode = gLanguage.split(\"-\", 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? \"rtl\" : \"ltr\";\n    },\n\n    // translate an element or document fragment\n    translate: translateFragment,\n\n    // this can be used to prevent race conditions\n    getReadyState: function () {\n      return gReadyState;\n    },\n    ready: function (callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == \"complete\" || gReadyState == \"interactive\") {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener(\"localized\", function once() {\n          document.removeEventListener(\"localized\", once);\n          callback();\n        });\n      }\n    },\n  };\n})(window, document);\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getPdfFilenameFromUrl, loadScript } from \"pdfjs-lib\";\n\nasync function docPropertiesLookup(pdfDocument) {\n  const url = \"\",\n    baseUrl = url.split(\"#\")[0];\n  // eslint-disable-next-line prefer-const\n  let { info, metadata, contentDispositionFilename, contentLength } =\n    await pdfDocument.getMetadata();\n\n  if (!contentLength) {\n    const { length } = await pdfDocument.getDownloadInfo();\n    contentLength = length;\n  }\n\n  return {\n    ...info,\n    baseURL: baseUrl,\n    filesize: contentLength,\n    filename: contentDispositionFilename || getPdfFilenameFromUrl(url),\n    metadata: metadata?.getRaw(),\n    authors: metadata?.get(\"dc:creator\"),\n    numPages: pdfDocument.numPages,\n    URL: url,\n  };\n}\n\nclass GenericScripting {\n  constructor(sandboxBundleSrc) {\n    this._ready = loadScript(\n      sandboxBundleSrc,\n      /* removeScriptElement = */ true\n    ).then(() => {\n      return window.pdfjsSandbox.QuickJSSandbox();\n    });\n  }\n\n  async createSandbox(data) {\n    const sandbox = await this._ready;\n    sandbox.create(data);\n  }\n\n  async dispatchEventInSandbox(event) {\n    const sandbox = await this._ready;\n    sandbox.dispatchEvent(event);\n  }\n\n  async destroySandbox() {\n    const sandbox = await this._ready;\n    sandbox.nukeSandbox();\n  }\n}\n\nexport { docPropertiesLookup, GenericScripting };\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationMode, PixelsPerInch } from \"pdfjs-lib\";\nimport { PDFPrintServiceFactory, PDFViewerApplication } from \"./app.js\";\nimport canvasSize from \"canvas-size\";\nimport { compatibilityParams } from \"./app_options.js\";\nimport { getXfaHtmlForPrinting } from \"./print_utils.js\";\n\nlet activeService = null;\nlet overlayManager = null;\n\n// Renders the page to the canvas of the given print service, and returns\n// the suggested dimensions of the output page.\nfunction renderPage(\n  activeServiceOnEntry,\n  pdfDocument,\n  pageNumber,\n  size,\n  printResolution,\n  optionalContentConfigPromise\n) {\n  const scratchCanvas = activeService.scratchCanvas;\n\n  // The size of the canvas in pixels for printing.\n  let PRINT_UNITS = printResolution / PixelsPerInch.PDF;\n\n  // modified by ngx-extended-pdf-viewer #530\n  let scale = 1;\n\n  const canvasWidth = Math.floor(size.width * PRINT_UNITS);\n  const canvasHeight = Math.floor(size.height * PRINT_UNITS);\n  if (canvasWidth >= 4096 || canvasHeight >= 4096) {\n    if (!canvasSize.test({ width: canvasWidth, height: canvasHeight })) {\n      const max = determineMaxDimensions();\n      scale = Math.min(max / canvasWidth, max / canvasHeight) * 0.95;\n    }\n    warn(\"Page \" + pageNumber + \": Reduced the [printResolution] to \" + Math.floor(printResolution * scale) + \" because the browser can't render larger canvases. If you see blank page in the print preview, reduce [printResolution] manually to a lower value.\");\n  }\n\n  PRINT_UNITS *= scale;\n  scratchCanvas.width = Math.floor(size.width * PRINT_UNITS);\n  scratchCanvas.height = Math.floor(size.height * PRINT_UNITS);\n\n  const ctx = scratchCanvas.getContext(\"2d\");\n  ctx.save();\n  ctx.fillStyle = \"rgb(255, 255, 255)\";\n  ctx.fillRect(0, 0, scratchCanvas.width, scratchCanvas.height);\n  ctx.restore();\n\n  return pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n    const renderContext = {\n      canvasContext: ctx,\n      transform: [PRINT_UNITS, 0, 0, PRINT_UNITS, 0, 0],\n      viewport: pdfPage.getViewport({ scale: 1, rotation: size.rotation }),\n      intent: \"print\",\n      annotationMode: AnnotationMode.ENABLE_STORAGE,\n      optionalContentConfigPromise,\n      background: PDFViewerApplicationOptions.get(\"pdfBackgroundColor\"),\n    };\n    return pdfPage.render(renderContext).promise;\n  });\n}\n\n // modified (added) by ngx-extended-pdf-viewer #530\n function determineMaxDimensions() {\n  const checklist = [4096, // iOS\n    8192, // IE 9-10\n    10836, // Android\n    11180, // Firefox\n    11402, // Android,\n    14188,\n    16384\n  ];\n  for (let width of checklist) {\n    if (!canvasSize.test({width: width+1, height: width+1})) {\n      return width;\n    }\n  }\n  return 16384;\n}\n// end of modification\n\nfunction PDFPrintService(\n  pdfDocument,\n  pagesOverview,\n  printContainer,\n  printResolution,\n  optionalContentConfigPromise = null,\n  l10n,\n  eventBus // #588 modified by ngx-extended-pdf-viewer\n) {\n  this.pdfDocument = pdfDocument;\n  this.pagesOverview = pagesOverview;\n  this.printContainer = printContainer;\n  this._printResolution = printResolution || 150;\n  this._optionalContentConfigPromise =\n    optionalContentConfigPromise || pdfDocument.getOptionalContentConfig();\n  this.l10n = l10n;\n  this.currentPage = -1;\n  // The temporary canvas where renderPage paints one page at a time.\n  this.scratchCanvas = document.createElement(\"canvas\");\n\n  // #588 modified by ngx-extended-pdf-viewer\n  this.eventBus = eventBus;\n  // #588 end of modification\n}\n\nPDFPrintService.prototype = {\n  layout() {\n    this.throwIfInactive();\n\n    const body = document.querySelector(\"body\");\n    body.setAttribute(\"data-pdfjsprinting\", true);\n\n    const hasEqualPageSizes = this.pagesOverview.every(function (size) {\n      return (\n        size.width === this.pagesOverview[0].width &&\n        size.height === this.pagesOverview[0].height\n      );\n    }, this);\n    if (!hasEqualPageSizes) {\n      Window['ngxConsole'].warn(\n        \"Not all pages have the same size. The printed \" +\n          \"result may be incorrect!\"\n      );\n    }\n\n    // Insert a @page + size rule to make sure that the page size is correctly\n    // set. Note that we assume that all pages have the same size, because\n    // variable-size pages are not supported yet (e.g. in Chrome & Firefox).\n    // TODO(robwu): Use named pages when size calculation bugs get resolved\n    // (e.g. https://crbug.com/355116) AND when support for named pages is\n    // added (http://www.w3.org/TR/css3-page/#using-named-pages).\n    // In browsers where @page + size is not supported (such as Firefox,\n    // https://bugzil.la/851441), the next stylesheet will be ignored and the\n    // user has to select the correct paper size in the UI if wanted.\n    this.pageStyleSheet = document.createElement(\"style\");\n    const pageSize = this.pagesOverview[0];\n    this.pageStyleSheet.textContent =\n      \"@page { size: \" + pageSize.width + \"pt \" + pageSize.height + \"pt;}\";\n    body.appendChild(this.pageStyleSheet);\n  },\n\n  destroy() {\n    if (activeService !== this) {\n      // |activeService| cannot be replaced without calling destroy() first,\n      // so if it differs then an external consumer has a stale reference to\n      // us.\n      return;\n    }\n    this.printContainer.textContent = \"\";\n\n    const body = document.querySelector(\"body\");\n    body.removeAttribute(\"data-pdfjsprinting\");\n\n    if (this.pageStyleSheet) {\n      this.pageStyleSheet.remove();\n      this.pageStyleSheet = null;\n    }\n    this.scratchCanvas.width = this.scratchCanvas.height = 0;\n    this.scratchCanvas = null;\n    activeService = null;\n    ensureOverlay().then(function () {\n      if (overlayManager.active !== \"printServiceOverlay\") {\n        return; // overlay was already closed\n      }\n      overlayManager.close(\"printServiceOverlay\");\n      overlayManager.unregister(\"printServiceOverlay\"); // #104\n    });\n    overlayPromise = undefined; // #104\n  },\n\n  renderPages() {\n    if (this.pdfDocument.isPureXfa) {\n      getXfaHtmlForPrinting(this.printContainer, this.pdfDocument);\n      return Promise.resolve();\n    }\n\n    const pageCount = this.pagesOverview.length;\n    const renderNextPage = (resolve, reject) => {\n      this.throwIfInactive();\n      while (true) {\n        // #243\n        ++this.currentPage; // #243\n        if (this.currentPage >= pageCount) {\n          // #243\n          break; // #243\n        } // #243\n        if (\n          !window.isInPDFPrintRange ||\n          window.isInPDFPrintRange(this.currentPage)\n        ) {\n          // #243\n          break; // #243\n        } // #243\n      } // #243\n\n      if (this.currentPage >= pageCount) {\n        renderProgress(\n          window.filteredPageCount | pageCount,\n          window.filteredPageCount | pageCount,\n          this.l10n,\n          this.eventBus // #588 modified by ngx-extended-pdf-viewer\n        ); // #243\n        resolve();\n        return;\n      }\n\n      const index = this.currentPage;\n      renderProgress(index, window.filteredPageCount | pageCount, this.l10n, this.eventBus); // #243 and #588 modified by ngx-extended-pdf-viewer\n      renderPage(\n        this,\n        this.pdfDocument,\n        /* pageNumber = */ index + 1,\n        this.pagesOverview[index],\n        this._printResolution,\n        this._optionalContentConfigPromise\n      )\n        .then(this.useRenderedPage.bind(this))\n        .then(function () {\n          renderNextPage(resolve, reject);\n        }, reject);\n    };\n    return new Promise(renderNextPage);\n  },\n\n  useRenderedPage() {\n    this.throwIfInactive();\n    const img = document.createElement(\"img\");\n    const scratchCanvas = this.scratchCanvas;\n    if (\n      \"toBlob\" in scratchCanvas &&\n      !compatibilityParams.disableCreateObjectURL\n    ) {\n      scratchCanvas.toBlob(function (blob) {\n        img.src = URL.createObjectURL(blob);\n      });\n    } else {\n      img.src = scratchCanvas.toDataURL();\n    }\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"printedPage\";\n    wrapper.appendChild(img);\n    this.printContainer.appendChild(wrapper);\n\n    return new Promise(function (resolve, reject) {\n      img.onload = resolve;\n      img.onerror = reject;\n    });\n  },\n\n  performPrint() {\n    this.throwIfInactive();\n    return new Promise(resolve => {\n      // Push window.print in the macrotask queue to avoid being affected by\n      // the deprecation of running print() code in a microtask, see\n      // https://github.com/mozilla/pdf.js/issues/7547.\n      setTimeout(() => {\n        if (!this.active) {\n          resolve();\n          return;\n        }\n        print.call(window);\n        // Delay promise resolution in case print() was not synchronous.\n        setTimeout(resolve, 20); // Tidy-up.\n      }, 0);\n    });\n  },\n\n  get active() {\n    return this === activeService;\n  },\n\n  throwIfInactive() {\n    if (!this.active) {\n      throw new Error(\"This print request was cancelled or completed.\");\n    }\n  },\n};\n\nconst print = window.print;\nwindow.printPDF = function () {\n  if (!PDFViewerApplication.enablePrint) {\n    return;\n  }\n  if (activeService) {\n    Window['ngxConsole'].warn(\"Ignored window.printPDF() because of a pending print job.\");\n    return;\n  }\n  ensureOverlay().then(function () {\n    if (activeService) {\n      overlayManager.open(\"printServiceOverlay\");\n    }\n  });\n\n  try {\n    dispatchEvent(\"beforeprint\");\n  } finally {\n    if (!activeService) {\n      Window['ngxConsole'].error(\"Expected print service to be initialized.\");\n      ensureOverlay().then(function () {\n        if (overlayManager.active === \"printServiceOverlay\") {\n          overlayManager.close(\"printServiceOverlay\");\n        }\n      });\n      return; // eslint-disable-line no-unsafe-finally\n    }\n    const activeServiceOnEntry = activeService;\n    activeService\n      .renderPages()\n      .then(function () {\n        // #643 modified by ngx-extended-pdf-viewer\n        const progressIndicator = document.getElementById(\n          \"printServiceOverlay\"\n        );\n        if (progressIndicator) {\n          progressIndicator.classList.add(\"hidden\");\n        }\n        // #643 end of modification\n        return activeServiceOnEntry.performPrint();\n      })\n      .catch(function () {\n        // Ignore any error messages.\n      })\n      .then(function () {\n        // aborts acts on the \"active\" print request, so we need to check\n        // whether the print request (activeServiceOnEntry) is still active.\n        // Without the check, an unrelated print request (created after aborting\n        // this print request while the pages were being generated) would be\n        // aborted.\n        if (activeServiceOnEntry.active) {\n          abort();\n        }\n      });\n  }\n};\n\nfunction dispatchEvent(eventType) {\n  const event = document.createEvent(\"CustomEvent\");\n  event.initCustomEvent(eventType, false, false, \"custom\");\n  window.dispatchEvent(event);\n}\n\nfunction abort() {\n  if (activeService) {\n    activeService.destroy();\n    dispatchEvent(\"afterprint\");\n  }\n}\n\nfunction renderProgress(index, total, l10n, eventBus) { // #588 modified by ngx-extended-pdf-viewer\n  const progressContainer = document.getElementById(\"printServiceOverlay\");\n  const progress = Math.round((100 * index) / total);\n  const progressBar = progressContainer.querySelector(\"progress\");\n  const progressPerc = progressContainer.querySelector(\".relative-progress\");\n  progressBar.value = progress;\n  l10n.get(\"print_progress_percent\", { progress }).then(msg => {\n    progressPerc.textContent = msg;\n  });\n  // #588 modified by ngx-extended-pdf-viewer\n  eventBus.dispatch(\"progress\", {\n    source: this,\n    type: \"print\",\n    total,\n    page: index,\n    percent: (100 * index) / total,\n  });\n  // #588 end of modification\n}\n\nPDFViewerApplication.printKeyDownListener = function (event) {\n  // Intercept Cmd/Ctrl + P in all browsers.\n  // Also intercept Cmd/Ctrl + Shift + P in Chrome and Opera\n  if (\n    event.keyCode === /* P= */ 80 &&\n    (event.ctrlKey || event.metaKey) &&\n    !event.altKey &&\n    (!event.shiftKey || window.chrome || window.opera)\n  ) {\n    window.printPDF();\n\n    // The (browser) print dialog cannot be prevented from being shown in\n    // IE11.\n    event.preventDefault();\n    if (event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    } else {\n      event.stopPropagation();\n    }\n  }\n};\n\nif (\"onbeforeprint\" in window) {\n  // Do not propagate before/afterprint events when they are not triggered\n  // from within this polyfill. (FF / Chrome 63+).\n  const stopPropagationIfNeeded = function (event) {\n    if (event.detail !== \"custom\" && event.stopImmediatePropagation) {\n      event.stopImmediatePropagation();\n    }\n  };\n  window.addEventListener(\"beforeprint\", stopPropagationIfNeeded);\n  window.addEventListener(\"afterprint\", stopPropagationIfNeeded);\n}\n\nlet overlayPromise;\nfunction ensureOverlay() {\n  if (!overlayPromise) {\n    overlayManager = PDFViewerApplication.overlayManager;\n    if (!overlayManager) {\n      throw new Error(\"The overlay manager has not yet been initialized.\");\n    }\n\n    overlayPromise = overlayManager.register(\n      \"printServiceOverlay\",\n      document.getElementById(\"printServiceOverlay\"),\n      abort,\n      true\n    );\n    document.getElementById(\"printCancel\").onclick = abort;\n  }\n  return overlayPromise;\n}\n\nPDFPrintServiceFactory.instance = {\n  supportsPrinting: true,\n\n  createPrintService(\n    pdfDocument,\n    pagesOverview,\n    printContainer,\n    printResolution,\n    optionalContentConfigPromise,\n    l10n,\n    eventBus // #588 modified by ngx-extended-pdf-viewer\n  ) {\n    if (activeService) {\n      throw new Error(\"The print service is created and active.\");\n    }\n    activeService = new PDFPrintService(\n      pdfDocument,\n      pagesOverview,\n      printContainer,\n      printResolution,\n      optionalContentConfigPromise,\n      l10n,\n      eventBus // #588 modified by ngx-extended-pdf-viewer\n    );\n    return activeService;\n  },\n};\n\nexport { PDFPrintService };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getXfaPageViewport, PixelsPerInch } from \"pdfjs-lib\";\nimport { SimpleLinkService } from \"./pdf_link_service.js\";\nimport { XfaLayerBuilder } from \"./xfa_layer_builder.js\";\n\nfunction getXfaHtmlForPrinting(printContainer, pdfDocument) {\n  const xfaHtml = pdfDocument.allXfaHtml;\n  const linkService = new SimpleLinkService();\n  const scale = Math.round(PixelsPerInch.PDF_TO_CSS_UNITS * 100) / 100;\n\n  for (const xfaPage of xfaHtml.children) {\n    const page = document.createElement(\"div\");\n    page.className = \"xfaPrintedPage\";\n    printContainer.appendChild(page);\n\n    const builder = new XfaLayerBuilder({\n      pageDiv: page,\n      pdfPage: null,\n      annotationStorage: pdfDocument.annotationStorage,\n      linkService,\n      xfaHtml: xfaPage,\n    });\n    const viewport = getXfaPageViewport(xfaPage, { scale });\n\n    builder.render(viewport, \"print\");\n  }\n}\n\nexport { getXfaHtmlForPrinting };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2016 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppOptions } from \"./app_options.js\";\nimport { PDFViewerApplication } from \"./app.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nwindow.PDFViewerApplication = PDFViewerApplication;\nwindow.PDFViewerApplicationOptions = AppOptions;\n\n// modified by ngx-extended-pdf-viewer\nif (!HTMLCollection.prototype[Symbol.iterator]) {\n  HTMLCollection.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\n}\n(function () {\n  if (typeof window.CustomEvent === \"function\") {\n    return;\n  }\n\n  function CustomEvent(event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: null };\n    const evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(\n      event,\n      params.bubbles,\n      params.cancelable,\n      params.detail\n    );\n    return evt;\n  }\n\n  window.CustomEvent = CustomEvent;\n})();\n// end of modification\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  var defaultUrl; // eslint-disable-line no-var\n\n  (function rewriteUrlClosure() {\n    // Run this code outside DOMContentLoaded to make sure that the URL\n    // is rewritten as soon as possible.\n    const queryString = document.location.search.slice(1);\n    const m = /(^|&)file=([^&]*)/.exec(queryString);\n    defaultUrl = m ? decodeURIComponent(m[2]) : \"\";\n\n    // Example: chrome-extension://.../http://example.com/file.pdf\n    const humanReadableUrl = \"/\" + defaultUrl + location.hash;\n    history.replaceState(history.state, \"\", humanReadableUrl);\n    if (top === window) {\n      // eslint-disable-next-line no-undef\n      chrome.runtime.sendMessage(\"showPageAction\");\n    }\n  })();\n}\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  require(\"./firefoxcom.js\");\n  require(\"./firefox_print_service.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  require(\"./genericcom.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n  require(\"./chromecom.js\");\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME || GENERIC\")) {\n  require(\"./pdf_print_service.js\");\n}\n\nfunction getViewerConfiguration() {\n  let errorWrapper = null;\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n    errorWrapper = {\n      container: document.getElementById(\"errorWrapper\"),\n      errorMessage: document.getElementById(\"errorMessage\"),\n      closeButton: document.getElementById(\"errorClose\"),\n      errorMoreInfo: document.getElementById(\"errorMoreInfo\"),\n      moreInfoButton: document.getElementById(\"errorShowMore\"),\n      lessInfoButton: document.getElementById(\"errorShowLess\"),\n    };\n  }\n\n  return {\n    appContainer: document.body,\n    mainContainer: document.getElementById(\"viewerContainer\"),\n    viewerContainer: document.getElementById(\"viewer\"),\n    eventBus: null,\n    toolbar: {\n      container: document.getElementById(\"toolbarViewer\"),\n      numPages: document.getElementById(\"numPages\"),\n      pageNumber: document.getElementById(\"pageNumber\"),\n      scaleSelect: document.getElementById(\"scaleSelect\"),\n      customScaleOption: document.getElementById(\"customScaleOption\"),\n      previous: document.getElementById(\"previous\"),\n      next: document.getElementById(\"next\"),\n      zoomIn: document.getElementById(\"zoomIn\"),\n      zoomOut: document.getElementById(\"zoomOut\"),\n      viewFind: document.getElementById(\"viewFind\"),\n      openFile: document.getElementById(\"openFile\"),\n      print: document.getElementById(\"print\"),\n      presentationModeButton: document.getElementById(\"presentationMode\"),\n      download: document.getElementById(\"download\"),\n      viewBookmark: document.getElementById(\"viewBookmark\"),\n    },\n    secondaryToolbar: {\n      toolbar: document.getElementById(\"secondaryToolbar\"),\n      toggleButton: document.getElementById(\"secondaryToolbarToggle\"),\n      toolbarButtonContainer: document.getElementById(\n        \"secondaryToolbarButtonContainer\"\n      ),\n      presentationModeButton: document.getElementById(\n        \"secondaryPresentationMode\"\n      ),\n      openFileButton: document.getElementById(\"secondaryOpenFile\"),\n      printButton: document.getElementById(\"secondaryPrint\"),\n      downloadButton: document.getElementById(\"secondaryDownload\"),\n      viewBookmarkButton: document.getElementById(\"secondaryViewBookmark\"),\n      firstPageButton: document.getElementById(\"firstPage\"),\n      lastPageButton: document.getElementById(\"lastPage\"),\n      pageRotateCwButton: document.getElementById(\"pageRotateCw\"),\n      pageRotateCcwButton: document.getElementById(\"pageRotateCcw\"),\n      cursorSelectToolButton: document.getElementById(\"cursorSelectTool\"),\n      cursorHandToolButton: document.getElementById(\"cursorHandTool\"),\n      scrollPageButton: document.getElementById(\"scrollPage\"),\n      scrollVerticalButton: document.getElementById(\"scrollVertical\"),\n      scrollHorizontalButton: document.getElementById(\"scrollHorizontal\"),\n      scrollWrappedButton: document.getElementById(\"scrollWrapped\"),\n      spreadNoneButton: document.getElementById(\"spreadNone\"),\n      spreadOddButton: document.getElementById(\"spreadOdd\"),\n      spreadEvenButton: document.getElementById(\"spreadEven\"),\n      documentPropertiesButton: document.getElementById(\"documentProperties\"),\n    },\n    sidebar: {\n      // Divs (and sidebar button)\n      outerContainer: document.getElementById(\"outerContainer\"),\n      viewerContainer: document.getElementById(\"viewerContainer\"),\n      toggleButton: document.getElementById(\"sidebarToggle\"),\n      // Buttons\n      thumbnailButton: document.getElementById(\"viewThumbnail\"),\n      outlineButton: document.getElementById(\"viewOutline\"),\n      attachmentsButton: document.getElementById(\"viewAttachments\"),\n      layersButton: document.getElementById(\"viewLayers\"),\n      // Views\n      thumbnailView: document.getElementById(\"thumbnailView\"),\n      outlineView: document.getElementById(\"outlineView\"),\n      attachmentsView: document.getElementById(\"attachmentsView\"),\n      layersView: document.getElementById(\"layersView\"),\n      // View-specific options\n      outlineOptionsContainer: document.getElementById(\n        \"outlineOptionsContainer\"\n      ),\n      currentOutlineItemButton: document.getElementById(\"currentOutlineItem\"),\n    },\n    sidebarResizer: {\n      outerContainer: document.getElementById(\"outerContainer\"),\n      resizer: document.getElementById(\"sidebarResizer\"),\n    },\n    findBar: {\n      bar: document.getElementById(\"findbar\"),\n      toggleButton: document.getElementById(\"viewFind\"),\n      findField: document.getElementById(\"findInput\"),\n      findFieldMultiline: document.getElementById(\"findInputMultiline\"), // #201\n      highlightAllCheckbox: document.getElementById(\"findHighlightAll\"),\n      findCurrentPageCheckbox: document.getElementById(\"findCurrentPage\"), // #832\n      findPageRangeField: document.getElementById(\"findRange\"), // #832\n      caseSensitiveCheckbox: document.getElementById(\"findMatchCase\"),\n      entireWordCheckbox: document.getElementById(\"findEntireWord\"),\n      findMultipleSearchTextsCheckbox: document.getElementById(\n        \"findMultipleSearchTexts\"\n      ), // #201\n      ignoreAccentsCheckbox: document.getElementById(\"findIgnoreAccents\"), // #177\n      fuzzyCheckbox: document.getElementById(\"findFuzzy\"), // #304\n      findMsg: document.getElementById(\"findMsg\"),\n      findResultsCount: document.getElementById(\"findResultsCount\"),\n      findPreviousButton: document.getElementById(\"findPrevious\"),\n      findNextButton: document.getElementById(\"findNext\"),\n    },\n    passwordOverlay: {\n      overlayName: \"passwordOverlay\",\n      container: document.getElementById(\"passwordOverlay\"),\n      label: document.getElementById(\"passwordText\"),\n      input: document.getElementById(\"password\"),\n      submitButton: document.getElementById(\"passwordSubmit\"),\n      cancelButton: document.getElementById(\"passwordCancel\"),\n    },\n    documentProperties: {\n      overlayName: \"documentPropertiesOverlay\",\n      container: document.getElementById(\"documentPropertiesOverlay\"),\n      closeButton: document.getElementById(\"documentPropertiesClose\"),\n      fields: {\n        fileName: document.getElementById(\"fileNameField\"),\n        fileSize: document.getElementById(\"fileSizeField\"),\n        title: document.getElementById(\"titleField\"),\n        author: document.getElementById(\"authorField\"),\n        subject: document.getElementById(\"subjectField\"),\n        keywords: document.getElementById(\"keywordsField\"),\n        creationDate: document.getElementById(\"creationDateField\"),\n        modificationDate: document.getElementById(\"modificationDateField\"),\n        creator: document.getElementById(\"creatorField\"),\n        producer: document.getElementById(\"producerField\"),\n        version: document.getElementById(\"versionField\"),\n        pageCount: document.getElementById(\"pageCountField\"),\n        pageSize: document.getElementById(\"pageSizeField\"),\n        linearized: document.getElementById(\"linearizedField\"),\n      },\n    },\n    errorWrapper,\n    printContainer: document.getElementById(\"printContainer\"),\n    openFileInputName: \"fileInput\",\n    debuggerScriptPath: \"./debugger.js\",\n  };\n}\n\nfunction webViewerLoad() {\n  const config = getViewerConfiguration();\n  if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n    Promise.all([\n      import(\"pdfjs-web/genericcom.js\"),\n      import(\"pdfjs-web/pdf_print_service.js\"),\n    ]).then(function ([genericCom, pdfPrintService]) {\n      PDFViewerApplication.run(config);\n    });\n  } else {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"CHROME\")) {\n      AppOptions.set(\"defaultUrl\", defaultUrl);\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      // Give custom implementations of the default viewer a simpler way to\n      // set various `AppOptions`, by dispatching an event once all viewer\n      // files are loaded but *before* the viewer initialization has run.\n      const event = document.createEvent(\"CustomEvent\");\n      event.initCustomEvent(\"webviewerloaded\", true, true, {\n        source: window,\n      });\n      try {\n        // Attempt to dispatch the event at the embedding `document`,\n        // in order to support cases where the viewer is embedded in\n        // a *dynamically* created <iframe> element.\n\n        // #998 modified by ngx-extended-pdf-viewer: support for Cypress tests\n        if (parent.document.eventListeners && parent.document.eventListeners(\"webviewerloaded\").length) {\n          parent.document.dispatchEvent(event);\n        } else {\n          document.dispatchEvent(event);\n        }\n        // #998 end of modification\n      } catch (ex) {\n        // The viewer could be in e.g. a cross-origin <iframe> element,\n        // fallback to dispatching the event at the current `document`.\n        Window['ngxConsole'].error(`webviewerloaded: ${ex}`);\n        document.dispatchEvent(event);\n      }\n    }\n\n    PDFViewerApplication.run(config);\n  }\n}\n\n// Block the \"load\" event until all pages are loaded, to ensure that printing\n// works in Firefox; see https://bugzilla.mozilla.org/show_bug.cgi?id=1618553\nif (document.blockUnblockOnload) {\n  document.blockUnblockOnload(true);\n}\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  if (\n    document.readyState === \"interactive\" ||\n    document.readyState === \"complete\"\n  ) {\n    webViewerLoad();\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", webViewerLoad, true);\n  }\n} else {\n  window.webViewerLoad = webViewerLoad;\n}\n\nexport { PDFViewerApplication, AppOptions as PDFViewerApplicationOptions };\n"]}